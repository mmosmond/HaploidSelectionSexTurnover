(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   3213259,      64508]
NotebookOptionsPosition[   3191798,      63848]
NotebookOutlinePosition[   3192157,      63864]
CellTagsIndexPosition[   3192114,      63861]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Region plots (Ploidally-Antagonistic)", "Title",
 CellChangeTimes->{{3.697913133311095*^9, 3.697913135653328*^9}, {
  3.713011737557135*^9, 
  3.71301174391691*^9}},ExpressionUUID->"ff3b2d90-6121-4679-bbcf-\
673405dcf702"],

Cell[CellGroupData[{

Cell["Plotting parameters [ENTER]", "Section",
 CellChangeTimes->{{3.691239326947637*^9, 3.6912393301480017`*^9}, {
  3.691241596541066*^9, 3.6912415988157587`*^9}, {3.7083526191541643`*^9, 
  3.70835262273726*^9}},ExpressionUUID->"bd486c9a-4676-41f2-9b78-\
1bf113d13b0e"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"SetDirectory", "[", 
     RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
    "sets", " ", "current", " ", "directory", " ", "to", " ", "be", " ", 
     "location", " ", "of", " ", "this", " ", "file"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plotdir", "=", "\"\<Plots/\>\""}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"directory", " ", "to", " ", "save", " ", "figures", " ", "in"}], 
    "*)"}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.691199395468156*^9, 3.6911994238867617`*^9}, {
  3.6912393196489277`*^9, 3.6912393222466583`*^9}},
 ExpressionUUID -> "3910e48e-1afb-4e8f-9488-689c70d1102a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Pad", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"50", ",", "10"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"50", ",", "10"}], "}"}]}], "}"}]}], ";"}], "  ", 
  RowBox[{"(*", 
   RowBox[{"space", " ", "around", " ", "plot"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"letpos", "=", 
    RowBox[{"{", 
     RowBox[{".05", ",", ".93"}], "}"}]}], ";"}], "  ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"relative", " ", "location", " ", "of", " ", "letter"}], ",", " ", 
    RowBox[{"eg", " ", "A"}], ",", " ", 
    RowBox[{"in", " ", "figure"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ylabpos", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.125"}], ",", "0.5"}], "}"}]}], ";"}], "  ", 
  RowBox[{"(*", 
   RowBox[{
   "relative", " ", "location", " ", "of", " ", "y", " ", "axis", " ", 
    "label", " ", "position"}], "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"inches", "=", "72"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"lwd", "=", "0.006"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "line", " ", "thickness", " ", "as", " ", "fraction", " ", "of", " ", 
    "plot", " ", "width"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ticksize", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0.01"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xsize", "=", 
   RowBox[{"5", "inches"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"aspectratio", "=", 
   RowBox[{"1", "/", 
    RowBox[{"Sqrt", "[", "2", "]"}]}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.6912001126660013`*^9, 3.691200143575015*^9}, {
  3.69120039633344*^9, 3.691200396513929*^9}, {3.691200440636483*^9, 
  3.691200471978136*^9}, {3.6912041635699453`*^9, 3.6912041637236547`*^9}, {
  3.6912042066112623`*^9, 3.691204217939785*^9}, {3.6912051909799356`*^9, 
  3.691205191159609*^9}, {3.6912382749359922`*^9, 3.691238275042301*^9}, {
  3.691239265705887*^9, 3.691239310617393*^9}, {3.6912414893987627`*^9, 
  3.691241499429421*^9}, {3.691246413194191*^9, 3.691246425313057*^9}, {
  3.708353402236974*^9, 3.7083534194032707`*^9}, {3.708353462199512*^9, 
  3.708353462381009*^9}, {3.70835355280173*^9, 3.708353553137755*^9}},
 ExpressionUUID -> "a0a18918-2b09-4ed3-a2ee-e2cc6f53a840"]
}, Closed]],

Cell[CellGroupData[{

Cell["Life-cycle [ENTER]", "Section",
 CellChangeTimes->{{3.681743786104041*^9, 3.6817437925740137`*^9}, {
   3.681744758252803*^9, 3.6817447640802717`*^9}, {3.6817907535849123`*^9, 
   3.681790755198732*^9}, 3.681790964811371*^9, {3.708347310169241*^9, 
   3.70834731479662*^9}},ExpressionUUID->"ec1d9eb0-d91c-4785-aa7d-\
fa3397ceb7bb"],

Cell[CellGroupData[{

Cell["Haploid competition", "Subsection",
 CellChangeTimes->{{3.681790761563039*^9, 3.681790767400532*^9}, {
  3.695053398651717*^9, 3.695053400125853*^9}, {3.696695122110588*^9, 
  3.6966951231463127`*^9}},ExpressionUUID->"37158fb0-c0ba-4ce3-baba-\
40f747637980"],

Cell["Frequency of haploids from each sex", "Text",
 CellChangeTimes->{{3.697151250749948*^9, 
  3.697151258628313*^9}},ExpressionUUID->"39ab0a3a-ea63-458d-ac42-\
e1735a10fd95"],

Cell[BoxData[
 RowBox[{
  SubscriptBox["freqHap", "sex_"], ":=", 
  RowBox[{"ParallelSum", "[", 
   RowBox[{
    SubscriptBox["fHap", 
     RowBox[{"x", ",", "y", ",", "z", ",", "sex"}]], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"{", 
       RowBox[{"X", ",", "Y"}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", 
      RowBox[{"{", 
       RowBox[{"A", ",", "a"}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"z", ",", 
      RowBox[{"{", 
       RowBox[{"M", ",", "m"}], "}"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.697151183458856*^9, 3.697151199477862*^9}, 
   3.6971620991256037`*^9},
 ExpressionUUID -> "279664eb-1b48-4a41-a11e-0002edcf093f"],

Cell["Mean haploid fitness of gametes from each sex", "Text",
 CellChangeTimes->{{3.696695130048037*^9, 3.696695161928997*^9}, {
  3.6966953911933403`*^9, 
  3.696695398865906*^9}},ExpressionUUID->"c01ed2bd-3a38-46bc-8072-\
be747bbb1026"],

Cell[BoxData[
 RowBox[{
  SubscriptBox["wbarHap", "sex_"], ":=", 
  RowBox[{
   SubscriptBox["wbarHap", "sex"], "=", 
   FractionBox[
    RowBox[{"ParallelSum", "[", 
     RowBox[{
      RowBox[{
       SubscriptBox["wHap", 
        RowBox[{"y", ",", "sex"}]], 
       SubscriptBox["fHap", 
        RowBox[{"x", ",", "y", ",", "z", ",", "sex"}]]}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"{", 
         RowBox[{"X", ",", "Y"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", 
        RowBox[{"{", 
         RowBox[{"A", ",", "a"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"z", ",", 
        RowBox[{"{", 
         RowBox[{"M", ",", "m"}], "}"}]}], "}"}]}], "]"}], 
    SubscriptBox["freqHap", "sex"]]}]}]], "Input",
 CellChangeTimes->{{3.68174069177772*^9, 3.681740709745438*^9}, {
  3.6817407470528183`*^9, 3.681740792567976*^9}, {3.681743989430183*^9, 
  3.681743993228486*^9}, {3.681744694112637*^9, 3.681744695061598*^9}, {
  3.681744770055842*^9, 3.681744781694951*^9}, {3.696695164212509*^9, 
  3.696695169314419*^9}, {3.69715114997863*^9, 3.697151179679657*^9}, {
  3.6971512189873543`*^9, 3.6971512227342453`*^9}, {3.697162090151134*^9, 
  3.697162092068632*^9}},
 ExpressionUUID -> "94369e9a-74db-4814-a1eb-eea34e0eb9f8"],

Cell["\<\
Frequencies of haploid genotypes from each sex following haploid competition, \
which occurs between gametes coming from the same sex\
\>", "Text",
 CellChangeTimes->{{3.696695176865569*^9, 3.696695199818366*^9}, {
  3.6966952399477863`*^9, 3.696695241475881*^9}, {3.696695404993683*^9, 
  3.6966954241384993`*^9}},ExpressionUUID->"3f43e8f8-a7b2-4a0d-9137-\
4c35e755540c"],

Cell[BoxData[
 RowBox[{
  SubscriptBox["fHapSel", 
   RowBox[{"x_", ",", "y_", ",", "z_", ",", "sex_"}]], ":=", 
  FractionBox[
   RowBox[{
    SubscriptBox["wHap", 
     RowBox[{"y", ",", "sex"}]], 
    SubscriptBox["fHap", 
     RowBox[{"x", ",", "y", ",", "z", ",", "sex"}]]}], 
   RowBox[{
    SubscriptBox["wbarHap", "sex"], 
    SubscriptBox["freqHap", "sex"]}]]}]], "Input",
 CellChangeTimes->{{3.68174069177772*^9, 3.681740709745438*^9}, {
  3.6817407470528183`*^9, 3.681740792567976*^9}, {3.681743989430183*^9, 
  3.681743993228486*^9}, {3.681744694112637*^9, 3.681744695061598*^9}, {
  3.681744770055842*^9, 3.681744781694951*^9}, {3.696695164212509*^9, 
  3.696695169314419*^9}, {3.69715122758352*^9, 3.6971512429961433`*^9}},
 ExpressionUUID -> "f09c426c-b41a-48c8-b5a0-054c53fcbd50"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Random mating", "Subsection",
 CellChangeTimes->{{3.6817907708613567`*^9, 3.681790772239373*^9}, {
  3.695053404145611*^9, 
  3.695053404843087*^9}},ExpressionUUID->"544606ee-d997-4e15-938f-\
05c8d42ccbd9"],

Cell["Gametes from the two sexes pair at random", "Text",
 CellChangeTimes->{{3.696695214602847*^9, 3.6966952286276083`*^9}, {
  3.696695432002734*^9, 
  3.6966954345306883`*^9}},ExpressionUUID->"5d322ce6-a398-4912-aff8-\
48dfd6eb0313"],

Cell[BoxData[
 RowBox[{
  SubscriptBox["fDip", 
   RowBox[{
   "xM_", ",", "yM_", ",", "zM_", ",", "xP_", ",", "yP_", ",", "zP_"}]], ":=", 
  RowBox[{
   SubscriptBox["fDip", 
    RowBox[{"xM", ",", "yM", ",", "zM", ",", "xP", ",", "yP", ",", "zP"}]], 
   "=", 
   RowBox[{
    SubscriptBox["fHapSel", 
     RowBox[{"xM", ",", "yM", ",", "zM", ",", "female"}]], 
    SubscriptBox["fHapSel", 
     RowBox[{"xP", ",", "yP", ",", "zP", ",", "male"}]]}]}]}]], "Input",
 CellChangeTimes->{{3.681740852705102*^9, 3.681740881236745*^9}, {
   3.681741102397697*^9, 3.681741112150375*^9}, 3.6817438071282473`*^9, 
   3.68174469800976*^9, {3.681744788822844*^9, 3.681744812868677*^9}},
 ExpressionUUID -> "bafd57c0-9fc6-429f-900c-2530d304cf66"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Sex determination", "Subsection",
 CellChangeTimes->{{3.68179077585012*^9, 3.681790778311782*^9}, {
  3.6950534072431593`*^9, 
  3.695053408004703*^9}},ExpressionUUID->"51e1d609-a4f8-4598-ab85-\
6c6e9ab60505"],

Cell["Determine the sex of newly formed diploids", "Text",
 CellChangeTimes->{{3.696695277141136*^9, 
  3.696695287573451*^9}},ExpressionUUID->"6c620067-b3b4-43fd-ab4a-\
2d4cfa97260c"],

Cell[BoxData[
 RowBox[{
  SubscriptBox["fDipSex", 
   RowBox[{
   "xM_", ",", "yM_", ",", "zM_", ",", "xP_", ",", "yP_", ",", "zP_", ",", 
    "sex_"}]], ":=", 
  RowBox[{
   SubscriptBox["fDipSex", 
    RowBox[{
    "xM", ",", "yM", ",", "zM", ",", "xP", ",", "yP", ",", "zP", ",", 
     "sex"}]], "=", 
   RowBox[{
    SubscriptBox["fDip", 
     RowBox[{"xM", ",", "yM", ",", "zM", ",", "xP", ",", "yP", ",", "zP"}]], 
    SubscriptBox["psex", 
     RowBox[{"zM", ",", "xP", ",", "zP", ",", "sex"}]]}]}]}]], "Input",
 CellChangeTimes->{{3.681740916059374*^9, 3.681740941165064*^9}, {
   3.6817411271569843`*^9, 3.68174113488159*^9}, 3.681744699086836*^9, {
   3.681744820695732*^9, 3.681744847841905*^9}},
 ExpressionUUID -> "55d91f64-390f-421d-98fd-085bf8c25f6b"],

Cell["where a diploid must become male or female", "Text",
 CellChangeTimes->{{3.681790782072919*^9, 
  3.681790792647656*^9}},ExpressionUUID->"568e4a90-5ab4-459c-b8d1-\
645b8f0899fc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"sumsex", "=", 
   RowBox[{
    SubscriptBox["psex", 
     RowBox[{"zM_", ",", "xP_", ",", "zP_", ",", "male"}]], "\[Rule]", 
    RowBox[{"1", "-", 
     SubscriptBox["psex", 
      RowBox[{"zM", ",", "xP", ",", "zP", ",", "female"}]]}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.681740963151202*^9, 3.681741006588331*^9}, {
  3.6817448642217417`*^9, 3.681744883117257*^9}},
 ExpressionUUID -> "673b1deb-9d4c-425f-996f-ecd805603afc"],

Cell["\<\
Rules for invasion of a dominant modifier into an XY system (relabeling males \
and females and females as males, as well as Y as W and X as Z makes the \
ancestral system ZW)\
\>", "Text",
 CellChangeTimes->{{3.681790803628374*^9, 3.681790842176858*^9}, {
   3.695053524085052*^9, 3.6950535912772512`*^9}, 3.696695331640586*^9, {
   3.6966954462351923`*^9, 
   3.696695448475649*^9}},ExpressionUUID->"0d126de6-a85d-448b-857d-\
83fddf4af72d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"invXY", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      SubscriptBox["psex", 
       RowBox[{"M", ",", "Y", ",", "M", ",", "female"}]], "\[Rule]", "0"}], 
     ",", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"always", " ", "male", " ", "if", " ", "neo"}], "-", 
       RowBox[{
       "SD", " ", "allele", " ", "wildtype", " ", "and", " ", "have", " ", 
        "Y"}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["psex", 
       RowBox[{"M", ",", "X", ",", "M", ",", "female"}]], "\[Rule]", "1"}], 
     ",", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"always", " ", "female", " ", "neo"}], "-", 
       RowBox[{
       "SD", " ", "allele", " ", "wildtype", " ", "and", " ", "have", " ", 
        "X", " ", "from", " ", "father"}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["psex", 
       RowBox[{"m", ",", "xP_", ",", "zP_", ",", "female"}]], "\[Rule]", 
      "k"}], ",", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
       "female", " ", "with", " ", "probability", " ", "k", " ", "if", " ", 
        "mutation", " ", "at", " ", "the", " ", "maternal", " ", "neo"}], "-", 
       RowBox[{"SD", " ", "locus"}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["psex", 
       RowBox[{"zM_", ",", "xP_", ",", "m", ",", "female"}]], "\[Rule]", 
      "k"}]}], " ", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{
      "female", " ", "with", " ", "probability", " ", "k", " ", "if", " ", 
       "mutation", " ", "at", " ", "the", " ", "paternal", " ", "neo"}], "-", 
      
      RowBox[{"SD", " ", "locus"}]}], "*)"}], "\[IndentingNewLine]", "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.678749250078711*^9, 3.678749257734652*^9}, {
   3.678749341105864*^9, 3.678749495395021*^9}, {3.679945123194168*^9, 
   3.679945148394607*^9}, {3.6799451869399347`*^9, 3.679945240579802*^9}, {
   3.679945289781743*^9, 3.679945339491596*^9}, {3.6799453844002123`*^9, 
   3.679945402746641*^9}, {3.6799454634914007`*^9, 3.6799455567240467`*^9}, {
   3.6799484238045397`*^9, 3.679948455123131*^9}, {3.67994848956713*^9, 
   3.679948517654551*^9}, {3.679948569319213*^9, 3.679948570835786*^9}, {
   3.679951538898012*^9, 3.679951549755542*^9}, {3.68037305678191*^9, 
   3.680373067198072*^9}, {3.6803822046986856`*^9, 3.680382207715699*^9}, {
   3.680382278235017*^9, 3.68038254183022*^9}, {3.6803826726056223`*^9, 
   3.6803827011867247`*^9}, {3.681481533121539*^9, 3.681481811404159*^9}, {
   3.681482143533368*^9, 3.681482144703322*^9}, {3.681736556313373*^9, 
   3.681736594419837*^9}, {3.681736645992744*^9, 3.6817366988928537`*^9}, {
   3.681736750338529*^9, 3.681736811785675*^9}, {3.681736847176927*^9, 
   3.681736957382381*^9}, {3.6817438697025414`*^9, 3.681743921107368*^9}, 
   3.6817443638221292`*^9, {3.681744903243745*^9, 3.681744975780779*^9}, {
   3.681745009880579*^9, 3.681745061658045*^9}, {3.681790822233528*^9, 
   3.6817908224326878`*^9}, {3.695053621112494*^9, 3.6950536508891478`*^9}, {
   3.695053712275227*^9, 3.6950537228262157`*^9}},
 ExpressionUUID -> "69a87bf6-823b-4710-a6f2-101b336a6abf"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Diploid selection", "Subsection",
 CellChangeTimes->{{3.6817908523566217`*^9, 3.681790854930419*^9}, {
  3.695053424001115*^9, 
  3.695053424708165*^9}},ExpressionUUID->"26ceb047-56c8-4927-a7e7-\
2897c30f3717"],

Cell["Frequencies of diploids from each sex", "Text",
 CellChangeTimes->{{3.6971512960507193`*^9, 
  3.6971513054322863`*^9}},ExpressionUUID->"3b686ae2-559f-48fd-bf2c-\
4c97d64325fb"],

Cell[BoxData[
 RowBox[{
  SubscriptBox["freqDip", "sex_"], ":=", 
  RowBox[{"ParallelSum", "[", 
   RowBox[{
    SubscriptBox["fDipSex", 
     RowBox[{
     "xM", ",", "yM", ",", "zM", ",", "xP", ",", "yP", ",", "zP", ",", 
      "sex"}]], ",", 
    RowBox[{"{", 
     RowBox[{"xM", ",", 
      RowBox[{"{", 
       RowBox[{"X", ",", "Y"}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"yM", ",", 
      RowBox[{"{", 
       RowBox[{"A", ",", "a"}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"zM", ",", 
      RowBox[{"{", 
       RowBox[{"M", ",", "m"}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"xP", ",", 
      RowBox[{"{", 
       RowBox[{"X", ",", "Y"}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"yP", ",", 
      RowBox[{"{", 
       RowBox[{"A", ",", "a"}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"zP", ",", 
      RowBox[{"{", 
       RowBox[{"M", ",", "m"}], "}"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6971513262430763`*^9, 3.6971513267411213`*^9}, 
   3.69716210906399*^9},
 ExpressionUUID -> "7dfd567a-a4ab-423f-8b1a-6103c20ac462"],

Cell["Mean diploid fitness in each sex", "Text",
 CellChangeTimes->{{3.696695371490938*^9, 3.696695372672546*^9}, {
  3.696695458244852*^9, 
  3.6966954647319517`*^9}},ExpressionUUID->"a8cc0e9f-4680-4bdd-8ff1-\
5ab79a6d913a"],

Cell[BoxData[
 RowBox[{
  SubscriptBox["wbarDip", "sex_"], ":=", 
  RowBox[{
   SubscriptBox["wbarDip", "sex"], "=", 
   RowBox[{
    FractionBox["1", 
     SubscriptBox["freqDip", "sex"]], 
    RowBox[{"ParallelSum", "[", 
     RowBox[{
      RowBox[{
       SubscriptBox["wDip", 
        RowBox[{"yM", ",", "yP", ",", "sex"}]], 
       SubscriptBox["fDipSex", 
        RowBox[{
        "xM", ",", "yM", ",", "zM", ",", "xP", ",", "yP", ",", "zP", ",", 
         "sex"}]]}], ",", 
      RowBox[{"{", 
       RowBox[{"xM", ",", 
        RowBox[{"{", 
         RowBox[{"X", ",", "Y"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"yM", ",", 
        RowBox[{"{", 
         RowBox[{"A", ",", "a"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"zM", ",", 
        RowBox[{"{", 
         RowBox[{"M", ",", "m"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"xP", ",", 
        RowBox[{"{", 
         RowBox[{"X", ",", "Y"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"yP", ",", 
        RowBox[{"{", 
         RowBox[{"A", ",", "a"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"zP", ",", 
        RowBox[{"{", 
         RowBox[{"M", ",", "m"}], "}"}]}], "}"}]}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{
  3.6971497937936907`*^9, {3.697149946702374*^9, 3.697149972474596*^9}, 
   3.697150235543221*^9, {3.697150277256873*^9, 3.697150280344022*^9}, {
   3.697151330025823*^9, 3.6971513335051527`*^9}, 3.697162111414228*^9},
 ExpressionUUID -> "d28983fc-cb1a-495e-a0d5-1daf69008d49"],

Cell["\<\
Frequencies of diploid genotypes in each sex following diploid selection, \
which occurs separately in each sex (even if diploid selection is not direct \
competition between members of the same sex but instead viability selection, \
selection still effectively occurs \[OpenCurlyQuote]separately in each sex\
\[CloseCurlyQuote] because the next generation is sired by 50% males and 50% \
females)\
\>", "Text",
 CellChangeTimes->{{3.696695476428199*^9, 3.696695510501577*^9}, {
  3.696695589856222*^9, 3.6966955941123123`*^9}, {3.696696090011167*^9, 
  3.6966962979217*^9}},ExpressionUUID->"4efc94aa-7b8d-4b92-b227-f041f9ea58d6"],

Cell[BoxData[
 RowBox[{
  SubscriptBox["fDipSel", 
   RowBox[{
   "xM_", ",", "yM_", ",", "zM_", ",", "xP_", ",", "yP_", ",", "zP_", ",", 
    "sex_"}]], ":=", 
  RowBox[{
   SubscriptBox["fDipSel", 
    RowBox[{
    "xM", ",", "yM", ",", "zM", ",", "xP", ",", "yP", ",", "zP", ",", 
     "sex"}]], "=", 
   FractionBox[
    RowBox[{
     SubscriptBox["wDip", 
      RowBox[{"yM", ",", "yP", ",", "sex"}]], 
     SubscriptBox["fDipSex", 
      RowBox[{
      "xM", ",", "yM", ",", "zM", ",", "xP", ",", "yP", ",", "zP", ",", 
       "sex"}]]}], 
    RowBox[{
     SubscriptBox["wbarDip", "sex"], 
     SubscriptBox["freqDip", "sex"]}]]}]}]], "Input",
 CellChangeTimes->{{3.697150004307781*^9, 3.697150018911365*^9}, 
   3.697150105743805*^9, {3.697150294137301*^9, 3.697150305677289*^9}, {
   3.697151338394719*^9, 3.6971513388456793`*^9}},
 ExpressionUUID -> "c5cbb62c-8ff1-42ca-af26-5273366419a8"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Meiosis", "Subsection",
 CellChangeTimes->{{3.6817908603315487`*^9, 3.681790862035611*^9}, {
  3.695053427266148*^9, 
  3.695053427971775*^9}},ExpressionUUID->"f40441c6-a6a5-4aa1-b214-\
2eed4f9a82dc"],

Cell["Gamete genotypes produced by diploids", "Text",
 CellChangeTimes->{{3.696695621410144*^9, 3.696695643290491*^9}, {
  3.6966963219398127`*^9, 
  3.69669633174671*^9}},ExpressionUUID->"7a8323aa-6744-4cd9-af71-\
0867f22113ce"],

Cell[BoxData[
 RowBox[{
  SubscriptBox["fHapNext", 
   RowBox[{"x_", ",", "y_", ",", "z_", ",", "sex_"}]], ":=", 
  RowBox[{
   SubscriptBox["fHapNext", 
    RowBox[{"x", ",", "y", ",", "z", ",", "sex"}]], "=", 
   RowBox[{"ParallelSum", "[", 
    RowBox[{
     RowBox[{
      SubscriptBox["fDipSel", 
       RowBox[{
       "xM", ",", "yM", ",", "zM", ",", "xP", ",", "yP", ",", "zP", ",", 
        "sex"}]], 
      SubscriptBox["pseg", 
       RowBox[{
       "xM", ",", "yM", ",", "zM", ",", "xP", ",", "yP", ",", "zP", ",", 
        "sex", ",", "x", ",", "y", ",", "z"}]]}], ",", 
     RowBox[{"{", 
      RowBox[{"xM", ",", 
       RowBox[{"{", 
        RowBox[{"X", ",", "Y"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"yM", ",", 
       RowBox[{"{", 
        RowBox[{"A", ",", "a"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"zM", ",", 
       RowBox[{"{", 
        RowBox[{"M", ",", "m"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"xP", ",", 
       RowBox[{"{", 
        RowBox[{"X", ",", "Y"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"yP", ",", 
       RowBox[{"{", 
        RowBox[{"A", ",", "a"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"zP", ",", 
       RowBox[{"{", 
        RowBox[{"M", ",", "m"}], "}"}]}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6817440705483007`*^9, 3.6817440908841143`*^9}, {
  3.681744703057055*^9, 3.6817447059212723`*^9}, {3.681745089264248*^9, 
  3.681745102327985*^9}},
 ExpressionUUID -> "50d62e5d-971a-4d0b-823b-2c60120e1441"],

Cell[CellGroupData[{

Cell["Segregation", "Subsubsection",
 CellChangeTimes->{{3.6951408332729673`*^9, 3.6951408457141037`*^9}, {
   3.695140930171077*^9, 3.695140941721265*^9}, 
   3.695146498004241*^9},ExpressionUUID->"8ac8ba24-3f27-41bb-8801-\
7ebc0badea0b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pseg0", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{"triple", " ", "homozygote"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     SubscriptBox["pseg", 
      RowBox[{
      "x1_", ",", "y1_", ",", "z1_", ",", "x1_", ",", "y1_", ",", "z1_", ",", 
       "sex_", ",", "x1_", ",", "y1_", ",", "z1_"}]], "\[Rule]", "1"}], 
    "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pseg1", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{"single", " ", "heterozygotes"}], "*)"}], "\[IndentingNewLine]", 
    
    RowBox[{
     RowBox[{
      SubscriptBox["pseg", 
       RowBox[{
       "x1_", ",", "y1_", ",", "z1_", ",", "x2_", ",", "y1_", ",", "z1_", ",",
         "sex_", ",", "x1_", ",", "y1_", ",", "z1_"}]], "\[Rule]", 
      RowBox[{"1", "/", "2"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["pseg", 
       RowBox[{
       "x1_", ",", "y1_", ",", "z1_", ",", "x2_", ",", "y1_", ",", "z1_", ",",
         "sex_", ",", "x2_", ",", "y1_", ",", "z1_"}]], "\[Rule]", 
      RowBox[{"1", "/", "2"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["pseg", 
       RowBox[{
       "x1_", ",", "A", ",", "z1_", ",", "x1_", ",", "a", ",", "z1_", ",", 
        "sex_", ",", "x1_", ",", "A", ",", "z1_"}]], "\[Rule]", 
      SubscriptBox["\[Alpha]", "sex"]}], " ", ",", "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["pseg", 
       RowBox[{
       "x1_", ",", "A", ",", "z1_", ",", "x1_", ",", "a", ",", "z1_", ",", 
        "sex_", ",", "x1_", ",", "a", ",", "z1_"}]], "\[Rule]", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SubscriptBox["\[Alpha]", "sex"]}], ")"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["pseg", 
       RowBox[{
       "x1_", ",", "a", ",", "z1_", ",", "x1_", ",", "A", ",", "z1_", ",", 
        "sex_", ",", "x1_", ",", "A", ",", "z1_"}]], "\[Rule]", 
      SubscriptBox["\[Alpha]", "sex"]}], " ", ",", "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["pseg", 
       RowBox[{
       "x1_", ",", "a", ",", "z1_", ",", "x1_", ",", "A", ",", "z1_", ",", 
        "sex_", ",", "x1_", ",", "a", ",", "z1_"}]], "\[Rule]", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SubscriptBox["\[Alpha]", "sex"]}], ")"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["pseg", 
       RowBox[{
       "x1_", ",", "y1_", ",", "z1_", ",", "x1_", ",", "y1_", ",", "z2_", ",",
         "sex_", ",", "x1_", ",", "y1_", ",", "z1_"}]], "\[Rule]", 
      RowBox[{"1", "/", "2"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["pseg", 
       RowBox[{
       "x1_", ",", "y1_", ",", "z1_", ",", "x1_", ",", "y1_", ",", "z2_", ",",
         "sex_", ",", "x1_", ",", "y1_", ",", "z2_"}]], "\[Rule]", 
      RowBox[{"1", "/", "2"}]}]}], "\[IndentingNewLine]", "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pseg2", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{"double", " ", "heterozygotes"}], "*)"}], "\[IndentingNewLine]", 
    
    RowBox[{
     RowBox[{
      SubscriptBox["pseg", 
       RowBox[{
       "x1_", ",", "A", ",", "z1_", ",", "x2_", ",", "a", ",", "z1_", ",", 
        "sex_", ",", "x1_", ",", "A", ",", "z1_"}]], "\[Rule]", 
      RowBox[{
       SubscriptBox["\[Alpha]", "sex"], 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"(", 
          RowBox[{"recAXandAM", "+", "recAXnotAM"}], ")"}]}], ")"}]}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["pseg", 
       RowBox[{
       "x1_", ",", "A", ",", "z1_", ",", "x2_", ",", "a", ",", "z1_", ",", 
        "sex_", ",", "x2_", ",", "a", ",", "z1_"}]], "\[Rule]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", 
         SubscriptBox["\[Alpha]", "sex"]}], ")"}], 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"(", 
          RowBox[{"recAXandAM", "+", "recAXnotAM"}], ")"}]}], ")"}]}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["pseg", 
       RowBox[{
       "x1_", ",", "A", ",", "z1_", ",", "x2_", ",", "a", ",", "z1_", ",", 
        "sex_", ",", "x2_", ",", "A", ",", "z1_"}]], "\[Rule]", 
      RowBox[{
       SubscriptBox["\[Alpha]", "sex"], " ", 
       RowBox[{"(", 
        RowBox[{"recAXandAM", "+", "recAXnotAM"}], ")"}]}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["pseg", 
       RowBox[{
       "x1_", ",", "A", ",", "z1_", ",", "x2_", ",", "a", ",", "z1_", ",", 
        "sex_", ",", "x1_", ",", "a", ",", "z1_"}]], "\[Rule]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", 
         SubscriptBox["\[Alpha]", "sex"]}], ")"}], 
       RowBox[{"(", 
        RowBox[{"recAXandAM", "+", "recAXnotAM"}], ")"}]}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["pseg", 
       RowBox[{
       "x1_", ",", "A", ",", "z1_", ",", "x1_", ",", "a", ",", "z2_", ",", 
        "sex_", ",", "x1_", ",", "A", ",", "z1_"}]], "\[Rule]", 
      RowBox[{
       SubscriptBox["\[Alpha]", "sex"], 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"(", 
          RowBox[{"recAXandAM", "+", "recAMnotAX"}], ")"}]}], ")"}]}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["pseg", 
       RowBox[{
       "x1_", ",", "A", ",", "z1_", ",", "x1_", ",", "a", ",", "z2_", ",", 
        "sex_", ",", "x1_", ",", "a", ",", "z2_"}]], "\[Rule]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", 
         SubscriptBox["\[Alpha]", "sex"]}], ")"}], 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"(", 
          RowBox[{"recAXandAM", "+", "recAMnotAX"}], ")"}]}], ")"}]}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["pseg", 
       RowBox[{
       "x1_", ",", "A", ",", "z1_", ",", "x1_", ",", "a", ",", "z2_", ",", 
        "sex_", ",", "x1_", ",", "A", ",", "z2_"}]], "\[Rule]", 
      RowBox[{
       SubscriptBox["\[Alpha]", "sex"], " ", 
       RowBox[{"(", 
        RowBox[{"recAXandAM", "+", "recAMnotAX"}], ")"}]}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["pseg", 
       RowBox[{
       "x1_", ",", "A", ",", "z1_", ",", "x1_", ",", "a", ",", "z2_", ",", 
        "sex_", ",", "x1_", ",", "a", ",", "z1_"}]], "\[Rule]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", 
         SubscriptBox["\[Alpha]", "sex"]}], ")"}], 
       RowBox[{"(", 
        RowBox[{"recAXandAM", "+", "recAMnotAX"}], ")"}]}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["pseg", 
       RowBox[{
       "x1_", ",", "a", ",", "z1_", ",", "x2_", ",", "A", ",", "z1_", ",", 
        "sex_", ",", "x2_", ",", "A", ",", "z1_"}]], "\[Rule]", 
      RowBox[{
       SubscriptBox["\[Alpha]", "sex"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"(", 
          RowBox[{"recAXandAM", "+", "recAXnotAM"}], ")"}]}], ")"}]}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["pseg", 
       RowBox[{
       "x1_", ",", "a", ",", "z1_", ",", "x2_", ",", "A", ",", "z1_", ",", 
        "sex_", ",", "x1_", ",", "a", ",", "z1_"}]], "\[Rule]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", 
         SubscriptBox["\[Alpha]", "male"]}], ")"}], 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"(", 
          RowBox[{"recAXandAM", "+", "recAXnotAM"}], ")"}]}], ")"}]}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["pseg", 
       RowBox[{
       "x1_", ",", "a", ",", "z1_", ",", "x2_", ",", "A", ",", "z1_", ",", 
        "sex_", ",", "x1_", ",", "A", ",", "z1_"}]], "\[Rule]", 
      RowBox[{
       SubscriptBox["\[Alpha]", "sex"], " ", 
       RowBox[{"(", 
        RowBox[{"recAXandAM", "+", "recAXnotAM"}], ")"}]}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["pseg", 
       RowBox[{
       "x1_", ",", "a", ",", "z1_", ",", "x2_", ",", "A", ",", "z1_", ",", 
        "sex_", ",", "x2_", ",", "a", ",", "z1_"}]], "\[Rule]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", 
         SubscriptBox["\[Alpha]", "sex"]}], ")"}], 
       RowBox[{"(", 
        RowBox[{"recAXandAM", "+", "recAXnotAM"}], ")"}]}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["pseg", 
       RowBox[{
       "x1_", ",", "a", ",", "z1_", ",", "x1_", ",", "A", ",", "z2_", ",", 
        "sex_", ",", "x1_", ",", "A", ",", "z2_"}]], "\[Rule]", 
      RowBox[{
       SubscriptBox["\[Alpha]", "sex"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"(", 
          RowBox[{"recAXandAM", "+", "recAMnotAX"}], ")"}]}], ")"}]}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["pseg", 
       RowBox[{
       "x1_", ",", "a", ",", "z1_", ",", "x1_", ",", "A", ",", "z2_", ",", 
        "sex_", ",", "x1_", ",", "a", ",", "z1_"}]], "\[Rule]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", 
         SubscriptBox["\[Alpha]", "sex"]}], ")"}], 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"(", 
          RowBox[{"recAXandAM", "+", "recAMnotAX"}], ")"}]}], ")"}]}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["pseg", 
       RowBox[{
       "x1_", ",", "a", ",", "z1_", ",", "x1_", ",", "A", ",", "z2_", ",", 
        "sex_", ",", "x1_", ",", "A", ",", "z1_"}]], "\[Rule]", 
      RowBox[{
       SubscriptBox["\[Alpha]", "sex"], " ", 
       RowBox[{"(", 
        RowBox[{"recAXandAM", "+", "recAMnotAX"}], ")"}]}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["pseg", 
       RowBox[{
       "x1_", ",", "a", ",", "z1_", ",", "x1_", ",", "A", ",", "z2_", ",", 
        "sex_", ",", "x1_", ",", "a", ",", "z2_"}]], "\[Rule]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", 
         SubscriptBox["\[Alpha]", "sex"]}], ")"}], 
       RowBox[{"(", 
        RowBox[{"recAXandAM", "+", "recAMnotAX"}], ")"}]}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["pseg", 
       RowBox[{
       "x1_", ",", "y1_", ",", "z1_", ",", "x2_", ",", "y1_", ",", "z2_", ",",
         "sex_", ",", "x1_", ",", "y1_", ",", "z1_"}]], "\[Rule]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"(", 
          RowBox[{"recAXnotAM", "+", "recAMnotAX"}], ")"}]}], ")"}], "/", 
       "2"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["pseg", 
       RowBox[{
       "x1_", ",", "y1_", ",", "z1_", ",", "x2_", ",", "y1_", ",", "z2_", ",",
         "sex_", ",", "x2_", ",", "y1_", ",", "z2_"}]], "\[Rule]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"(", 
          RowBox[{"recAXnotAM", "+", "recAMnotAX"}], ")"}]}], ")"}], "/", 
       "2"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["pseg", 
       RowBox[{
       "x1_", ",", "y1_", ",", "z1_", ",", "x2_", ",", "y1_", ",", "z2_", ",",
         "sex_", ",", "x2_", ",", "y1_", ",", "z1_"}]], "\[Rule]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"recAXnotAM", "+", "recAMnotAX"}], ")"}], "/", "2"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["pseg", 
       RowBox[{
       "x1_", ",", "y1_", ",", "z1_", ",", "x2_", ",", "y1_", ",", "z2_", ",",
         "sex_", ",", "x1_", ",", "y1_", ",", "z2_"}]], "\[Rule]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"recAXnotAM", "+", "recAMnotAX"}], ")"}], "/", "2"}]}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pseg3", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{"triple", " ", "heterozygote"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      SubscriptBox["pseg", 
       RowBox[{
       "x1_", ",", "A", ",", "z1_", ",", "x2_", ",", "a", ",", "z2_", ",", 
        "male", ",", "x1_", ",", "A", ",", "z1_"}]], "\[Rule]", 
      RowBox[{
       SubscriptBox["\[Alpha]", "male"], 
       RowBox[{"(", 
        RowBox[{
        "1", "-", "recAMnotAX", "-", "recAXnotAM", "-", "recAXandAM"}], 
        ")"}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["pseg", 
       RowBox[{
       "x1_", ",", "A", ",", "z1_", ",", "x2_", ",", "a", ",", "z2_", ",", 
        "male", ",", "x2_", ",", "a", ",", "z2_"}]], "\[Rule]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", 
         SubscriptBox["\[Alpha]", "male"]}], ")"}], 
       RowBox[{"(", 
        RowBox[{
        "1", "-", "recAMnotAX", "-", "recAXnotAM", "-", "recAXandAM"}], 
        ")"}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["pseg", 
       RowBox[{
       "x1_", ",", "A", ",", "z1_", ",", "x2_", ",", "a", ",", "z2_", ",", 
        "male", ",", "x2_", ",", "A", ",", "z1_"}]], "\[Rule]", 
      RowBox[{
       SubscriptBox["\[Alpha]", "male"], " ", "recAXnotAM"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["pseg", 
       RowBox[{
       "x1_", ",", "A", ",", "z1_", ",", "x2_", ",", "a", ",", "z2_", ",", 
        "male", ",", "x1_", ",", "a", ",", "z2_"}]], "\[Rule]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", 
         SubscriptBox["\[Alpha]", "male"]}], ")"}], "recAXnotAM"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["pseg", 
       RowBox[{
       "x1_", ",", "A", ",", "z1_", ",", "x2_", ",", "a", ",", "z2_", ",", 
        "male", ",", "x1_", ",", "A", ",", "z2_"}]], "\[Rule]", 
      RowBox[{
       SubscriptBox["\[Alpha]", "male"], "recAMnotAX"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["pseg", 
       RowBox[{
       "x1_", ",", "A", ",", "z1_", ",", "x2_", ",", "a", ",", "z2_", ",", 
        "male", ",", "x2_", ",", "a", ",", "z1_"}]], "\[Rule]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", 
         SubscriptBox["\[Alpha]", "male"]}], ")"}], "recAMnotAX"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["pseg", 
       RowBox[{
       "x1_", ",", "A", ",", "z1_", ",", "x2_", ",", "a", ",", "z2_", ",", 
        "male", ",", "x2_", ",", "A", ",", "z2_"}]], "\[Rule]", 
      RowBox[{
       SubscriptBox["\[Alpha]", "male"], " ", "recAXandAM"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["pseg", 
       RowBox[{
       "x1_", ",", "A", ",", "z1_", ",", "x2_", ",", "a", ",", "z2_", ",", 
        "male", ",", "x1_", ",", "a", ",", "z1_"}]], "\[Rule]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", 
         SubscriptBox["\[Alpha]", "male"]}], ")"}], "recAXandAM"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["pseg", 
       RowBox[{
       "x1_", ",", "a", ",", "z1_", ",", "x2_", ",", "A", ",", "z2_", ",", 
        "male", ",", "x2_", ",", "A", ",", "z2_"}]], "\[Rule]", 
      RowBox[{
       SubscriptBox["\[Alpha]", "male"], " ", 
       RowBox[{"(", 
        RowBox[{
        "1", "-", "recAMnotAX", "-", "recAXnotAM", "-", "recAXandAM"}], 
        ")"}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["pseg", 
       RowBox[{
       "x1_", ",", "a", ",", "z1_", ",", "x2_", ",", "A", ",", "z2_", ",", 
        "male", ",", "x1_", ",", "a", ",", "z1_"}]], "\[Rule]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", 
         SubscriptBox["\[Alpha]", "male"]}], ")"}], 
       RowBox[{"(", 
        RowBox[{
        "1", "-", "recAMnotAX", "-", "recAXnotAM", "-", "recAXandAM"}], 
        ")"}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["pseg", 
       RowBox[{
       "x1_", ",", "a", ",", "z1_", ",", "x2_", ",", "A", ",", "z2_", ",", 
        "male", ",", "x1_", ",", "A", ",", "z2_"}]], "\[Rule]", 
      RowBox[{
       SubscriptBox["\[Alpha]", "male"], " ", "recAXnotAM"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["pseg", 
       RowBox[{
       "x1_", ",", "a", ",", "z1_", ",", "x2_", ",", "A", ",", "z2_", ",", 
        "male", ",", "x2_", ",", "a", ",", "z1_"}]], "\[Rule]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", 
         SubscriptBox["\[Alpha]", "male"]}], ")"}], "recAXnotAM"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["pseg", 
       RowBox[{
       "x1_", ",", "a", ",", "z1_", ",", "x2_", ",", "A", ",", "z2_", ",", 
        "male", ",", "x2_", ",", "A", ",", "z1_"}]], "\[Rule]", 
      RowBox[{
       SubscriptBox["\[Alpha]", "male"], " ", "recAMnotAX"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["pseg", 
       RowBox[{
       "x1_", ",", "a", ",", "z1_", ",", "x2_", ",", "A", ",", "z2_", ",", 
        "male", ",", "x1_", ",", "a", ",", "z2_"}]], "\[Rule]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", 
         SubscriptBox["\[Alpha]", "male"]}], ")"}], "recAMnotAX"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["pseg", 
       RowBox[{
       "x1_", ",", "a", ",", "z1_", ",", "x2_", ",", "A", ",", "z2_", ",", 
        "male", ",", "x1_", ",", "A", ",", "z1_"}]], "\[Rule]", 
      RowBox[{
       SubscriptBox["\[Alpha]", "male"], " ", "recAXandAM"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["pseg", 
       RowBox[{
       "x1_", ",", "a", ",", "z1_", ",", "x2_", ",", "A", ",", "z2_", ",", 
        "male", ",", "x2_", ",", "a", ",", "z2_"}]], "\[Rule]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", 
         SubscriptBox["\[Alpha]", "male"]}], ")"}], " ", "recAXandAM"}]}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["pseg", 
       RowBox[{
       "x1_", ",", "A", ",", "z1_", ",", "x2_", ",", "a", ",", "z2_", ",", 
        "female", ",", "x1_", ",", "A", ",", "z1_"}]], "\[Rule]", 
      RowBox[{
       SubscriptBox["\[Alpha]", "female"], 
       RowBox[{"(", 
        RowBox[{
        "1", "-", "recAMnotAX", "-", "recAXnotAM", "-", "recAXandAM"}], 
        ")"}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["pseg", 
       RowBox[{
       "x1_", ",", "A", ",", "z1_", ",", "x2_", ",", "a", ",", "z2_", ",", 
        "female", ",", "x2_", ",", "a", ",", "z2_"}]], "\[Rule]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", 
         SubscriptBox["\[Alpha]", "female"]}], ")"}], 
       RowBox[{"(", 
        RowBox[{
        "1", "-", "recAMnotAX", "-", "recAXnotAM", "-", "recAXandAM"}], 
        ")"}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["pseg", 
       RowBox[{
       "x1_", ",", "A", ",", "z1_", ",", "x2_", ",", "a", ",", "z2_", ",", 
        "female", ",", "x2_", ",", "A", ",", "z1_"}]], "\[Rule]", 
      RowBox[{
       SubscriptBox["\[Alpha]", "female"], " ", "recAXnotAM"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["pseg", 
       RowBox[{
       "x1_", ",", "A", ",", "z1_", ",", "x2_", ",", "a", ",", "z2_", ",", 
        "female", ",", "x1_", ",", "a", ",", "z2_"}]], "\[Rule]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", 
         SubscriptBox["\[Alpha]", "female"]}], ")"}], "recAXnotAM"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["pseg", 
       RowBox[{
       "x1_", ",", "A", ",", "z1_", ",", "x2_", ",", "a", ",", "z2_", ",", 
        "female", ",", "x1_", ",", "A", ",", "z2_"}]], "\[Rule]", 
      RowBox[{
       SubscriptBox["\[Alpha]", "female"], "recAMnotAX"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["pseg", 
       RowBox[{
       "x1_", ",", "A", ",", "z1_", ",", "x2_", ",", "a", ",", "z2_", ",", 
        "female", ",", "x2_", ",", "a", ",", "z1_"}]], "\[Rule]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", 
         SubscriptBox["\[Alpha]", "female"]}], ")"}], "recAMnotAX"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["pseg", 
       RowBox[{
       "x1_", ",", "A", ",", "z1_", ",", "x2_", ",", "a", ",", "z2_", ",", 
        "female", ",", "x2_", ",", "A", ",", "z2_"}]], "\[Rule]", 
      RowBox[{
       SubscriptBox["\[Alpha]", "female"], " ", "recAXandAM"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["pseg", 
       RowBox[{
       "x1_", ",", "A", ",", "z1_", ",", "x2_", ",", "a", ",", "z2_", ",", 
        "female", ",", "x1_", ",", "a", ",", "z1_"}]], "\[Rule]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", 
         SubscriptBox["\[Alpha]", "female"]}], ")"}], " ", "recAXandAM"}]}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["pseg", 
       RowBox[{
       "x1_", ",", "a", ",", "z1_", ",", "x2_", ",", "A", ",", "z2_", ",", 
        "female", ",", "x2_", ",", "A", ",", "z2_"}]], "\[Rule]", 
      RowBox[{
       SubscriptBox["\[Alpha]", "female"], " ", 
       RowBox[{"(", 
        RowBox[{
        "1", "-", "recAMnotAX", "-", "recAXnotAM", "-", "recAXandAM"}], 
        ")"}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["pseg", 
       RowBox[{
       "x1_", ",", "a", ",", "z1_", ",", "x2_", ",", "A", ",", "z2_", ",", 
        "female", ",", "x1_", ",", "a", ",", "z1_"}]], "\[Rule]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", 
         SubscriptBox["\[Alpha]", "female"]}], ")"}], 
       RowBox[{"(", 
        RowBox[{
        "1", "-", "recAMnotAX", "-", "recAXnotAM", "-", "recAXandAM"}], 
        ")"}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["pseg", 
       RowBox[{
       "x1_", ",", "a", ",", "z1_", ",", "x2_", ",", "A", ",", "z2_", ",", 
        "female", ",", "x1_", ",", "A", ",", "z2_"}]], "\[Rule]", 
      RowBox[{
       SubscriptBox["\[Alpha]", "female"], " ", "recAXnotAM"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["pseg", 
       RowBox[{
       "x1_", ",", "a", ",", "z1_", ",", "x2_", ",", "A", ",", "z2_", ",", 
        "female", ",", "x2_", ",", "a", ",", "z1_"}]], "\[Rule]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", 
         SubscriptBox["\[Alpha]", "female"]}], ")"}], "recAXnotAM"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["pseg", 
       RowBox[{
       "x1_", ",", "a", ",", "z1_", ",", "x2_", ",", "A", ",", "z2_", ",", 
        "female", ",", "x2_", ",", "A", ",", "z1_"}]], "\[Rule]", 
      RowBox[{
       SubscriptBox["\[Alpha]", "female"], " ", "recAMnotAX"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["pseg", 
       RowBox[{
       "x1_", ",", "a", ",", "z1_", ",", "x2_", ",", "A", ",", "z2_", ",", 
        "female", ",", "x1_", ",", "a", ",", "z2_"}]], "\[Rule]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", 
         SubscriptBox["\[Alpha]", "female"]}], ")"}], "recAMnotAX"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["pseg", 
       RowBox[{
       "x1_", ",", "a", ",", "z1_", ",", "x2_", ",", "A", ",", "z2_", ",", 
        "female", ",", "x1_", ",", "A", ",", "z1_"}]], "\[Rule]", 
      RowBox[{
       SubscriptBox["\[Alpha]", "female"], " ", "recAXandAM"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["pseg", 
       RowBox[{
       "x1_", ",", "a", ",", "z1_", ",", "x2_", ",", "A", ",", "z2_", ",", 
        "female", ",", "x2_", ",", "a", ",", "z2_"}]], "\[Rule]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", 
         SubscriptBox["\[Alpha]", "female"]}], ")"}], " ", "recAXandAM"}]}]}],
     "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pseg4", "=", 
   RowBox[{
    SubscriptBox["pseg", 
     RowBox[{
     "x1_", ",", "y1_", ",", "z1_", ",", "x2_", ",", "y2_", ",", "z2_", ",", 
      "sex_", ",", "x_", ",", "y_", ",", "z_"}]], "\[Rule]", "0"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.678743407603024*^9, 3.678743407992798*^9}, {
   3.678743451388444*^9, 3.67874370896734*^9}, {3.678743739187004*^9, 
   3.6787437964386272`*^9}, {3.678743835224123*^9, 3.678744092201377*^9}, {
   3.678744261724123*^9, 3.678744264472003*^9}, {3.678745612751544*^9, 
   3.678745641984303*^9}, {3.67874649434549*^9, 3.678746541426771*^9}, {
   3.678746588409*^9, 3.678746681937327*^9}, {3.678746723757894*^9, 
   3.678746726465787*^9}, {3.678747087955186*^9, 3.678747088849813*^9}, 
   3.6787471567075977`*^9, {3.678747281988718*^9, 3.678747345020574*^9}, {
   3.678747431984068*^9, 3.67874755142631*^9}, {3.678747706661974*^9, 
   3.678747816389114*^9}, {3.678747910520447*^9, 3.67874808520201*^9}, {
   3.678748117158371*^9, 3.678748124005247*^9}, 3.6787481598608437`*^9, {
   3.6787483065670223`*^9, 3.6787483117635727`*^9}, {3.67874836658313*^9, 
   3.678748403085204*^9}, {3.6787513544793262`*^9, 3.678751396800355*^9}, {
   3.67994277150476*^9, 3.679942799274077*^9}, {3.679942831090846*^9, 
   3.679942912055253*^9}, {3.679949107745778*^9, 3.679949120757681*^9}, {
   3.679949262229959*^9, 3.679949268375124*^9}, {3.679949476794919*^9, 
   3.679949523563891*^9}, {3.680374604093164*^9, 3.680374627372505*^9}, {
   3.681497799779855*^9, 3.6814978041546593`*^9}, {3.681497949200699*^9, 
   3.681497969730068*^9}, {3.6814980083479347`*^9, 3.68149802692618*^9}, 
   3.681498690728004*^9, {3.681503295313662*^9, 3.681503299933617*^9}, {
   3.681503352635356*^9, 3.681503380988648*^9}, {3.681503421408928*^9, 
   3.681503592682515*^9}, {3.681739639029612*^9, 3.681739667227919*^9}, {
   3.681739710186636*^9, 3.6817397505186863`*^9}, {3.68173979007161*^9, 
   3.6817400224068947`*^9}, {3.6817402086731462`*^9, 3.681740553815752*^9}, 
   3.6817441247473288`*^9, {3.681745118289254*^9, 3.681745246566457*^9}, 
   3.681790293719043*^9, {3.681790495616611*^9, 3.68179055084875*^9}, {
   3.681790594196591*^9, 3.681790651669318*^9}, {3.685446566599594*^9, 
   3.685446613301856*^9}, {3.6854466594783163`*^9, 3.685446674108594*^9}, {
   3.685446725576165*^9, 3.685446846752988*^9}, {3.685448456509159*^9, 
   3.6854484978796*^9}, {3.685854818012582*^9, 3.68585488767402*^9}, {
   3.685857317433228*^9, 3.6858574839951363`*^9}, {3.685857630736331*^9, 
   3.685857652981037*^9}, {3.685857739461396*^9, 3.6858577821286917`*^9}, {
   3.685857869620257*^9, 3.685857871015697*^9}, {3.685867321622304*^9, 
   3.685867404776165*^9}, {3.685867554585763*^9, 3.685867556709074*^9}, {
   3.685867675545533*^9, 3.6858677608809643`*^9}, 3.685867840790553*^9, {
   3.685868411911867*^9, 3.6858684353076897`*^9}, {3.685868522045967*^9, 
   3.6858685841072397`*^9}, {3.6858686149097958`*^9, 3.685868696329458*^9}, {
   3.685868734377339*^9, 3.68586879707349*^9}, {3.686831493887526*^9, 
   3.686831517514574*^9}, {3.6868315591139107`*^9, 3.686831680594562*^9}, {
   3.686831719657514*^9, 3.6868318159633617`*^9}, 3.6868319155060797`*^9, {
   3.686831995721257*^9, 3.686831996372467*^9}, {3.691332475471079*^9, 
   3.69133253011084*^9}, {3.691332681143373*^9, 3.6913326965546722`*^9}, {
   3.691332726779971*^9, 3.69133272835781*^9}, {3.691332828003528*^9, 
   3.691332845155514*^9}, {3.6913329825497303`*^9, 3.691333001347786*^9}, {
   3.691333050923387*^9, 3.69133306680932*^9}, {3.691333135450306*^9, 
   3.691333174120304*^9}, {3.691333226061233*^9, 3.691333312473215*^9}, {
   3.695144821209661*^9, 3.695144832183332*^9}, {3.6951465122709303`*^9, 
   3.695146539414205*^9}, {3.695146641378426*^9, 3.69514664220968*^9}, {
   3.695146769575981*^9, 3.695146779440208*^9}, {3.695146864513186*^9, 
   3.695146875460191*^9}, {3.6951469318251*^9, 3.6951470843329573`*^9}, {
   3.695147162154175*^9, 3.695147319523302*^9}, {3.6951477560497704`*^9, 
   3.695147759616248*^9}, {3.695147828169773*^9, 3.695147832089531*^9}, {
   3.695147889338893*^9, 3.6951480286289062`*^9}, {3.695148916900036*^9, 
   3.6951489272427692`*^9}, {3.695148968284731*^9, 3.6951490636376677`*^9}, {
   3.695152560803286*^9, 3.695152660419541*^9}, {3.695296193742441*^9, 
   3.695296241076809*^9}, {3.6953081683410807`*^9, 3.695308331991477*^9}, {
   3.695308365636876*^9, 3.6953083926643667`*^9}, {3.695308422850751*^9, 
   3.6953084620596123`*^9}, {3.6953192360198393`*^9, 3.695319261451314*^9}, {
   3.6954856302757807`*^9, 3.695485795085445*^9}},
 ExpressionUUID -> "e65be7ba-848c-4461-8e39-c1fcea388233"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Recombination probabilities for different arrangements of loci\
\>", "Subsubsection",
 CellChangeTimes->{{3.6951462034340267`*^9, 3.695146215368688*^9}, {
  3.695158518509029*^9, 3.69515852830969*^9}, {3.696696371132297*^9, 
  3.6966963733241158`*^9}},ExpressionUUID->"6819cbd7-07c6-4f97-af7f-\
3d38cf2bba59"],

Cell["\<\
Let the probability of recombination (an odd number of cross-overs) between \
loci A and X be r, the probability of recombination between A and M be R, and \
the probability of recombination between X and M be \[Chi]. \
\>", "Text",
 CellChangeTimes->{{3.6951498188995733`*^9, 3.6951498768084497`*^9}, {
  3.695150045047242*^9, 3.695150115083332*^9}, {3.695408396146262*^9, 
  3.6954084332185497`*^9}},ExpressionUUID->"273c203c-030f-42e4-abc0-\
24e372cd3cc9"],

Cell["We can then write, in general,", "Text",
 CellChangeTimes->{{3.695408439003786*^9, 
  3.6954084684446087`*^9}},ExpressionUUID->"17db1e35-f814-4204-8772-\
01f158b88752"],

Cell[BoxData[
 RowBox[{
  RowBox[{"recGen", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"recAXnotAM", "\[Rule]", 
      FractionBox[
       RowBox[{"r", "+", "\[Chi]", "-", "R"}], "2"]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"recAMnotAX", "\[Rule]", 
      FractionBox[
       RowBox[{"R", "+", "\[Chi]", "-", "r"}], "2"]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"recAXandAM", "\[Rule]", 
      FractionBox[
       RowBox[{"r", "+", "R", "-", "\[Chi]"}], "2"]}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.695322414958308*^9, 3.6953225169844112`*^9}, {
  3.695324078272975*^9, 3.6953240785539303`*^9}, {3.69540340480464*^9, 
  3.695403444455276*^9}, {3.695403480136647*^9, 3.695403508563278*^9}, {
  3.6954084578240433`*^9, 3.695408462413484*^9}},
 ExpressionUUID -> "1013cf87-67f2-4e7e-a12b-db3a6fe0d1dc"],

Cell["\<\
and for specific orders of loci we can substitute in the value of \[Chi] \
(alternatively one could do the same for R or r)\
\>", "Text",
 CellChangeTimes->{{3.695408463908675*^9, 
  3.695408500798313*^9}},ExpressionUUID->"175bf14a-33de-4d5a-b440-\
ab84fc2a68b6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Chi]AXM", "=", 
   RowBox[{"\[Chi]", "\[Rule]", 
    RowBox[{
     RowBox[{"R", 
      RowBox[{"(", 
       RowBox[{"1", "-", "r"}], ")"}]}], "+", 
     RowBox[{"r", 
      RowBox[{"(", 
       RowBox[{"1", "-", "R"}], ")"}]}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Chi]XAM", "=", 
   RowBox[{"\[Chi]", "\[Rule]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"r", "-", "R"}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"2", "R"}]}], ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Chi]XMA", "=", 
   RowBox[{"\[Chi]", "\[Rule]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"R", "-", "r"}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"2", "r"}]}], ")"}]}]}]}], ";"}]}], "Input",
 ExpressionUUID -> "122e4a2d-cd09-45c6-b594-0f986227acb8"]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Resident equilibrium (tight linkage between X and A; r=0) [ENTER]\
\>", "Section",
 CellChangeTimes->{{3.675694139646326*^9, 3.6756941429682417`*^9}, 
   3.6757029847263803`*^9, {3.675889497088314*^9, 3.675889497307007*^9}, {
   3.675897573374775*^9, 3.675897575830624*^9}, {3.675897716718397*^9, 
   3.6758977222283363`*^9}, 3.676682250170936*^9, 3.676682959070333*^9, {
   3.6767193867939043`*^9, 3.676719388460558*^9}, {3.6785484984643793`*^9, 
   3.678548500198676*^9}, {3.67875273051103*^9, 3.678752732829526*^9}, {
   3.678768538688073*^9, 3.6787685439131317`*^9}, {3.697203203675227*^9, 
   3.6972032052708797`*^9}, {3.6972062069280653`*^9, 3.697206208913843*^9}, {
   3.6979130752295647`*^9, 3.697913095251329*^9}, 
   3.708347317880464*^9},ExpressionUUID->"3807e3cb-9cc3-4df0-8cd2-\
931d60019c19"],

Cell["We begin with no mutations at the modifer locus", "Text",
 CellChangeTimes->{{3.681790894519829*^9, 
  3.6817909035331917`*^9}},ExpressionUUID->"305d256b-1111-4754-a2d6-\
97e523296b90"],

Cell[BoxData[
 RowBox[{
  RowBox[{"subequil", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      SubscriptBox["fHap", 
       RowBox[{"X", ",", "A", ",", "M", ",", "female"}]], "\[Rule]", "pXf"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["fHap", 
       RowBox[{"X", ",", "a", ",", "M", ",", "female"}]], "\[Rule]", 
      RowBox[{"1", "-", "pXf"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["fHap", 
       RowBox[{"X", ",", "A", ",", "M", ",", "male"}]], "\[Rule]", 
      RowBox[{"pXm", " ", "*", 
       RowBox[{"(", 
        RowBox[{"1", "-", "freqYm"}], ")"}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["fHap", 
       RowBox[{"X", ",", "a", ",", "M", ",", "male"}]], "\[Rule]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", "pXm"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"1", "-", "freqYm"}], ")"}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["fHap", 
       RowBox[{"Y", ",", "A", ",", "M", ",", "male"}]], "\[Rule]", 
      RowBox[{"pYm", " ", "freqYm"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["fHap", 
       RowBox[{"Y", ",", "a", ",", "M", ",", "male"}]], "\[Rule]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", "pYm"}], ")"}], "freqYm"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["fHap", 
       RowBox[{"x_", ",", "y_", ",", "m", ",", "sex_"}]], "\[Rule]", "0"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["fHap", 
       RowBox[{"Y", ",", "y_", ",", "M", ",", "female"}]], "\[Rule]", "0"}]}],
     "\[IndentingNewLine]", "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.681744168796749*^9, 3.681744285955284*^9}, {
  3.681744456703849*^9, 3.68174446046725*^9}, {3.681744512032195*^9, 
  3.681744517689509*^9}, {3.681745250079322*^9, 3.681745268071438*^9}, {
  3.681790148659374*^9, 3.681790165932436*^9}, {3.685447049829194*^9, 
  3.685447083554977*^9}, {3.685447504158259*^9, 3.685447510415009*^9}, {
  3.686380638637718*^9, 3.686380657187717*^9}},
 ExpressionUUID -> "16594d86-1ce3-4d23-84a2-d199e2507863"],

Cell["\<\
We now wish to solve for the equilibrium frequencies of the haploid genotypes \
in gametes of each sex. Equilibrium is achieved when the following four \
equations are zero\
\>", "Text",
 CellChangeTimes->{{3.675694155902801*^9, 3.675694193760104*^9}, {
   3.6756944337868023`*^9, 3.6756944351881227`*^9}, {3.6757029847267847`*^9, 
   3.67570303405547*^9}, {3.675710696458521*^9, 3.675710706286772*^9}, 
   3.6758975924118633`*^9, {3.676719416278571*^9, 3.676719460360141*^9}, {
   3.678763369210025*^9, 3.678763372346648*^9}, 3.686831925632285*^9, {
   3.697206219505135*^9, 
   3.697206222765503*^9}},ExpressionUUID->"5fcb1d9d-4e2b-45f5-8039-\
a63ea9f05ab8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"differenceEqs", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              SubscriptBox["fHapNext", 
               RowBox[{"X", ",", "A", ",", "M", ",", "female"}]], "-", 
              SubscriptBox["fHap", 
               RowBox[{"X", ",", "A", ",", "M", ",", "female"}]]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              SubscriptBox["fHapNext", 
               RowBox[{"X", ",", "A", ",", "M", ",", "male"}]], "-", 
              SubscriptBox["fHap", 
               RowBox[{"X", ",", "A", ",", "M", ",", "male"}]]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              SubscriptBox["fHapNext", 
               RowBox[{"Y", ",", "A", ",", "M", ",", "male"}]], "-", 
              SubscriptBox["fHap", 
               RowBox[{"Y", ",", "A", ",", "M", ",", "male"}]]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                SubscriptBox["fHapNext", 
                 RowBox[{"Y", ",", "A", ",", "M", ",", "male"}]], "+", 
                SubscriptBox["fHapNext", 
                 RowBox[{"Y", ",", "a", ",", "M", ",", "male"}]]}], ")"}], 
              "-", 
              RowBox[{"(", 
               RowBox[{
                SubscriptBox["fHap", 
                 RowBox[{"Y", ",", "A", ",", "M", ",", "male"}]], "+", 
                SubscriptBox["fHap", 
                 RowBox[{"Y", ",", "a", ",", "M", ",", "male"}]]}], ")"}]}]}],
             "\[IndentingNewLine]", "}"}], "/.", "subequil"}], "/.", 
          "sumsex"}], "/.", "invXY"}], "/.", "pseg0"}], "/.", "pseg1"}], "/.",
       "pseg2"}], "/.", "pseg3"}], "/.", "pseg4"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.678750179056045*^9, 3.678750265971582*^9}, 
   3.6787516566515017`*^9, {3.681789829427744*^9, 3.68178992075916*^9}, 
   3.681891166870421*^9, {3.686380671924355*^9, 3.686380710269143*^9}, {
   3.686380907602208*^9, 3.6863809079182463`*^9}, {3.6972035796065598`*^9, 
   3.697203581205518*^9}},
 ExpressionUUID -> "03056bc3-01e9-420c-9380-161d8e161e0c"],

Cell["\<\
To simplify the analysis we assume tight linkage between A and X\
\>", "Text",
 CellChangeTimes->{{3.675694205010009*^9, 3.675694211923259*^9}, 
   3.67570298472752*^9, {3.6757030454432507`*^9, 3.6757030568360033`*^9}, {
   3.678750297640636*^9, 3.678750297774932*^9}, {3.678750454508356*^9, 
   3.6787504833762913`*^9}, {3.685447574297616*^9, 3.6854475782461767`*^9}, {
   3.697203221514619*^9, 3.697203222918356*^9}, {3.6972035489606733`*^9, 
   3.69720356383359*^9}},ExpressionUUID->"1b914e29-ce2c-47f8-92ca-\
9f7da580723f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"weakrecAX", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"recAXandAM", "\[Rule]", 
      RowBox[{"recAXandAM", " ", "\[Epsilon]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"recAXnotAM", "\[Rule]", 
      RowBox[{"recAXnotAM", " ", "\[Epsilon]"}]}]}], "\[IndentingNewLine]", 
    "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.67564806523287*^9, 3.675648221558539*^9}, {
   3.675694367971285*^9, 3.6756943845803022`*^9}, 3.6757029847280283`*^9, {
   3.678750304645768*^9, 3.67875045056485*^9}, {3.678750489500865*^9, 
   3.6787505048047533`*^9}, {3.6787505350519323`*^9, 3.678750613437016*^9}, {
   3.678750650976028*^9, 3.678750663356496*^9}, {3.6787515109746723`*^9, 
   3.678751549594288*^9}, {3.681789961959874*^9, 3.6817900838735647`*^9}, {
   3.6838168666712627`*^9, 3.68381687442684*^9}, {3.6854475805614653`*^9, 
   3.685447599782713*^9}, {3.6854485192754717`*^9, 3.685448531484398*^9}, {
   3.686831932425375*^9, 3.686831943171628*^9}, {3.69515684949865*^9, 
   3.695156856809911*^9}, {3.6972032287053022`*^9, 3.69720328625049*^9}, {
   3.697203569298996*^9, 3.6972035694619417`*^9}, {3.697203803584208*^9, 
   3.697203809705566*^9}, {3.6972056446931953`*^9, 3.697205645083337*^9}},
 ExpressionUUID -> "ef1ab814-3df1-4271-bcef-c947ff4976da"],

Cell["\<\
Without recombination the recursions for the change in the frequencies are\
\>", "Text",
 CellChangeTimes->{{3.6757032054455214`*^9, 3.6757032697493563`*^9}, {
  3.6757098202812138`*^9, 3.675709824765788*^9}, {3.6757117765596933`*^9, 
  3.6757117850524673`*^9}, {3.675711818872109*^9, 3.6757118199810133`*^9}, {
  3.676719491260041*^9, 3.676719499308044*^9}, {3.697203386715886*^9, 
  3.697203388243577*^9}},ExpressionUUID->"233b5cea-a89f-4efa-8a3f-\
21ae105e2a32"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"differenceEqsr0", "=", 
  RowBox[{
   RowBox[{"Normal", "[", 
    RowBox[{"Series", "[", 
     RowBox[{
      RowBox[{"differenceEqs", "/.", "weakrecAX"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Epsilon]", ",", "0", ",", "0"}], "}"}]}], "]"}], "]"}], "//",
    "Simplify"}]}]], "Input",
 CellChangeTimes->{{3.678751736367395*^9, 3.678751737467704*^9}, {
   3.678752209413887*^9, 3.678752212219976*^9}, 3.678752262803892*^9, {
   3.685447468281103*^9, 3.685447470446783*^9}, {3.6854475253827333`*^9, 
   3.685447570892086*^9}, {3.697203300151258*^9, 3.697203301072459*^9}, 
   3.6972033490414343`*^9, {3.697203401440333*^9, 3.6972034081165953`*^9}, {
   3.697205650627689*^9, 3.697205650906502*^9}, {3.697206234506879*^9, 
   3.697206249071929*^9}},
 ExpressionUUID -> "7fec61e9-88e5-4913-809b-1c13e37bda73"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "pXf"}], ")"}]}], " ", 
       SubscriptBox["wHap", 
        RowBox[{"a", ",", "female"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"pXf", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "pXm"}], ")"}], " ", 
          SubscriptBox["wHap", 
           RowBox[{"a", ",", "male"}]], " ", 
          SubscriptBox["wDip", 
           RowBox[{"a", ",", "a", ",", "female"}]]}], "+", 
         RowBox[{"pXm", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "pXf"}], "+", 
            SubscriptBox["\[Alpha]", "female"]}], ")"}], " ", 
          SubscriptBox["wHap", 
           RowBox[{"A", ",", "male"}]], " ", 
          SubscriptBox["wDip", 
           RowBox[{"a", ",", "A", ",", "female"}]]}]}], ")"}]}], "+", 
      RowBox[{"pXf", " ", 
       SubscriptBox["wHap", 
        RowBox[{"A", ",", "female"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "pXm"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"pXf", "-", 
            SubscriptBox["\[Alpha]", "female"]}], ")"}], " ", 
          SubscriptBox["wHap", 
           RowBox[{"a", ",", "male"}]], " ", 
          SubscriptBox["wDip", 
           RowBox[{"A", ",", "a", ",", "female"}]]}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "pXf"}], ")"}], " ", "pXm", " ", 
          SubscriptBox["wHap", 
           RowBox[{"A", ",", "male"}]], " ", 
          SubscriptBox["wDip", 
           RowBox[{"A", ",", "A", ",", "female"}]]}]}], ")"}]}]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "pXf"}], ")"}], " ", 
       SubscriptBox["wHap", 
        RowBox[{"a", ",", "female"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "pXm"}], ")"}], " ", 
          SubscriptBox["wHap", 
           RowBox[{"a", ",", "male"}]], " ", 
          SubscriptBox["wDip", 
           RowBox[{"a", ",", "a", ",", "female"}]]}], "-", 
         RowBox[{"pXm", " ", 
          SubscriptBox["wHap", 
           RowBox[{"A", ",", "male"}]], " ", 
          SubscriptBox["wDip", 
           RowBox[{"a", ",", "A", ",", "female"}]]}]}], ")"}]}], "+", 
      RowBox[{"pXf", " ", 
       SubscriptBox["wHap", 
        RowBox[{"A", ",", "female"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "pXm"}], ")"}]}], " ", 
          SubscriptBox["wHap", 
           RowBox[{"a", ",", "male"}]], " ", 
          SubscriptBox["wDip", 
           RowBox[{"A", ",", "a", ",", "female"}]]}], "+", 
         RowBox[{"pXm", " ", 
          SubscriptBox["wHap", 
           RowBox[{"A", ",", "male"}]], " ", 
          SubscriptBox["wDip", 
           RowBox[{"A", ",", "A", ",", "female"}]]}]}], ")"}]}]}], ")"}]}], 
   ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "freqYm"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "pXf"}], ")"}], " ", "pXm", " ", 
       SubscriptBox["wHap", 
        RowBox[{"a", ",", "female"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "pYm"}], ")"}], " ", 
          SubscriptBox["wHap", 
           RowBox[{"a", ",", "male"}]], " ", 
          SubscriptBox["wDip", 
           RowBox[{"a", ",", "a", ",", "male"}]]}], "-", 
         RowBox[{"pYm", " ", 
          SubscriptBox["wHap", 
           RowBox[{"A", ",", "male"}]], " ", 
          SubscriptBox["wDip", 
           RowBox[{"a", ",", "A", ",", "male"}]]}]}], ")"}]}], "+", 
      RowBox[{"pXf", " ", 
       SubscriptBox["wHap", 
        RowBox[{"A", ",", "female"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "pYm"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "freqYm"}], ")"}], " ", "pXm"}], "+", 
            
            SubscriptBox["\[Alpha]", "male"]}], ")"}], " ", 
          SubscriptBox["wHap", 
           RowBox[{"a", ",", "male"}]], " ", 
          SubscriptBox["wDip", 
           RowBox[{"A", ",", "a", ",", "male"}]]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "freqYm"}], ")"}], " ", "pXm"}]}], 
           ")"}], " ", "pYm", " ", 
          SubscriptBox["wHap", 
           RowBox[{"A", ",", "male"}]], " ", 
          SubscriptBox["wDip", 
           RowBox[{"A", ",", "A", ",", "male"}]]}]}], ")"}]}]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "pXf"}], ")"}], " ", 
         SubscriptBox["wHap", 
          RowBox[{"a", ",", "female"}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "pYm"}], ")"}], " ", 
            SubscriptBox["wHap", 
             RowBox[{"a", ",", "male"}]], " ", 
            SubscriptBox["wDip", 
             RowBox[{"a", ",", "a", ",", "male"}]]}], "-", 
           RowBox[{"pYm", " ", 
            SubscriptBox["wHap", 
             RowBox[{"A", ",", "male"}]], " ", 
            SubscriptBox["wDip", 
             RowBox[{"a", ",", "A", ",", "male"}]]}]}], ")"}]}], "+", 
        RowBox[{"pXf", " ", 
         SubscriptBox["wHap", 
          RowBox[{"A", ",", "female"}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "pYm"}], ")"}]}], " ", 
            SubscriptBox["wHap", 
             RowBox[{"a", ",", "male"}]], " ", 
            SubscriptBox["wDip", 
             RowBox[{"A", ",", "a", ",", "male"}]]}], "+", 
           RowBox[{"pYm", " ", 
            SubscriptBox["wHap", 
             RowBox[{"A", ",", "male"}]], " ", 
            SubscriptBox["wDip", 
             RowBox[{"A", ",", "A", ",", "male"}]]}]}], ")"}]}]}], ")"}]}], 
     ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"pYm", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "pXf"}], ")"}], " ", 
         SubscriptBox["wHap", 
          RowBox[{"a", ",", "female"}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"freqYm", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "pYm"}], ")"}], " ", 
            SubscriptBox["wHap", 
             RowBox[{"a", ",", "male"}]], " ", 
            SubscriptBox["wDip", 
             RowBox[{"a", ",", "a", ",", "male"}]]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "freqYm"}], " ", "pYm"}], "+", 
              SubscriptBox["\[Alpha]", "male"]}], ")"}], " ", 
            SubscriptBox["wHap", 
             RowBox[{"A", ",", "male"}]], " ", 
            SubscriptBox["wDip", 
             RowBox[{"a", ",", "A", ",", "male"}]]}]}], ")"}]}], "+", 
        RowBox[{"pXf", " ", 
         SubscriptBox["wHap", 
          RowBox[{"A", ",", "female"}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", "freqYm", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "pYm"}], ")"}], " ", 
            SubscriptBox["wHap", 
             RowBox[{"a", ",", "male"}]], " ", 
            SubscriptBox["wDip", 
             RowBox[{"A", ",", "a", ",", "male"}]]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"2", " ", "freqYm", " ", "pYm"}]}], ")"}], " ", 
            SubscriptBox["wHap", 
             RowBox[{"A", ",", "male"}]], " ", 
            SubscriptBox["wDip", 
             RowBox[{"A", ",", "A", ",", "male"}]]}]}], ")"}]}]}], ")"}]}], 
     ")"}], "/", 
    RowBox[{"(", 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "pXf"}], ")"}], " ", 
         SubscriptBox["wHap", 
          RowBox[{"a", ",", "female"}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "pYm"}], ")"}], " ", 
            SubscriptBox["wHap", 
             RowBox[{"a", ",", "male"}]], " ", 
            SubscriptBox["wDip", 
             RowBox[{"a", ",", "a", ",", "male"}]]}], "-", 
           RowBox[{"pYm", " ", 
            SubscriptBox["wHap", 
             RowBox[{"A", ",", "male"}]], " ", 
            SubscriptBox["wDip", 
             RowBox[{"a", ",", "A", ",", "male"}]]}]}], ")"}]}], "+", 
        RowBox[{"pXf", " ", 
         SubscriptBox["wHap", 
          RowBox[{"A", ",", "female"}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "pYm"}], ")"}]}], " ", 
            SubscriptBox["wHap", 
             RowBox[{"a", ",", "male"}]], " ", 
            SubscriptBox["wDip", 
             RowBox[{"A", ",", "a", ",", "male"}]]}], "+", 
           RowBox[{"pYm", " ", 
            SubscriptBox["wHap", 
             RowBox[{"A", ",", "male"}]], " ", 
            SubscriptBox["wDip", 
             RowBox[{"A", ",", "A", ",", "male"}]]}]}], ")"}]}]}], ")"}]}], 
     ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "pXf"}], ")"}]}], " ", 
       SubscriptBox["wHap", 
        RowBox[{"a", ",", "female"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"2", " ", "freqYm"}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "pYm"}], ")"}], " ", 
          SubscriptBox["wHap", 
           RowBox[{"a", ",", "male"}]], " ", 
          SubscriptBox["wDip", 
           RowBox[{"a", ",", "a", ",", "male"}]]}], "+", 
         RowBox[{"2", " ", "pYm", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "freqYm"}], "+", 
            SubscriptBox["\[Alpha]", "male"]}], ")"}], " ", 
          SubscriptBox["wHap", 
           RowBox[{"A", ",", "male"}]], " ", 
          SubscriptBox["wDip", 
           RowBox[{"a", ",", "A", ",", "male"}]]}]}], ")"}]}], "+", 
      RowBox[{"pXf", " ", 
       SubscriptBox["wHap", 
        RowBox[{"A", ",", "female"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "pYm"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "freqYm", "+", 
            SubscriptBox["\[Alpha]", "male"]}], ")"}], " ", 
          SubscriptBox["wHap", 
           RowBox[{"a", ",", "male"}]], " ", 
          SubscriptBox["wDip", 
           RowBox[{"A", ",", "a", ",", "male"}]]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"2", " ", "freqYm"}]}], ")"}], " ", "pYm", " ", 
          SubscriptBox["wHap", 
           RowBox[{"A", ",", "male"}]], " ", 
          SubscriptBox["wDip", 
           RowBox[{"A", ",", "A", ",", "male"}]]}]}], ")"}]}]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "pXf"}], ")"}], " ", 
         SubscriptBox["wHap", 
          RowBox[{"a", ",", "female"}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "pYm"}], ")"}], " ", 
            SubscriptBox["wHap", 
             RowBox[{"a", ",", "male"}]], " ", 
            SubscriptBox["wDip", 
             RowBox[{"a", ",", "a", ",", "male"}]]}], "-", 
           RowBox[{"pYm", " ", 
            SubscriptBox["wHap", 
             RowBox[{"A", ",", "male"}]], " ", 
            SubscriptBox["wDip", 
             RowBox[{"a", ",", "A", ",", "male"}]]}]}], ")"}]}], "+", 
        RowBox[{"pXf", " ", 
         SubscriptBox["wHap", 
          RowBox[{"A", ",", "female"}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "pYm"}], ")"}]}], " ", 
            SubscriptBox["wHap", 
             RowBox[{"a", ",", "male"}]], " ", 
            SubscriptBox["wDip", 
             RowBox[{"A", ",", "a", ",", "male"}]]}], "+", 
           RowBox[{"pYm", " ", 
            SubscriptBox["wHap", 
             RowBox[{"A", ",", "male"}]], " ", 
            SubscriptBox["wDip", 
             RowBox[{"A", ",", "A", ",", "male"}]]}]}], ")"}]}]}], ")"}]}], 
     ")"}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.67875164051635*^9, {3.678751716032783*^9, 3.6787517378070927`*^9}, 
   3.6787520627432127`*^9, 3.678752212888122*^9, 3.6787523426840563`*^9, 
   3.6787534142533073`*^9, 3.678763399028235*^9, 3.6787637498048763`*^9, 
   3.6787649279812727`*^9, 3.678769190501109*^9, 3.67993779987945*^9, 
   3.681790093930011*^9, 3.681790177016839*^9, 3.6817903134721537`*^9, 
   3.681790666763077*^9, 3.6818910310375347`*^9, 3.681891176521256*^9, 
   3.681897653546867*^9, 3.682049536847906*^9, 3.682133260044132*^9, 
   3.682144710656866*^9, 3.682920602235833*^9, 3.683816896620468*^9, 
   3.685447428394968*^9, 3.685447470963046*^9, {3.685447518239092*^9, 
   3.685447551041255*^9}, 3.68544760753404*^9, {3.685448523510034*^9, 
   3.685448534771299*^9}, 3.685714880361951*^9, 3.6858548020016737`*^9, {
   3.685856125479251*^9, 3.685856140079173*^9}, 3.685856182461566*^9, 
   3.685878963778384*^9, 3.6859368719441833`*^9, 3.6863807719980593`*^9, 
   3.6863809124378767`*^9, 3.686831955041347*^9, 3.6868320265653067`*^9, {
   3.686834394784305*^9, 3.686834403684424*^9}, 3.686890426277944*^9, 
   3.686903523929381*^9, 3.6869073622023563`*^9, 3.686907829512693*^9, 
   3.687623269532193*^9, 3.6911889675025797`*^9, 3.691198105514596*^9, 
   3.6912451623854227`*^9, 3.6912476726452847`*^9, 3.6912482724499187`*^9, 
   3.691327419174513*^9, 3.692542508934903*^9, 3.692605925609705*^9, 
   3.6926088975757523`*^9, 3.692613124578062*^9, 3.6927928280311623`*^9, 
   3.693566053383974*^9, 3.695053766993713*^9, 3.695054437717229*^9, 
   3.6951409743607893`*^9, 3.695147553564856*^9, 3.6951481179736967`*^9, 
   3.695149149645761*^9, 3.695152971019541*^9, 3.695156861482819*^9, 
   3.695220448429015*^9, 3.695222127299662*^9, 3.695295631755416*^9, 
   3.695301364294076*^9, 3.69530299086401*^9, 3.695308510870699*^9, 
   3.695315497833684*^9, 3.6953163698151093`*^9, 3.695319282328319*^9, 
   3.6953204581181717`*^9, 3.695322548948823*^9, 3.695392504621414*^9, 
   3.6953980050977716`*^9, 3.695408683490018*^9, 3.697149196582917*^9, 
   3.697149600197008*^9, 3.697149637115164*^9, 3.6971497383137083`*^9, 
   3.6971497721866493`*^9, {3.6971498088643713`*^9, 3.697149824172112*^9}, 
   3.6971503328339157`*^9, 3.697151353416005*^9, 3.6971618932075567`*^9, 
   3.6971621614787416`*^9, {3.697203325852561*^9, 3.69720334990703*^9}, {
   3.697203402125783*^9, 3.6972034089925222`*^9}, {3.697203574109221*^9, 
   3.697203586458088*^9}, 3.697203812118287*^9, {3.697206240373961*^9, 
   3.69720624946723*^9}, {3.697571728526264*^9, 3.697571744936542*^9}, 
   3.6979037293944607`*^9, 3.697919959241736*^9, 3.697989458289744*^9, 
   3.69843225939193*^9, 3.698498461428753*^9, 3.698586367391786*^9, 
   3.698757973890924*^9, 3.6992077919862823`*^9, 3.699216140856999*^9, {
   3.699795245348228*^9, 3.699795253129998*^9}, 3.704224014163622*^9, 
   3.704482280523336*^9, 3.706992576848619*^9, 3.70826313530128*^9, 
   3.708347307323243*^9, 3.7083526316185226`*^9, 3.710707739401617*^9, 
   3.71079214113433*^9, 3.710868213851095*^9, 3.711370670463105*^9, 
   3.711474754242692*^9, 3.711795809180641*^9, 3.712482484025723*^9, 
   3.712490643503158*^9, 3.712496819120726*^9, 3.71255884098645*^9, 
   3.712575668531684*^9, 3.713012164932967*^9, 3.713177648885374*^9, 
   3.715112353422956*^9},
 ExpressionUUID -> "94bdaf91-e1f3-420d-a792-a0dd9e9c8d84"]
}, Open  ]],

Cell[TextData[{
 "To help ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ", we solve for each in turn."
}], "Text",
 CellChangeTimes->{{3.697204538900486*^9, 
  3.697204550175335*^9}},ExpressionUUID->"c8298bc6-c248-4cee-8db0-\
7816f408fb26"],

Cell["The frequency of Ys from males at equilbirum is", "Text",
 CellChangeTimes->{{3.697204553278631*^9, 
  3.697204574893462*^9}},ExpressionUUID->"062c6a1b-725f-4e79-b858-\
f4eaa7568414"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"solfreqYmr0", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{"0", "==", 
       RowBox[{"differenceEqsr0", "[", 
        RowBox[{"[", "4", "]"}], "]"}]}], ",", "freqYm"}], "]"}], "//", 
    "Simplify"}], "//", "Flatten"}]}]], "Input",
 CellChangeTimes->{{3.697203508141687*^9, 3.69720351993395*^9}, {
   3.697203595151066*^9, 3.697203615733046*^9}, {3.697203713187179*^9, 
   3.6972037204242973`*^9}, 3.697203979178911*^9},
 ExpressionUUID -> "365e8776-a980-4e91-82bf-52fe5c765cec"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"freqYm", "\[Rule]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "pXf"}], ")"}], " ", 
       SubscriptBox["wHap", 
        RowBox[{"a", ",", "female"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "pYm"}], ")"}], " ", 
          SubscriptBox["wHap", 
           RowBox[{"a", ",", "male"}]], " ", 
          SubscriptBox["wDip", 
           RowBox[{"a", ",", "a", ",", "male"}]]}], "-", 
         RowBox[{"2", " ", "pYm", " ", 
          SubscriptBox["\[Alpha]", "male"], " ", 
          SubscriptBox["wHap", 
           RowBox[{"A", ",", "male"}]], " ", 
          SubscriptBox["wDip", 
           RowBox[{"a", ",", "A", ",", "male"}]]}]}], ")"}]}], "+", 
      RowBox[{"pXf", " ", 
       SubscriptBox["wHap", 
        RowBox[{"A", ",", "female"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "pYm"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SubscriptBox["\[Alpha]", "male"]}], ")"}], " ", 
          SubscriptBox["wHap", 
           RowBox[{"a", ",", "male"}]], " ", 
          SubscriptBox["wDip", 
           RowBox[{"A", ",", "a", ",", "male"}]]}], "+", 
         RowBox[{"pYm", " ", 
          SubscriptBox["wHap", 
           RowBox[{"A", ",", "male"}]], " ", 
          SubscriptBox["wDip", 
           RowBox[{"A", ",", "A", ",", "male"}]]}]}], ")"}]}]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "pXf"}], ")"}], " ", 
         SubscriptBox["wHap", 
          RowBox[{"a", ",", "female"}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "pYm"}], ")"}], " ", 
            SubscriptBox["wHap", 
             RowBox[{"a", ",", "male"}]], " ", 
            SubscriptBox["wDip", 
             RowBox[{"a", ",", "a", ",", "male"}]]}], "-", 
           RowBox[{"pYm", " ", 
            SubscriptBox["wHap", 
             RowBox[{"A", ",", "male"}]], " ", 
            SubscriptBox["wDip", 
             RowBox[{"a", ",", "A", ",", "male"}]]}]}], ")"}]}], "+", 
        RowBox[{"pXf", " ", 
         SubscriptBox["wHap", 
          RowBox[{"A", ",", "female"}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "pYm"}], ")"}]}], " ", 
            SubscriptBox["wHap", 
             RowBox[{"a", ",", "male"}]], " ", 
            SubscriptBox["wDip", 
             RowBox[{"A", ",", "a", ",", "male"}]]}], "+", 
           RowBox[{"pYm", " ", 
            SubscriptBox["wHap", 
             RowBox[{"A", ",", "male"}]], " ", 
            SubscriptBox["wDip", 
             RowBox[{"A", ",", "A", ",", "male"}]]}]}], ")"}]}]}], ")"}]}], 
     ")"}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.6972036066396627`*^9, 3.697203616148315*^9}, 
   3.6972037211890583`*^9, 3.697203814057732*^9, 3.69720397996238*^9, 
   3.697206251857292*^9, {3.697571728905119*^9, 3.697571744994171*^9}, 
   3.697903729514647*^9, 3.697919959301877*^9, 3.697989458358756*^9, 
   3.698432259451288*^9, 3.698498461519135*^9, 3.698586367456854*^9, 
   3.698757974003891*^9, 3.699207792041025*^9, 3.69921614091444*^9, {
   3.6997952457508574`*^9, 3.699795253194706*^9}, 3.704224014218788*^9, 
   3.704482280598982*^9, 3.70699257690425*^9, 3.70826313536001*^9, 
   3.708347307394804*^9, 3.708352631672143*^9, 3.710707739482212*^9, 
   3.7107921411972227`*^9, 3.710868213914144*^9, 3.7113706705232573`*^9, 
   3.711474754306676*^9, 3.7117958092473917`*^9, 3.712482484098612*^9, 
   3.7124906435711203`*^9, 3.712496819189815*^9, 3.712558841053303*^9, 
   3.712575668595727*^9, 3.713012164993558*^9, 3.7131776489540253`*^9, 
   3.71511235348949*^9},
 ExpressionUUID -> "7f770600-d226-4343-9593-fa2d420a0a41"]
}, Open  ]],

Cell["\<\
We can use this to solve for the frequency of A on Ys from males\
\>", "Text",
 CellChangeTimes->{{3.697204578697365*^9, 
  3.697204589578094*^9}},ExpressionUUID->"cdfd0bb7-ff68-4539-80dc-\
db0a20733805"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"solpYmr0a", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"0", "==", 
        RowBox[{"differenceEqsr0", "[", 
         RowBox[{"[", "3", "]"}], "]"}]}], "/.", "solfreqYmr0"}], ",", 
      "pYm"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], "//", 
   "Simplify"}]}], "\[IndentingNewLine]", 
 RowBox[{"solpYmr0A", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"0", "==", 
        RowBox[{"differenceEqsr0", "[", 
         RowBox[{"[", "3", "]"}], "]"}]}], "/.", "solfreqYmr0"}], ",", 
      "pYm"}], "]"}], "[", 
    RowBox[{"[", "2", "]"}], "]"}], "//", "Simplify"}]}]}], "Input",
 CellChangeTimes->{{3.697203724911377*^9, 3.697203748555848*^9}, {
   3.697203833238635*^9, 3.6972038364324636`*^9}, {3.697203908977845*^9, 
   3.697203920684688*^9}, 3.697204615101248*^9},
 ExpressionUUID -> "299eaec5-64b3-4258-9de3-e7a1a7933d73"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"pYm", "\[Rule]", "0"}], "}"}]], "Output",
 CellChangeTimes->{
  3.697203750626937*^9, {3.697203816115703*^9, 3.6972038377955303`*^9}, 
   3.697203921117111*^9, 3.697203984525408*^9, 3.697204652862018*^9, 
   3.69720625375133*^9, {3.697571729025865*^9, 3.6975717450940447`*^9}, 
   3.697903729637761*^9, 3.697919959412795*^9, 3.6979894584662123`*^9, 
   3.698432259584249*^9, 3.698498461636095*^9, 3.698586367571534*^9, 
   3.6987579741300497`*^9, 3.699207792169976*^9, 3.699216141026531*^9, {
   3.6997952461340113`*^9, 3.699795253292328*^9}, 3.7042240143303413`*^9, 
   3.704482280740201*^9, 3.706992577010083*^9, 3.708263135469396*^9, 
   3.70834730750769*^9, 3.708352631776471*^9, 3.710707739585868*^9, 
   3.710792141310218*^9, 3.710868214022407*^9, 3.711370670638818*^9, 
   3.711474754431724*^9, 3.7117958093996277`*^9, 3.712482484286861*^9, 
   3.712490643694037*^9, 3.712496819322321*^9, 3.712558841215354*^9, 
   3.712575668711212*^9, 3.7130121651011667`*^9, 3.713177649076302*^9, 
   3.715112353596835*^9},
 ExpressionUUID -> "d16953f7-c663-44ec-b060-f87297b84529"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"pYm", "\[Rule]", "1"}], "}"}]], "Output",
 CellChangeTimes->{
  3.697203750626937*^9, {3.697203816115703*^9, 3.6972038377955303`*^9}, 
   3.697203921117111*^9, 3.697203984525408*^9, 3.697204652862018*^9, 
   3.69720625375133*^9, {3.697571729025865*^9, 3.6975717450940447`*^9}, 
   3.697903729637761*^9, 3.697919959412795*^9, 3.6979894584662123`*^9, 
   3.698432259584249*^9, 3.698498461636095*^9, 3.698586367571534*^9, 
   3.6987579741300497`*^9, 3.699207792169976*^9, 3.699216141026531*^9, {
   3.6997952461340113`*^9, 3.699795253292328*^9}, 3.7042240143303413`*^9, 
   3.704482280740201*^9, 3.706992577010083*^9, 3.708263135469396*^9, 
   3.70834730750769*^9, 3.708352631776471*^9, 3.710707739585868*^9, 
   3.710792141310218*^9, 3.710868214022407*^9, 3.711370670638818*^9, 
   3.711474754431724*^9, 3.7117958093996277`*^9, 3.712482484286861*^9, 
   3.712490643694037*^9, 3.712496819322321*^9, 3.712558841215354*^9, 
   3.712575668711212*^9, 3.7130121651011667`*^9, 3.713177649076302*^9, 
   3.715112353628396*^9},
 ExpressionUUID -> "d16953f7-c663-44ec-b060-f87297b84529"]
}, Open  ]],

Cell["Thus the Y is fixed for either a or A. ", "Text",
 CellChangeTimes->{{3.697204597084977*^9, 3.697204646820298*^9}, {
   3.6972061309400806`*^9, 3.6972061600454073`*^9}, {3.6972066640302887`*^9, 
   3.697206676481625*^9}, 
   3.6972069108464117`*^9},ExpressionUUID->"e87f7126-396c-457d-82a3-\
7ad2714d6a66"],

Cell["When a is fixed on the Y the frequencies on the Xs are", "Text",
 CellChangeTimes->{
  3.697206912459774*^9},ExpressionUUID->"4449f95d-725d-43ad-9077-\
766e4d6c8165"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"0", "==", 
         RowBox[{"differenceEqsr0", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "/.", "solfreqYmr0"}], "/.", 
       "solpYmr0a"}], ",", "pXm"}], "]"}], "//", "Simplify"}], "//", 
   "Flatten"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"solpXfr0a", "=", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"0", "==", 
         RowBox[{"differenceEqsr0", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "/.", "solfreqYmr0"}], "/.", 
       "solpYmr0a"}], "/.", "%"}], ",", "pXf"}], "]"}], "//", 
   "Simplify"}]}], "\[IndentingNewLine]", 
 RowBox[{"solpXmr0a", "=", 
  RowBox[{
   RowBox[{"%%", "/.", "%"}], "//", "Simplify"}]}]}], "Input",
 CellChangeTimes->{{3.697206147442573*^9, 3.6972061476684437`*^9}, {
  3.697206579266988*^9, 3.697206652697393*^9}},
 ExpressionUUID -> "75304841-d84a-4bf5-b22d-507fdc7e8681"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"pXf", "\[Rule]", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"pXf", "\[Rule]", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"pXf", "\[Rule]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["wHap", 
         RowBox[{"a", ",", "female"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SubscriptBox["wHap", 
            RowBox[{"a", ",", "female"}]], " ", 
           SubscriptBox["wHap", 
            RowBox[{"a", ",", "male"}]], " ", 
           SubscriptBox["wDip", 
            RowBox[{"a", ",", "a", ",", "female"}]], " ", 
           SubscriptBox["wDip", 
            RowBox[{"a", ",", "a", ",", "male"}]]}], "-", 
          RowBox[{
           SubscriptBox["\[Alpha]", "female"], " ", 
           SubscriptBox["wHap", 
            RowBox[{"A", ",", "female"}]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SubscriptBox["wHap", 
               RowBox[{"a", ",", "male"}]], " ", 
              SubscriptBox["wDip", 
               RowBox[{"a", ",", "a", ",", "male"}]], " ", 
              SubscriptBox["wDip", 
               RowBox[{"A", ",", "a", ",", "female"}]]}], "+", 
             RowBox[{"2", " ", 
              SubscriptBox["\[Alpha]", "male"], " ", 
              SubscriptBox["wHap", 
               RowBox[{"A", ",", "male"}]], " ", 
              SubscriptBox["wDip", 
               RowBox[{"a", ",", "A", ",", "female"}]], " ", 
              SubscriptBox["wDip", 
               RowBox[{"A", ",", "a", ",", "male"}]]}]}], ")"}]}]}], ")"}]}], 
       ")"}], "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SubsuperscriptBox["wHap", 
          RowBox[{"a", ",", "female"}], "2"], " ", 
         SubscriptBox["wHap", 
          RowBox[{"a", ",", "male"}]], " ", 
         SubscriptBox["wDip", 
          RowBox[{"a", ",", "a", ",", "female"}]], " ", 
         SubscriptBox["wDip", 
          RowBox[{"a", ",", "a", ",", "male"}]]}], "-", 
        RowBox[{
         SubscriptBox["wHap", 
          RowBox[{"a", ",", "female"}]], " ", 
         SubscriptBox["wHap", 
          RowBox[{"A", ",", "female"}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SubscriptBox["wHap", 
             RowBox[{"a", ",", "male"}]], " ", 
            SubscriptBox["wDip", 
             RowBox[{"a", ",", "a", ",", "male"}]], " ", 
            SubscriptBox["wDip", 
             RowBox[{"A", ",", "a", ",", "female"}]]}], "+", 
           RowBox[{"2", " ", 
            SubscriptBox["\[Alpha]", "male"], " ", 
            SubscriptBox["wHap", 
             RowBox[{"A", ",", "male"}]], " ", 
            SubscriptBox["wDip", 
             RowBox[{"a", ",", "A", ",", "female"}]], " ", 
            SubscriptBox["wDip", 
             RowBox[{"A", ",", "a", ",", "male"}]]}]}], ")"}]}], "+", 
        RowBox[{"2", " ", 
         SubscriptBox["\[Alpha]", "male"], " ", 
         SubsuperscriptBox["wHap", 
          RowBox[{"A", ",", "female"}], "2"], " ", 
         SubscriptBox["wHap", 
          RowBox[{"A", ",", "male"}]], " ", 
         SubscriptBox["wDip", 
          RowBox[{"A", ",", "a", ",", "male"}]], " ", 
         SubscriptBox["wDip", 
          RowBox[{"A", ",", "A", ",", "female"}]]}]}], ")"}]}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.6972061479941998`*^9, 3.697206255014659*^9, {3.6972065989071627`*^9, 
   3.697206653205353*^9}, {3.697571729343691*^9, 3.6975717452352343`*^9}, 
   3.697903729792056*^9, 3.697919959566902*^9, 3.697989458612406*^9, 
   3.698432259710045*^9, 3.698498461879178*^9, 3.698586367738308*^9, 
   3.6987579742838783`*^9, 3.699207792364992*^9, 3.699216141179142*^9, {
   3.6997952465423307`*^9, 3.699795253430646*^9}, 3.7042240144776278`*^9, 
   3.70448228105516*^9, 3.70699257718003*^9, 3.7082631356137247`*^9, 
   3.708347307662355*^9, 3.708352631907013*^9, 3.710707739732747*^9, 
   3.710792141582206*^9, 3.7108682142806053`*^9, 3.711370670789051*^9, 
   3.7114747545943127`*^9, 3.711795809756124*^9, 3.712482484637842*^9, 
   3.712490643843319*^9, 3.712496819502385*^9, 3.712558841419455*^9, 
   3.7125756688835163`*^9, 3.713012165268269*^9, 3.7131776492563457`*^9, 
   3.7151123537787743`*^9},
 ExpressionUUID -> "8e7834f9-7450-4df5-a9cd-bde91b3c509e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"pXm", "\[Rule]", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"pXm", "\[Rule]", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"pXm", "\[Rule]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", " ", 
        SubscriptBox["\[Alpha]", "male"], " ", 
        SubscriptBox["wDip", 
         RowBox[{"A", ",", "a", ",", "male"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            SubscriptBox["wHap", 
             RowBox[{"a", ",", "female"}]]}], " ", 
           SubscriptBox["wHap", 
            RowBox[{"a", ",", "male"}]], " ", 
           SubscriptBox["wDip", 
            RowBox[{"a", ",", "a", ",", "female"}]], " ", 
           SubscriptBox["wDip", 
            RowBox[{"a", ",", "a", ",", "male"}]]}], "+", 
          RowBox[{
           SubscriptBox["\[Alpha]", "female"], " ", 
           SubscriptBox["wHap", 
            RowBox[{"A", ",", "female"}]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SubscriptBox["wHap", 
               RowBox[{"a", ",", "male"}]], " ", 
              SubscriptBox["wDip", 
               RowBox[{"a", ",", "a", ",", "male"}]], " ", 
              SubscriptBox["wDip", 
               RowBox[{"A", ",", "a", ",", "female"}]]}], "+", 
             RowBox[{"2", " ", 
              SubscriptBox["\[Alpha]", "male"], " ", 
              SubscriptBox["wHap", 
               RowBox[{"A", ",", "male"}]], " ", 
              SubscriptBox["wDip", 
               RowBox[{"a", ",", "A", ",", "female"}]], " ", 
              SubscriptBox["wDip", 
               RowBox[{"A", ",", "a", ",", "male"}]]}]}], ")"}]}]}], ")"}]}], 
       ")"}], "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SubscriptBox["wHap", 
          RowBox[{"a", ",", "female"}]], " ", 
         SubscriptBox["wDip", 
          RowBox[{"a", ",", "a", ",", "male"}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SubscriptBox["\[Alpha]", "female"]}], ")"}], " ", 
            SubscriptBox["\[Alpha]", "male"], " ", 
            SubscriptBox["wHap", 
             RowBox[{"A", ",", "male"}]], " ", 
            SubscriptBox["wDip", 
             RowBox[{"a", ",", "A", ",", "female"}]], " ", 
            SubscriptBox["wDip", 
             RowBox[{"A", ",", "a", ",", "male"}]]}], "+", 
           RowBox[{
            SubscriptBox["wHap", 
             RowBox[{"a", ",", "male"}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  SubscriptBox["\[Alpha]", "female"]}], ")"}]}], " ", 
               SubscriptBox["wDip", 
                RowBox[{"a", ",", "a", ",", "male"}]], " ", 
               SubscriptBox["wDip", 
                RowBox[{"A", ",", "a", ",", "female"}]]}], "-", 
              RowBox[{"2", " ", 
               SubscriptBox["\[Alpha]", "male"], " ", 
               SubscriptBox["wDip", 
                RowBox[{"a", ",", "a", ",", "female"}]], " ", 
               SubscriptBox["wDip", 
                RowBox[{"A", ",", "a", ",", "male"}]]}]}], ")"}]}]}], ")"}]}],
         "+", 
        RowBox[{"2", " ", 
         SubscriptBox["\[Alpha]", "male"], " ", 
         SubscriptBox["wHap", 
          RowBox[{"A", ",", "female"}]], " ", 
         SubscriptBox["wDip", 
          RowBox[{"A", ",", "a", ",", "male"}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SubscriptBox["\[Alpha]", "female"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SubscriptBox["wHap", 
                RowBox[{"a", ",", "male"}]], " ", 
               SubscriptBox["wDip", 
                RowBox[{"a", ",", "a", ",", "male"}]], " ", 
               SubscriptBox["wDip", 
                RowBox[{"A", ",", "a", ",", "female"}]]}], "+", 
              RowBox[{"2", " ", 
               SubscriptBox["\[Alpha]", "male"], " ", 
               SubscriptBox["wHap", 
                RowBox[{"A", ",", "male"}]], " ", 
               SubscriptBox["wDip", 
                RowBox[{"a", ",", "A", ",", "female"}]], " ", 
               SubscriptBox["wDip", 
                RowBox[{"A", ",", "a", ",", "male"}]]}]}], ")"}]}], "-", 
           RowBox[{
            SubscriptBox["wHap", 
             RowBox[{"A", ",", "male"}]], " ", 
            SubscriptBox["wDip", 
             RowBox[{"a", ",", "a", ",", "male"}]], " ", 
            SubscriptBox["wDip", 
             RowBox[{"A", ",", "A", ",", "female"}]]}]}], ")"}]}]}], 
       ")"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6972061479941998`*^9, 3.697206255014659*^9, {3.6972065989071627`*^9, 
   3.697206653205353*^9}, {3.697571729343691*^9, 3.6975717452352343`*^9}, 
   3.697903729792056*^9, 3.697919959566902*^9, 3.697989458612406*^9, 
   3.698432259710045*^9, 3.698498461879178*^9, 3.698586367738308*^9, 
   3.6987579742838783`*^9, 3.699207792364992*^9, 3.699216141179142*^9, {
   3.6997952465423307`*^9, 3.699795253430646*^9}, 3.7042240144776278`*^9, 
   3.70448228105516*^9, 3.70699257718003*^9, 3.7082631356137247`*^9, 
   3.708347307662355*^9, 3.708352631907013*^9, 3.710707739732747*^9, 
   3.710792141582206*^9, 3.7108682142806053`*^9, 3.711370670789051*^9, 
   3.7114747545943127`*^9, 3.711795809756124*^9, 3.712482484637842*^9, 
   3.712490643843319*^9, 3.712496819502385*^9, 3.712558841419455*^9, 
   3.7125756688835163`*^9, 3.713012165268269*^9, 3.7131776492563457`*^9, 
   3.71511235383995*^9},
 ExpressionUUID -> "8e7834f9-7450-4df5-a9cd-bde91b3c509e"]
}, Open  ]],

Cell["So when a is fixed in the population we have", "Text",
 CellChangeTimes->{{3.6972066949435596`*^9, 
  3.697206712707244*^9}},ExpressionUUID->"3eb50df9-ad93-4fec-a1e0-\
81dcf0422fa9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eqr0YaXa", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"solpYmr0a", ",", 
      RowBox[{"solpXfr0a", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{"solpXmr0a", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{
       RowBox[{"solfreqYmr0", "/.", "solpYmr0a"}], "/.", 
       RowBox[{"solpXfr0a", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], "//", "Simplify"}], "//", 
   "Flatten"}]}]], "Input",
 CellChangeTimes->{{3.6972067253364773`*^9, 3.6972067892388678`*^9}, {
  3.697206872054071*^9, 3.697206879701415*^9}},
 ExpressionUUID -> "fe531089-43a4-4fe0-a48e-4e36704b5c80"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"pYm", "\[Rule]", "0"}], ",", 
   RowBox[{"pXf", "\[Rule]", "0"}], ",", 
   RowBox[{"pXm", "\[Rule]", "0"}], ",", 
   RowBox[{"freqYm", "\[Rule]", 
    FractionBox["1", "2"]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.69720678514769*^9, 3.6972067895485907`*^9}, 
   3.697206882399756*^9, {3.6975717295472937`*^9, 3.697571745443842*^9}, 
   3.6979037299589033`*^9, 3.697919959764904*^9, 3.697989458803536*^9, 
   3.698432259883973*^9, 3.698498462006171*^9, 3.698586367902493*^9, 
   3.6987579744104643`*^9, 3.6992077925686827`*^9, 3.699216141360043*^9, {
   3.699795246663177*^9, 3.699795253712834*^9}, 3.704224014685088*^9, 
   3.7044822812310266`*^9, 3.7069925773554773`*^9, 3.708263135790451*^9, 
   3.708347307846006*^9, 3.710707739924856*^9, 3.7107921416946907`*^9, 
   3.710868214409836*^9, 3.711370670973117*^9, 3.711474754833395*^9, 
   3.711795809874892*^9, 3.712482484851411*^9, 3.7124906440612373`*^9, 
   3.712496819647965*^9, 3.712558841539619*^9, 3.7125756690279303`*^9, 
   3.713012165460271*^9, 3.7131776494586782`*^9, 3.7151123539475594`*^9},
 ExpressionUUID -> "1b55ed85-351d-405e-9bb1-a3c033f1d164"]
}, Open  ]],

Cell["when a is fixed on the Y and A is fixed on the X we have", "Text",
 CellChangeTimes->{{3.6972068004963303`*^9, 
  3.6972068158090973`*^9}},ExpressionUUID->"44896ad3-a2fe-4782-b843-\
fc762fb71ffd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eqr0YaXA", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"solpYmr0a", ",", 
      RowBox[{"solpXfr0a", "[", 
       RowBox[{"[", "2", "]"}], "]"}], ",", 
      RowBox[{"solpXmr0a", "[", 
       RowBox[{"[", "2", "]"}], "]"}], ",", 
      RowBox[{
       RowBox[{"solfreqYmr0", "/.", "solpYmr0a"}], "/.", 
       RowBox[{"solpXfr0a", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], "//", "Simplify"}], "//", 
   "Flatten"}]}]], "Input",
 CellChangeTimes->{{3.6972068258658857`*^9, 3.697206832390688*^9}, {
  3.697206886537346*^9, 3.697206889476534*^9}},
 ExpressionUUID -> "47fdfcfe-d672-4f20-8895-6878b111fcde"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"pYm", "\[Rule]", "0"}], ",", 
   RowBox[{"pXf", "\[Rule]", "1"}], ",", 
   RowBox[{"pXm", "\[Rule]", "1"}], ",", 
   RowBox[{"freqYm", "\[Rule]", 
    RowBox[{"1", "-", 
     SubscriptBox["\[Alpha]", "male"]}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.697206833054563*^9, 3.6972068900021763`*^9, {3.697571729648015*^9, 
   3.6975717454763947`*^9}, 3.69790373000413*^9, 3.69791995979788*^9, 
   3.697989458840887*^9, 3.698432259909827*^9, 3.698498462051128*^9, 
   3.6985863679366503`*^9, 3.6987579744543343`*^9, 3.6992077926024637`*^9, 
   3.699216141393977*^9, {3.699795246736232*^9, 3.6997952537451973`*^9}, 
   3.7042240147178383`*^9, 3.70448228126425*^9, 3.706992577389889*^9, 
   3.7082631358327723`*^9, 3.708347307877206*^9, 3.7107077399512243`*^9, 
   3.710792141715947*^9, 3.710868214455825*^9, 3.711370671007864*^9, 
   3.711474754900289*^9, 3.711795809934729*^9, 3.712482484931512*^9, 
   3.7124906441141577`*^9, 3.712496819675447*^9, 3.712558841580071*^9, 
   3.7125756690761967`*^9, 3.713012165521846*^9, 3.713177649506393*^9, 
   3.715112353989141*^9},
 ExpressionUUID -> "6529f780-8191-460a-a274-5f19e1b6b6fb"]
}, Open  ]],

Cell["\<\
and when a is fixed on the Y and the X is polymorphic we have\
\>", "Text",
 CellChangeTimes->{{3.697206841512075*^9, 
  3.69720685339686*^9}},ExpressionUUID->"6cef1cc1-ca26-4649-a774-\
1bf0ac26f0f6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eqr0YaXAa", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"solpYmr0a", ",", 
      RowBox[{"solpXfr0a", "[", 
       RowBox[{"[", "3", "]"}], "]"}], ",", 
      RowBox[{"solpXmr0a", "[", 
       RowBox[{"[", "3", "]"}], "]"}], ",", 
      RowBox[{
       RowBox[{"solfreqYmr0", "/.", "solpYmr0a"}], "/.", 
       RowBox[{"solpXfr0a", "[", 
        RowBox[{"[", "3", "]"}], "]"}]}]}], "}"}], "//", "Simplify"}], "//", 
   "Flatten"}]}]], "Input",
 CellChangeTimes->{{3.697206859360458*^9, 3.6972068957763243`*^9}},
 ExpressionUUID -> "1b39826c-7050-4901-8c8a-35013f522775"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"pYm", "\[Rule]", "0"}], ",", 
   RowBox[{"pXf", "\[Rule]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["wHap", 
        RowBox[{"a", ",", "female"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SubscriptBox["wHap", 
           RowBox[{"a", ",", "female"}]], " ", 
          SubscriptBox["wHap", 
           RowBox[{"a", ",", "male"}]], " ", 
          SubscriptBox["wDip", 
           RowBox[{"a", ",", "a", ",", "female"}]], " ", 
          SubscriptBox["wDip", 
           RowBox[{"a", ",", "a", ",", "male"}]]}], "-", 
         RowBox[{
          SubscriptBox["\[Alpha]", "female"], " ", 
          SubscriptBox["wHap", 
           RowBox[{"A", ",", "female"}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SubscriptBox["wHap", 
              RowBox[{"a", ",", "male"}]], " ", 
             SubscriptBox["wDip", 
              RowBox[{"a", ",", "a", ",", "male"}]], " ", 
             SubscriptBox["wDip", 
              RowBox[{"A", ",", "a", ",", "female"}]]}], "+", 
            RowBox[{"2", " ", 
             SubscriptBox["\[Alpha]", "male"], " ", 
             SubscriptBox["wHap", 
              RowBox[{"A", ",", "male"}]], " ", 
             SubscriptBox["wDip", 
              RowBox[{"a", ",", "A", ",", "female"}]], " ", 
             SubscriptBox["wDip", 
              RowBox[{"A", ",", "a", ",", "male"}]]}]}], ")"}]}]}], ")"}]}], 
      ")"}], "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SubsuperscriptBox["wHap", 
         RowBox[{"a", ",", "female"}], "2"], " ", 
        SubscriptBox["wHap", 
         RowBox[{"a", ",", "male"}]], " ", 
        SubscriptBox["wDip", 
         RowBox[{"a", ",", "a", ",", "female"}]], " ", 
        SubscriptBox["wDip", 
         RowBox[{"a", ",", "a", ",", "male"}]]}], "-", 
       RowBox[{
        SubscriptBox["wHap", 
         RowBox[{"a", ",", "female"}]], " ", 
        SubscriptBox["wHap", 
         RowBox[{"A", ",", "female"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SubscriptBox["wHap", 
            RowBox[{"a", ",", "male"}]], " ", 
           SubscriptBox["wDip", 
            RowBox[{"a", ",", "a", ",", "male"}]], " ", 
           SubscriptBox["wDip", 
            RowBox[{"A", ",", "a", ",", "female"}]]}], "+", 
          RowBox[{"2", " ", 
           SubscriptBox["\[Alpha]", "male"], " ", 
           SubscriptBox["wHap", 
            RowBox[{"A", ",", "male"}]], " ", 
           SubscriptBox["wDip", 
            RowBox[{"a", ",", "A", ",", "female"}]], " ", 
           SubscriptBox["wDip", 
            RowBox[{"A", ",", "a", ",", "male"}]]}]}], ")"}]}], "+", 
       RowBox[{"2", " ", 
        SubscriptBox["\[Alpha]", "male"], " ", 
        SubsuperscriptBox["wHap", 
         RowBox[{"A", ",", "female"}], "2"], " ", 
        SubscriptBox["wHap", 
         RowBox[{"A", ",", "male"}]], " ", 
        SubscriptBox["wDip", 
         RowBox[{"A", ",", "a", ",", "male"}]], " ", 
        SubscriptBox["wDip", 
         RowBox[{"A", ",", "A", ",", "female"}]]}]}], ")"}]}]}], ",", 
   RowBox[{"pXm", "\[Rule]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"2", " ", 
       SubscriptBox["\[Alpha]", "male"], " ", 
       SubscriptBox["wDip", 
        RowBox[{"A", ",", "a", ",", "male"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           SubscriptBox["wHap", 
            RowBox[{"a", ",", "female"}]]}], " ", 
          SubscriptBox["wHap", 
           RowBox[{"a", ",", "male"}]], " ", 
          SubscriptBox["wDip", 
           RowBox[{"a", ",", "a", ",", "female"}]], " ", 
          SubscriptBox["wDip", 
           RowBox[{"a", ",", "a", ",", "male"}]]}], "+", 
         RowBox[{
          SubscriptBox["\[Alpha]", "female"], " ", 
          SubscriptBox["wHap", 
           RowBox[{"A", ",", "female"}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SubscriptBox["wHap", 
              RowBox[{"a", ",", "male"}]], " ", 
             SubscriptBox["wDip", 
              RowBox[{"a", ",", "a", ",", "male"}]], " ", 
             SubscriptBox["wDip", 
              RowBox[{"A", ",", "a", ",", "female"}]]}], "+", 
            RowBox[{"2", " ", 
             SubscriptBox["\[Alpha]", "male"], " ", 
             SubscriptBox["wHap", 
              RowBox[{"A", ",", "male"}]], " ", 
             SubscriptBox["wDip", 
              RowBox[{"a", ",", "A", ",", "female"}]], " ", 
             SubscriptBox["wDip", 
              RowBox[{"A", ",", "a", ",", "male"}]]}]}], ")"}]}]}], ")"}]}], 
      ")"}], "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SubscriptBox["wHap", 
         RowBox[{"a", ",", "female"}]], " ", 
        SubscriptBox["wDip", 
         RowBox[{"a", ",", "a", ",", "male"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SubscriptBox["\[Alpha]", "female"]}], ")"}], " ", 
           SubscriptBox["\[Alpha]", "male"], " ", 
           SubscriptBox["wHap", 
            RowBox[{"A", ",", "male"}]], " ", 
           SubscriptBox["wDip", 
            RowBox[{"a", ",", "A", ",", "female"}]], " ", 
           SubscriptBox["wDip", 
            RowBox[{"A", ",", "a", ",", "male"}]]}], "+", 
          RowBox[{
           SubscriptBox["wHap", 
            RowBox[{"a", ",", "male"}]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 SubscriptBox["\[Alpha]", "female"]}], ")"}]}], " ", 
              SubscriptBox["wDip", 
               RowBox[{"a", ",", "a", ",", "male"}]], " ", 
              SubscriptBox["wDip", 
               RowBox[{"A", ",", "a", ",", "female"}]]}], "-", 
             RowBox[{"2", " ", 
              SubscriptBox["\[Alpha]", "male"], " ", 
              SubscriptBox["wDip", 
               RowBox[{"a", ",", "a", ",", "female"}]], " ", 
              SubscriptBox["wDip", 
               RowBox[{"A", ",", "a", ",", "male"}]]}]}], ")"}]}]}], ")"}]}], 
       "+", 
       RowBox[{"2", " ", 
        SubscriptBox["\[Alpha]", "male"], " ", 
        SubscriptBox["wHap", 
         RowBox[{"A", ",", "female"}]], " ", 
        SubscriptBox["wDip", 
         RowBox[{"A", ",", "a", ",", "male"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[Alpha]", "female"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SubscriptBox["wHap", 
               RowBox[{"a", ",", "male"}]], " ", 
              SubscriptBox["wDip", 
               RowBox[{"a", ",", "a", ",", "male"}]], " ", 
              SubscriptBox["wDip", 
               RowBox[{"A", ",", "a", ",", "female"}]]}], "+", 
             RowBox[{"2", " ", 
              SubscriptBox["\[Alpha]", "male"], " ", 
              SubscriptBox["wHap", 
               RowBox[{"A", ",", "male"}]], " ", 
              SubscriptBox["wDip", 
               RowBox[{"a", ",", "A", ",", "female"}]], " ", 
              SubscriptBox["wDip", 
               RowBox[{"A", ",", "a", ",", "male"}]]}]}], ")"}]}], "-", 
          RowBox[{
           SubscriptBox["wHap", 
            RowBox[{"A", ",", "male"}]], " ", 
           SubscriptBox["wDip", 
            RowBox[{"a", ",", "a", ",", "male"}]], " ", 
           SubscriptBox["wDip", 
            RowBox[{"A", ",", "A", ",", "female"}]]}]}], ")"}]}]}], ")"}]}]}],
    ",", 
   RowBox[{"freqYm", "\[Rule]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SubscriptBox["wHap", 
         RowBox[{"a", ",", "female"}]], " ", 
        SubscriptBox["wDip", 
         RowBox[{"a", ",", "a", ",", "male"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SubscriptBox["\[Alpha]", "female"]}], ")"}], " ", 
           SubscriptBox["\[Alpha]", "male"], " ", 
           SubscriptBox["wHap", 
            RowBox[{"A", ",", "male"}]], " ", 
           SubscriptBox["wDip", 
            RowBox[{"a", ",", "A", ",", "female"}]], " ", 
           SubscriptBox["wDip", 
            RowBox[{"A", ",", "a", ",", "male"}]]}], "+", 
          RowBox[{
           SubscriptBox["wHap", 
            RowBox[{"a", ",", "male"}]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                SubscriptBox["\[Alpha]", "female"]}], ")"}], " ", 
              SubscriptBox["wDip", 
               RowBox[{"a", ",", "a", ",", "male"}]], " ", 
              SubscriptBox["wDip", 
               RowBox[{"A", ",", "a", ",", "female"}]]}], "-", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                SubscriptBox["\[Alpha]", "male"]}], ")"}], " ", 
              SubscriptBox["wDip", 
               RowBox[{"a", ",", "a", ",", "female"}]], " ", 
              SubscriptBox["wDip", 
               RowBox[{"A", ",", "a", ",", "male"}]]}]}], ")"}]}]}], ")"}]}], 
       "+", 
       RowBox[{"2", " ", 
        SubscriptBox["wHap", 
         RowBox[{"A", ",", "female"}]], " ", 
        SubscriptBox["wDip", 
         RowBox[{"A", ",", "a", ",", "male"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[Alpha]", "female"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SubscriptBox["\[Alpha]", "male"]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SubscriptBox["wHap", 
               RowBox[{"a", ",", "male"}]], " ", 
              SubscriptBox["wDip", 
               RowBox[{"a", ",", "a", ",", "male"}]], " ", 
              SubscriptBox["wDip", 
               RowBox[{"A", ",", "a", ",", "female"}]]}], "+", 
             RowBox[{"2", " ", 
              SubscriptBox["\[Alpha]", "male"], " ", 
              SubscriptBox["wHap", 
               RowBox[{"A", ",", "male"}]], " ", 
              SubscriptBox["wDip", 
               RowBox[{"a", ",", "A", ",", "female"}]], " ", 
              SubscriptBox["wDip", 
               RowBox[{"A", ",", "a", ",", "male"}]]}]}], ")"}]}], "+", 
          RowBox[{
           SubscriptBox["\[Alpha]", "male"], " ", 
           SubscriptBox["wHap", 
            RowBox[{"A", ",", "male"}]], " ", 
           SubscriptBox["wDip", 
            RowBox[{"a", ",", "a", ",", "male"}]], " ", 
           SubscriptBox["wDip", 
            RowBox[{"A", ",", "A", ",", "female"}]]}]}], ")"}]}]}], ")"}], 
     "/", 
     RowBox[{"(", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SubscriptBox["wHap", 
           RowBox[{"a", ",", "female"}]], " ", 
          SubscriptBox["wDip", 
           RowBox[{"a", ",", "a", ",", "male"}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               SubscriptBox["\[Alpha]", "female"]}], ")"}], " ", 
             SubscriptBox["\[Alpha]", "male"], " ", 
             SubscriptBox["wHap", 
              RowBox[{"A", ",", "male"}]], " ", 
             SubscriptBox["wDip", 
              RowBox[{"a", ",", "A", ",", "female"}]], " ", 
             SubscriptBox["wDip", 
              RowBox[{"A", ",", "a", ",", "male"}]]}], "+", 
            RowBox[{
             SubscriptBox["wHap", 
              RowBox[{"a", ",", "male"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  SubscriptBox["\[Alpha]", "female"]}], ")"}], " ", 
                SubscriptBox["wDip", 
                 RowBox[{"a", ",", "a", ",", "male"}]], " ", 
                SubscriptBox["wDip", 
                 RowBox[{"A", ",", "a", ",", "female"}]]}], "+", 
               RowBox[{
                SubscriptBox["wDip", 
                 RowBox[{"a", ",", "a", ",", "female"}]], " ", 
                SubscriptBox["wDip", 
                 RowBox[{"A", ",", "a", ",", "male"}]]}]}], ")"}]}]}], 
           ")"}]}], "-", 
         RowBox[{
          SubscriptBox["wHap", 
           RowBox[{"A", ",", "female"}]], " ", 
          SubscriptBox["wDip", 
           RowBox[{"A", ",", "a", ",", "male"}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SubscriptBox["\[Alpha]", "female"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SubscriptBox["wHap", 
                 RowBox[{"a", ",", "male"}]], " ", 
                SubscriptBox["wDip", 
                 RowBox[{"a", ",", "a", ",", "male"}]], " ", 
                SubscriptBox["wDip", 
                 RowBox[{"A", ",", "a", ",", "female"}]]}], "+", 
               RowBox[{"2", " ", 
                SubscriptBox["\[Alpha]", "male"], " ", 
                SubscriptBox["wHap", 
                 RowBox[{"A", ",", "male"}]], " ", 
                SubscriptBox["wDip", 
                 RowBox[{"a", ",", "A", ",", "female"}]], " ", 
                SubscriptBox["wDip", 
                 RowBox[{"A", ",", "a", ",", "male"}]]}]}], ")"}]}], "-", 
            RowBox[{"2", " ", 
             SubscriptBox["\[Alpha]", "male"], " ", 
             SubscriptBox["wHap", 
              RowBox[{"A", ",", "male"}]], " ", 
             SubscriptBox["wDip", 
              RowBox[{"a", ",", "a", ",", "male"}]], " ", 
             SubscriptBox["wDip", 
              RowBox[{"A", ",", "A", ",", "female"}]]}]}], ")"}]}]}], ")"}]}],
       ")"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.697206866145499*^9, 3.697206898343444*^9, {3.6975717298202267`*^9, 
   3.697571745597555*^9}, 3.697903730138568*^9, 3.697919959927238*^9, 
   3.6979894589748793`*^9, 3.698432260072735*^9, 3.698498462183716*^9, 
   3.698586368073654*^9, 3.6987579745836763`*^9, 3.699207792737318*^9, 
   3.699216141517726*^9, {3.69979524691994*^9, 3.699795253881235*^9}, 
   3.704224014842428*^9, 3.704482281429969*^9, 3.706992577527673*^9, 
   3.708263135968046*^9, 3.7083473080103683`*^9, 3.710707740079092*^9, 
   3.710792141870479*^9, 3.7108682145942507`*^9, 3.711370671136248*^9, 
   3.7114747550672503`*^9, 3.711795810090789*^9, 3.7124824850876923`*^9, 
   3.7124906442794*^9, 3.712496819822316*^9, 3.712558841745069*^9, 
   3.712575669253663*^9, 3.7130121656720047`*^9, 3.713177649657879*^9, 
   3.7151123541239634`*^9},
 ExpressionUUID -> "d0d93b6c-ac0d-40a3-97b6-653709f6b728"]
}, Open  ]],

Cell["When A is fixed on the Y the frequencies on the Xs are", "Text",
 CellChangeTimes->{{3.697206912459774*^9, 
  3.697206928821015*^9}},ExpressionUUID->"9d53d7db-0a21-4514-adba-\
12ec3dc3989e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"0", "==", 
         RowBox[{"differenceEqsr0", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "/.", "solfreqYmr0"}], "/.", 
       "solpYmr0A"}], ",", "pXm"}], "]"}], "//", "Simplify"}], "//", 
   "Flatten"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"solpXfr0A", "=", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"0", "==", 
         RowBox[{"differenceEqsr0", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "/.", "solfreqYmr0"}], "/.", 
       "solpYmr0A"}], "/.", "%"}], ",", "pXf"}], "]"}], "//", 
   "Simplify"}]}], "\[IndentingNewLine]", 
 RowBox[{"solpXmr0A", "=", 
  RowBox[{
   RowBox[{"%%", "/.", "%"}], "//", "Simplify"}]}]}], "Input",
 CellChangeTimes->{{3.697206147442573*^9, 3.6972061476684437`*^9}, {
  3.697206579266988*^9, 3.697206652697393*^9}, {3.697206934789641*^9, 
  3.697206940042308*^9}},
 ExpressionUUID -> "8b93be94-4632-4161-960a-45c59430ace8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"pXf", "\[Rule]", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"pXf", "\[Rule]", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"pXf", "\[Rule]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["wHap", 
         RowBox[{"a", ",", "female"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SubscriptBox["\[Alpha]", "male"]}], ")"}], " ", 
           SubscriptBox["wHap", 
            RowBox[{"a", ",", "female"}]], " ", 
           SubscriptBox["wHap", 
            RowBox[{"a", ",", "male"}]], " ", 
           SubscriptBox["wDip", 
            RowBox[{"a", ",", "a", ",", "female"}]], " ", 
           SubscriptBox["wDip", 
            RowBox[{"a", ",", "A", ",", "male"}]]}], "+", 
          RowBox[{
           SubscriptBox["\[Alpha]", "female"], " ", 
           SubscriptBox["wHap", 
            RowBox[{"A", ",", "female"}]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                SubscriptBox["\[Alpha]", "male"]}], ")"}], " ", 
              SubscriptBox["wHap", 
               RowBox[{"a", ",", "male"}]], " ", 
              SubscriptBox["wDip", 
               RowBox[{"a", ",", "A", ",", "male"}]], " ", 
              SubscriptBox["wDip", 
               RowBox[{"A", ",", "a", ",", "female"}]]}], "+", 
             RowBox[{
              SubscriptBox["wHap", 
               RowBox[{"A", ",", "male"}]], " ", 
              SubscriptBox["wDip", 
               RowBox[{"a", ",", "A", ",", "female"}]], " ", 
              SubscriptBox["wDip", 
               RowBox[{"A", ",", "A", ",", "male"}]]}]}], ")"}]}]}], ")"}]}], 
       ")"}], "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SubscriptBox["\[Alpha]", "male"]}], ")"}], " ", 
         SubsuperscriptBox["wHap", 
          RowBox[{"a", ",", "female"}], "2"], " ", 
         SubscriptBox["wHap", 
          RowBox[{"a", ",", "male"}]], " ", 
         SubscriptBox["wDip", 
          RowBox[{"a", ",", "a", ",", "female"}]], " ", 
         SubscriptBox["wDip", 
          RowBox[{"a", ",", "A", ",", "male"}]]}], "-", 
        RowBox[{
         SubsuperscriptBox["wHap", 
          RowBox[{"A", ",", "female"}], "2"], " ", 
         SubscriptBox["wHap", 
          RowBox[{"A", ",", "male"}]], " ", 
         SubscriptBox["wDip", 
          RowBox[{"A", ",", "A", ",", "female"}]], " ", 
         SubscriptBox["wDip", 
          RowBox[{"A", ",", "A", ",", "male"}]]}], "+", 
        RowBox[{
         SubscriptBox["wHap", 
          RowBox[{"a", ",", "female"}]], " ", 
         SubscriptBox["wHap", 
          RowBox[{"A", ",", "female"}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SubscriptBox["\[Alpha]", "male"]}], ")"}], " ", 
            SubscriptBox["wHap", 
             RowBox[{"a", ",", "male"}]], " ", 
            SubscriptBox["wDip", 
             RowBox[{"a", ",", "A", ",", "male"}]], " ", 
            SubscriptBox["wDip", 
             RowBox[{"A", ",", "a", ",", "female"}]]}], "+", 
           RowBox[{
            SubscriptBox["wHap", 
             RowBox[{"A", ",", "male"}]], " ", 
            SubscriptBox["wDip", 
             RowBox[{"a", ",", "A", ",", "female"}]], " ", 
            SubscriptBox["wDip", 
             RowBox[{"A", ",", "A", ",", "male"}]]}]}], ")"}]}]}], ")"}]}]}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6972061479941998`*^9, 3.697206255014659*^9, {3.6972065989071627`*^9, 
   3.697206653205353*^9}, 3.6972069416145897`*^9, {3.69757173003474*^9, 
   3.697571745750843*^9}, 3.6979037302870197`*^9, 3.697919960089561*^9, 
   3.697989459127844*^9, 3.69843226023761*^9, 3.698498462336337*^9, 
   3.6985863682373857`*^9, 3.698757974729413*^9, 3.699207793072741*^9, 
   3.699216141658825*^9, {3.699795247179853*^9, 3.699795254029015*^9}, 
   3.704224014996604*^9, 3.704482281620525*^9, 3.7069925776992807`*^9, 
   3.708263136118497*^9, 3.70834730815725*^9, 3.7107077402211103`*^9, 
   3.71079214203152*^9, 3.710868214755262*^9, 3.711370671284268*^9, 
   3.711474755227809*^9, 3.711795810253536*^9, 3.712482485288341*^9, 
   3.712490644467885*^9, 3.71249681998556*^9, 3.7125588419063*^9, 
   3.712575669416669*^9, 3.713012165840355*^9, 3.713177649820619*^9, 
   3.715112354269135*^9},
 ExpressionUUID -> "72e20df7-1174-44b7-801a-ab5d1b0254ee"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"pXm", "\[Rule]", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"pXm", "\[Rule]", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"pXm", "\[Rule]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["wDip", 
         RowBox[{"A", ",", "A", ",", "male"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SubscriptBox["\[Alpha]", "male"]}], ")"}], " ", 
           SubscriptBox["wHap", 
            RowBox[{"a", ",", "female"}]], " ", 
           SubscriptBox["wHap", 
            RowBox[{"a", ",", "male"}]], " ", 
           SubscriptBox["wDip", 
            RowBox[{"a", ",", "a", ",", "female"}]], " ", 
           SubscriptBox["wDip", 
            RowBox[{"a", ",", "A", ",", "male"}]]}], "+", 
          RowBox[{
           SubscriptBox["\[Alpha]", "female"], " ", 
           SubscriptBox["wHap", 
            RowBox[{"A", ",", "female"}]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                SubscriptBox["\[Alpha]", "male"]}], ")"}], " ", 
              SubscriptBox["wHap", 
               RowBox[{"a", ",", "male"}]], " ", 
              SubscriptBox["wDip", 
               RowBox[{"a", ",", "A", ",", "male"}]], " ", 
              SubscriptBox["wDip", 
               RowBox[{"A", ",", "a", ",", "female"}]]}], "+", 
             RowBox[{
              SubscriptBox["wHap", 
               RowBox[{"A", ",", "male"}]], " ", 
              SubscriptBox["wDip", 
               RowBox[{"a", ",", "A", ",", "female"}]], " ", 
              SubscriptBox["wDip", 
               RowBox[{"A", ",", "A", ",", "male"}]]}]}], ")"}]}]}], ")"}]}], 
       ")"}], "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SubscriptBox["\[Alpha]", "male"]}], ")"}], " ", 
         SubscriptBox["wHap", 
          RowBox[{"a", ",", "female"}]], " ", 
         SubscriptBox["wDip", 
          RowBox[{"a", ",", "A", ",", "male"}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               SubscriptBox["\[Alpha]", "female"]}], ")"}]}], " ", 
            SubscriptBox["wHap", 
             RowBox[{"A", ",", "male"}]], " ", 
            SubscriptBox["wDip", 
             RowBox[{"a", ",", "A", ",", "female"}]], " ", 
            SubscriptBox["wDip", 
             RowBox[{"A", ",", "A", ",", "male"}]]}], "+", 
           RowBox[{
            SubscriptBox["wHap", 
             RowBox[{"a", ",", "male"}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 SubscriptBox["\[Alpha]", "female"]}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 SubscriptBox["\[Alpha]", "male"]}], ")"}], " ", 
               SubscriptBox["wDip", 
                RowBox[{"a", ",", "A", ",", "male"}]], " ", 
               SubscriptBox["wDip", 
                RowBox[{"A", ",", "a", ",", "female"}]]}], "-", 
              RowBox[{
               SubscriptBox["wDip", 
                RowBox[{"a", ",", "a", ",", "female"}]], " ", 
               SubscriptBox["wDip", 
                RowBox[{"A", ",", "A", ",", "male"}]]}]}], ")"}]}]}], ")"}]}],
         "+", 
        RowBox[{
         SubscriptBox["wHap", 
          RowBox[{"A", ",", "female"}]], " ", 
         SubscriptBox["wDip", 
          RowBox[{"A", ",", "A", ",", "male"}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SubscriptBox["\[Alpha]", "male"]}], ")"}], " ", 
            SubscriptBox["wHap", 
             RowBox[{"A", ",", "male"}]], " ", 
            SubscriptBox["wDip", 
             RowBox[{"a", ",", "A", ",", "male"}]], " ", 
            SubscriptBox["wDip", 
             RowBox[{"A", ",", "A", ",", "female"}]]}], "+", 
           RowBox[{
            SubscriptBox["\[Alpha]", "female"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "2"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 SubscriptBox["\[Alpha]", "male"]}], ")"}], " ", 
               SubscriptBox["wHap", 
                RowBox[{"a", ",", "male"}]], " ", 
               SubscriptBox["wDip", 
                RowBox[{"a", ",", "A", ",", "male"}]], " ", 
               SubscriptBox["wDip", 
                RowBox[{"A", ",", "a", ",", "female"}]]}], "+", 
              RowBox[{
               SubscriptBox["wHap", 
                RowBox[{"A", ",", "male"}]], " ", 
               SubscriptBox["wDip", 
                RowBox[{"a", ",", "A", ",", "female"}]], " ", 
               SubscriptBox["wDip", 
                RowBox[{"A", ",", "A", ",", "male"}]]}]}], ")"}]}]}], 
          ")"}]}]}], ")"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6972061479941998`*^9, 3.697206255014659*^9, {3.6972065989071627`*^9, 
   3.697206653205353*^9}, 3.6972069416145897`*^9, {3.69757173003474*^9, 
   3.697571745750843*^9}, 3.6979037302870197`*^9, 3.697919960089561*^9, 
   3.697989459127844*^9, 3.69843226023761*^9, 3.698498462336337*^9, 
   3.6985863682373857`*^9, 3.698757974729413*^9, 3.699207793072741*^9, 
   3.699216141658825*^9, {3.699795247179853*^9, 3.699795254029015*^9}, 
   3.704224014996604*^9, 3.704482281620525*^9, 3.7069925776992807`*^9, 
   3.708263136118497*^9, 3.70834730815725*^9, 3.7107077402211103`*^9, 
   3.71079214203152*^9, 3.710868214755262*^9, 3.711370671284268*^9, 
   3.711474755227809*^9, 3.711795810253536*^9, 3.712482485288341*^9, 
   3.712490644467885*^9, 3.71249681998556*^9, 3.7125588419063*^9, 
   3.712575669416669*^9, 3.713012165840355*^9, 3.713177649820619*^9, 
   3.715112354375483*^9},
 ExpressionUUID -> "72e20df7-1174-44b7-801a-ab5d1b0254ee"]
}, Open  ]],

Cell["So when A is fixed in the population we have", "Text",
 CellChangeTimes->{{3.6972066949435596`*^9, 3.697206712707244*^9}, 
   3.697206950011156*^9},ExpressionUUID->"56a34fa6-d1cd-4ba9-b117-\
82299d5eaad0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eqr0YAXA", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"solpYmr0A", ",", 
      RowBox[{"solpXfr0A", "[", 
       RowBox[{"[", "2", "]"}], "]"}], ",", 
      RowBox[{"solpXmr0A", "[", 
       RowBox[{"[", "2", "]"}], "]"}], ",", 
      RowBox[{
       RowBox[{"solfreqYmr0", "/.", "solpYmr0A"}], "/.", 
       RowBox[{"solpXfr0A", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], "//", "Simplify"}], "//", 
   "Flatten"}]}]], "Input",
 CellChangeTimes->{{3.6972067253364773`*^9, 3.6972067892388678`*^9}, {
  3.697206872054071*^9, 3.697206879701415*^9}, {3.697206954715187*^9, 
  3.69720697088844*^9}},
 ExpressionUUID -> "9e04d24f-3e0a-4684-bf91-b7c94e1ea260"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"pYm", "\[Rule]", "1"}], ",", 
   RowBox[{"pXf", "\[Rule]", "1"}], ",", 
   RowBox[{"pXm", "\[Rule]", "1"}], ",", 
   RowBox[{"freqYm", "\[Rule]", 
    FractionBox["1", "2"]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.69720678514769*^9, 3.6972067895485907`*^9}, 
   3.697206882399756*^9, 3.69720697222057*^9, {3.697571730147482*^9, 
   3.697571745876028*^9}, 3.697903730405072*^9, 3.697919960214587*^9, 
   3.697989459253504*^9, 3.698432260400612*^9, 3.698498462473693*^9, 
   3.698586368367988*^9, 3.698757974861004*^9, 3.6992077931356583`*^9, 
   3.6992161417947197`*^9, {3.699795247248949*^9, 3.699795254144068*^9}, 
   3.704224015134449*^9, 3.704482281782415*^9, 3.706992577836638*^9, 
   3.708263136249566*^9, 3.708347308295457*^9, 3.710707740351269*^9, 
   3.710792142215*^9, 3.7108682148926783`*^9, 3.711370671408474*^9, 
   3.711474755366969*^9, 3.7117958104185762`*^9, 3.712482485707876*^9, 
   3.7124906447488823`*^9, 3.712496820146442*^9, 3.712558842035721*^9, 
   3.712575669573532*^9, 3.7130121659632063`*^9, 3.7131776499578333`*^9, 
   3.715112354413364*^9},
 ExpressionUUID -> "9ab92c88-a4b4-460e-b91e-ac3789af371c"]
}, Open  ]],

Cell["when A is fixed on the Y and a is fixed on the X we have", "Text",
 CellChangeTimes->{{3.6972068004963303`*^9, 3.6972068158090973`*^9}, {
  3.697206978821589*^9, 
  3.697206980750531*^9}},ExpressionUUID->"bca89282-aec8-46c0-a4cc-\
62f39b7c30cd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eqr0YAXa", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"solpYmr0A", ",", 
      RowBox[{"solpXfr0A", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{"solpXmr0A", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{
       RowBox[{"solfreqYmr0", "/.", "solpYmr0A"}], "/.", 
       RowBox[{"solpXfr0A", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], "//", "Simplify"}], "//", 
   "Flatten"}]}]], "Input",
 CellChangeTimes->{{3.6972068258658857`*^9, 3.697206832390688*^9}, {
  3.697206886537346*^9, 3.697206889476534*^9}, {3.697206983623171*^9, 
  3.697207001134944*^9}},
 ExpressionUUID -> "e3aca232-0676-474e-b982-db939d15b1ae"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"pYm", "\[Rule]", "1"}], ",", 
   RowBox[{"pXf", "\[Rule]", "0"}], ",", 
   RowBox[{"pXm", "\[Rule]", "0"}], ",", 
   RowBox[{"freqYm", "\[Rule]", 
    SubscriptBox["\[Alpha]", "male"]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.697206833054563*^9, 3.6972068900021763`*^9, 3.697207002663004*^9, {
   3.6975717302167273`*^9, 3.697571745893021*^9}, 3.6979037304365053`*^9, 
   3.697919960248464*^9, 3.69798945929355*^9, 3.698432260466516*^9, 
   3.698498462517165*^9, 3.698586368400672*^9, 3.6987579748931847`*^9, 
   3.699207793169903*^9, 3.699216141827446*^9, {3.6997952473157187`*^9, 
   3.6997952541615553`*^9}, 3.704224015168215*^9, 3.7044822818105097`*^9, 
   3.7069925778759613`*^9, 3.70826313628329*^9, 3.708347308345093*^9, 
   3.710707740384327*^9, 3.710792142247558*^9, 3.710868214925603*^9, 
   3.711370671440488*^9, 3.711474755416822*^9, 3.711795810513906*^9, 
   3.712482485771694*^9, 3.7124906448652563`*^9, 3.712496820204534*^9, 
   3.712558842080824*^9, 3.7125756696226797`*^9, 3.713012166005348*^9, 
   3.7131776500080013`*^9, 3.71511235445555*^9},
 ExpressionUUID -> "3cf1509f-3660-4463-b0c5-2e65034d92b8"]
}, Open  ]],

Cell["\<\
and when A is fixed on the Y and the X is polymorphic we have\
\>", "Text",
 CellChangeTimes->{{3.697206841512075*^9, 3.69720685339686*^9}, 
   3.697207009048101*^9},ExpressionUUID->"16869e06-a501-4879-9a83-\
d31463452435"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eqr0YAXAa", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"solpYmr0A", ",", 
      RowBox[{"solpXfr0A", "[", 
       RowBox[{"[", "3", "]"}], "]"}], ",", 
      RowBox[{"solpXmr0A", "[", 
       RowBox[{"[", "3", "]"}], "]"}], ",", 
      RowBox[{
       RowBox[{"solfreqYmr0", "/.", "solpYmr0A"}], "/.", 
       RowBox[{"solpXfr0A", "[", 
        RowBox[{"[", "3", "]"}], "]"}]}]}], "}"}], "//", "Simplify"}], "//", 
   "Flatten"}]}]], "Input",
 CellChangeTimes->{{3.697206859360458*^9, 3.6972068957763243`*^9}, {
  3.697207015133823*^9, 3.6972070262810163`*^9}},
 ExpressionUUID -> "3ce335b0-b2d0-4c2f-8fcd-39c720bf7f07"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"pYm", "\[Rule]", "1"}], ",", 
   RowBox[{"pXf", "\[Rule]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["wHap", 
        RowBox[{"a", ",", "female"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SubscriptBox["\[Alpha]", "male"]}], ")"}], " ", 
          SubscriptBox["wHap", 
           RowBox[{"a", ",", "female"}]], " ", 
          SubscriptBox["wHap", 
           RowBox[{"a", ",", "male"}]], " ", 
          SubscriptBox["wDip", 
           RowBox[{"a", ",", "a", ",", "female"}]], " ", 
          SubscriptBox["wDip", 
           RowBox[{"a", ",", "A", ",", "male"}]]}], "+", 
         RowBox[{
          SubscriptBox["\[Alpha]", "female"], " ", 
          SubscriptBox["wHap", 
           RowBox[{"A", ",", "female"}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               SubscriptBox["\[Alpha]", "male"]}], ")"}], " ", 
             SubscriptBox["wHap", 
              RowBox[{"a", ",", "male"}]], " ", 
             SubscriptBox["wDip", 
              RowBox[{"a", ",", "A", ",", "male"}]], " ", 
             SubscriptBox["wDip", 
              RowBox[{"A", ",", "a", ",", "female"}]]}], "+", 
            RowBox[{
             SubscriptBox["wHap", 
              RowBox[{"A", ",", "male"}]], " ", 
             SubscriptBox["wDip", 
              RowBox[{"a", ",", "A", ",", "female"}]], " ", 
             SubscriptBox["wDip", 
              RowBox[{"A", ",", "A", ",", "male"}]]}]}], ")"}]}]}], ")"}]}], 
      ")"}], "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SubscriptBox["\[Alpha]", "male"]}], ")"}], " ", 
        SubsuperscriptBox["wHap", 
         RowBox[{"a", ",", "female"}], "2"], " ", 
        SubscriptBox["wHap", 
         RowBox[{"a", ",", "male"}]], " ", 
        SubscriptBox["wDip", 
         RowBox[{"a", ",", "a", ",", "female"}]], " ", 
        SubscriptBox["wDip", 
         RowBox[{"a", ",", "A", ",", "male"}]]}], "-", 
       RowBox[{
        SubsuperscriptBox["wHap", 
         RowBox[{"A", ",", "female"}], "2"], " ", 
        SubscriptBox["wHap", 
         RowBox[{"A", ",", "male"}]], " ", 
        SubscriptBox["wDip", 
         RowBox[{"A", ",", "A", ",", "female"}]], " ", 
        SubscriptBox["wDip", 
         RowBox[{"A", ",", "A", ",", "male"}]]}], "+", 
       RowBox[{
        SubscriptBox["wHap", 
         RowBox[{"a", ",", "female"}]], " ", 
        SubscriptBox["wHap", 
         RowBox[{"A", ",", "female"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SubscriptBox["\[Alpha]", "male"]}], ")"}], " ", 
           SubscriptBox["wHap", 
            RowBox[{"a", ",", "male"}]], " ", 
           SubscriptBox["wDip", 
            RowBox[{"a", ",", "A", ",", "male"}]], " ", 
           SubscriptBox["wDip", 
            RowBox[{"A", ",", "a", ",", "female"}]]}], "+", 
          RowBox[{
           SubscriptBox["wHap", 
            RowBox[{"A", ",", "male"}]], " ", 
           SubscriptBox["wDip", 
            RowBox[{"a", ",", "A", ",", "female"}]], " ", 
           SubscriptBox["wDip", 
            RowBox[{"A", ",", "A", ",", "male"}]]}]}], ")"}]}]}], ")"}]}]}], 
   ",", 
   RowBox[{"pXm", "\[Rule]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["wDip", 
        RowBox[{"A", ",", "A", ",", "male"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SubscriptBox["\[Alpha]", "male"]}], ")"}], " ", 
          SubscriptBox["wHap", 
           RowBox[{"a", ",", "female"}]], " ", 
          SubscriptBox["wHap", 
           RowBox[{"a", ",", "male"}]], " ", 
          SubscriptBox["wDip", 
           RowBox[{"a", ",", "a", ",", "female"}]], " ", 
          SubscriptBox["wDip", 
           RowBox[{"a", ",", "A", ",", "male"}]]}], "+", 
         RowBox[{
          SubscriptBox["\[Alpha]", "female"], " ", 
          SubscriptBox["wHap", 
           RowBox[{"A", ",", "female"}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               SubscriptBox["\[Alpha]", "male"]}], ")"}], " ", 
             SubscriptBox["wHap", 
              RowBox[{"a", ",", "male"}]], " ", 
             SubscriptBox["wDip", 
              RowBox[{"a", ",", "A", ",", "male"}]], " ", 
             SubscriptBox["wDip", 
              RowBox[{"A", ",", "a", ",", "female"}]]}], "+", 
            RowBox[{
             SubscriptBox["wHap", 
              RowBox[{"A", ",", "male"}]], " ", 
             SubscriptBox["wDip", 
              RowBox[{"a", ",", "A", ",", "female"}]], " ", 
             SubscriptBox["wDip", 
              RowBox[{"A", ",", "A", ",", "male"}]]}]}], ")"}]}]}], ")"}]}], 
      ")"}], "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SubscriptBox["\[Alpha]", "male"]}], ")"}], " ", 
        SubscriptBox["wHap", 
         RowBox[{"a", ",", "female"}]], " ", 
        SubscriptBox["wDip", 
         RowBox[{"a", ",", "A", ",", "male"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SubscriptBox["\[Alpha]", "female"]}], ")"}]}], " ", 
           SubscriptBox["wHap", 
            RowBox[{"A", ",", "male"}]], " ", 
           SubscriptBox["wDip", 
            RowBox[{"a", ",", "A", ",", "female"}]], " ", 
           SubscriptBox["wDip", 
            RowBox[{"A", ",", "A", ",", "male"}]]}], "+", 
          RowBox[{
           SubscriptBox["wHap", 
            RowBox[{"a", ",", "male"}]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                SubscriptBox["\[Alpha]", "female"]}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                SubscriptBox["\[Alpha]", "male"]}], ")"}], " ", 
              SubscriptBox["wDip", 
               RowBox[{"a", ",", "A", ",", "male"}]], " ", 
              SubscriptBox["wDip", 
               RowBox[{"A", ",", "a", ",", "female"}]]}], "-", 
             RowBox[{
              SubscriptBox["wDip", 
               RowBox[{"a", ",", "a", ",", "female"}]], " ", 
              SubscriptBox["wDip", 
               RowBox[{"A", ",", "A", ",", "male"}]]}]}], ")"}]}]}], ")"}]}], 
       "+", 
       RowBox[{
        SubscriptBox["wHap", 
         RowBox[{"A", ",", "female"}]], " ", 
        SubscriptBox["wDip", 
         RowBox[{"A", ",", "A", ",", "male"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SubscriptBox["\[Alpha]", "male"]}], ")"}], " ", 
           SubscriptBox["wHap", 
            RowBox[{"A", ",", "male"}]], " ", 
           SubscriptBox["wDip", 
            RowBox[{"a", ",", "A", ",", "male"}]], " ", 
           SubscriptBox["wDip", 
            RowBox[{"A", ",", "A", ",", "female"}]]}], "+", 
          RowBox[{
           SubscriptBox["\[Alpha]", "female"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                SubscriptBox["\[Alpha]", "male"]}], ")"}], " ", 
              SubscriptBox["wHap", 
               RowBox[{"a", ",", "male"}]], " ", 
              SubscriptBox["wDip", 
               RowBox[{"a", ",", "A", ",", "male"}]], " ", 
              SubscriptBox["wDip", 
               RowBox[{"A", ",", "a", ",", "female"}]]}], "+", 
             RowBox[{
              SubscriptBox["wHap", 
               RowBox[{"A", ",", "male"}]], " ", 
              SubscriptBox["wDip", 
               RowBox[{"a", ",", "A", ",", "female"}]], " ", 
              SubscriptBox["wDip", 
               RowBox[{"A", ",", "A", ",", "male"}]]}]}], ")"}]}]}], 
         ")"}]}]}], ")"}]}]}], ",", 
   RowBox[{"freqYm", "\[Rule]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"4", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SubscriptBox["\[Alpha]", "female"]}], ")"}], " ", 
        SubsuperscriptBox["\[Alpha]", "male", "2"], " ", 
        SubscriptBox["wHap", 
         RowBox[{"a", ",", "female"}]], " ", 
        SubscriptBox["wHap", 
         RowBox[{"a", ",", "male"}]], " ", 
        SubsuperscriptBox["wDip", 
         RowBox[{"a", ",", "A", ",", "male"}], "2"], " ", 
        SubscriptBox["wDip", 
         RowBox[{"A", ",", "a", ",", "female"}]]}], "+", 
       RowBox[{
        SubscriptBox["wDip", 
         RowBox[{"A", ",", "A", ",", "male"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", 
           SubscriptBox["wHap", 
            RowBox[{"a", ",", "female"}]], " ", 
           SubscriptBox["wHap", 
            RowBox[{"a", ",", "male"}]], " ", 
           SubscriptBox["wDip", 
            RowBox[{"a", ",", "a", ",", "female"}]], " ", 
           SubscriptBox["wDip", 
            RowBox[{"a", ",", "A", ",", "male"}]]}], "+", 
          RowBox[{
           SubscriptBox["\[Alpha]", "female"], " ", 
           SubscriptBox["wHap", 
            RowBox[{"A", ",", "female"}]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", 
              SubscriptBox["wHap", 
               RowBox[{"a", ",", "male"}]], " ", 
              SubscriptBox["wDip", 
               RowBox[{"a", ",", "A", ",", "male"}]], " ", 
              SubscriptBox["wDip", 
               RowBox[{"A", ",", "a", ",", "female"}]]}], "+", 
             RowBox[{
              SubscriptBox["wHap", 
               RowBox[{"A", ",", "male"}]], " ", 
              SubscriptBox["wDip", 
               RowBox[{"a", ",", "A", ",", "female"}]], " ", 
              SubscriptBox["wDip", 
               RowBox[{"A", ",", "A", ",", "male"}]]}]}], ")"}]}]}], ")"}]}], 
       "-", 
       RowBox[{"2", " ", 
        SubscriptBox["\[Alpha]", "male"], " ", 
        SubscriptBox["wDip", 
         RowBox[{"a", ",", "A", ",", "male"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SubscriptBox["wHap", 
            RowBox[{"A", ",", "female"}]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SubscriptBox["\[Alpha]", "female"], " ", 
              SubscriptBox["wHap", 
               RowBox[{"a", ",", "male"}]], " ", 
              SubscriptBox["wDip", 
               RowBox[{"A", ",", "a", ",", "female"}]]}], "+", 
             RowBox[{
              SubscriptBox["wHap", 
               RowBox[{"A", ",", "male"}]], " ", 
              SubscriptBox["wDip", 
               RowBox[{"A", ",", "A", ",", "female"}]]}]}], ")"}], " ", 
           SubscriptBox["wDip", 
            RowBox[{"A", ",", "A", ",", "male"}]]}], "+", 
          RowBox[{
           SubscriptBox["wHap", 
            RowBox[{"a", ",", "female"}]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                SubscriptBox["\[Alpha]", "female"]}], ")"}], " ", 
              SubscriptBox["wHap", 
               RowBox[{"A", ",", "male"}]], " ", 
              SubscriptBox["wDip", 
               RowBox[{"a", ",", "A", ",", "female"}]], " ", 
              SubscriptBox["wDip", 
               RowBox[{"A", ",", "A", ",", "male"}]]}], "+", 
             RowBox[{
              SubscriptBox["wHap", 
               RowBox[{"a", ",", "male"}]], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", 
                   SubscriptBox["\[Alpha]", "female"]}], ")"}], " ", 
                 SubscriptBox["wDip", 
                  RowBox[{"a", ",", "A", ",", "male"}]], " ", 
                 SubscriptBox["wDip", 
                  RowBox[{"A", ",", "a", ",", "female"}]]}], "-", 
                RowBox[{
                 SubscriptBox["wDip", 
                  RowBox[{"a", ",", "a", ",", "female"}]], " ", 
                 SubscriptBox["wDip", 
                  RowBox[{"A", ",", "A", ",", "male"}]]}]}], ")"}]}]}], 
            ")"}]}]}], ")"}]}]}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SubscriptBox["wHap", 
           RowBox[{"a", ",", "female"}]], " ", 
          SubscriptBox["wDip", 
           RowBox[{"a", ",", "A", ",", "male"}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                SubscriptBox["\[Alpha]", "female"]}], ")"}]}], " ", 
             SubscriptBox["wHap", 
              RowBox[{"A", ",", "male"}]], " ", 
             SubscriptBox["wDip", 
              RowBox[{"a", ",", "A", ",", "female"}]], " ", 
             SubscriptBox["wDip", 
              RowBox[{"A", ",", "A", ",", "male"}]]}], "+", 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               SubscriptBox["\[Alpha]", "male"]}], ")"}], " ", 
             SubscriptBox["wHap", 
              RowBox[{"a", ",", "male"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  SubscriptBox["\[Alpha]", "female"]}], ")"}], " ", 
                SubscriptBox["wDip", 
                 RowBox[{"a", ",", "A", ",", "male"}]], " ", 
                SubscriptBox["wDip", 
                 RowBox[{"A", ",", "a", ",", "female"}]]}], "+", 
               RowBox[{
                SubscriptBox["wDip", 
                 RowBox[{"a", ",", "a", ",", "female"}]], " ", 
                SubscriptBox["wDip", 
                 RowBox[{"A", ",", "A", ",", "male"}]]}]}], ")"}]}]}], 
           ")"}]}], "+", 
         RowBox[{
          SubscriptBox["wHap", 
           RowBox[{"A", ",", "female"}]], " ", 
          SubscriptBox["wDip", 
           RowBox[{"A", ",", "A", ",", "male"}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              SubscriptBox["wHap", 
               RowBox[{"A", ",", "male"}]]}], " ", 
             SubscriptBox["wDip", 
              RowBox[{"a", ",", "A", ",", "male"}]], " ", 
             SubscriptBox["wDip", 
              RowBox[{"A", ",", "A", ",", "female"}]]}], "+", 
            RowBox[{
             SubscriptBox["\[Alpha]", "female"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "2"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  SubscriptBox["\[Alpha]", "male"]}], ")"}], " ", 
                SubscriptBox["wHap", 
                 RowBox[{"a", ",", "male"}]], " ", 
                SubscriptBox["wDip", 
                 RowBox[{"a", ",", "A", ",", "male"}]], " ", 
                SubscriptBox["wDip", 
                 RowBox[{"A", ",", "a", ",", "female"}]]}], "+", 
               RowBox[{
                SubscriptBox["wHap", 
                 RowBox[{"A", ",", "male"}]], " ", 
                SubscriptBox["wDip", 
                 RowBox[{"a", ",", "A", ",", "female"}]], " ", 
                SubscriptBox["wDip", 
                 RowBox[{"A", ",", "A", ",", "male"}]]}]}], ")"}]}]}], 
           ")"}]}]}], ")"}]}], ")"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.697206866145499*^9, 3.697206898343444*^9, 3.697207029164082*^9, {
   3.6975717304168997`*^9, 3.6975717460909452`*^9}, 3.697903730612776*^9, 
   3.697919960431778*^9, 3.697989459480816*^9, 3.6984322606412373`*^9, 
   3.6984984626912518`*^9, 3.6985863685824347`*^9, 3.698757975098071*^9, 
   3.699207793350369*^9, 3.699216142000229*^9, {3.699795247568112*^9, 
   3.699795254363742*^9}, 3.704224015351571*^9, 3.7044822821071587`*^9, 
   3.706992578071796*^9, 3.708263136462974*^9, 3.7083473085201*^9, 
   3.7107077405636587`*^9, 3.710792142490367*^9, 3.710868215116646*^9, 
   3.711370671622034*^9, 3.7114747556240273`*^9, 3.711795810724987*^9, 
   3.712482485992145*^9, 3.7124906451559067`*^9, 3.712496820424979*^9, 
   3.712558842291019*^9, 3.712575669840797*^9, 3.713012166203349*^9, 
   3.713177650224478*^9, 3.715112354646311*^9},
 ExpressionUUID -> "b44cf2ac-9853-40e5-985b-cd3144818f31"]
}, Open  ]],

Cell["\<\
Thus we have derived 6 resident equilibria with absolutely no recombination \
between A and M and we next see which are stable.\
\>", "Text",
 CellChangeTimes->{{3.697207044006422*^9, 3.697207070738009*^9}, {
  3.6972074494971046`*^9, 
  3.697207470754466*^9}},ExpressionUUID->"309ed002-c627-4788-8bf1-\
6b4ae905a274"],

Cell[CellGroupData[{

Cell[BoxData[{"eqr0YAXA", "\[IndentingNewLine]", "eqr0YAXAa", "\
\[IndentingNewLine]", "eqr0YAXa", "\[IndentingNewLine]", "eqr0YaXA", "\
\[IndentingNewLine]", "eqr0YaXAa", "\[IndentingNewLine]", "eqr0YaXa"}], \
"Input",
 CellChangeTimes->{{3.697571798676083*^9, 3.697571826753438*^9}},
 ExpressionUUID -> "a33a3a15-807e-455b-b712-38eedb4ba9a7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"pYm", "\[Rule]", "1"}], ",", 
   RowBox[{"pXf", "\[Rule]", "1"}], ",", 
   RowBox[{"pXm", "\[Rule]", "1"}], ",", 
   RowBox[{"freqYm", "\[Rule]", 
    FractionBox["1", "2"]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.697571827835215*^9, 3.697903730645608*^9, 3.697919960477862*^9, 
   3.6979894595113783`*^9, 3.6984322606790857`*^9, 3.698498462831458*^9, 
   3.698586368626812*^9, 3.698757975553547*^9, 3.699207793396591*^9, 
   3.699216142028676*^9, {3.69979524761625*^9, 3.699795254380247*^9}, 
   3.704224015393121*^9, 3.7044822821578836`*^9, 3.706992578113882*^9, 
   3.708263136511095*^9, 3.708347308572279*^9, 3.710707740609787*^9, 
   3.7107921426379223`*^9, 3.7108682152470407`*^9, 3.711370671668351*^9, 
   3.711474755681003*^9, 3.71179581076882*^9, 3.7124824860451612`*^9, 
   3.712490645427648*^9, 3.71249682046506*^9, 3.712558842339952*^9, 
   3.712575669895364*^9, 3.713012166236418*^9, 3.71317765026334*^9, 
   3.715112354691052*^9},
 ExpressionUUID -> "f4fef971-d808-4aab-a215-c54c5b9ec81e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"pYm", "\[Rule]", "1"}], ",", 
   RowBox[{"pXf", "\[Rule]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["wHap", 
        RowBox[{"a", ",", "female"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SubscriptBox["\[Alpha]", "male"]}], ")"}], " ", 
          SubscriptBox["wHap", 
           RowBox[{"a", ",", "female"}]], " ", 
          SubscriptBox["wHap", 
           RowBox[{"a", ",", "male"}]], " ", 
          SubscriptBox["wDip", 
           RowBox[{"a", ",", "a", ",", "female"}]], " ", 
          SubscriptBox["wDip", 
           RowBox[{"a", ",", "A", ",", "male"}]]}], "+", 
         RowBox[{
          SubscriptBox["\[Alpha]", "female"], " ", 
          SubscriptBox["wHap", 
           RowBox[{"A", ",", "female"}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               SubscriptBox["\[Alpha]", "male"]}], ")"}], " ", 
             SubscriptBox["wHap", 
              RowBox[{"a", ",", "male"}]], " ", 
             SubscriptBox["wDip", 
              RowBox[{"a", ",", "A", ",", "male"}]], " ", 
             SubscriptBox["wDip", 
              RowBox[{"A", ",", "a", ",", "female"}]]}], "+", 
            RowBox[{
             SubscriptBox["wHap", 
              RowBox[{"A", ",", "male"}]], " ", 
             SubscriptBox["wDip", 
              RowBox[{"a", ",", "A", ",", "female"}]], " ", 
             SubscriptBox["wDip", 
              RowBox[{"A", ",", "A", ",", "male"}]]}]}], ")"}]}]}], ")"}]}], 
      ")"}], "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SubscriptBox["\[Alpha]", "male"]}], ")"}], " ", 
        SubsuperscriptBox["wHap", 
         RowBox[{"a", ",", "female"}], "2"], " ", 
        SubscriptBox["wHap", 
         RowBox[{"a", ",", "male"}]], " ", 
        SubscriptBox["wDip", 
         RowBox[{"a", ",", "a", ",", "female"}]], " ", 
        SubscriptBox["wDip", 
         RowBox[{"a", ",", "A", ",", "male"}]]}], "-", 
       RowBox[{
        SubsuperscriptBox["wHap", 
         RowBox[{"A", ",", "female"}], "2"], " ", 
        SubscriptBox["wHap", 
         RowBox[{"A", ",", "male"}]], " ", 
        SubscriptBox["wDip", 
         RowBox[{"A", ",", "A", ",", "female"}]], " ", 
        SubscriptBox["wDip", 
         RowBox[{"A", ",", "A", ",", "male"}]]}], "+", 
       RowBox[{
        SubscriptBox["wHap", 
         RowBox[{"a", ",", "female"}]], " ", 
        SubscriptBox["wHap", 
         RowBox[{"A", ",", "female"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SubscriptBox["\[Alpha]", "male"]}], ")"}], " ", 
           SubscriptBox["wHap", 
            RowBox[{"a", ",", "male"}]], " ", 
           SubscriptBox["wDip", 
            RowBox[{"a", ",", "A", ",", "male"}]], " ", 
           SubscriptBox["wDip", 
            RowBox[{"A", ",", "a", ",", "female"}]]}], "+", 
          RowBox[{
           SubscriptBox["wHap", 
            RowBox[{"A", ",", "male"}]], " ", 
           SubscriptBox["wDip", 
            RowBox[{"a", ",", "A", ",", "female"}]], " ", 
           SubscriptBox["wDip", 
            RowBox[{"A", ",", "A", ",", "male"}]]}]}], ")"}]}]}], ")"}]}]}], 
   ",", 
   RowBox[{"pXm", "\[Rule]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["wDip", 
        RowBox[{"A", ",", "A", ",", "male"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SubscriptBox["\[Alpha]", "male"]}], ")"}], " ", 
          SubscriptBox["wHap", 
           RowBox[{"a", ",", "female"}]], " ", 
          SubscriptBox["wHap", 
           RowBox[{"a", ",", "male"}]], " ", 
          SubscriptBox["wDip", 
           RowBox[{"a", ",", "a", ",", "female"}]], " ", 
          SubscriptBox["wDip", 
           RowBox[{"a", ",", "A", ",", "male"}]]}], "+", 
         RowBox[{
          SubscriptBox["\[Alpha]", "female"], " ", 
          SubscriptBox["wHap", 
           RowBox[{"A", ",", "female"}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               SubscriptBox["\[Alpha]", "male"]}], ")"}], " ", 
             SubscriptBox["wHap", 
              RowBox[{"a", ",", "male"}]], " ", 
             SubscriptBox["wDip", 
              RowBox[{"a", ",", "A", ",", "male"}]], " ", 
             SubscriptBox["wDip", 
              RowBox[{"A", ",", "a", ",", "female"}]]}], "+", 
            RowBox[{
             SubscriptBox["wHap", 
              RowBox[{"A", ",", "male"}]], " ", 
             SubscriptBox["wDip", 
              RowBox[{"a", ",", "A", ",", "female"}]], " ", 
             SubscriptBox["wDip", 
              RowBox[{"A", ",", "A", ",", "male"}]]}]}], ")"}]}]}], ")"}]}], 
      ")"}], "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SubscriptBox["\[Alpha]", "male"]}], ")"}], " ", 
        SubscriptBox["wHap", 
         RowBox[{"a", ",", "female"}]], " ", 
        SubscriptBox["wDip", 
         RowBox[{"a", ",", "A", ",", "male"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SubscriptBox["\[Alpha]", "female"]}], ")"}]}], " ", 
           SubscriptBox["wHap", 
            RowBox[{"A", ",", "male"}]], " ", 
           SubscriptBox["wDip", 
            RowBox[{"a", ",", "A", ",", "female"}]], " ", 
           SubscriptBox["wDip", 
            RowBox[{"A", ",", "A", ",", "male"}]]}], "+", 
          RowBox[{
           SubscriptBox["wHap", 
            RowBox[{"a", ",", "male"}]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                SubscriptBox["\[Alpha]", "female"]}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                SubscriptBox["\[Alpha]", "male"]}], ")"}], " ", 
              SubscriptBox["wDip", 
               RowBox[{"a", ",", "A", ",", "male"}]], " ", 
              SubscriptBox["wDip", 
               RowBox[{"A", ",", "a", ",", "female"}]]}], "-", 
             RowBox[{
              SubscriptBox["wDip", 
               RowBox[{"a", ",", "a", ",", "female"}]], " ", 
              SubscriptBox["wDip", 
               RowBox[{"A", ",", "A", ",", "male"}]]}]}], ")"}]}]}], ")"}]}], 
       "+", 
       RowBox[{
        SubscriptBox["wHap", 
         RowBox[{"A", ",", "female"}]], " ", 
        SubscriptBox["wDip", 
         RowBox[{"A", ",", "A", ",", "male"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SubscriptBox["\[Alpha]", "male"]}], ")"}], " ", 
           SubscriptBox["wHap", 
            RowBox[{"A", ",", "male"}]], " ", 
           SubscriptBox["wDip", 
            RowBox[{"a", ",", "A", ",", "male"}]], " ", 
           SubscriptBox["wDip", 
            RowBox[{"A", ",", "A", ",", "female"}]]}], "+", 
          RowBox[{
           SubscriptBox["\[Alpha]", "female"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                SubscriptBox["\[Alpha]", "male"]}], ")"}], " ", 
              SubscriptBox["wHap", 
               RowBox[{"a", ",", "male"}]], " ", 
              SubscriptBox["wDip", 
               RowBox[{"a", ",", "A", ",", "male"}]], " ", 
              SubscriptBox["wDip", 
               RowBox[{"A", ",", "a", ",", "female"}]]}], "+", 
             RowBox[{
              SubscriptBox["wHap", 
               RowBox[{"A", ",", "male"}]], " ", 
              SubscriptBox["wDip", 
               RowBox[{"a", ",", "A", ",", "female"}]], " ", 
              SubscriptBox["wDip", 
               RowBox[{"A", ",", "A", ",", "male"}]]}]}], ")"}]}]}], 
         ")"}]}]}], ")"}]}]}], ",", 
   RowBox[{"freqYm", "\[Rule]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"4", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SubscriptBox["\[Alpha]", "female"]}], ")"}], " ", 
        SubsuperscriptBox["\[Alpha]", "male", "2"], " ", 
        SubscriptBox["wHap", 
         RowBox[{"a", ",", "female"}]], " ", 
        SubscriptBox["wHap", 
         RowBox[{"a", ",", "male"}]], " ", 
        SubsuperscriptBox["wDip", 
         RowBox[{"a", ",", "A", ",", "male"}], "2"], " ", 
        SubscriptBox["wDip", 
         RowBox[{"A", ",", "a", ",", "female"}]]}], "+", 
       RowBox[{
        SubscriptBox["wDip", 
         RowBox[{"A", ",", "A", ",", "male"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", 
           SubscriptBox["wHap", 
            RowBox[{"a", ",", "female"}]], " ", 
           SubscriptBox["wHap", 
            RowBox[{"a", ",", "male"}]], " ", 
           SubscriptBox["wDip", 
            RowBox[{"a", ",", "a", ",", "female"}]], " ", 
           SubscriptBox["wDip", 
            RowBox[{"a", ",", "A", ",", "male"}]]}], "+", 
          RowBox[{
           SubscriptBox["\[Alpha]", "female"], " ", 
           SubscriptBox["wHap", 
            RowBox[{"A", ",", "female"}]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", 
              SubscriptBox["wHap", 
               RowBox[{"a", ",", "male"}]], " ", 
              SubscriptBox["wDip", 
               RowBox[{"a", ",", "A", ",", "male"}]], " ", 
              SubscriptBox["wDip", 
               RowBox[{"A", ",", "a", ",", "female"}]]}], "+", 
             RowBox[{
              SubscriptBox["wHap", 
               RowBox[{"A", ",", "male"}]], " ", 
              SubscriptBox["wDip", 
               RowBox[{"a", ",", "A", ",", "female"}]], " ", 
              SubscriptBox["wDip", 
               RowBox[{"A", ",", "A", ",", "male"}]]}]}], ")"}]}]}], ")"}]}], 
       "-", 
       RowBox[{"2", " ", 
        SubscriptBox["\[Alpha]", "male"], " ", 
        SubscriptBox["wDip", 
         RowBox[{"a", ",", "A", ",", "male"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SubscriptBox["wHap", 
            RowBox[{"A", ",", "female"}]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SubscriptBox["\[Alpha]", "female"], " ", 
              SubscriptBox["wHap", 
               RowBox[{"a", ",", "male"}]], " ", 
              SubscriptBox["wDip", 
               RowBox[{"A", ",", "a", ",", "female"}]]}], "+", 
             RowBox[{
              SubscriptBox["wHap", 
               RowBox[{"A", ",", "male"}]], " ", 
              SubscriptBox["wDip", 
               RowBox[{"A", ",", "A", ",", "female"}]]}]}], ")"}], " ", 
           SubscriptBox["wDip", 
            RowBox[{"A", ",", "A", ",", "male"}]]}], "+", 
          RowBox[{
           SubscriptBox["wHap", 
            RowBox[{"a", ",", "female"}]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                SubscriptBox["\[Alpha]", "female"]}], ")"}], " ", 
              SubscriptBox["wHap", 
               RowBox[{"A", ",", "male"}]], " ", 
              SubscriptBox["wDip", 
               RowBox[{"a", ",", "A", ",", "female"}]], " ", 
              SubscriptBox["wDip", 
               RowBox[{"A", ",", "A", ",", "male"}]]}], "+", 
             RowBox[{
              SubscriptBox["wHap", 
               RowBox[{"a", ",", "male"}]], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", 
                   SubscriptBox["\[Alpha]", "female"]}], ")"}], " ", 
                 SubscriptBox["wDip", 
                  RowBox[{"a", ",", "A", ",", "male"}]], " ", 
                 SubscriptBox["wDip", 
                  RowBox[{"A", ",", "a", ",", "female"}]]}], "-", 
                RowBox[{
                 SubscriptBox["wDip", 
                  RowBox[{"a", ",", "a", ",", "female"}]], " ", 
                 SubscriptBox["wDip", 
                  RowBox[{"A", ",", "A", ",", "male"}]]}]}], ")"}]}]}], 
            ")"}]}]}], ")"}]}]}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SubscriptBox["wHap", 
           RowBox[{"a", ",", "female"}]], " ", 
          SubscriptBox["wDip", 
           RowBox[{"a", ",", "A", ",", "male"}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                SubscriptBox["\[Alpha]", "female"]}], ")"}]}], " ", 
             SubscriptBox["wHap", 
              RowBox[{"A", ",", "male"}]], " ", 
             SubscriptBox["wDip", 
              RowBox[{"a", ",", "A", ",", "female"}]], " ", 
             SubscriptBox["wDip", 
              RowBox[{"A", ",", "A", ",", "male"}]]}], "+", 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               SubscriptBox["\[Alpha]", "male"]}], ")"}], " ", 
             SubscriptBox["wHap", 
              RowBox[{"a", ",", "male"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  SubscriptBox["\[Alpha]", "female"]}], ")"}], " ", 
                SubscriptBox["wDip", 
                 RowBox[{"a", ",", "A", ",", "male"}]], " ", 
                SubscriptBox["wDip", 
                 RowBox[{"A", ",", "a", ",", "female"}]]}], "+", 
               RowBox[{
                SubscriptBox["wDip", 
                 RowBox[{"a", ",", "a", ",", "female"}]], " ", 
                SubscriptBox["wDip", 
                 RowBox[{"A", ",", "A", ",", "male"}]]}]}], ")"}]}]}], 
           ")"}]}], "+", 
         RowBox[{
          SubscriptBox["wHap", 
           RowBox[{"A", ",", "female"}]], " ", 
          SubscriptBox["wDip", 
           RowBox[{"A", ",", "A", ",", "male"}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              SubscriptBox["wHap", 
               RowBox[{"A", ",", "male"}]]}], " ", 
             SubscriptBox["wDip", 
              RowBox[{"a", ",", "A", ",", "male"}]], " ", 
             SubscriptBox["wDip", 
              RowBox[{"A", ",", "A", ",", "female"}]]}], "+", 
            RowBox[{
             SubscriptBox["\[Alpha]", "female"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "2"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  SubscriptBox["\[Alpha]", "male"]}], ")"}], " ", 
                SubscriptBox["wHap", 
                 RowBox[{"a", ",", "male"}]], " ", 
                SubscriptBox["wDip", 
                 RowBox[{"a", ",", "A", ",", "male"}]], " ", 
                SubscriptBox["wDip", 
                 RowBox[{"A", ",", "a", ",", "female"}]]}], "+", 
               RowBox[{
                SubscriptBox["wHap", 
                 RowBox[{"A", ",", "male"}]], " ", 
                SubscriptBox["wDip", 
                 RowBox[{"a", ",", "A", ",", "female"}]], " ", 
                SubscriptBox["wDip", 
                 RowBox[{"A", ",", "A", ",", "male"}]]}]}], ")"}]}]}], 
           ")"}]}]}], ")"}]}], ")"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.697571827835215*^9, 3.697903730645608*^9, 3.697919960477862*^9, 
   3.6979894595113783`*^9, 3.6984322606790857`*^9, 3.698498462831458*^9, 
   3.698586368626812*^9, 3.698757975553547*^9, 3.699207793396591*^9, 
   3.699216142028676*^9, {3.69979524761625*^9, 3.699795254380247*^9}, 
   3.704224015393121*^9, 3.7044822821578836`*^9, 3.706992578113882*^9, 
   3.708263136511095*^9, 3.708347308572279*^9, 3.710707740609787*^9, 
   3.7107921426379223`*^9, 3.7108682152470407`*^9, 3.711370671668351*^9, 
   3.711474755681003*^9, 3.71179581076882*^9, 3.7124824860451612`*^9, 
   3.712490645427648*^9, 3.71249682046506*^9, 3.712558842339952*^9, 
   3.712575669895364*^9, 3.713012166236418*^9, 3.71317765026334*^9, 
   3.7151123546936417`*^9},
 ExpressionUUID -> "f4fef971-d808-4aab-a215-c54c5b9ec81e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"pYm", "\[Rule]", "1"}], ",", 
   RowBox[{"pXf", "\[Rule]", "0"}], ",", 
   RowBox[{"pXm", "\[Rule]", "0"}], ",", 
   RowBox[{"freqYm", "\[Rule]", 
    SubscriptBox["\[Alpha]", "male"]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.697571827835215*^9, 3.697903730645608*^9, 3.697919960477862*^9, 
   3.6979894595113783`*^9, 3.6984322606790857`*^9, 3.698498462831458*^9, 
   3.698586368626812*^9, 3.698757975553547*^9, 3.699207793396591*^9, 
   3.699216142028676*^9, {3.69979524761625*^9, 3.699795254380247*^9}, 
   3.704224015393121*^9, 3.7044822821578836`*^9, 3.706992578113882*^9, 
   3.708263136511095*^9, 3.708347308572279*^9, 3.710707740609787*^9, 
   3.7107921426379223`*^9, 3.7108682152470407`*^9, 3.711370671668351*^9, 
   3.711474755681003*^9, 3.71179581076882*^9, 3.7124824860451612`*^9, 
   3.712490645427648*^9, 3.71249682046506*^9, 3.712558842339952*^9, 
   3.712575669895364*^9, 3.713012166236418*^9, 3.71317765026334*^9, 
   3.7151123546944313`*^9},
 ExpressionUUID -> "f4fef971-d808-4aab-a215-c54c5b9ec81e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"pYm", "\[Rule]", "0"}], ",", 
   RowBox[{"pXf", "\[Rule]", "1"}], ",", 
   RowBox[{"pXm", "\[Rule]", "1"}], ",", 
   RowBox[{"freqYm", "\[Rule]", 
    RowBox[{"1", "-", 
     SubscriptBox["\[Alpha]", "male"]}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.697571827835215*^9, 3.697903730645608*^9, 3.697919960477862*^9, 
   3.6979894595113783`*^9, 3.6984322606790857`*^9, 3.698498462831458*^9, 
   3.698586368626812*^9, 3.698757975553547*^9, 3.699207793396591*^9, 
   3.699216142028676*^9, {3.69979524761625*^9, 3.699795254380247*^9}, 
   3.704224015393121*^9, 3.7044822821578836`*^9, 3.706992578113882*^9, 
   3.708263136511095*^9, 3.708347308572279*^9, 3.710707740609787*^9, 
   3.7107921426379223`*^9, 3.7108682152470407`*^9, 3.711370671668351*^9, 
   3.711474755681003*^9, 3.71179581076882*^9, 3.7124824860451612`*^9, 
   3.712490645427648*^9, 3.71249682046506*^9, 3.712558842339952*^9, 
   3.712575669895364*^9, 3.713012166236418*^9, 3.71317765026334*^9, 
   3.7151123546952057`*^9},
 ExpressionUUID -> "f4fef971-d808-4aab-a215-c54c5b9ec81e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"pYm", "\[Rule]", "0"}], ",", 
   RowBox[{"pXf", "\[Rule]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["wHap", 
        RowBox[{"a", ",", "female"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SubscriptBox["wHap", 
           RowBox[{"a", ",", "female"}]], " ", 
          SubscriptBox["wHap", 
           RowBox[{"a", ",", "male"}]], " ", 
          SubscriptBox["wDip", 
           RowBox[{"a", ",", "a", ",", "female"}]], " ", 
          SubscriptBox["wDip", 
           RowBox[{"a", ",", "a", ",", "male"}]]}], "-", 
         RowBox[{
          SubscriptBox["\[Alpha]", "female"], " ", 
          SubscriptBox["wHap", 
           RowBox[{"A", ",", "female"}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SubscriptBox["wHap", 
              RowBox[{"a", ",", "male"}]], " ", 
             SubscriptBox["wDip", 
              RowBox[{"a", ",", "a", ",", "male"}]], " ", 
             SubscriptBox["wDip", 
              RowBox[{"A", ",", "a", ",", "female"}]]}], "+", 
            RowBox[{"2", " ", 
             SubscriptBox["\[Alpha]", "male"], " ", 
             SubscriptBox["wHap", 
              RowBox[{"A", ",", "male"}]], " ", 
             SubscriptBox["wDip", 
              RowBox[{"a", ",", "A", ",", "female"}]], " ", 
             SubscriptBox["wDip", 
              RowBox[{"A", ",", "a", ",", "male"}]]}]}], ")"}]}]}], ")"}]}], 
      ")"}], "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SubsuperscriptBox["wHap", 
         RowBox[{"a", ",", "female"}], "2"], " ", 
        SubscriptBox["wHap", 
         RowBox[{"a", ",", "male"}]], " ", 
        SubscriptBox["wDip", 
         RowBox[{"a", ",", "a", ",", "female"}]], " ", 
        SubscriptBox["wDip", 
         RowBox[{"a", ",", "a", ",", "male"}]]}], "-", 
       RowBox[{
        SubscriptBox["wHap", 
         RowBox[{"a", ",", "female"}]], " ", 
        SubscriptBox["wHap", 
         RowBox[{"A", ",", "female"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SubscriptBox["wHap", 
            RowBox[{"a", ",", "male"}]], " ", 
           SubscriptBox["wDip", 
            RowBox[{"a", ",", "a", ",", "male"}]], " ", 
           SubscriptBox["wDip", 
            RowBox[{"A", ",", "a", ",", "female"}]]}], "+", 
          RowBox[{"2", " ", 
           SubscriptBox["\[Alpha]", "male"], " ", 
           SubscriptBox["wHap", 
            RowBox[{"A", ",", "male"}]], " ", 
           SubscriptBox["wDip", 
            RowBox[{"a", ",", "A", ",", "female"}]], " ", 
           SubscriptBox["wDip", 
            RowBox[{"A", ",", "a", ",", "male"}]]}]}], ")"}]}], "+", 
       RowBox[{"2", " ", 
        SubscriptBox["\[Alpha]", "male"], " ", 
        SubsuperscriptBox["wHap", 
         RowBox[{"A", ",", "female"}], "2"], " ", 
        SubscriptBox["wHap", 
         RowBox[{"A", ",", "male"}]], " ", 
        SubscriptBox["wDip", 
         RowBox[{"A", ",", "a", ",", "male"}]], " ", 
        SubscriptBox["wDip", 
         RowBox[{"A", ",", "A", ",", "female"}]]}]}], ")"}]}]}], ",", 
   RowBox[{"pXm", "\[Rule]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"2", " ", 
       SubscriptBox["\[Alpha]", "male"], " ", 
       SubscriptBox["wDip", 
        RowBox[{"A", ",", "a", ",", "male"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           SubscriptBox["wHap", 
            RowBox[{"a", ",", "female"}]]}], " ", 
          SubscriptBox["wHap", 
           RowBox[{"a", ",", "male"}]], " ", 
          SubscriptBox["wDip", 
           RowBox[{"a", ",", "a", ",", "female"}]], " ", 
          SubscriptBox["wDip", 
           RowBox[{"a", ",", "a", ",", "male"}]]}], "+", 
         RowBox[{
          SubscriptBox["\[Alpha]", "female"], " ", 
          SubscriptBox["wHap", 
           RowBox[{"A", ",", "female"}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SubscriptBox["wHap", 
              RowBox[{"a", ",", "male"}]], " ", 
             SubscriptBox["wDip", 
              RowBox[{"a", ",", "a", ",", "male"}]], " ", 
             SubscriptBox["wDip", 
              RowBox[{"A", ",", "a", ",", "female"}]]}], "+", 
            RowBox[{"2", " ", 
             SubscriptBox["\[Alpha]", "male"], " ", 
             SubscriptBox["wHap", 
              RowBox[{"A", ",", "male"}]], " ", 
             SubscriptBox["wDip", 
              RowBox[{"a", ",", "A", ",", "female"}]], " ", 
             SubscriptBox["wDip", 
              RowBox[{"A", ",", "a", ",", "male"}]]}]}], ")"}]}]}], ")"}]}], 
      ")"}], "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SubscriptBox["wHap", 
         RowBox[{"a", ",", "female"}]], " ", 
        SubscriptBox["wDip", 
         RowBox[{"a", ",", "a", ",", "male"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SubscriptBox["\[Alpha]", "female"]}], ")"}], " ", 
           SubscriptBox["\[Alpha]", "male"], " ", 
           SubscriptBox["wHap", 
            RowBox[{"A", ",", "male"}]], " ", 
           SubscriptBox["wDip", 
            RowBox[{"a", ",", "A", ",", "female"}]], " ", 
           SubscriptBox["wDip", 
            RowBox[{"A", ",", "a", ",", "male"}]]}], "+", 
          RowBox[{
           SubscriptBox["wHap", 
            RowBox[{"a", ",", "male"}]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 SubscriptBox["\[Alpha]", "female"]}], ")"}]}], " ", 
              SubscriptBox["wDip", 
               RowBox[{"a", ",", "a", ",", "male"}]], " ", 
              SubscriptBox["wDip", 
               RowBox[{"A", ",", "a", ",", "female"}]]}], "-", 
             RowBox[{"2", " ", 
              SubscriptBox["\[Alpha]", "male"], " ", 
              SubscriptBox["wDip", 
               RowBox[{"a", ",", "a", ",", "female"}]], " ", 
              SubscriptBox["wDip", 
               RowBox[{"A", ",", "a", ",", "male"}]]}]}], ")"}]}]}], ")"}]}], 
       "+", 
       RowBox[{"2", " ", 
        SubscriptBox["\[Alpha]", "male"], " ", 
        SubscriptBox["wHap", 
         RowBox[{"A", ",", "female"}]], " ", 
        SubscriptBox["wDip", 
         RowBox[{"A", ",", "a", ",", "male"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[Alpha]", "female"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SubscriptBox["wHap", 
               RowBox[{"a", ",", "male"}]], " ", 
              SubscriptBox["wDip", 
               RowBox[{"a", ",", "a", ",", "male"}]], " ", 
              SubscriptBox["wDip", 
               RowBox[{"A", ",", "a", ",", "female"}]]}], "+", 
             RowBox[{"2", " ", 
              SubscriptBox["\[Alpha]", "male"], " ", 
              SubscriptBox["wHap", 
               RowBox[{"A", ",", "male"}]], " ", 
              SubscriptBox["wDip", 
               RowBox[{"a", ",", "A", ",", "female"}]], " ", 
              SubscriptBox["wDip", 
               RowBox[{"A", ",", "a", ",", "male"}]]}]}], ")"}]}], "-", 
          RowBox[{
           SubscriptBox["wHap", 
            RowBox[{"A", ",", "male"}]], " ", 
           SubscriptBox["wDip", 
            RowBox[{"a", ",", "a", ",", "male"}]], " ", 
           SubscriptBox["wDip", 
            RowBox[{"A", ",", "A", ",", "female"}]]}]}], ")"}]}]}], ")"}]}]}],
    ",", 
   RowBox[{"freqYm", "\[Rule]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SubscriptBox["wHap", 
         RowBox[{"a", ",", "female"}]], " ", 
        SubscriptBox["wDip", 
         RowBox[{"a", ",", "a", ",", "male"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SubscriptBox["\[Alpha]", "female"]}], ")"}], " ", 
           SubscriptBox["\[Alpha]", "male"], " ", 
           SubscriptBox["wHap", 
            RowBox[{"A", ",", "male"}]], " ", 
           SubscriptBox["wDip", 
            RowBox[{"a", ",", "A", ",", "female"}]], " ", 
           SubscriptBox["wDip", 
            RowBox[{"A", ",", "a", ",", "male"}]]}], "+", 
          RowBox[{
           SubscriptBox["wHap", 
            RowBox[{"a", ",", "male"}]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                SubscriptBox["\[Alpha]", "female"]}], ")"}], " ", 
              SubscriptBox["wDip", 
               RowBox[{"a", ",", "a", ",", "male"}]], " ", 
              SubscriptBox["wDip", 
               RowBox[{"A", ",", "a", ",", "female"}]]}], "-", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                SubscriptBox["\[Alpha]", "male"]}], ")"}], " ", 
              SubscriptBox["wDip", 
               RowBox[{"a", ",", "a", ",", "female"}]], " ", 
              SubscriptBox["wDip", 
               RowBox[{"A", ",", "a", ",", "male"}]]}]}], ")"}]}]}], ")"}]}], 
       "+", 
       RowBox[{"2", " ", 
        SubscriptBox["wHap", 
         RowBox[{"A", ",", "female"}]], " ", 
        SubscriptBox["wDip", 
         RowBox[{"A", ",", "a", ",", "male"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[Alpha]", "female"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SubscriptBox["\[Alpha]", "male"]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SubscriptBox["wHap", 
               RowBox[{"a", ",", "male"}]], " ", 
              SubscriptBox["wDip", 
               RowBox[{"a", ",", "a", ",", "male"}]], " ", 
              SubscriptBox["wDip", 
               RowBox[{"A", ",", "a", ",", "female"}]]}], "+", 
             RowBox[{"2", " ", 
              SubscriptBox["\[Alpha]", "male"], " ", 
              SubscriptBox["wHap", 
               RowBox[{"A", ",", "male"}]], " ", 
              SubscriptBox["wDip", 
               RowBox[{"a", ",", "A", ",", "female"}]], " ", 
              SubscriptBox["wDip", 
               RowBox[{"A", ",", "a", ",", "male"}]]}]}], ")"}]}], "+", 
          RowBox[{
           SubscriptBox["\[Alpha]", "male"], " ", 
           SubscriptBox["wHap", 
            RowBox[{"A", ",", "male"}]], " ", 
           SubscriptBox["wDip", 
            RowBox[{"a", ",", "a", ",", "male"}]], " ", 
           SubscriptBox["wDip", 
            RowBox[{"A", ",", "A", ",", "female"}]]}]}], ")"}]}]}], ")"}], 
     "/", 
     RowBox[{"(", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SubscriptBox["wHap", 
           RowBox[{"a", ",", "female"}]], " ", 
          SubscriptBox["wDip", 
           RowBox[{"a", ",", "a", ",", "male"}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               SubscriptBox["\[Alpha]", "female"]}], ")"}], " ", 
             SubscriptBox["\[Alpha]", "male"], " ", 
             SubscriptBox["wHap", 
              RowBox[{"A", ",", "male"}]], " ", 
             SubscriptBox["wDip", 
              RowBox[{"a", ",", "A", ",", "female"}]], " ", 
             SubscriptBox["wDip", 
              RowBox[{"A", ",", "a", ",", "male"}]]}], "+", 
            RowBox[{
             SubscriptBox["wHap", 
              RowBox[{"a", ",", "male"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  SubscriptBox["\[Alpha]", "female"]}], ")"}], " ", 
                SubscriptBox["wDip", 
                 RowBox[{"a", ",", "a", ",", "male"}]], " ", 
                SubscriptBox["wDip", 
                 RowBox[{"A", ",", "a", ",", "female"}]]}], "+", 
               RowBox[{
                SubscriptBox["wDip", 
                 RowBox[{"a", ",", "a", ",", "female"}]], " ", 
                SubscriptBox["wDip", 
                 RowBox[{"A", ",", "a", ",", "male"}]]}]}], ")"}]}]}], 
           ")"}]}], "-", 
         RowBox[{
          SubscriptBox["wHap", 
           RowBox[{"A", ",", "female"}]], " ", 
          SubscriptBox["wDip", 
           RowBox[{"A", ",", "a", ",", "male"}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SubscriptBox["\[Alpha]", "female"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SubscriptBox["wHap", 
                 RowBox[{"a", ",", "male"}]], " ", 
                SubscriptBox["wDip", 
                 RowBox[{"a", ",", "a", ",", "male"}]], " ", 
                SubscriptBox["wDip", 
                 RowBox[{"A", ",", "a", ",", "female"}]]}], "+", 
               RowBox[{"2", " ", 
                SubscriptBox["\[Alpha]", "male"], " ", 
                SubscriptBox["wHap", 
                 RowBox[{"A", ",", "male"}]], " ", 
                SubscriptBox["wDip", 
                 RowBox[{"a", ",", "A", ",", "female"}]], " ", 
                SubscriptBox["wDip", 
                 RowBox[{"A", ",", "a", ",", "male"}]]}]}], ")"}]}], "-", 
            RowBox[{"2", " ", 
             SubscriptBox["\[Alpha]", "male"], " ", 
             SubscriptBox["wHap", 
              RowBox[{"A", ",", "male"}]], " ", 
             SubscriptBox["wDip", 
              RowBox[{"a", ",", "a", ",", "male"}]], " ", 
             SubscriptBox["wDip", 
              RowBox[{"A", ",", "A", ",", "female"}]]}]}], ")"}]}]}], ")"}]}],
       ")"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.697571827835215*^9, 3.697903730645608*^9, 3.697919960477862*^9, 
   3.6979894595113783`*^9, 3.6984322606790857`*^9, 3.698498462831458*^9, 
   3.698586368626812*^9, 3.698757975553547*^9, 3.699207793396591*^9, 
   3.699216142028676*^9, {3.69979524761625*^9, 3.699795254380247*^9}, 
   3.704224015393121*^9, 3.7044822821578836`*^9, 3.706992578113882*^9, 
   3.708263136511095*^9, 3.708347308572279*^9, 3.710707740609787*^9, 
   3.7107921426379223`*^9, 3.7108682152470407`*^9, 3.711370671668351*^9, 
   3.711474755681003*^9, 3.71179581076882*^9, 3.7124824860451612`*^9, 
   3.712490645427648*^9, 3.71249682046506*^9, 3.712558842339952*^9, 
   3.712575669895364*^9, 3.713012166236418*^9, 3.71317765026334*^9, 
   3.715112354697213*^9},
 ExpressionUUID -> "f4fef971-d808-4aab-a215-c54c5b9ec81e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"pYm", "\[Rule]", "0"}], ",", 
   RowBox[{"pXf", "\[Rule]", "0"}], ",", 
   RowBox[{"pXm", "\[Rule]", "0"}], ",", 
   RowBox[{"freqYm", "\[Rule]", 
    FractionBox["1", "2"]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.697571827835215*^9, 3.697903730645608*^9, 3.697919960477862*^9, 
   3.6979894595113783`*^9, 3.6984322606790857`*^9, 3.698498462831458*^9, 
   3.698586368626812*^9, 3.698757975553547*^9, 3.699207793396591*^9, 
   3.699216142028676*^9, {3.69979524761625*^9, 3.699795254380247*^9}, 
   3.704224015393121*^9, 3.7044822821578836`*^9, 3.706992578113882*^9, 
   3.708263136511095*^9, 3.708347308572279*^9, 3.710707740609787*^9, 
   3.7107921426379223`*^9, 3.7108682152470407`*^9, 3.711370671668351*^9, 
   3.711474755681003*^9, 3.71179581076882*^9, 3.7124824860451612`*^9, 
   3.712490645427648*^9, 3.71249682046506*^9, 3.712558842339952*^9, 
   3.712575669895364*^9, 3.713012166236418*^9, 3.71317765026334*^9, 
   3.715112354698015*^9},
 ExpressionUUID -> "f4fef971-d808-4aab-a215-c54c5b9ec81e"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Resident stability (tight linkage between X and A; r=0) [ENTER]\
\>", "Section",
 CellChangeTimes->{{3.697207401674602*^9, 3.6972074174574757`*^9}, {
   3.697913097651594*^9, 3.6979131018357067`*^9}, 
   3.7083473188073597`*^9},ExpressionUUID->"458e7c50-1659-4c11-a629-\
ab4636347aea"],

Cell[CellGroupData[{

Cell["General", "Subsection",
 CellChangeTimes->{{3.6979125066699467`*^9, 
  3.697912526884387*^9}},ExpressionUUID->"134aad25-ecf5-47aa-90b5-\
e62a399f29aa"],

Cell["\<\
Here we use linear stability analysis to examine when the resident \
equilibrium (i.e., no mutants) derived above is stable.\
\>", "Text",
 CellChangeTimes->{{3.676720746264163*^9, 
  3.676720791609645*^9}},ExpressionUUID->"812b7d17-4151-4a5e-8453-\
901749f7b154"],

Cell["\<\
The Jacobian for the residents is (this takes a couple minutes)\
\>", "Text",
 CellChangeTimes->{{3.676720780698885*^9, 3.676720799664399*^9}, {
  3.678764310691422*^9, 
  3.6787643161574373`*^9}},ExpressionUUID->"9b6188b3-edbb-49dd-bae9-\
a756373b797e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"eqs", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Join", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              SubscriptBox["fHapNext", 
               RowBox[{"X", ",", "y", ",", "M", ",", "female"}]], ",", 
              RowBox[{"{", 
               RowBox[{"y", ",", 
                RowBox[{"{", 
                 RowBox[{"A", ",", "a"}], "}"}]}], "}"}]}], "]"}], ",", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               SubscriptBox["fHapNext", 
                RowBox[{"x", ",", "y", ",", "M", ",", "male"}]], ",", 
               RowBox[{"{", 
                RowBox[{"x", ",", 
                 RowBox[{"{", 
                  RowBox[{"X", ",", "Y"}], "}"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"y", ",", 
                 RowBox[{"{", 
                  RowBox[{"A", ",", "a"}], "}"}]}], "}"}]}], "]"}], "//", 
             "Flatten"}]}], "]"}], "/.", "sumsex"}], "/.", "invXY"}], "/.", 
        "pseg0"}], "/.", "pseg1"}], "/.", "pseg2"}], "/.", "pseg3"}], "/.", 
    "pseg4"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"matIntFull", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{"eqs", ",", 
          SubscriptBox["fHap", 
           RowBox[{"X", ",", "A", ",", "M", ",", "female"}]]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"D", "[", 
         RowBox[{"eqs", ",", 
          SubscriptBox["fHap", 
           RowBox[{"X", ",", "a", ",", "M", ",", "female"}]]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"D", "[", 
         RowBox[{"eqs", ",", 
          SubscriptBox["fHap", 
           RowBox[{"X", ",", "A", ",", "M", ",", "male"}]]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"D", "[", 
         RowBox[{"eqs", ",", 
          SubscriptBox["fHap", 
           RowBox[{"X", ",", "a", ",", "M", ",", "male"}]]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"D", "[", 
         RowBox[{"eqs", ",", 
          SubscriptBox["fHap", 
           RowBox[{"Y", ",", "A", ",", "M", ",", "male"}]]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"D", "[", 
         RowBox[{"eqs", ",", 
          SubscriptBox["fHap", 
           RowBox[{"Y", ",", "a", ",", "M", ",", "male"}]]}], "]"}]}], 
       "\[IndentingNewLine]", "}"}], "]"}], "/.", "subequil"}], "//", 
    "Factor"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.681891260839473*^9, 3.68189141173361*^9}},
 ExpressionUUID -> "4fc4feb8-0e83-4119-9ea0-29062cacd932"],

Cell["From this we can derive the characteristic polynomial;", "Text",
 CellChangeTimes->{{3.67672101846877*^9, 3.676721031016712*^9}, {
   3.69757193449787*^9, 3.697571936272892*^9}, 
   3.697572276295038*^9},ExpressionUUID->"8b04a6f3-5ff9-4185-a141-\
528a192482c6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"charpolyIntFull", "=", 
   RowBox[{"Det", "[", 
    RowBox[{"matIntFull", "-", 
     RowBox[{
      RowBox[{"IdentityMatrix", "[", "6", "]"}], "*", "\[Lambda]"}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.675790963788534*^9, 3.6757909758461533`*^9}, {
   3.678763074902429*^9, 3.678763075065971*^9}, {3.6787641836824837`*^9, 
   3.678764184155055*^9}, {3.697571962517178*^9, 3.697571963467074*^9}, 
   3.697572269449326*^9},
 ExpressionUUID -> "76fabcd6-7919-4eca-84b9-6ba6eb6a6baf"],

Cell["Some useful assumptions", "Text",
 CellChangeTimes->{{3.69790430612661*^9, 
  3.69790431013349*^9}},ExpressionUUID->"cff0af7f-7c8d-42ce-8300-\
0c1a5113d9ee"],

Cell[BoxData[
 RowBox[{
  RowBox[{"posassumps", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"0", "<", 
         SubscriptBox["\[Alpha]", "sex"], "<", "1"}], ",", 
        RowBox[{"{", 
         RowBox[{"sex", ",", 
          RowBox[{"{", 
           RowBox[{"male", ",", "female"}], "}"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         SubscriptBox["wDip", 
          RowBox[{"x", ",", "y", ",", "sex"}]], ">", "0"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", 
          RowBox[{"{", 
           RowBox[{"A", ",", "a"}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"y", ",", 
          RowBox[{"{", 
           RowBox[{"A", ",", "a"}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"sex", ",", 
          RowBox[{"{", 
           RowBox[{"male", ",", "female"}], "}"}]}], "}"}]}], "]"}], ",", ",", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         SubscriptBox["wHap", 
          RowBox[{"y", ",", "sex"}]], ">", "0"}], ",", 
        RowBox[{"{", 
         RowBox[{"y", ",", 
          RowBox[{"{", 
           RowBox[{"A", ",", "a"}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"sex", ",", 
          RowBox[{"{", 
           RowBox[{"male", ",", "female"}], "}"}]}], "}"}]}], "]"}]}], "}"}], 
    "//", "Flatten"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.697904314240715*^9, 3.69790440506732*^9}, {
  3.6979044751677723`*^9, 3.69790450949662*^9}},
 ExpressionUUID -> "65d8cdfb-6cbb-4587-b467-e5064b49c006"]
}, Closed]],

Cell[CellGroupData[{

Cell["Equilibrium YA XA (blue)", "Subsection",
 CellChangeTimes->{{3.69757199571738*^9, 3.697571996963984*^9}, {
  3.697572122592929*^9, 3.697572131145567*^9}, {3.697572372532072*^9, 
  3.69757237401164*^9}, {3.697904158407737*^9, 3.697904166096313*^9}, {
  3.697913105387455*^9, 3.697913105547804*^9}, {3.6979148663474007`*^9, 
  3.6979148667955723`*^9}},ExpressionUUID->"c66b8787-0e6d-4226-9f57-\
cd4b138e8a68"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"YAXAEigs", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{"0", "==", 
       RowBox[{"Normal", "[", 
        RowBox[{"Series", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"charpolyIntFull", "/.", "weakrecAX"}], "/.", "eqr0YAXA"}],
           ",", 
          RowBox[{"{", 
           RowBox[{"\[Epsilon]", ",", "0", ",", "0"}], "}"}]}], "]"}], 
        "]"}]}], ",", "\[Lambda]"}], "]"}], ",", "posassumps"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.697572286450013*^9, 3.697572334738625*^9}, 
   3.697904168841589*^9, {3.697904489702734*^9, 3.69790449594433*^9}, {
   3.6979054265589037`*^9, 3.697905429972946*^9}},
 ExpressionUUID -> "c3cecf52-d58a-4f23-8c9d-a41d82e47882"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Lambda]", "\[Rule]", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Lambda]", "\[Rule]", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Lambda]", "\[Rule]", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Lambda]", "\[Rule]", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SubscriptBox["\[Alpha]", "male"]}], ")"}], " ", 
        SubscriptBox["wHap", 
         RowBox[{"a", ",", "male"}]], " ", 
        SubscriptBox["wDip", 
         RowBox[{"A", ",", "a", ",", "male"}]]}], 
       RowBox[{
        SubscriptBox["wHap", 
         RowBox[{"A", ",", "male"}]], " ", 
        SubscriptBox["wDip", 
         RowBox[{"A", ",", "A", ",", "male"}]]}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Lambda]", "\[Rule]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SubscriptBox["\[Alpha]", "female"]}], ")"}]}], " ", 
         SubscriptBox["wHap", 
          RowBox[{"a", ",", "female"}]], " ", 
         SubscriptBox["wDip", 
          RowBox[{"a", ",", "A", ",", "female"}]], " ", 
         SqrtBox[
          RowBox[{
           SubscriptBox["wHap", 
            RowBox[{"A", ",", "male"}]], " ", 
           SubscriptBox["wDip", 
            RowBox[{"A", ",", "A", ",", "male"}]]}]]}], "-", 
        RowBox[{
         SqrtBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SubscriptBox["\[Alpha]", "female"]}], ")"}], " ", 
           SubscriptBox["wHap", 
            RowBox[{"a", ",", "female"}]]}]], " ", 
         SqrtBox[
          RowBox[{
           RowBox[{"8", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SubscriptBox["\[Alpha]", "male"]}], ")"}], " ", 
            SubscriptBox["wHap", 
             RowBox[{"a", ",", "male"}]], " ", 
            SubscriptBox["wHap", 
             RowBox[{"A", ",", "female"}]], " ", 
            SubscriptBox["wDip", 
             RowBox[{"a", ",", "A", ",", "male"}]], " ", 
            SubscriptBox["wDip", 
             RowBox[{"A", ",", "a", ",", "female"}]], " ", 
            SubscriptBox["wDip", 
             RowBox[{"A", ",", "A", ",", "female"}]]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SubscriptBox["\[Alpha]", "female"]}], ")"}], " ", 
            SubscriptBox["wHap", 
             RowBox[{"a", ",", "female"}]], " ", 
            SubscriptBox["wHap", 
             RowBox[{"A", ",", "male"}]], " ", 
            SubsuperscriptBox["wDip", 
             RowBox[{"a", ",", "A", ",", "female"}], "2"], " ", 
            SubscriptBox["wDip", 
             RowBox[{"A", ",", "A", ",", "male"}]]}]}]]}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"2", " ", 
        SubscriptBox["wHap", 
         RowBox[{"A", ",", "female"}]], " ", 
        SubscriptBox["wDip", 
         RowBox[{"A", ",", "A", ",", "female"}]], " ", 
        SqrtBox[
         RowBox[{
          SubscriptBox["wHap", 
           RowBox[{"A", ",", "male"}]], " ", 
          SubscriptBox["wDip", 
           RowBox[{"A", ",", "A", ",", "male"}]]}]]}], ")"}]}]}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"\[Lambda]", "\[Rule]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SubscriptBox["\[Alpha]", "female"]}], ")"}]}], " ", 
         SubscriptBox["wHap", 
          RowBox[{"a", ",", "female"}]], " ", 
         SubscriptBox["wDip", 
          RowBox[{"a", ",", "A", ",", "female"}]], " ", 
         SqrtBox[
          RowBox[{
           SubscriptBox["wHap", 
            RowBox[{"A", ",", "male"}]], " ", 
           SubscriptBox["wDip", 
            RowBox[{"A", ",", "A", ",", "male"}]]}]]}], "+", 
        RowBox[{
         SqrtBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SubscriptBox["\[Alpha]", "female"]}], ")"}], " ", 
           SubscriptBox["wHap", 
            RowBox[{"a", ",", "female"}]]}]], " ", 
         SqrtBox[
          RowBox[{
           RowBox[{"8", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SubscriptBox["\[Alpha]", "male"]}], ")"}], " ", 
            SubscriptBox["wHap", 
             RowBox[{"a", ",", "male"}]], " ", 
            SubscriptBox["wHap", 
             RowBox[{"A", ",", "female"}]], " ", 
            SubscriptBox["wDip", 
             RowBox[{"a", ",", "A", ",", "male"}]], " ", 
            SubscriptBox["wDip", 
             RowBox[{"A", ",", "a", ",", "female"}]], " ", 
            SubscriptBox["wDip", 
             RowBox[{"A", ",", "A", ",", "female"}]]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SubscriptBox["\[Alpha]", "female"]}], ")"}], " ", 
            SubscriptBox["wHap", 
             RowBox[{"a", ",", "female"}]], " ", 
            SubscriptBox["wHap", 
             RowBox[{"A", ",", "male"}]], " ", 
            SubsuperscriptBox["wDip", 
             RowBox[{"a", ",", "A", ",", "female"}], "2"], " ", 
            SubscriptBox["wDip", 
             RowBox[{"A", ",", "A", ",", "male"}]]}]}]]}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"2", " ", 
        SubscriptBox["wHap", 
         RowBox[{"A", ",", "female"}]], " ", 
        SubscriptBox["wDip", 
         RowBox[{"A", ",", "A", ",", "female"}]], " ", 
        SqrtBox[
         RowBox[{
          SubscriptBox["wHap", 
           RowBox[{"A", ",", "male"}]], " ", 
          SubscriptBox["wDip", 
           RowBox[{"A", ",", "A", ",", "male"}]]}]]}], ")"}]}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.697572307355995*^9, 3.6975723353072147`*^9}, 
   3.697903932577951*^9, 3.697904169854621*^9, {3.6979044968632603`*^9, 
   3.697904517268406*^9}, 3.697905432660277*^9, 3.697914463376966*^9, 
   3.6979199966496363`*^9, 3.6979894944581547`*^9, 3.6984322963138447`*^9, 
   3.698499126161169*^9, 3.698586402480459*^9, 3.698758016388514*^9, 
   3.698758168929591*^9, 3.699207826587036*^9, 3.704224064561638*^9, 
   3.704482326036893*^9, 3.7069926115233*^9, 3.7082631695921383`*^9, 
   3.708347341445003*^9, 3.710707774795619*^9, 3.710792180301609*^9, 
   3.710868250883472*^9, 3.71137070443085*^9, 3.711474798079204*^9, 
   3.711795854960793*^9, 3.712482529678092*^9, 3.712490688492429*^9, 
   3.712496864026538*^9, 3.7125588869457912`*^9, 3.7125757132455587`*^9, 
   3.713012211203135*^9, 3.713177694232497*^9, 3.715112387907384*^9},
 ExpressionUUID -> "aea60322-2391-43f3-924c-8944ceee3b5e"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Equilibrium Ya Xa (red)", "Subsection",
 CellChangeTimes->{{3.69757199571738*^9, 3.697571996963984*^9}, {
  3.697572122592929*^9, 3.697572131145567*^9}, {3.697572372532072*^9, 
  3.69757237401164*^9}, {3.697904158407737*^9, 3.697904183872538*^9}, {
  3.697913107083908*^9, 3.6979131072520323`*^9}, {3.69791486948376*^9, 
  3.697914871091919*^9}},ExpressionUUID->"7a64bf96-db6a-4db5-8add-\
d15becc2c0ac"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"YaXaEigs", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{"0", "==", 
       RowBox[{"Normal", "[", 
        RowBox[{"Series", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"charpolyIntFull", "/.", "weakrecAX"}], "/.", "eqr0YaXa"}],
           ",", 
          RowBox[{"{", 
           RowBox[{"\[Epsilon]", ",", "0", ",", "0"}], "}"}]}], "]"}], 
        "]"}]}], ",", "\[Lambda]"}], "]"}], ",", "posassumps"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.697572286450013*^9, 3.697572334738625*^9}, {
   3.697904168841589*^9, 3.697904301280487*^9}, 3.697904397277458*^9, {
   3.6979054541514683`*^9, 3.6979054593011427`*^9}},
 ExpressionUUID -> "8aa30ba1-9221-4432-8eee-2996dcb0f509"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Lambda]", "\[Rule]", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Lambda]", "\[Rule]", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Lambda]", "\[Rule]", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Lambda]", "\[Rule]", 
     FractionBox[
      RowBox[{"2", " ", 
       SubscriptBox["\[Alpha]", "male"], " ", 
       SubscriptBox["wHap", 
        RowBox[{"A", ",", "male"}]], " ", 
       SubscriptBox["wDip", 
        RowBox[{"a", ",", "A", ",", "male"}]]}], 
      RowBox[{
       SubscriptBox["wHap", 
        RowBox[{"a", ",", "male"}]], " ", 
       SubscriptBox["wDip", 
        RowBox[{"a", ",", "a", ",", "male"}]]}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Lambda]", "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{
        SubscriptBox["\[Alpha]", "female"], " ", 
        SubscriptBox["wHap", 
         RowBox[{"A", ",", "female"}]], " ", 
        SubscriptBox["wDip", 
         RowBox[{"A", ",", "a", ",", "female"}]]}], "-", 
       SqrtBox[
        RowBox[{
         SubscriptBox["\[Alpha]", "female"], " ", 
         SubscriptBox["wHap", 
          RowBox[{"A", ",", "female"}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SubscriptBox["\[Alpha]", "female"], " ", 
            SubscriptBox["wHap", 
             RowBox[{"A", ",", "female"}]], " ", 
            SubsuperscriptBox["wDip", 
             RowBox[{"A", ",", "a", ",", "female"}], "2"]}], "+", 
           FractionBox[
            RowBox[{"8", " ", 
             SubscriptBox["\[Alpha]", "male"], " ", 
             SubscriptBox["wHap", 
              RowBox[{"a", ",", "female"}]], " ", 
             SubscriptBox["wHap", 
              RowBox[{"A", ",", "male"}]], " ", 
             SubscriptBox["wDip", 
              RowBox[{"a", ",", "a", ",", "female"}]], " ", 
             SubscriptBox["wDip", 
              RowBox[{"a", ",", "A", ",", "female"}]], " ", 
             SubscriptBox["wDip", 
              RowBox[{"A", ",", "a", ",", "male"}]]}], 
            RowBox[{
             SubscriptBox["wHap", 
              RowBox[{"a", ",", "male"}]], " ", 
             SubscriptBox["wDip", 
              RowBox[{"a", ",", "a", ",", "male"}]]}]]}], ")"}]}]]}], 
      RowBox[{"2", " ", 
       SubscriptBox["wHap", 
        RowBox[{"a", ",", "female"}]], " ", 
       SubscriptBox["wDip", 
        RowBox[{"a", ",", "a", ",", "female"}]]}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Lambda]", "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{
        SubscriptBox["\[Alpha]", "female"], " ", 
        SubscriptBox["wHap", 
         RowBox[{"A", ",", "female"}]], " ", 
        SubscriptBox["wDip", 
         RowBox[{"A", ",", "a", ",", "female"}]]}], "+", 
       SqrtBox[
        RowBox[{
         SubscriptBox["\[Alpha]", "female"], " ", 
         SubscriptBox["wHap", 
          RowBox[{"A", ",", "female"}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SubscriptBox["\[Alpha]", "female"], " ", 
            SubscriptBox["wHap", 
             RowBox[{"A", ",", "female"}]], " ", 
            SubsuperscriptBox["wDip", 
             RowBox[{"A", ",", "a", ",", "female"}], "2"]}], "+", 
           FractionBox[
            RowBox[{"8", " ", 
             SubscriptBox["\[Alpha]", "male"], " ", 
             SubscriptBox["wHap", 
              RowBox[{"a", ",", "female"}]], " ", 
             SubscriptBox["wHap", 
              RowBox[{"A", ",", "male"}]], " ", 
             SubscriptBox["wDip", 
              RowBox[{"a", ",", "a", ",", "female"}]], " ", 
             SubscriptBox["wDip", 
              RowBox[{"a", ",", "A", ",", "female"}]], " ", 
             SubscriptBox["wDip", 
              RowBox[{"A", ",", "a", ",", "male"}]]}], 
            RowBox[{
             SubscriptBox["wHap", 
              RowBox[{"a", ",", "male"}]], " ", 
             SubscriptBox["wDip", 
              RowBox[{"a", ",", "a", ",", "male"}]]}]]}], ")"}]}]]}], 
      RowBox[{"2", " ", 
       SubscriptBox["wHap", 
        RowBox[{"a", ",", "female"}]], " ", 
       SubscriptBox["wDip", 
        RowBox[{"a", ",", "a", ",", "female"}]]}]]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.697572307355995*^9, 3.6975723353072147`*^9}, 
   3.697903932577951*^9, {3.697904169854621*^9, 3.6979041877084227`*^9}, 
   3.697904285543214*^9, {3.6979043983169394`*^9, 3.6979044085732107`*^9}, 
   3.6979044861958427`*^9, 3.697904519106793*^9, 3.697905461563078*^9, 
   3.697914464346608*^9, 3.697919997694175*^9, 3.697989494881843*^9, 
   3.698432296770852*^9, 3.698499126571001*^9, 3.698586402890334*^9, 
   3.6987580164559183`*^9, 3.698758169334763*^9, 3.699207826984449*^9, 
   3.704224064968741*^9, 3.70448232657029*^9, 3.7069926119345427`*^9, 
   3.7082631700096903`*^9, 3.708347341862134*^9, 3.7107077752287693`*^9, 
   3.710792180782505*^9, 3.710868251302698*^9, 3.71137070483426*^9, 
   3.71147479852216*^9, 3.711795855415114*^9, 3.712482530234009*^9, 
   3.712490688956122*^9, 3.7124968644991283`*^9, 3.71255888741473*^9, 
   3.712575713750185*^9, 3.713012211720134*^9, 3.7131776947875338`*^9, 
   3.715112388310281*^9},
 ExpressionUUID -> "453a656d-01d3-4ea3-89b5-0131aeaf9db6"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Equilibrium YA Xa (green)", "Subsection",
 CellChangeTimes->{{3.69757199571738*^9, 3.697571996963984*^9}, {
  3.697572122592929*^9, 3.697572131145567*^9}, {3.697572372532072*^9, 
  3.69757237401164*^9}, {3.697913108355624*^9, 3.697913110380054*^9}, {
  3.69791486209156*^9, 
  3.697914863571237*^9}},ExpressionUUID->"ec1ed220-84cd-4aa1-ae35-\
d094b3fafa3b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"YAXaEigs", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{"0", "==", 
       RowBox[{"Normal", "[", 
        RowBox[{"Series", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"charpolyIntFull", "/.", "weakrecAX"}], "/.", "eqr0YAXa"}],
           ",", 
          RowBox[{"{", 
           RowBox[{"\[Epsilon]", ",", "0", ",", "0"}], "}"}]}], "]"}], 
        "]"}]}], ",", "\[Lambda]"}], "]"}], ",", "posassumps"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.697572286450013*^9, 3.697572334738625*^9}, {
   3.697904521608057*^9, 3.697904528882337*^9}, {3.6979047995248117`*^9, 
   3.697904805066638*^9}, 3.6979054780951147`*^9},
 ExpressionUUID -> "ece8dd9c-83cc-44c4-914b-6261cb432c24"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Lambda]", "\[Rule]", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Lambda]", "\[Rule]", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Lambda]", "\[Rule]", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Lambda]", "\[Rule]", 
     FractionBox[
      RowBox[{
       SubscriptBox["wHap", 
        RowBox[{"a", ",", "male"}]], " ", 
       SubscriptBox["wDip", 
        RowBox[{"a", ",", "a", ",", "male"}]]}], 
      RowBox[{"2", " ", 
       SubscriptBox["\[Alpha]", "male"], " ", 
       SubscriptBox["wHap", 
        RowBox[{"A", ",", "male"}]], " ", 
       SubscriptBox["wDip", 
        RowBox[{"a", ",", "A", ",", "male"}]]}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Lambda]", "\[Rule]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SubscriptBox["\[Alpha]", "female"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SubscriptBox["\[Alpha]", "male"]}], ")"}], " ", 
         SubscriptBox["wHap", 
          RowBox[{"a", ",", "male"}]], " ", 
         SubscriptBox["wHap", 
          RowBox[{"A", ",", "female"}]], " ", 
         SubscriptBox["wDip", 
          RowBox[{"a", ",", "A", ",", "male"}]], " ", 
         SubscriptBox["wDip", 
          RowBox[{"A", ",", "a", ",", "female"}]]}], "-", 
        RowBox[{"\[Sqrt]", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Alpha]", "female"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SubscriptBox["\[Alpha]", "male"]}], ")"}], " ", 
           SubscriptBox["wHap", 
            RowBox[{"a", ",", "male"}]], " ", 
           SubscriptBox["wHap", 
            RowBox[{"A", ",", "female"}]], " ", 
           SubscriptBox["wDip", 
            RowBox[{"a", ",", "A", ",", "male"}]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SubscriptBox["\[Alpha]", "female"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                SubscriptBox["\[Alpha]", "male"]}], ")"}], " ", 
              SubscriptBox["wHap", 
               RowBox[{"a", ",", "male"}]], " ", 
              SubscriptBox["wHap", 
               RowBox[{"A", ",", "female"}]], " ", 
              SubscriptBox["wDip", 
               RowBox[{"a", ",", "A", ",", "male"}]], " ", 
              SubsuperscriptBox["wDip", 
               RowBox[{"A", ",", "a", ",", "female"}], "2"]}], "-", 
             RowBox[{"2", " ", 
              SubscriptBox["wHap", 
               RowBox[{"a", ",", "female"}]], " ", 
              SubscriptBox["wHap", 
               RowBox[{"A", ",", "male"}]], " ", 
              SubscriptBox["wDip", 
               RowBox[{"a", ",", "a", ",", "female"}]], " ", 
              SubscriptBox["wDip", 
               RowBox[{"a", ",", "A", ",", "female"}]], " ", 
              SubscriptBox["wDip", 
               RowBox[{"A", ",", "A", ",", "male"}]]}]}], ")"}]}], ")"}]}]}], 
       ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SubscriptBox["\[Alpha]", "male"]}], ")"}], " ", 
        SubscriptBox["wHap", 
         RowBox[{"a", ",", "female"}]], " ", 
        SubscriptBox["wHap", 
         RowBox[{"a", ",", "male"}]], " ", 
        SubscriptBox["wDip", 
         RowBox[{"a", ",", "a", ",", "female"}]], " ", 
        SubscriptBox["wDip", 
         RowBox[{"a", ",", "A", ",", "male"}]]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Lambda]", "\[Rule]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SubscriptBox["\[Alpha]", "female"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SubscriptBox["\[Alpha]", "male"]}], ")"}], " ", 
         SubscriptBox["wHap", 
          RowBox[{"a", ",", "male"}]], " ", 
         SubscriptBox["wHap", 
          RowBox[{"A", ",", "female"}]], " ", 
         SubscriptBox["wDip", 
          RowBox[{"a", ",", "A", ",", "male"}]], " ", 
         SubscriptBox["wDip", 
          RowBox[{"A", ",", "a", ",", "female"}]]}], "+", 
        RowBox[{"\[Sqrt]", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Alpha]", "female"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SubscriptBox["\[Alpha]", "male"]}], ")"}], " ", 
           SubscriptBox["wHap", 
            RowBox[{"a", ",", "male"}]], " ", 
           SubscriptBox["wHap", 
            RowBox[{"A", ",", "female"}]], " ", 
           SubscriptBox["wDip", 
            RowBox[{"a", ",", "A", ",", "male"}]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SubscriptBox["\[Alpha]", "female"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                SubscriptBox["\[Alpha]", "male"]}], ")"}], " ", 
              SubscriptBox["wHap", 
               RowBox[{"a", ",", "male"}]], " ", 
              SubscriptBox["wHap", 
               RowBox[{"A", ",", "female"}]], " ", 
              SubscriptBox["wDip", 
               RowBox[{"a", ",", "A", ",", "male"}]], " ", 
              SubsuperscriptBox["wDip", 
               RowBox[{"A", ",", "a", ",", "female"}], "2"]}], "-", 
             RowBox[{"2", " ", 
              SubscriptBox["wHap", 
               RowBox[{"a", ",", "female"}]], " ", 
              SubscriptBox["wHap", 
               RowBox[{"A", ",", "male"}]], " ", 
              SubscriptBox["wDip", 
               RowBox[{"a", ",", "a", ",", "female"}]], " ", 
              SubscriptBox["wDip", 
               RowBox[{"a", ",", "A", ",", "female"}]], " ", 
              SubscriptBox["wDip", 
               RowBox[{"A", ",", "A", ",", "male"}]]}]}], ")"}]}], ")"}]}]}], 
       ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SubscriptBox["\[Alpha]", "male"]}], ")"}], " ", 
        SubscriptBox["wHap", 
         RowBox[{"a", ",", "female"}]], " ", 
        SubscriptBox["wHap", 
         RowBox[{"a", ",", "male"}]], " ", 
        SubscriptBox["wDip", 
         RowBox[{"a", ",", "a", ",", "female"}]], " ", 
        SubscriptBox["wDip", 
         RowBox[{"a", ",", "A", ",", "male"}]]}], ")"}]}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.697572307355995*^9, 3.6975723353072147`*^9}, 
   3.697903932577951*^9, 3.697904529573474*^9, 3.697904806927902*^9, 
   3.697905484824679*^9, 3.6979144649847183`*^9, 3.697919998303521*^9, 
   3.697989495265864*^9, 3.6984322978426857`*^9, 3.698499126930744*^9, 
   3.698586403259898*^9, 3.6987580164996862`*^9, 3.69875816969631*^9, 
   3.6992078273542137`*^9, 3.7042240653345613`*^9, 3.7044823271120453`*^9, 
   3.706992612290799*^9, 3.708263170378626*^9, 3.708347342230254*^9, 
   3.71070777568962*^9, 3.710792181301634*^9, 3.7108682517381563`*^9, 
   3.711370705202338*^9, 3.711474798960278*^9, 3.711795855897711*^9, 
   3.712482530657962*^9, 3.712490689443616*^9, 3.712496864951058*^9, 
   3.712558887888679*^9, 3.7125757141564198`*^9, 3.7130122121424847`*^9, 
   3.7131776952020807`*^9, 3.7151123886732197`*^9},
 ExpressionUUID -> "a7b8a194-3682-4022-8e52-7e23747305b8"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Equilibrium Ya XA (puple)", "Subsection",
 CellChangeTimes->{{3.69757199571738*^9, 3.697571996963984*^9}, {
  3.697572122592929*^9, 3.697572131145567*^9}, {3.697572351746171*^9, 
  3.697572377843625*^9}, {3.697913109443544*^9, 3.697913110875804*^9}, {
  3.697914854170603*^9, 
  3.6979148580427713`*^9}},ExpressionUUID->"aacffedc-49d1-4a8a-b3c8-\
8bda3cb515d3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"YaXAEigs", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{"0", "==", 
       RowBox[{"Normal", "[", 
        RowBox[{"Series", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"charpolyIntFull", "/.", "weakrecAX"}], "/.", "eqr0YaXA"}],
           ",", 
          RowBox[{"{", 
           RowBox[{"\[Epsilon]", ",", "0", ",", "0"}], "}"}]}], "]"}], 
        "]"}]}], ",", "\[Lambda]"}], "]"}], ",", "posassumps"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.697572286450013*^9, 3.697572356980295*^9}, {
  3.697904534761918*^9, 3.6979045385138063`*^9}, {3.697905295257044*^9, 
  3.697905301094798*^9}},
 ExpressionUUID -> "ac074cbd-c024-48ee-8dbb-fdfe5b47d548"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Lambda]", "\[Rule]", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Lambda]", "\[Rule]", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Lambda]", "\[Rule]", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Lambda]", "\[Rule]", 
     RowBox[{"-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SubscriptBox["\[Alpha]", "female"]}], ")"}], " ", 
          SubscriptBox["\[Alpha]", "male"], " ", 
          SubscriptBox["wHap", 
           RowBox[{"a", ",", "female"}]], " ", 
          SubscriptBox["wHap", 
           RowBox[{"A", ",", "male"}]], " ", 
          SubscriptBox["wDip", 
           RowBox[{"a", ",", "A", ",", "female"}]], " ", 
          SubscriptBox["wDip", 
           RowBox[{"A", ",", "a", ",", "male"}]]}], "+", 
         RowBox[{"\[Sqrt]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SubscriptBox["\[Alpha]", "female"]}], ")"}], " ", 
            SubscriptBox["\[Alpha]", "male"], " ", 
            SubscriptBox["wHap", 
             RowBox[{"a", ",", "female"}]], " ", 
            SubscriptBox["wHap", 
             RowBox[{"A", ",", "male"}]], " ", 
            SubscriptBox["wDip", 
             RowBox[{"A", ",", "a", ",", "male"}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 SubscriptBox["\[Alpha]", "female"]}], ")"}], " ", 
               SubscriptBox["\[Alpha]", "male"], " ", 
               SubscriptBox["wHap", 
                RowBox[{"a", ",", "female"}]], " ", 
               SubscriptBox["wHap", 
                RowBox[{"A", ",", "male"}]], " ", 
               SubsuperscriptBox["wDip", 
                RowBox[{"a", ",", "A", ",", "female"}], "2"], " ", 
               SubscriptBox["wDip", 
                RowBox[{"A", ",", "a", ",", "male"}]]}], "-", 
              RowBox[{"2", " ", 
               SubscriptBox["wHap", 
                RowBox[{"a", ",", "male"}]], " ", 
               SubscriptBox["wHap", 
                RowBox[{"A", ",", "female"}]], " ", 
               SubscriptBox["wDip", 
                RowBox[{"a", ",", "a", ",", "male"}]], " ", 
               SubscriptBox["wDip", 
                RowBox[{"A", ",", "a", ",", "female"}]], " ", 
               SubscriptBox["wDip", 
                RowBox[{"A", ",", "A", ",", "female"}]]}]}], ")"}]}], 
           ")"}]}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"2", " ", 
         SubscriptBox["\[Alpha]", "male"], " ", 
         SubscriptBox["wHap", 
          RowBox[{"A", ",", "female"}]], " ", 
         SubscriptBox["wHap", 
          RowBox[{"A", ",", "male"}]], " ", 
         SubscriptBox["wDip", 
          RowBox[{"A", ",", "a", ",", "male"}]], " ", 
         SubscriptBox["wDip", 
          RowBox[{"A", ",", "A", ",", "female"}]]}], ")"}]}]}]}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"\[Lambda]", "\[Rule]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SubscriptBox["\[Alpha]", "female"]}], ")"}]}], " ", 
         SubscriptBox["\[Alpha]", "male"], " ", 
         SubscriptBox["wHap", 
          RowBox[{"a", ",", "female"}]], " ", 
         SubscriptBox["wHap", 
          RowBox[{"A", ",", "male"}]], " ", 
         SubscriptBox["wDip", 
          RowBox[{"a", ",", "A", ",", "female"}]], " ", 
         SubscriptBox["wDip", 
          RowBox[{"A", ",", "a", ",", "male"}]]}], "+", 
        RowBox[{"\[Sqrt]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SubscriptBox["\[Alpha]", "female"]}], ")"}], " ", 
           SubscriptBox["\[Alpha]", "male"], " ", 
           SubscriptBox["wHap", 
            RowBox[{"a", ",", "female"}]], " ", 
           SubscriptBox["wHap", 
            RowBox[{"A", ",", "male"}]], " ", 
           SubscriptBox["wDip", 
            RowBox[{"A", ",", "a", ",", "male"}]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                SubscriptBox["\[Alpha]", "female"]}], ")"}], " ", 
              SubscriptBox["\[Alpha]", "male"], " ", 
              SubscriptBox["wHap", 
               RowBox[{"a", ",", "female"}]], " ", 
              SubscriptBox["wHap", 
               RowBox[{"A", ",", "male"}]], " ", 
              SubsuperscriptBox["wDip", 
               RowBox[{"a", ",", "A", ",", "female"}], "2"], " ", 
              SubscriptBox["wDip", 
               RowBox[{"A", ",", "a", ",", "male"}]]}], "-", 
             RowBox[{"2", " ", 
              SubscriptBox["wHap", 
               RowBox[{"a", ",", "male"}]], " ", 
              SubscriptBox["wHap", 
               RowBox[{"A", ",", "female"}]], " ", 
              SubscriptBox["wDip", 
               RowBox[{"a", ",", "a", ",", "male"}]], " ", 
              SubscriptBox["wDip", 
               RowBox[{"A", ",", "a", ",", "female"}]], " ", 
              SubscriptBox["wDip", 
               RowBox[{"A", ",", "A", ",", "female"}]]}]}], ")"}]}], 
          ")"}]}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"2", " ", 
        SubscriptBox["\[Alpha]", "male"], " ", 
        SubscriptBox["wHap", 
         RowBox[{"A", ",", "female"}]], " ", 
        SubscriptBox["wHap", 
         RowBox[{"A", ",", "male"}]], " ", 
        SubscriptBox["wDip", 
         RowBox[{"A", ",", "a", ",", "male"}]], " ", 
        SubscriptBox["wDip", 
         RowBox[{"A", ",", "A", ",", "female"}]]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Lambda]", "\[Rule]", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        SubscriptBox["wHap", 
         RowBox[{"A", ",", "male"}]], " ", 
        SubscriptBox["wDip", 
         RowBox[{"A", ",", "A", ",", "male"}]]}], 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SubscriptBox["\[Alpha]", "male"]}], ")"}], " ", 
        SubscriptBox["wHap", 
         RowBox[{"a", ",", "male"}]], " ", 
        SubscriptBox["wDip", 
         RowBox[{"A", ",", "a", ",", "male"}]]}]]}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.697572307355995*^9, 3.697572357883535*^9}, 
   3.697903949138749*^9, 3.697904539278042*^9, 3.6979053096581907`*^9, 
   3.697914472588622*^9, 3.697920006063139*^9, 3.697989495725041*^9, 
   3.698432298505355*^9, 3.698499127441242*^9, 3.698586403735429*^9, 
   3.698758016531871*^9, 3.698758170146912*^9, 3.6992078278556356`*^9, 
   3.7042240658362627`*^9, 3.704482327663781*^9, 3.70699261278176*^9, 
   3.7082631708481903`*^9, 3.708347342739848*^9, 3.7107077761212587`*^9, 
   3.710792181768338*^9, 3.710868252190467*^9, 3.7113707056906757`*^9, 
   3.711474799399775*^9, 3.711795856371365*^9, 3.712482531100272*^9, 
   3.712490689873191*^9, 3.7124968653749533`*^9, 3.712558888347559*^9, 
   3.712575714606717*^9, 3.713012212611506*^9, 3.713177695686803*^9, 
   3.7151123891639347`*^9},
 ExpressionUUID -> "c648647c-910e-40f7-8251-b5d5798d6cba"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Equilibrium Ya XAa (brown)", "Subsection",
 CellChangeTimes->{{3.69757199571738*^9, 3.697571996963984*^9}, {
   3.697572122592929*^9, 3.697572131145567*^9}, {3.697572351746171*^9, 
   3.697572377843625*^9}, 3.697572511237565*^9, 3.697913111996128*^9, {
   3.697914846043356*^9, 
   3.69791484728231*^9}},ExpressionUUID->"c54240e8-a649-4cc7-9eb4-\
f2f633838596"],

Cell[BoxData[
 RowBox[{
  RowBox[{"charpolyYaXAar0", "=", 
   RowBox[{"Normal", "[", 
    RowBox[{"Series", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"charpolyIntFull", "/.", "weakrecAX"}], "/.", "eqr0YaXAa"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"\[Epsilon]", ",", "0", ",", "0"}], "}"}]}], "]"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.697911406497685*^9, 3.697911417968501*^9}, 
   3.697911620840891*^9, 3.697920220186913*^9, {3.6979247503607397`*^9, 
   3.697924753072197*^9}},
 ExpressionUUID -> "8d0d53cc-105b-46d1-89d0-0fd92008cfdf"]
}, Closed]],

Cell[CellGroupData[{

Cell["Equilibrium YA XAa (yellow)", "Subsection",
 CellChangeTimes->{{3.69757199571738*^9, 3.697571996963984*^9}, {
   3.697572122592929*^9, 3.697572131145567*^9}, {3.697572351746171*^9, 
   3.697572377843625*^9}, 3.697572511237565*^9, 3.697911437864254*^9, 
   3.697913113435845*^9, {3.6979148498027287`*^9, 
   3.6979148524665422`*^9}},ExpressionUUID->"dadef7ea-6798-4f73-abf4-\
a1ee1d7ee166"],

Cell[BoxData[
 RowBox[{
  RowBox[{"charpolyYAXAar0", "=", 
   RowBox[{"Normal", "[", 
    RowBox[{"Series", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"charpolyIntFull", "/.", "weakrecAX"}], "/.", "eqr0YAXAa"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"\[Epsilon]", ",", "0", ",", "0"}], "}"}]}], "]"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.697911406497685*^9, 3.697911417968501*^9}, 
   3.697911620840891*^9, {3.6979117399898643`*^9, 3.697911742253525*^9}, {
   3.697920228352367*^9, 3.6979202355373087`*^9}, {3.697924761944529*^9, 
   3.6979247643841963`*^9}},
 ExpressionUUID -> "bc8a28c0-1730-4f2a-9191-89447269fb20"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Resident stability plot (no haploid selection, no sex differences)\
\>", "Subsection",
 CellChangeTimes->{{3.6979111104287024`*^9, 3.697911114330991*^9}, {
   3.697912539188614*^9, 3.6979125406768637`*^9}, 3.697913114883868*^9, {
   3.697914975378747*^9, 3.697914977264181*^9}, {3.697924910916567*^9, 
   3.697924923653017*^9}, {3.69792616651995*^9, 
   3.697926172015624*^9}},ExpressionUUID->"93364f2e-43db-4843-83c0-\
7d8ea4e2a1b3"],

Cell[CellGroupData[{

Cell["Parameters", "Subsubsection",
 CellChangeTimes->{{3.697926853291678*^9, 
  3.697926856291485*^9}},ExpressionUUID->"24d0be65-7337-40f6-b7e3-\
910585e287f6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"params", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      SubscriptBox["wHap", 
       RowBox[{"x_", ",", "sex_"}]], "\[Rule]", "1"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["\[Alpha]", "sex_"], "\[Rule]", 
      RowBox[{"1", "/", "2"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["wDip", 
       RowBox[{"a", ",", "A", ",", "sex_"}]], "\[Rule]", "1"}], ",", 
     RowBox[{
      SubscriptBox["wDip", 
       RowBox[{"A", ",", "a", ",", "sex_"}]], "\[Rule]", "1"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["wDip", 
       RowBox[{"a", ",", "a", ",", "sex_"}]], "\[Rule]", 
      SubscriptBox["wDip", 
       RowBox[{"a", ",", "a"}]]}], ",", 
     RowBox[{
      SubscriptBox["wDip", 
       RowBox[{"A", ",", "A", ",", "sex_"}]], "\[Rule]", 
      SubscriptBox["wDip", 
       RowBox[{"A", ",", "A"}]]}]}], "\[IndentingNewLine]", "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"YAXAstabplot", "=", 
   RowBox[{"RegionPlot", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"Max", "[", 
       RowBox[{"Abs", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Lambda]", "/.", "YAXAEigs"}], "/.", "params"}], "//", 
         "Flatten"}], "]"}], "]"}], "<", "1"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["wDip", 
        RowBox[{"a", ",", "a"}]], ",", "0", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["wDip", 
        RowBox[{"A", ",", "A"}]], ",", "0", ",", "2"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Opacity", "[", "0.5", "]"}]}], "}"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"YaXastabplot", "=", 
   RowBox[{"RegionPlot", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"Max", "[", 
       RowBox[{"Abs", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Lambda]", "/.", "YaXaEigs"}], "/.", "params"}], "//", 
         "Flatten"}], "]"}], "]"}], "<", "1"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["wDip", 
        RowBox[{"a", ",", "a"}]], ",", "0", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["wDip", 
        RowBox[{"A", ",", "A"}]], ",", "0", ",", "2"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Red", ",", 
        RowBox[{"Opacity", "[", "0.5", "]"}]}], "}"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"YAXastabplot", "=", 
   RowBox[{"RegionPlot", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"Max", "[", 
       RowBox[{"Abs", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Lambda]", "/.", "YAXaEigs"}], "/.", "params"}], "//", 
         "Flatten"}], "]"}], "]"}], "<", "1"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["wDip", 
        RowBox[{"a", ",", "a"}]], ",", "0", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["wDip", 
        RowBox[{"A", ",", "A"}]], ",", "0", ",", "2"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Green", ",", 
        RowBox[{"Opacity", "[", "0.5", "]"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"MaxRecursion", "\[Rule]", "10"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"YaXAstabplot", "=", 
   RowBox[{"RegionPlot", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"Max", "[", 
       RowBox[{"Abs", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Lambda]", "/.", "YaXAEigs"}], "/.", "params"}], "//", 
         "Flatten"}], "]"}], "]"}], "<", "1"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["wDip", 
        RowBox[{"a", ",", "a"}]], ",", "0", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["wDip", 
        RowBox[{"A", ",", "A"}]], ",", "0", ",", "2"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Purple", ",", 
        RowBox[{"Opacity", "[", "0.5", "]"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"MaxRecursion", "\[Rule]", "10"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{"charpolyYaXAar0", "/.", "params"}], ",", "posassumps"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"intYaXAar0", "=", 
   RowBox[{
    RowBox[{"\[Lambda]", "/.", 
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{"%", "\[Equal]", "0"}], ",", "\[Lambda]"}], "]"}]}], "//", 
    "Flatten"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"YaXAastabplot", "=", 
   RowBox[{"RegionPlot", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"Max", "[", 
       RowBox[{"Abs", "[", "intYaXAar0", "]"}], "]"}], "<", "1"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["wDip", 
        RowBox[{"a", ",", "a"}]], ",", "0", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["wDip", 
        RowBox[{"A", ",", "A"}]], ",", "0", ",", "2"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Brown", ",", 
        RowBox[{"Opacity", "[", "0.5", "]"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"MaxRecursion", "\[Rule]", "10"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{"charpolyYAXAar0", "/.", "params"}], ",", "posassumps"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"intYAXAar0", "=", 
   RowBox[{
    RowBox[{"\[Lambda]", "/.", 
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{"%", "\[Equal]", "0"}], ",", "\[Lambda]"}], "]"}]}], "//", 
    "Flatten"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"YAXAastabplot", "=", 
   RowBox[{"RegionPlot", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"Max", "[", 
       RowBox[{"Abs", "[", "intYAXAar0", "]"}], "]"}], "<", "1"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["wDip", 
        RowBox[{"a", ",", "a"}]], ",", "0", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["wDip", 
        RowBox[{"A", ",", "A"}]], ",", "0", ",", "2"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Yellow", ",", 
        RowBox[{"Opacity", "[", "0.5", "]"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"MaxRecursion", "\[Rule]", "10"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.697924841675581*^9, 3.697924896490562*^9}, {
  3.697926027775247*^9, 3.697926079876343*^9}},
 ExpressionUUID -> "e3bdb409-3ec3-4944-bf58-eb45a766cdd3"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plot", "Subsubsection",
 CellChangeTimes->{{3.697926859260051*^9, 
  3.6979268600759363`*^9}},ExpressionUUID->"b76534eb-294e-4ec7-83c0-\
e5c913b298a1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
  "YAXAstabplot", ",", "YaXastabplot", ",", "YAXastabplot", ",", 
   "YaXAstabplot", ",", "YAXAastabplot", ",", "YaXAastabplot", ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Text", "[", 
       RowBox[{"\"\<YA XAa stable\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"1.6", ",", "0.9"}], "}"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<YA XAa stable\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"0.5", ",", "0.75"}], "}"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<Ya XAa stable\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"0.75", ",", "0.5"}], "}"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Rotate", "[", 
       RowBox[{
        RowBox[{"Text", "[", 
         RowBox[{"\"\<Ya XAa stable\>\"", ",", 
          RowBox[{"{", 
           RowBox[{"0.9", ",", "1.5"}], "}"}]}], "]"}], ",", 
        RowBox[{"\[Pi]", "/", "2"}]}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<Ya XA stable\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"0.25", ",", "0.9"}], "}"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<YA Xa stable\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"0.8", ",", "0.15"}], "}"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Rotate", "[", 
       RowBox[{
        RowBox[{"Text", "[", 
         RowBox[{"\"\<Ya Xa stable\>\"", ",", 
          RowBox[{"{", 
           RowBox[{"1.1", ",", "0.9"}], "}"}]}], "]"}], ",", 
        RowBox[{"\[Pi]", "/", "2"}]}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<YA XA stable\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"0.9", ",", "1.1"}], "}"}]}], "]"}]}], "\[IndentingNewLine]",
      "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRangePadding", "\[Rule]", "None"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(W\), \(aa\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(W\), \(AA\)]\)\>\""}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<\!\(\*SubscriptBox[\(W\), \(Aa\)]\)=1, \!\(\*SubscriptBox[\(W\), \(a\
\)]\)=\!\(\*SubscriptBox[\(W\), \(A\)]\)=1, \[Alpha]=1/2, \!\(\*
StyleBox[\"r\",
FontSlant->\"Italic\"]\)=0\>\""}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.6979110651691093`*^9, 3.697911087442196*^9}, {
   3.697911128134623*^9, 3.697911252330793*^9}, {3.6979112982046957`*^9, 
   3.697911351335042*^9}, {3.697911788009993*^9, 3.697911815259774*^9}, {
   3.697911882148814*^9, 3.6979119181823483`*^9}, {3.697912102317608*^9, 
   3.6979121307178717`*^9}, {3.697912186521709*^9, 3.697912190793832*^9}, {
   3.6979122375783854`*^9, 3.69791243959658*^9}, {3.6979127640489683`*^9, 
   3.697912778176906*^9}, {3.697914451021356*^9, 3.697914453606298*^9}, {
   3.697915960954974*^9, 3.6979160311104317`*^9}, {3.6979161262014923`*^9, 
   3.697916126937379*^9}, 3.697920257337186*^9, {3.697920312269005*^9, 
   3.697920315436062*^9}, {3.697920351702758*^9, 3.697920462737265*^9}, {
   3.697920497458804*^9, 3.697920636322317*^9}, 3.697921773440222*^9, {
   3.697924801227002*^9, 3.697924839550071*^9}, 3.6979896329572363`*^9},
 ExpressionUUID -> "c6e1459f-7b28-4296-9486-2cece67da93f"],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1:eJxd139Q1HUex/HVlIsbF80yndW6dMpbHcrTWMxGBFwPLq+TxSFrMPcaZ3TM
VTm9xlovb5gT1h83ldl6eAYnS8UlZGvpTKGrZpJey+npDbhKHiGyqCgCyw9B
Yfdi5vt8f2Y+/fOdBy8DfH3fn8++nbw8b/GK4SaT6cQwk2no+WBlZYIv/e15
F19aleQNdaRW1zyZvS1yJBUvOjU+b2skKF6281xu2FYrfjj1oagnUi8O9+53
eEON4rRFv50StjWLP/zkdpfNe13cO/DOd55Iqzg7Z0ZRyHFHrD8Lhs0pCXgi
4lkH4uPCtm5x4yv168zhHvG7IypDNu9d8dyDf0pz2vvFrUtf3O+J3BPv+dlj
Y/2+AXHGobZNIUdU3Ok8fi0Wi4npj9+L/jD9YfrD9IfpD9Mfpj9Mf5j+9J6w
/qQ/TH+Y/jD9YfrD9IfpD9Mfpj9+D/rD9IfpD9Mfpj9Mf5j+MP1h+tPnSu8J
60/6w/SH6Q/TH6Y/TH+Y/jD98XPpD9Mfpj9Mf5j+MP1h+sP0h+lPP4f6XOk9
Yf1Jf5j+MP1h+sP0h+kP0x8/h/4w/WH6w/SH6Q/TH6Y/TH+Y/vR7Sz+H+lzp
PWH9SX+Y/jD9YfrD9Ifpj+9Lf5j+MP1h+sP0h+kP0x+mP0x/+j2v31v6OdTn
Su8J60/6w/SH6Q/TH6Y/vg/9YfrD9IfpD9Mfpj9Mf5j+MP3pn4v6Pa/fW/o5
1OdK7wnrT/rD9IfpD9Mf/x/9YfrD9IfpD9Mfpj9Mf5j+MP3pe4T+uajf8/q9
pZ9Dfa70nrD+pD9Mf5j++HP0h+kP0x+mP0x/mP4w/WH6w/Sn7136HqF/Lur3
vH5v6edQnyu9J6w/6Q/TH1+nP0x/mP4w/WH6w/SH6Q/TH6Y/fU/V9y59j9A/
F/V7Xr+39HOoz5XeE9af/ivzxu2IVKQeqDy/yurvFMu5eaSuJmyrlhyTD5/z
9HZv6LzkmPzr63mJyd6Q5Jh83d++/E/I0SA5Jt9Vtqkq4GmSHJPf6Z/4V3M4
LDkm/032sVed9puSY/KPP3U+4/fdlhyTR2ND/7VLjsn5uv4kX/qy74LD2SVf
x+TxD2x43m3ukRyTf/X5/I98gV7JMfmK3IdHBV19kmP592Fc8xsRyz3JMfnJ
Lw7/zxK8Lzkmz1tWmGF3D0qOySfFL/G7rDHJsfy7J7qh5J3I3tTW6UmWoKsj
NeXYs/e8oW/E+y1VaZcc58Q/n7vvlDlcJ/6m9epKv++KOPDi2EKr/6p4/MeH
lrjNYfGG+znWoOuG+Ozi3n5L8JbYWlFU47K2i7/NL17ktHeK/5C49itPJCJ+
/FLKE35ft/jfWxK2hxy94k0zfuyMxe6q7/+DP9fq7xdf9OSfcjjviwtmZSe6
zYPimQ2Td/sCUXFc0o7vbd6YOOGxpgMttsNi2U8Md7k2liR7z4hlXzF8sHmw
M+D5r1j2F8MrP0jb7bRfFss+w8/3pU8ymRrFst8Yfr2vqc3hvCaWfYffN6vg
hC/QIpb9x/Av/vnU+xFLq1j2IfqNnl5ud7eJZT8yrD9lXzK85+KILRGLep+y
PxnO+EvdLUuwSyz7lOHup8tz7O4esexXhssubzzmsqr3L/uWYUdh5lRvqE8s
+5fh6K8mvBfw3FN/D/Yxw59duXG32Tag/j7sHYZzt1W9Zg6reZLPVW1eOJ/M
E3PPvJAzT+TMCznzRM68kDNP5MyL/HxjnsiZF3LmiZx5IWeeyJkXcuaJnHkh
Z57I9XtcvxeYF/n8M+aJnHkhZ57ImRdy5omceSFnnsiZF3LmSe4tY17k88mY
J3LmhZx5ImdeyJkncvYEcu4ncvaviqF42E/n5cIX7xaFKlJzhmo1daTevDBz
+rQZ1eKKoqXPJdeeF7+W8Y8fQjtD4kd7Gv/s/l2DuOXCQ++bC5vE86cdWu68
FhYX5+ck+dNvivtCPSNNpbfFi4def7Rd/Iq9uNbxeac4rn1NintZl/jw3pRy
36ge8fKMhNHBo73iMZGGNyOr+8THS/yNlp8+T/GaF/JfsH9/X2zpcXzpemtQ
fLp08kTvL2Ni+qU/zivmfGLOI+b8Yc4b5nxhzhPm/GDOC+Z8YM4DZv4x846Z
b8w8Y+YXM6+Y+cTsp/LnjX0Us39i9k3MfonZJzH7I2ZfxOyHmH0Qc04w+x5m
v8Psc5j9Td6vsa9h9jPMPobZv3DWzsSTCb3TZd6mZLu8w0xHxYMjj45Z0B9U
8z+ztNI+p1a8urFpUbinXrzzzFi3/XKj+Pbjhxd6ZzeLMza+NCm8+7q47Gxv
m627VTzw5J4TnsV3xInHi//lutQhrn997Uzv1oh427h5ewPJ3eLkkwkPhMPq
fDav+dFl3n1XvGvCwVrbgn5xWnV+irNLnc87ednlnrIBdX9MnDLanx0Vb1i/
w26fps5nce/2LGtMefX1mg/fNleKV2Y0mEeHj4gzX35rbdlcdd/ty3/jbPCW
6je3Pno5Uq/uv7j2gfits1TfY7anb/YWqfswUJJ6wNqu+j89u+CJ5Bx1Pz4/
Nd0arlPvY94fr111bVP3pXdzU78tSb2fvcGCQ4EWdX921G6p8exS76t78tRC
86/Vfbow8amSUId6fw73mSXOj9T9Wr7l9Dprlnqf+jO/7dnSwEXl4Y+MHIz5
1f37zN9HxIcL1fs+eKJuhfX36j6+sqBuvdmm3r/TVX7OkaDe/46OT+ptzcqj
xr85231M3dfPFW+0Oz9Q83Hk28xS3xp1f7dkZn7mma/mZdW6CfHBiWpevF3j
x/k7lR+13FwfCar7ff6+G5tDpWqeqr+rqrdsUvd9x8KqlliWmq//A6a+kW8=

    "], {{
      {RGBColor[0, 0, 1], Opacity[0.5], EdgeForm[None], 
       GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
          "]], 
         PolygonBox[CompressedData["
1:eJwtlGVvFWEQhXdKKaVFClyKwy2U/hq0uENxa3F3t0Jxd3d3+04IIQ1pCCGE
NIQQQnD3ZzLnw5Mzu+/dd985c/YWlJQVl2YkSdIBMqGLJck0eED9ASZRb4ME
CuEwjIA6kAsz4JDqSn42Gz0BDeAx19PRA1AbHnJ9EB0OObo3E45AXXjE+lF0
JNTTvVlwDOpDFev70WGQDbVgCuyCGnCP9anoHqgJ97kehC6FN0n0sAx2QAa8
5dZedChk6RnvfZ/2dg92okMglcQzu6EEMvXOgbAEXrP+DwZQL4ZX1H+hm3r0
3j5DsTxzrz5BVwuP3JuP0It6Ljyl/g6dLXryXt5Dd3niXnyBHhaeu9dfoZM8
cS/eQU/qOfCE+hv0o14IL6h/Q1/qBVBN/QsGyyP3xtD+sAhecv0H+lDPh+fU
P6E39Tx4Rv0DOlIvt3i3x8a9vwPtNYPj6CjI00x972vQRu8Yh26w2LspOhbW
W+ydj46BCgtvUuhoWGfRW0PtvdbCizxlbbWF1znKzioLr7M1+5UWWc/SbFdY
eO0znghbLWbbFp0M2y28KbL4FtZYzNa/iQmwxWL2abQUNll43RIdDxstvG6O
lsFmC29boyfVk/fi35B/C+UWs/Zv4ryFR+5NE7ipM/rZCpS9G6o9g9d1prQ8
9iycgkbKxFWdwd/dSlm+Be2U6dsW/wGFuufZuaLfeoYuq0fvrQVcVI/eWzNl
45zO6hnx7FzQmmfIs34GGltk/qxmnq97ns1L2tszeloZSKmHu5pJkTL2Hz/p
lzY=
          "]]}]}, {}, {}, {}, {}}, 
     {GrayLevel[0], Opacity[0.4], LineBox[CompressedData["
1:eJwl0ulWDAAYBuDpHnIB/dM9cAUOZrKU0Dot2oZSpo1SUpSKEiqmDRGlZqZm
pxKX5en48Zz3/fme73wldZGyjqJAILDIReW0n6GU84RooJcpVkiQZJ8DUqTJ
kCVHngI/+cUhRxzzmxP+8Jc4MSaJEibIOc5ywahiWSsXeccYNbyliwJ5nlDN
GzrJkWWUKha4R4Y0I9zmNXdJccBjbjFPhH2SDHOTOU4PlyDOEJW8op09dnnE
DV7Sxg92eEgFs7SyzXcGKWeGFr6xxQDXmeYOX/lCP9d4QTObfKaPq0zRxCc+
0ssVJmlkg3WilPGcBtZY5QEhnhFmhRg9BJmgng+8p5vLjFPHMkvc5xJPi/7/
2T9YwFTN
       "]]}}], GraphicsComplexBox[CompressedData["
1:eJx1mH9M1OcZwE+rbiwetlqnOW1XTetOQ+u0HNZGBDwHq+vkMNQ2OG+Nicb2
VKZrbI/VhUw4fyztrD2HszA52rIJ1bPVpKOeWivV9ZhOF/CUOorIoaIofPmt
cLeS8Hle8ib4z5sPzxPz4Xme98eXaauyl60eaTKZDo0wmQbWSy+tjfeGWpN+
WF4e60t5e2HeiPlFAY8hPPdgzJiwrUO4/pXaDeZwp/C7o8pDNm+38ILDv092
2nuFm1e8eMBj3Bfe+4PHxvt9fcKpR1pyQo6IcJvzxPVoNCqMX2XVkxnbjS+S
8IPxg/GD8YPxg/GD8YPxg/GD8Vt6elL2NiMofjB+MH4wfjB+MH4wfjB+MH4w
fit3nc8K26rFD8YPxg/GD8YPxg/GD8YPxg/Gb0LSIxGPUSt+MH4wfjB+MH4w
fjB+MH4wfjB+4a4DDm+oXvxg/GD8YPxg/GD8YPxg/GD8YPySl/5yetjWKH4w
fjB+MH4wfjB+MH4wfjB+MH4ffHyn3ea9IX4wfjB+MH4wfjB+MH4wfjB+MH5d
fe987TGaxQ/GD8YPxg/GD8YPxg/GD8YPxi8jc3ZByHFX/GD8YPxg/GD8YPxg
/GD8YPxg/Fjxg/GD8YPxg/GD8YPxg/GD8RvOS1/xg/GD8YPxg/GD8YPxg/Eb
rk66l77iB+MH4wfjB+MH4wfjN1zf9DrpXvqKH4wfjB+MH4wfjN9wc6T3Ta+T
7qWv+MH4wfjB+MH4DTfX+hzpfdPrpHvpK34wfjB+MH7D7TN9rvU50vum10n3
0lf8YPxg/Ibb9/o+0+danyO9b3qddC99xQ/Gb7hzSN/3+j7T51qfI71vep10
L33Fb7hzUT+H9H2v7zN9rvU50vum10n30teD5RfWWv1tSf6rCyfuNMrEF26e
FW8JulqTYh9rONhkOyr5ex+tqQrbKtV8DDL57a7NRQnes5I/cv7TO7yhC5IP
k3+4sb8t4Pmv5P/zRnZcgjck+TD5a95P3uO0X5H8DX/57D8hR53kw+LvS5lq
MtVL/u6SnIqAp0HyYfJf62locTivS/7d3il/MofDkg+TX5med9IXaJL8X2Qc
/7XTfkvyYfJ/8ven3jMszZL/0T+cz/h9dyQfJj8ncmaV3d0i+ZHowL97kg+T
z0o+K/kweXsvjdpqWAz5+YqXfRcdznbJh8lP/WPNbUuwXfJjHtr0vNus7gOY
/I6nSzPt7k7J//zQog99gS7Jh8kvubL5uMvaLfmrsyaMDbp6JB8m35GfNsMb
6pH8CWMa3zAs6vyCyY/8bPKfA577kn/q06P/swQfSD5M/idXb3Y32vokP3tl
fqrd3S/5MPlZ2yteNYf7JX9qzHK/y6reRTD5Y+J3fmPzKs6LbCp6x9gnnHj8
2fve0JfCBywVyZcd54V/tGD/aXO4RvjL5mtr/L6rwoEXx+db/deEJ310ZLnb
rOZ304NMa9B1U/jcsq5eS/C2sLWsoMplVfP1VW7hUqddzc9v49Z/7jEM4ccv
Jz7h93UI/3tr7I6QQ/U3Z/Z3bdFot/r/v/VnWf29wpc8uacdTlX/vLkZcW6z
qu+cuml7fIGIMH+voN4wntSTOH8/IE59ifP9Tpx6E+f7mTj1l/kb/H4lTj+I
8/1InP4Q5/uNOP0izvcTcfpHnO8X4vSTON8PxOmvfk4QZyXOPcbP6T9x7jXi
zANx7jnizAdx7j3izAtx7kHxH5wfOdcG70XizJPcX4P3pMzH4HwR594kzryV
DYRHqL+HwcwLzHzAzANM/2H6DdNfmH7C9A+mXzD9gekHTP1h6g1TX5h6wtQP
pl4w74vMAS3T9+f/xU/fLQiVCd+6OGfWzNmVwmUFK55LqL4g/Grq374N7QoJ
/7iz/g/uX9UJN1185D1zfoPwoplHVjmvh4ULczPj/Sm3hHtCnaNNxXeElw2U
L3JP+BV7YbXjUJvwmHvrEt0r24WP7kss9Y3tFF6VGjsueKxL+GGj7k3j9R7h
E0X+esv39w287oXcF+zfPBC2dDo+c73VL3ymeNoU70+jUj/OL5j3GPmv36j6
4G1zufCa1DrzuLCaR95jxNNefmt9yQLF+3PfOBe8reaV9xjxrNrIFaP2wpB6
9MVsm6vmmfeY/P47UrZ4CxQHipIOWu+peec9Jr/vvLwnEjIVPz8jxRquUfuB
9xjxhb+7fs21XbF3S0OvLV7tF95jxPcF844EmhS3Vm+t8uxW+4n3mMzntBn5
5p8rXhL3VFGoVe033mPEHe6zy50fKi7demaDNV3tR95jxPU1t+XZ4sAltV85
d4iPfHR0f3QIP/PXUTHhfLWfeY8RP3yyZrX1N4qvLq7ZaB6y33mPEXe6Ss87
YhXvbP241taozgPeY8THTnpznvu44ucKN9ud76vzgvcY8S++Siv2rVPclJb2
iWeROk94jxFfu2FyTHCKYm/7pIn+NnXe8B6T88Bya6MxhBftv7klVKzOI95j
xCu/rqi15ChuXVLRFE1X5xXvMeKbNu6022cqLuzakW4dcp6l74o7Fds1S3h6
hss7wnRMuH/0sYcX9wbV+TGnuNw+v1rt3/qGpeHOWuFdZ8e77Vfqhe88fnSJ
d16jcOrml6aG99wQLjnX1WLraBbue3LvSc+yu8JxJwr/5bqs5q32tfVzvNsM
4e0TF+4LJHQIJ5yKfSgcVvPQuO47l3lPt/DuyYerbYt7hZMrcxOd7apfd7Mz
Sj0lfapeU6aP82dEkv4PEDME8A==
    "], {{
      {RGBColor[1, 0, 0], Opacity[0.5], EdgeForm[None], 
       GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
          "]], 
         PolygonBox[CompressedData["
1:eJwtlElsjWEUhv9T1zxPa7G0tjVPNdOa1Vhq1mumZmqmaq6Zmil21vaEEEJI
hRBCCCGEEOJ5836LJ/9zc/+b7zvnvOd2Ls0XlxdkWTYUclARWbYKXuKvYCu+
BT7in2AFvhzq8RewGd8E7/EPsBZfA6/xN7Ab3wVf8W+wF6+C7/gP2IFvh8/4
F5iNz4J7+H2Yic+AO/hdWITn4Qn+FDbg6+Et/g4W4gvgEf4Y5uFz4QH+EJbi
S+AZ/hxu4sPgFt6B5yE4CL/5/Adq8CPwF/8H/fGN4bPKYABeGa49DwPxneFa
KqEQ3xbuXQUcx49BBpFqGwEFqUb1ahK0Tj1T7ydCyzSDvjxXh2dTBJfDd9DZ
eudK+Eyd1Sr1tiTs6vHV8B11N50xCPaEZ1MF/fB14dmVwBD8APzCa5UT/HC4
N3WZe3c03Bv1sBe+ODybrtATLw/Pogv0xpeFe98deuDzw7PpBH3wleFsFcJg
vDqclRr9Bp8TzkZH6IaXhbPRHIbjJ1Jvb/N5P8998DNzDcreZGiTMqjvpkDb
9M7Z8J1110YpO0WQSxlSNkdCg5TR2nDNqrUxzwvhGWk2zdIujAu7dkLZGx1+
VxnUro2FpuGdOxWuSbXoDO3aGGgS3rnz4R6pN/rNuXBP1Uu9cy3NVLNUjafD
PVOvcmk3iqFheEcuhTOtLLfgeSM8Y822fcrq9PBuKLPahWnh77QT2pWp0C68
M3XhmWlW6un1cIaUHb1zJjxzzVp30C6PCvdaO61dHq/6wzut/5YJ4bvpP+Zi
OKPKpt45CaWqL7xD/wG0opWa
          "]]}]}, {}, {}, {}, {}}, 
     {GrayLevel[0], Opacity[0.4], LineBox[CompressedData["
1:eJwt0ks3FAAYBuApiVrHsnPsWltP6SIp0RBiumAauRSi2yByT5muGGJE5BJp
1Zool5/lcU6L5z3v7lt8b1akpaT5SCAQSJKpHPYMESHJDe4TpZYgM4R4QB31
nOUrxTTQyEPOMUsJj2ji8GAOc9ykhce0cp5vlNLGE55ygXnKeMZzXnCRBcqJ
0U4Hl/jOLTp5SRe5LFJBN6/o4TJLVNJLH/3ksUyYAQYZ4gor3OY1w7whnx/c
4S0jxLnKKnd5x3s+cI017vGRT3ymgJ9UMcoY41xnnWoSTDBJIb+o4QtTTFPE
pp/+YYtt/vKPHXbZY58NfrPKHAni9BGjmShhQuQRJJsznOYUJzlBOmkcJ5Vj
pHD0/9YOAOG6RtI=
       "]]}}], GraphicsComplexBox[CompressedData["
1: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
E/Abc4oTLkZtyeKfd3ojUiveb/rnxAn4f8QF2PX3gvH/up3HBOOvEXfbNj5x
IGpLFYw/Rv6acwymrgk/PuO33p828e8SjL9I3NCnbNqTCe6zgvEH8fPRG2D8
C/xY9AaYOir0K/l4cGz907pTb9430mryLcSz4JrPn35zh8/kX4iPwfvbPNve
YjH5GOJf8Bc3BhYHQqa+J54GoxfEvmpeBkweSOyxzsOC4W3A1I+DqR8X+6br
x8HUj5MHQN9SL4p+pT4UfUpeAP0J7yj6ink4Os+K/GLv8FvxSw9ZalxypRWp
8S93POtZas61pF9g859N+ruTMtV3Gx9ZHRc253HTP/Bgp/MvB2vlqEZbfngs
wW3O58YvHrBs5P2WMfnqxKT7G4ULzfddESf92mXcA8bGYvWiUfNVf9dCdb7B
bo87KV21WHPy/TKWpXLeyF9y3shPct7Ir3C+0V+cb/QR5xv9MmqZ125sTFfT
7yl144JrsZxX9KXwgdoegTlfYPwFMOdb/ENtr8R/1OcPjD8B5vzL+Zg9arTh
+l7wEwt7/pDkmy6YeSVSr6b72cTf1f1wYPrbhE/U/XHUOWFnyANR34GfRn0H
eSHsGn4b/Tvkxejfkbk+2q6SH8PusS/wN9gp4nbsFPwhfhV8Hn4S9UL4VfAA
2AP6MMHcB3US1O9z7qnfJ+6FByBOgQfAz4GPwU7Dv+DnoJeJK9GzxHnU/9OH
QP0/fTSx9f/wSaJv9e9LvKz5JNFv+n6E/9X8Epj7IY7j+8mn833oSf6eOA+7
Qn0Jdoz1Zl/AsfPmsSvYHfgk7Bx8EnYHHgc+Af4YPgE+Fz7BcmvJJLfzssSX
8OnYY84zvDy44GzOZc/SLPXs1KmeCdGj8lycX+JEcJvnJq4Nlc1VpZ9+844v
elHsNfEBdYvg+ePqjrX2LVAvtfy4lrHRtOfoH/KG4FfrVRvhvJ2hxnxYtf3E
6E5Zd/QNddHgWV9vbufvaqgOn1V413CY9h5/mTpw8PWUbjZjY55KzT/4lr+r
af+JT8gjgTv+RwNVLVLT/0vPVDXtK/1kwo/rem8w/WVg6tdFX+l+M4nXdT24
+Ae6/wxMvbvkT3Q/muQfdP04mHMFZh2oi8Z/h3fCXyevh39+ZPtTe3xDilVB
44XprrQCZa0wKMuzNEP1/u5c3fOubap/ryobQ2UN1dry1zSv9YxK2rLWZ+2b
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
6G/sNDwleUz0ORh/ljgWTD6S/i/0GfqLfggw+g29Qn8N+Q3yW2DqN7A79LuQ
3yD/BaZeAzuLn0RcSH4MjN6nToX+IfIb5LvA1JuQ16Wfh/wG+TAw9SXUJePn
IUfky8DYLdYVv438Bvk8MHaIfcXfBiP/xBPkM7BXYOSf/AafJ7/B58F8nnwH
nyffwefBfJ78B58n/8HnwXyefAjxE/KHvMncA+0vU++Lvgbjf1EfwfkEE59Q
P4k/Tf0L+hyM/0z9C/obDF+H34G+Bst7b3X9C/YRTHxB/Qv2EEw8gR+E/QMT
/+DHYO/ArDf2kfWmzxT9ib/B+uB/sR+cM/hF9CHxMZj15hzg70l9nfbvYt/D
Q/8Bz4V95pyA0YfUY7DO2GfOORh9SL0G64J95lyBiYfoxybeod+aeAa/kniF
fmniEfqhiTfwW4kn8DOxP+wH8ot/jP1hP9g/vhfMerLe+P1g9gP5Jl+BfqZf
A38SjLyTz0A/07+BPwlG/tlX5Aa9iz8JZr/RX2DkQd4LpfURmP1nP9EnYPab
80C9L/JJPS/yDUbe+Dz6hvpwMPZN4gldn4w+Ib8Cxr4hb9Qro1/Ip4Cxb8RP
7Bv6hu8Fcx/UXVI/jf4h3wHGvhG3UU+NPiK/Aca+IZfoXfQT6wJmHTnvyBH6
iucEsy7sD/3kyCf3C0Z+kUfuD4y8In8y90hj5BN55ffwh5AH5AfMdfrJwfw9
fDTzXsD4z5L/1/PVwPjjYOa7gPG3wcxjA+O/g5kHA8Y/B1M3LflfHZeBqZsG
Ez/At7Iu8L88P/wv/f/wv/T/w/9i5+DH0QvkS5gHRL6E+T/kS9BT8JbsB7wn
/f3wmPTvw/eit2T99d+D+X2p19ffB+Z+wPLeXW0PmfOKvNLvh3zS74c80u+H
XqTfD/+Tfj/0OP1++I/0+3E/nGuRB82fgKkfl89rvgRMPbnUq2p+BIwewL7Q
f4f9op6Sz8u8GORL2xcw+lzqS7Q9AaPPwawD+iO2fjS2XjS2PpR6UPh25vTA
18Pv1Hnh4RyPPV3VbH7rpQWRMVLfFTsfLbZ/LHb+WWw/Wex8M+pbqAdj/+D/
kavhu4+e8g3JUjf+SKncyntEJVcfuDCSnKNyzn/a0XBcVPUHVf7M3rBALZ/7
RXt/17v3YUtPc6UVSn3Ioap3PnYnZagqTZZML2UJqacSf2kWrGWo5+s3XOH0
nlFfJb1qtYzJUx1bXfjceTtdld4/YnmobKHq1rbD+lDZu3aixqOjrH1LVKWb
33dxJ5n1qfAlYPhrqe/UfJDkNzXfDoY/kb/XfDYYfggM/w6GTwHDb0v9j+ZP
wPAeYOGHqI/RPIhgXdch9bGap5B6Rx23g+GzwcSJIv+6bwQMrwSGZ5F6Ga0f
pD5N1xVLfRT1exqTvwbHzluJ1RfUq4LpJyX/jh4HLxlwLsWz1MS9P/+wpzvJ
rD+iHhdMHTWYOhupl9O8ETg2H07ditTbad4ATL8RmDgJHGuf6TcHY6/A9J+D
sV/kk9EXYPKG5LPID3IdHgXM3Aj6nqivfjhxXs1wYbHU4cH34R/DrxD/w//B
48Knk1+DD8RPJJ4gnwY/iF6ET43NWzGfHf6X88s5Yv46fC/nk+9BL8Pv8r30
UY86fPuxVt4k6Yut99o37xiOiPRVHzlRpqO/a6aalT7sde+UIvX1V21+d1TN
F36SeZbwu+gfzhHzKuFz0S/wl8yjhL9FfzT29XolWCtbDZuh1jm9yVIXmX51
3x++6CWps3zmmUWPGxsNkWPiFXhz8mfwocQr5FHIl8GPkuchT4Q+gS+Fz2FO
EPkw9BJ8DPOmyH/Bp5J3Iu4k3wW/SvxIHpv8Vp9HF7u9U9LVxFJTt/VyBuT8
42eBqb+F76AfFD1EPyjnlH5Q/Er6Qfk+6ovAI8s1qRsuNPUNffdg+pzB+JVS
j6L7GMH0t4PpZwfTvy7fr/vVRX/peYBg/Aapl4yZN8C5B3N+pT5Vv2cAzBwH
MHOxpP5H6wFfw7RKhuOK5J1YL+ohwcgx+Myp4ROtfU3cqFvoiG9IrtRV0LdL
f+/bj/fulOIy+3urDdg0KBiI/J/P2d9p/4O1b6b6Yd7+MiOtSWrcysLe7iRD
bXi2fzuLJaLSykxpHKyVr6rs/+xgoHmmatqjQVnLmCJ1YOjWT5y38+T3kRO+
F/3N76Ov+X3krvmsLwLRC+mq6cHa5RaFlqtZV2oMdb6crd6++W1uJDlZRdvs
bOWfmat2vV25QVz7NNVxXs9qxo0C9VO39k2DGYbUzxDfUydC/E79DPE59TPE
39TPEF9TP0P8TL3QqqUVPr5tmyOYeLNMv23LIslZqqTys9sMx3HVc0ePL+wN
c1XvvnOfivenSt0cdd1dtuW3CNbKVN+sWzx0QWi3WvvAdw9axhhq5aZuY/yR
s6rix89mu9LypC78o93HNgaaF0kdOPV4xCXU11Usc6hrzfBvgvHnvV+c2RQq
m63mbr/zZCXjhMhR0+1luoU9l1TDetW7u5MK1NuTW53wDTFEjzd0j0gNe/aK
3hxXcc8Ge/Cc6PU/Gv/2t6PqXb1xNnevb0iRWp1lzI8k56n3Jn21ONSmWK17
fmJ399gCdcM791HLmAx13f3xkE7uzcp1snmhKy1b2Tc+nhVxnVYr7GmhQPM8
9ca3p/zWvnft7Ndb6gdrlajyzSYMsTcsUuXf+uhfR9UM9eqaOifWBNaovovL
nfQNyVajyr81Mhg4KXWIef3O7I7aLquWJ1857llarM71TPnT1r5Q7FfZDZer
9HQmCSY/ij0b2OTG8agtIph8KPZtYPsdFeLaZwom/4m9q33731WhsvmC4fs8
X5ydHUkuUvYN902PzsmXOv7+3T+uO8i+RDD86bvDf69tbMxUD8//Z368f7/a
eHT6TUfVHDVi1T0z3c4UVbl240O+IflqyL37S1xpmcIf08/aLfxqT6f3iszV
wD5umbiufoI7WTD8K3qmdk6TIf7IJcHwrdjPwwF3qmepIVjee9rjuaeMjVmq
+rak8QnuY2rhuuPXHVVz1edNPyqfaE+VOSbX3ri5JJJ8Vw6D720Llc1UXbaO
+qpGeJe6Wfaf76x9DbX3u9r9wp6zKsH96/vupDw183rnc74hGWrlxhYNg7WK
1Ju/zfTaG+apc5a4Px1Vs9U/Xz69yO1MFj34ycXlhYHQJTU5+P4vkeQClVjj
kdnROYa6czHc2Z1UrDoMj95nGVMo9VkLFi77PNF+TOqzdjS88I3Xmir1WT8d
CPZxJ5n1WYnft+vTyb1L6rPu+3rm5YjLrM9qOqjSDGtfsz7r6mMJ8cFapv8O
/wyGvwbDR0s8o/ls4Y80/79to+rg75qlHvtt8MVgICx1kX+tfqVxXPiC1EWy
z5wry98vW056Zqn0aVcWh8oWq4cuN1sZKlsgdb4rU2f4mvjXS93wrM717Anu
U2LX71kXHOiPXBbeYMuEORc8S3PU80fefdc7JUsd6diyVYrrqPruyb/qhQtz
1Kl7FvcPBi6qHO/Pd2ztC9QTa3/s6p2SrfxPD+jrvF0o/gHnalu7908Yjr0i
Z4dLNW4Q7z8n5wq5Ge0KjLb2LRI5Gfv4t1ddaRlqZ+aIv+oGd6i0z+rtDTQ3
VI0uH+63GmfUy8ePzIjOyVP73r0+3t4wQ8XdnDLUeTtL1Vmc+XDd4Ak14s2G
rf1dc9XoNZ+djLguqZMLk6sZGwtELpf9+dIb3imFItf/U6tVS0QukdNyjR3d
JkY3iZwPXD79PcNxWuS2pMzkBH/XdJE/9h/5k/3W8kf+AvlDfpA/5AX5I3+B
/JG/EP9Kz4cH875IMPPfJX7W74uU+mY93x1MHR6YOjtw7PsRqM/Bf8GvF/5S
zyMWPkDPVwYzf1jqmfU8ZfEv9bxhMH4z8Ry817ZAz12+ISWil0+1fqiaZUyW
+qTStRp1g0dUg1825LrS7j5X9j9nIq6LauL1d7YGmheo+2rtnWLtm63i59d5
MlxYKPF0nTmvrYokZ6g7vS6uPOIJqTG/Z31lb3hXTzpCL8T7z6jUduNd3il5
auXhJ0Khshnqg/Y7ix1VC0WvJ39Wf1GobImcC9YHHorn4X0NYN7XAOb9DGDm
CYq/q9/HAOZ9DCIf+v0LEt/r+YNg6o7A1OEveGDyDVv7ErF737+T8q/jTLrq
+PPV4guu5Spvpfekr1G2ujnYudCdlKxa3RP3W2TaXf/o+KGCQPM0Na9HaJj9
SoHKe3jJrOgFk//g/bVg6i+lvly/vxZMvSiY99eCqccE8/5aMPWjwofq99eC
qc8U/kvnEcHE1WDyf2Di6s05XS+60orVnkkVHzY2FqpF6UP7uZOylPfPB1ZZ
LMelD2Jp90q/OL2pwtven3r4U+ftbPG7rL9M7rfDt1v8tuiKI7cDobPih60Z
Z58fnZMhflS/Fz1Of9c8tartxXssLYrVPSXZWwKjClT4PzfYdsWcQ9brgVmR
5GLRe8htp/HRDTmONXIO9vyz51rId1LOwXPvtW1qsZj8FHEtmDoaMH0aYJk7
zn7r97OIvdT6UPSFfn8M5yX2/aPkicHE+eDY96vQd4K+iH2fCn1fxNfrVtTx
HfPMV388kTTY3rBY7Fz2G7cmRecUqx0n7nkhWKtQeFj8tjtXlmd4lmaqDT3X
eCdE9wlv22bK+2UmRCNq3bzicda++eIHwvPWLL/yaBVjlfDG09JsHxiOk8Ib
32k2f7E9mKZ2Dm77fLgwS+3v6y/xWk8o26G8UnHtc1XHaSdesVguqWGPTzrt
WVogdpK47t1ylZfG+/eI3zQrY/Ict/OcxHnY2SePdG/u71okdpX1p7+3aall
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
cR3xPfaJ8wOmTop+VfYd+4qeB5Nnp3+V+B77il4GU3eFXUNusK/YCTD8JPE3
/CPxNfwi8TPngPgYeYOHQf8Rz4DRj+g/4hcw+hH9R7wCFv2o5Q+9Ckb/IX/o
aeQZ3oD4Bkz/KvEB34cdoD6D70PeeB8PGHlEvnj/Dhj5Q56YJwBG3pAf5gaC
kS/khfdFgZEn5IP3Q4GRH+SBuBeMvCDP6C3kFx4OjJ8Lb8Q8M/Q/9Wtg5lty
fpnvxnmFLwTDt3J+mf8mfobmC8HwrZxf9DLnFb4QjF/P/5O/Rr/zPjIw/hvr
QH4bfc/7yMD4c/CR+C3of/IeYM49fCryhz0gjwGOnf+PHcE+8L3g2H5Uzj2Y
+kYw51zqsXV+g3wldon8KfNXyZ8yb5X8KfNVyZ8iX+SXsdPENcznJt/OPG7i
cPwG8qX4e+RL8efIl+KvkS/Fj0DeeB8u8sT7cJEX5loh/8y1Yn3wo+AzmX+H
nmH+HXwkc1iEV9FzV5AD3q+Lfuf9uuw7c7ekr13P50NPMJ8P/pA5L+hD5sRw
/5wHMH6F1AdqHox8MnNh8H+Zz4deZj4ffgFzxMhfsF7UNzFvm/om5mtT38Q8
beqb0D/4a9gh6n3wT6U+S68LGP4OTDwh9dDaH5X6Px0/yHxS7X+2aOr5MeK6
InWd9BGi7+gnQY7on4l9P3fs/KjY92/HzpOKfb82c3XotyG/Q79N7Pu0Y+dP
xb4vO3YeVez7sGPnU8W+75q5P/TroH/o10Hf06+DPqdfB71M/on6fOoXsIuW
NQV2Y3i6euzsiCfGWH9RP26+r5m/erE6c+yVp8P1C9SYzGbvuMcWqxVPLX7X
XaZQFV6o6QxmpKs7bfd0KWNZqdo02l3V0iJbJfreX+u8nawC3/bKcc3LVSlZ
mbd8Q9LU8smnnwivKFJ/jzh71dE5X83yXVkRmZapEoOOGq28+9T1S9O+tF8x
1JOO+Z2NjRHV0dHoLe+b+art4elv+mea5wkeAMx8ZJkPoON4MHObpT9Z53Nl
Ho2eEyz9M/p9XWD6m8mLTrzx/Yxb0e5yHV4HDN8g8230e7JEH2j/T+ZfaZ4X
zJxmMH2tMm9B8wAyL0vz4GD8RKl/0/Zb6uPmX43f6dtm2iP9fjUw9QNSX6Xf
9y72Tr//C8z7F+T7V/3da0EoLJj8A5j6Cvm9Mv1+ivebmPedye/p90HIvIfx
Lc9EbWb/Ee97A1PPAOZ982DeRwbmfRHSf9R43Ah/xKwfIx8i9bG63gPs7Lnl
B7fTxLx/Dcz7K8DEbWB4NTB95jKfQvNG0h+meXgwdRfSn6/n5sjvxcgr9fYi
r7p/E3yu04LGfZ2zzXpJ/X4fMLwhmLoVmfeh3z8m9Xo6Lyvyq/0d9D/zu8DM
vwIzPwvMPCyxT3qeFhjeEwxvD46dl0X/Lph5mlI/r/0msFH08iRrXxNT1wlm
jgYYvhxMXgLMnE4wdguMfwGm7x9MXSeYOZZg+qHBzBuV/jPtB4Lha2W9dT+0
9EPp+aQyH0zXU4Orlp1aprXXxPTHgemnlOfT/Dz4s/QOhwyHiem/lvvR81Cl
nlzXb4N/r/nxBH/ExPTjibzo/k3pD9P5APCSYyvqxftTJD/FXHn4aer34HPw
c8kHwueih+Fr4Y/gc4nX4Wvhk+Bzidfha+GB4HPJl8FfokfgN5nrVmFQ7nV/
JEnmOv5e9fZua9+IzHlr8PKusfZBmWrevvxm/plFKju31DPh+mZfa6PPm+8x
HGE5F77ZTz0T778gckSfA3NVFy2a1WCM9Ufh++kDIp/HvHjhoXS9H/k95sXD
c1HfR76POIM8AnV85P+alrzxbYL7iOQFqd/j3E3sXP/+RPtFyX9Tr0d+kL4q
8t3U55EvpG8KPUg9HvnDubWmjK8R3i5+AfV35BNPLcr7KOw5I/kd6u3QU8T5
5HOor/t/ZL15fIzX//4/aNU2sRQlg6KWsRRVibUOBtW0dKJRSxn7OqldmdRW
y9hVGTthYl9HY2ei9mVsQWQiiGyTfWHsS/mln8c8z/k93t+/+rh6jyRz3+c+
57Vc1/Wi30hezDkAn47+I3kt/WX4c/Qj8XMljoIvR38SP1f6KfDj6FcyR4F+
Cnw4+pf4vRKHwX+DR8r5M2lvTifLkjzpg0y/mOdKv5j9iDgHvhv9fPhs9Ovh
q9GP57m/eNljkOF4rljdLX6Cfozy70EPCP5fv55fH8YvCdWr84j6NPheqwEx
DrvS6zL/U+pNr41fYtGq84r6tdSThh1uonMpPS/zPcHUlWoV2+m2RiaKKvlp
6c/9t8vr6EXA6FPA6EXA6FPAGyLqPCuqWSbPZ3xRwPSlpH+Iz38CTH4OJn8G
k6+DyafB5Otg/OXl/u/zOwW/MJUvtM25X+Jrh6YGtLQ51Hnqm2clz3effzsY
fwPwpoWpK4JNCuNnD8ZfVd7PzB1pbqPCRZ81+9VlVpj5WVJP7fOLl/ff56cg
44WIyWVC9Qrjnw/Gz1XGJ52//FLnSpB4fPCJg1qPwuglwdf7Djttb6MwPiAy
PvD1xcH4Gsjz3eeXL98Hn18EmD66XK8+/RS439S8626j8o+CFxnouPG9bXWK
CM+02wJt18TyomOrep6nidbdY5eZzt0XOf3K5geEZIkY975sY3iqWFc8uaep
SI5o1PjHKPu7dLGgyPtkc0aSGFKp5Ya0gFMitc+mQ87OHjF3y4pcZ9G7QkS2
s2q3ZYgpM0v5a9olCUfCvm9sq7NFr3tp87W1VXwE/0HeD9/+IuOpg2uK13cc
lrjP/CH5/Q0KU6+R+4nPf1yuh4RrXzzzV7hK8UJtT1kVRg8D/mJx1a/8PAqX
Phr8fZzxssRr7c3bPvVXGP2t/Ptfbho/z6uuz71m7hVlVfhN0tyhEU6F4XuA
2U/l+7gw+7LWo/DsGaYOOpfC1KfA+K2DX9mm/KjRKHxw08exXn+F0f/IeP2L
8v1dZoWftWgU6rAr3LKR3eO0KozeGFyr990PVq+6vt9w0mt3KjyyWxeLza0w
c0nAxAFg/IRlPuCrG4HxhQbjwwVGZwXGVx4/OeqIy6Z38tMFJYqgbi/7Nnb8
JR7+Pqi2Z1LBv+19Pd1hPyda3inyMiDGIwJLhLbSBbnFivrbLlubZopbB6e0
cwxMFvl/dF7nXpYj5g06mWKslikW1f16qbZ2qpj5S73VliXRIm16TH/T7HSR
c2z/Q2fRBNE+dtJXjqQs8WVJ/3Ka0x5xwb3/hnlErgjwW/yD5XqW+KTOm8fG
8CQR1aPCgiqu42LQtPVn7e9SxYNI1whX9h0RFdPG5u2jzqVKDROGGo5ni/gj
WWH6Meli2aVyFsO9RPHs1t9LV7t3i5xqh4JszVPF7tW/tAiMiRadf+tRxbMy
XVR8njjd0jVBRFx/kRvwLEt0qHdwkCnFI/VKzJNBl8M8GfRK8NrQKzFPBr0S
82TQK9FHR5+15k7b2ees6ySm/4KejT4IerZZlZKHFNFslZj5LjXjCw8zFUkV
r9oZhs3z3hTTvtra3DEwXWT8u/21dfxDETe/U3HN6Syx+8uK1T2TPGJio6b/
BoQki8UpUZ93tJwV0XPv3LBGekTTH4f87DkcK+o/nLjZXSZTGGMndrN9liys
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
pQtS1/GHxN8M/p1zb3qsd53C6NHun6yZYN6pruMnyfw7+Hrl5x7x05VQGN1W
wKfnHc6i6jr+k6xL+l6sWzDrnD4Y1wufFt9arudK3TXxjf5MuxWR9s3CPuPJ
564GuVJXvnh37Va21bmi/LjYP7S1s8WRkKiPNadzxLALH1f2TMoUW7vdW6bd
lizKeV44NZoLQrM9bJCpSJp4flOzzfDaLfr8q2vmGJgpDlQ8N8lwPFnWn0o0
+884StWf8gYP3GIyqPpTnzNpmXZnghh2c9Ijc0aKqJkd/9VT/5vibJ3P/nZ2
Thf/3h7/yFn0oagy/dgs7bYsqUs//sW23wwtk8WRJT2yHfYzovzvnbvYVnvE
t7WatNEFxYoxt9Mre54rXbur3oLsgJAcqWMf0X3EIm+fXBFW5MMFa6SqPzL3
QNYTfXqJ3ZsP7nMvSxJpH/aGzPceEx+/Cpmhz08VwzYe+MVz+I4Y8OMLo6Vr
huQZnNy+uqZrT7aovrffs4CQdMnr+6VmzOJg0xXJM1w3Or9UqD5e+twWGXZi
lzs6RVRcWfJLx8Bc6fvVK+XnH22rk8St+kmju5uOi0OtXlX3PE8VNXZ+k+yO
viP8lq/1BoRkSF+xUZmtzlsjs6WPGOsBH0PZz/yvXVVNxbff/lNznrZ2hhA7
o/+xNs0TesfNRo6BOdJfq0nQ6h+jrMpfa07h4Dx7G+WvhY8Y/lrnc8oWD9Oe
lv5aN37y+14zU/lr4UOGvxa+Yw82v0k1X04Ut8pcqrTQu1Pev82ffVu0v0Hd
vzaZO694/dX9k32lrAkDDS3zpO9Zsw7XAlxXE0VU67dNQ0y75Pehfsz3oR7M
92GOBt+HejTfh/oy3wd+N9+HuRvDFiW6rcsThf+gOZMyAiLEsqFfVnM1yJPr
kvUm59z5nsfBgNNRdqfKN9BfgOHPgm1Nnk911IiWGD4tWLM07Jx3nerfwqft
/t/42Pf5YtSNclett9PFQHf1AYbXeeJoWs/7xoRcceNLUyvb5FzhXfjTD5bc
LFFm6q6+ln1JYm/r4HlVXCdE6J2gRq6SHtFzb+8RrgYF50n9nA/+ozIkj6jm
rCW3zJezxZqvI8P0f6aLOg0fztLnJ4v79yPuuMyXxKzZ00MsXdNEn6s/H9A3
vicexH9ex7UnUwwuP/ptQEiK6HI48rQ1MlfOjRnXP2ixNz5HLK567pI1MlOc
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
mN8LtkzsOMRQEKeD+TnbnYMbOILzZBzfqn9CqjkuUT6vnf9t/x/U/GIw84tX
HZlxxBmo9iOuM88YzDzjx9oa87Ur0+V+xHXyMjB5ww9Dz/Y2Pc2S+xHXyRvA
5AlDiv92wK1R85A57zfben/leKL8uF/U6FytXr7y4x4xeudd92Plx53lqbhU
G6D8uCss+MNxNVv5cUf+M7RpYDPlx71s6SSnM1b5cXf+5lh/0wr19/Hv5P30
/V4wvwfM3wn+33rKlaeeiuvd60Rq60sPjH658u+GX+Nq++SdfwGOCUgZbnqa
LOc3sz9vcG39IW7ZJdFoyZyWjuA0OZ+Z/fjEWXeoo/09sTC1dknNgUz597D/
ll+2v7elX4qos7Dch4COSXJ+NHFT//i2peo3PiRmJR2MtkakyvnQ5MsflV95
RTv3tnjQokeEuyAfLnhYVTQFz438eOw4/zLB7x+JFsteTND3z5b3i31ndPqP
DVwn1f1jnjWYvweM/g3M/QATP4D5e8Ho5cDcLzDxhPz9vu8DZp2AeV5g1g39
0ilZZ4Yarii/9O6W9HxLV+WXXt7f0lazWfmln20946y9lPJLT9MN2hUYo/zS
TebA9aYU5Zc+LPXhY+N+5ZdeZUV1m3eU+vv4d2DWBZjnKO8XfVgfZv8Ho4eV
P883jxuMPhbMPG4w6w4seVu+fPLQyNqfeeZmiWa/ffWndmWKjLfpg2y9XnFe
cPg1sez67QGmp2kyXmYOdNvzZUqEXr4vsmpNbOoIzpLfjzmasWW+3+nenCo6
T63wkeaA0uuSLy3+Z8n3ln7ZYk10x/VuTY78+5iT2GREjkX/Qd0f9iXimOWX
mpbrP/us7HcEngm/6T2h+hndS5crqSt4rvQrip0K2e+MzRDzXQPqeDxJMh+h
rzE2seYfVYJOieQahV8FdPTIfII4dX6FG8NcJe+KtpYtV6wRGfK9pc8RdnxX
rLWD2o+Im8HEt2DiLTDxC5j4Cky8Is8L37ocW2ffTXOc0lOTzyV8GpVs3J8p
89l1Ow83GqPfKkzVr/SxRCm9NfzOvGoxKY6kC+LE5FENXTqlvyZuTQ0d00I3
Kk6Uv1nyvX+Y0mPD39QPDROOJ8ny7+M9lPlc9pvCmoL9mP7a+1rHekW8U/2z
nDFJ422TVX9s77CDD8xTPDK+7lNuTidbXXU/eW/B/D1g3lP5vvj2eTDPT54f
Pv233G986wOMnw6Y90W+Xz69uHz/fOsHjP+OfP6+9wnMOSX3T98+Beb9AZOP
grnP1I0GVXgxQ1vw/SWP/6vEh2FLjsp8KH7kv//a+96R+c7Wwe0jvKMSxfL0
1Z0sUXnyfSMerbVq+Q3zlFxxYOKrJ0a/JLlfUc/4aPbGVveiD4hS19aes4em
yv2KfLPRqYYrLftuiWFftF7pLXgv2K94T9bpIu876zwSZ8MeDDPUy5b7J3Hu
HKeurKYAx1dbFuUMVP0P+OQnGp7Z7HAuFFVuT2thm6f4/8TfrcymQ/ZS6vnT
nwHTPwWT/8p4ydcvBZPvgtkHyO+6/DbpsKbdFZm/LavUzm6oHC/zs/cnkicY
rqh4hc+BeS/A7Lty/fmeG5ifC2beGLhKRb+REc6LKp7yzR+T++uIUr/b3HEy
LxxVdX3np33OSf569Zzbmc46blmnuFirYSVNwT4M73LqndEn7aUyZT3txYef
NaetOySfd9Q3yzrrRkVLvm7sugpLTCkPZd2s5tTrmcb96vwk35Hvgy+fB5Mv
g8eM+kYTplXnJfVEMPk9mPwZvLXc1s4ajTpPqSeCyffBnDtg9kkw5xCYfRLM
uQLmPQHznoLxbwCTx4LZV8Gc4zL+8sVJcj/yvdemUpnXzXGKjwa/p/4MUct1
Us0vGf7wQOctbdT8kou2ryqFXlbzS/wtvzjcm9X8kui64d0t/dT8ksJ3d/Qy
rcgWJUTzYNs81R+lD9wuuHy/aq7NYtClx3/bQ5VfKPnt+R4ddzhjc8TmziGD
DfVyZZxB/bttSMkSmgIcZt5aTBeWIuc/45t5Y/L+7lEXr4qYs53izXFpcr4z
c1e7r32Qb+97XzTxT9/jDMySz4O5ggPeNlnvHZUqFo6bP027MlfuS8xbqbh7
Qltb3WyRcOFoeY8nW+5r9CFOdL8dariSLq79c2eT15Uk51fTjzzXrHulZ+uc
Qv/ZpHGGeh45n5q62YastT9oNseIWaMrGmzzMuS+S7/xo61/XrGXShKHdNW/
s0TlyPVGPWXE+4i75imZIqJCmxhrRLJ8X6j/VLpiduhKXBDvQx9uc2vS5PtA
vedV+9bVgt+7Ra/z0yfr+2fKuIH6TuSPA5q6TiaLFyPNZtNT5WdIfW/v/rVb
Bhr2C+OZUt84glW9jfpNhxWvwhztb4m9lfb7aQ4ovRTrfP/jaWe8JxJE0bE/
Jhr9VD2N+ozfjkIf6Qrwbxucq92aPBlH0lfJ+XB/vP5Dwb9bFVfT41H8HfR9
+ps/1vKrfVOczrU8C+io6pnwEDSd9vVylXwo/DvpLlojFD+HPntg8Nqb1g4e
cSzrkxPOQMXHoa7lHOd66NpzRpTrsGuRdqXi31A3Clo16rD+x1gxem1QP9PT
DBmXUud68PrlvwGpSeLy4+xGjmDFr4EHsXxnK7t7szoP6AuAqVu2uFxyr3tm
sqj54cQpjea81DuFdLk5IOriOWH7fN80/SOP+PdB8jaDRemPVxXKfWHv6xZ5
v3X70fJNpvx31LFnNT4e7h2VLIJu5Fd3rVf9A/RLLRLetrfVzRQ/FP24tyVK
8Vl39tte36VTfNXCh7995x+m+Kib+zR7bPRTfNM3f989Yw9VfNKfi09e4XUp
vuiBAZWGGuopPmjLvZ92sfTIFd/X0l607s6S+oqwL2ac9Ey6Lvvs9fM71gps
9kDqI36oM/SwMzZV6h+qLn6a2fH1P7JPPrFd4T9sk+9K/cLjG+dSzFOSpD5h
+7Si87QF5/Nev7ZdLN8ovil1ule3Aqp55qaJs5+Ie0Y/FbfxvIgj6NeE1HPn
B6Rmyn7S341Gbyk0U83XrJQ5wGGorOZpzumc9ty6XJ0XzsuRFUt7DqvzwNd/
keeHjz8nzy9fv0XWj0o3LTXPq+IF+iuy3uLj14Hpp8h6gy9OA7N/g/93flBc
/TJLvKNyROyDEv9YI1QflM+Du+f/vd+tUfyD/Z1/mqnvr/gFxcKfBVuiFF+W
emqZMxczAlJzxduGB1a51+SJm7U7DzZ8peYTfdppy4TX/jbJq6x+7WGm7TM1
n2iqYeJJ7Vw1n2hi9LuZ+g/qvCXOgVe6dU/dkRkBal5RYvfdP2k2K33TDwca
rzNUVvOKEqx9xhquqPiAvBfM/gsmzwVzfoLZT2Q84zs/ZL3BlyfI+Kl6SEZ/
w3FVj/GdV+DJvzpaPfV3Scx5Kz8/dF07nUvlQ5xnMl8p/zDFaVX5EOcxmLxV
xuO+vBDM+QtGbwpm/wc/6vGf0Wi4+v0+v3W5Hn39L/n7fH7qYPpdYM5dMOtC
/jyfLziYcwRM3AFmH5LxpG9dgfEJB6P/Ay/U7SpT3/G3Wh8+vjEY/q3MJ3x6
QJl/bHW4tB4VH8M/lu+bj587ov1iT8Cxgnh2RMm0gLEF773xUrh3ULLI+fvW
dU+Fc2LfjhFjDWc8YkDg6C8DP3KLTz4U72D7PFOkX3l93Nk2WQz+ec+nnmk5
YuOUNv1MbzNEq8GjjLa3iaLkxTBngzEOsepEyZqe3qmi8ZHyp/TDb4nHZfc9
DTiWLtZ/uu6j0EQ1f+v8xDaVOh5X87durN7S3XNXzd8KD7P9YKubIgxDdvrp
yiWK042C1tfzjBNDnq/8wqVT/KCpa78LM9RTfLtTPzR/7h+WJ/fdnAtHvnLp
UuS86s5VexXRhaXJ+dMRE1/HmOMy5blCf/aNac0y76gscSy27peOYMXHQ/8+
dmLkRvfmLOFdN/uNf1i2zO/oC6W+G9nC8SRNJNo2zdX3T5L7N/1NrbX0pO4J
h0WbnHY9LVGpcn+mn/m47ZUU9+PbYpUhWe/SZcj9lzigUbe6K7UFuObNEjrN
AdVfxU+/S4h19Wr3NtFr1b2PNQdyZJxH/23/0wo/WvoVnO/Lni/TrkwWc0Tx
NIdd+bM0DG++Mjj8vIhIXzXI9NQjGv27oKXOpfxYZjWsUTb0slu8a9uimSNY
zSWkH/iq45097s3JYmm7sXlGP8Xvhgc+vrr2j9ARl0XW6rKn7aGK3817tz23
5DzLvnuiY37kX16X4nfzHs3fdnmYaUWK2H/8sVYXlij3B/S7tb6fl5EdEC46
nNFWd+lyZR6AXnfOd9NnawtwlbR+F+yhKaJV3vcLgk1XpR45+YewFk/7XBVT
vvmwyutKE/NDGpQM1d+X+uMHs88mO+vcF7dtm0cY6mXJOBi98fbHW8prCnCj
nPatbPNyZZwLn6vvprSj9lLZYma7cbfMcdkyTqbPr+nSKc24P12MbbWkryUq
SayvsWRuFddJye/KSchM6X/upHD91aiRS+cRt7dlDHeZYySfq87dGUI3KkbU
ybz5wT8sQ8bx8LeC1hY2OJ4kijWptfQeT6Lsv9Ovf1/4SquWtr3iWeuLrwM6
qn47/dhr0xJ+dZW8JbqtGH7VGpEu++v0X1vcH3xIOzdB7M4qttGtUf10+q0h
GyZO03/wiI867B6t758n8xx0gyW+P1rddTJHRIfdn63vr/rXYeV25BtNyWK6
d1jDevlnRcPbU3tYolS/OnZklzN2p0fsjj32wP04VljrVavr0qn+NLyiUv6b
/tIW4OSZ/7zyD1P96MWVFg0xWHLE2ctJzRxPMkS18kWau3TKD+H//uOfKNaF
Tz4UZw0Tzm2lw70upY9Ajx//XbH3lq4XRcV/D4wx1FP6CMkbm7Wgk2ZznBgf
0r29bZ7SR6C3Tx3zyUV7qRRxbc/Tch5Pjlz3+AOsqxY00nAlU8wp3buDIzhJ
eMYHJYdpD0t9eWCTHe1OFT0sEoe9+VRzIFXUefPZB7vzttSTh9VzxHpP3Bat
Tq33GP0y5PdCPz7RsM5PV4BXVfjmqD00W5536MXrex/87YxNEy1ssx4ZZ2WL
Pn6v7pk/ShfmayfuG7fnin1DfskN+CFbxLQcc8daMUUEDev0Sf+Dl0Wjv8ps
c09ME3+V0bu8t++JhRl//6a/kyneH/m5mG57iqizNHyUaXjBfll25h/NJx4R
szyijeNCqrg/0FMnuOId8aBNklZTK0Ns7X840PVtovhhZLcL1orZYs6xP7e5
G6aJlb913+G8kSM+HFs4R7sxU8weO7qp62CyGHuwhDliwwXx6FLpj3Tl0kSt
oyWm2r6NEy0///uueWym+K5ElyRzYrLkL99uP7i5rW6+uDOr0lVzwTk57VbF
a+bEPLH9dP4q98Q80Wr47S6WTBWfUOdOXNPgiXFWkhgVZczq/8Ux0ebxtbP2
xFRxaXHl9rpZd8Sqb0fbvG0zhP+kmwbHtEThDS89zLAxW0R/US7d2CpdDFk3
ZKm2eKowB0wZ4/oiWpx+8vEA0/B04V7+72HtxoL89bsdXzkuZImaU9pP1y/y
iN82dymiqVUQb9eZU8P1bY7ku+W8S73Q2RIh/76gWQ2Kn7Yq/OGb6C5P/VX/
Av6xjM+m5mY5rSp+gn8s61u+vAm+3O1DmgvWDtlietT02p6hin8bX776y4Dz
im/bLPTMZWtNxa9ddm7QOvdMxaeFv1areJO+phWZYnfTbrP1jmRR+NmmK55J
F0TRhfkhFm2aGN2zR4PAZnFiQNKyOi5zphjdJ/eYMzZZPKubFqrvr+pj8LfS
Kjau6jqZJ2q7vx1kOJMrvgib9Ma/YN2eTineyHErR/oo7X9Y+7jzSLKI3r2o
bj3HBVEi4NJCbYU0EdP0+3i3MU4MWTyir2lCpvR1WtVy/CDDrlzJCy1S/xuL
4Uyi2P1vIWtkjZ3i01uDc40F6/rd0cMd4ppcF2P0H/9jL3hPRrVMHO4o+0Bc
mbF9mXdQlvj1atOeloJ1Prz2ijn6l0mi+uEBr+qN+UecmdrsZ0sPjzi0cON5
bY+7omrM3bqugxmi7MS/5uoL3pPJDSa/9i+XIy7VjNG7vlDxLPoSMHoWWW/2
6UtkvdmnZwEzvzHlgLO3pUeKmHJk6jbdbpcoU21iorlXiojb9+/ACKdLiGKm
Bq6DBXHwMUPl4BvxYtSkCpHOIwX7W7M5k23ueLG2/4d3/uWyRMlFqY1dX6SK
i9eOzNZWyJJ51KQ5P0Z4ByWKO6vXGRs71ojNT4rW8wxVfM3ii0MP2T/KFZkp
p8LdxbJE4OsvWts+UXzZ7+OPxlpbJYmBRfb6l952UPz27Zh+lm+SRE3vvhVV
XAfFjq9673SvSRUdTU208wbdFrfDyzR2rU8Vz++NNbvMt0WhBW8s+pfp4sDJ
wz+57j8SDV/8rdG9SRcDm7/4W+t5JPolrv/e0iNb/Lm46nXr7oI4oOtPt829
ssUw1zdT9Y400fti7DDTooJ9a1BXv469rwnr10tzjUtThLX3DZfLfE0crjql
hSMzTUz329vVs+2+SFzY+B97TppovDBnj95xX5SeVLmEpkuWeHm4UpDtz1TR
Jjl6mTcoS/KQo6pnjde/zBbB2hM6T266yFpif+3/Jlvykld3alVJ0yVZlO87
cm1w27PifOSTcG9Qspj4U1aPOONZ8XTD/Uzj9oJ9omSrT0PXxIpqJVaMNewq
iA/mhY1z2GNF12dTT9o/yhTjDj3a6y6WLMIGNutg+yRT+krs+r7aEu+gHFF3
cE2j5UKGiDl291PP0BzpC7HPv+j7gAdJYkLxZX8WOh0l4uZFzdE/ShLNXv1V
rLQnSnwyfsdNayuPuNx/5G5DZoxo9sj0s+Ubj7Dc31VsnjdGDL7Sxe5ekyHW
myZPMXyVJJYGavSu9RmSl93pSYk/9C9TxMzjeY9sR2+Ksaazn+jepIjEA2M2
6Fw3hb3L3u6WHumi4YmpR7Q9HoprhwffM/dKFw8CosoHmx6Kt5u61nIdzBLX
S/4xXT+84HtrP97jPJIlfTDuPD/cy7QoW/x+NDjdWDFdvB/06yPjUqXX6Pky
77l/uTwx+8S5Gq4vcsSs/2iNFfKkz8XWQn2/tUQpfRH+N11c/rfNU7LFmfxb
KeaxSSKqT9ec/kWOipy+C0aZJih9StVvJxx23kgV/ofWtNe1uiO6HKrfxnEr
VepRJoeXn6f9MkNcKFa6o6N3oogoeU2raaL0J89+fRlrrZgkDvn5fXtq2N/C
eGHNTvfEVFE5qUuc9/YtsbtKqzD9nXQxt+2NaoE/PBJFJ97/3vJVtnhzfVek
c1CaWP528m1rhNK74aO07FWQXVfiusjrXnmrW6P0bmuyUktrCvChe/U/C35/
X3TZfWKSvr/Su3nbW5OMpiyxXBfXyHUyVaT+uGOk6WmS3I/+TB9/1+pNEt8G
Ljp8oMY/ot2OLq0dwUrvBk//ff2MCY72d8W695mlNAeU3q3TqsNT9I4MEXg+
sJ+lX8HP7bEowein9G6bc38OsmgL8r7xFo2uABtbBAa6/kwU4SOeT8p4bhcN
R/64VFtB6TPmn37c3zRB6TGSP1v+leOW0l+gp05bcG23M1bNq237deXfm5f/
/7g697gW3/+PD8mp5Ry2iJzmmNNC6J2WU8JyzmE55dBCSCwihxYh1JBDtMgh
aRFJVtKBWqR0WCq1rd07tRWTUOi3z/fRdV8evz+frnXb7sN1v4+vN55XOzNu
4XD3v1hvoeSEhil5ifUUQieN+cQ9iOMDKN5FxnPa9JvI+EFb/IuMB7XpNZH5
77Z4GGLkDyNGfjRiFE9FnNqO2dOdUwOUM+ObaPUGqG9Z0olSVQf1J12PMYpr
gfHKxt8nsgBcq+qW8iaqod2sS8d4OVVwZ/K5YZLzOpi2iLqFY0OA8ydef8ow
BYg3XrMbZfMabkyg69gmo21h2NJqaecy+BkifimUaaDqOzec+loOS2vWnzM6
6iH8TgJTFKgh+3hTYhQ+IZPeQVXNqtNUQgW5CU2/+eGVMHXqrzUclslPM08f
QgQryb4///We35hKNdn3ejU01e3U3jSyL7cX5akHUVpC9rlmJFizBSNxfAzV
1SNG/jNi5G8gRvWnZP6uzd9AjOpNESN/gozHtNXNrN/5N43v0AAX7yoeC012
5JOTi3oQXvWk3SNhtNvG2VcLiR22XrYX5MOIoJhpoiIVsDxTLnJYlRAkZXWl
TNCRfQTjT/TZx6ipI3/PoMAJf5nZcuC7vb6lYorhYEnRB74tAecS99eL+SVQ
MmafUBqkIfsWVo+LdxR0qiPtqlyPAU20ZgN5nj+PeG9GmW+A8wOCQGC67shu
u3/j7w9BPzwPOePhyUxqMJ6HfNks+CSjFc9Ddkt6O1LyEp8P1M+H5iH3aT7h
WH4Bz0P2X/PWSzQbz0M2rh2xkrcez0OO7vQjXWiB5yHXVh54oHqG5yFvWV77
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
SP4eO2+KPeVXg/yo0O/T/d9dl3ApRr+Pz69/+/MRo7ol1ntvFZu3mk35N83v
/Xu6dz2l/1abb+h1xZVaf6rrN2FLGsWTPMb7O3qK8PVe9x12lyGl7g9Uv8Xz
jwsKjgeXUFy/bEG3ABXFu80n30tfUPfT1D23fnDZlF4HqjcjjkufWSGeTrHn
3fLlKf4Ua+b1HGw7k/Lz8Tb2HuDFpe4PVD9G/PsgcZy/kmL/DiPLLEEUp3sv
vMsMoO6njkn+RRYHKl5A9W78vhvPHMv4z3rX3M3bhEMpXtXmpK+UQcUXqM8X
raP6NP7++n2zof1n3WFN0i3JLYpRHupzTnIpj4y3H08ZWsGT62FSO+NHzlUF
9MwyP8xcnQcn/WOeiMh42dKh1U5xl0owZY8WWsh4WDyBzeU/lcPsTmVr2Y8N
sFZ5uBUjktLf///5LBR/II4Kkhx4ZaAYxb+IiQ+tn85qofzB8uasfE2w/qPX
Yjtla0ofim3Dmq86T6S4JPLAqGGLKF7Xu/ircBLl3+R0Vdl9mJj6/nsE598j
4ineXcU38W9SPFFutT24hOLynfPcazKp++V5q4mjnYXU9/9EPWC/MIri7ef+
nOOeprjMcdZ7WTLFjkEbntDjqftlf+bONzIO9f2HnQ4c6OxB8fA5M9xo/1kX
vDoSwV9JcWWvG2vFXtT9guaG0Dqac0TsNPzwacsTiquCmSzxc4rDT90fKiV/
/4VNhza0OWbYQnydKow1wsCKMwImGU+1KbSOzFpNxh8R46ItHc3Yt+e6SWtH
0M1Yb7JkU0sks0GJ/RtD2z01c+qV4BK9dMiwD8Uw8GmiN99Ng/0NX/mvKxC5
aiA6ZWyt7GMN7Ovj6iRN0uE5QOad9qcsiTr4+aculk4yyqsi/QeU50V6ACiv
e3HXnRqBgxzvc0j/8HILO4S5ywR9H23qQZj0MPjMqVJemAn70JxuCvjB8leB
+cWZLJpcCvZxt5bzV6rgo9ubEbaEFEyerV4J8jSwprDsEltXB5sbF42QPtBA
4M9N/lJDHcxNSbko66WH9XYjtrHHqUHq/umng4Me++gQs2NP0W8qoM37gTW7
X+XBOvX7j5xbCujw+Kw0XpYH0y+NDeR2IiDD/sRP0chKeDJ1/xORDQG3Foy4
zxxTCUlf3rDEG7VAv39UZCHjwj6n+wstQVrs6/N1wbb2tBIDFK5/6SGMbYQw
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
HKTngfMRf+dr8fn2rz4IYjSvixjpfyBG87iIkZ4IYjTfi/mvfgXifcOuVroK
T4HQrp03d4IZ61yOWrBsuFhnhnHrhNGWchP45tneFhnNYJ16Z4pQZoLwC1UE
bz75/uxTVOFqfxrcj8xr4iwkz20tz54u456GjDu56bJpKpCsGXiHRpOCtc2K
cOYlDUhPnElm8+tgzT8/FvB/6bCuJPLZPc7wvhROvw6dig4YOU5qeHetvG9w
Qhn29X0v31JnSSyD9YxB+aJDjTCnnW+guEs95cPr/rm/s309PA4tirUo9eB3
e7MP/ymBfYXfLXiYLSkmIDXDls74Lsf+YMjnA+lD7oJlAuZXOazK8BjmXX8L
aG0z63m+auwH5hRjCWV7qSk9xTPflvF91PDNcvMF3ecNrPDzypTkNGL/rwPq
0x5CcSPWHxxlPjdMmt0IgZwJXb1K64F2yfYgs0IJmbHTDgUnFMOTo4fi6FVK
WN3pgFIsKgb/L2Jv/jgNzLxy5Qj/aQ30UQxZw52ggT6qp5MY0hrIWeDlJI3V
wYoD8eu5/VQQNvnZBPFJHcxMHgLiASpwagiYImxvhmTTUk8+3QhlO0dckViZ
wfPwwByRjRF+pM/cwiTXd9x3jaCT6/a1e4pERhX2s84PmT1WalDBRfXGcU0r
XoMudfV3FrmO8hMhY/uesXg2Yv9qhxJtKwbJkkUuDRKn9zDzZ+uXApJRvkAa
lb+efV0Penf7azIOAdv7RVfw0vQgrG7oSiP50pLUCzKSH3X8/o5H8rpRN/z4
bkrsv233dOczkasSxkep9WLFY5jaEneSTq6j/MuTQ/NHSZMI7Lcd3KfXOUsi
AVair1MZQdVwljP+Hy65jvIhfd6Zfjt810JsY2iVwKKA4m33g9gtWnDZ7z5d
/EkBn65VTBSTHJjt24lBrodNiC3j+RqxH/fAFytchcuM8HHUATXnlhYW/Nlu
RSPXUT7jDVfVTzrBBLuOZuxgrtfD4h/j9tFZJvg25EcFb4Me73tInxz1JyG9
brTv2qYOiKPTVZDy3um8LMKA/QTRvA/SOdwRsqU7sdcAjzKKVnF/aMD9YLc4
encV9m9DfUxI365LD/8OjK4qkDfsGjgstgQS6u6s5m7TYL81NO+D9NB4m37V
8UI04L/gsUxWUAvN45ZOEL/RgetptrtYpMLzQEiH8VnRxQxJqQ7+8RkUS7+g
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
    "], {{
      {RGBColor[0, 1, 0], Opacity[0.5], EdgeForm[None], 
       GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
ztMN3uNTDzn0yqj7R7QLjBzgn6i7lfpfyFhuDV+NbACecxv9/NtMc5f6e4HS
tip/UPUGiUftJB71kUZu4+8Y2+/Ftwz8T3zbfNcjVW9EleWvqwMPTauU5+y1
uH8Cz1hhPzIsxjv/lTGP7Ar9CvKQhpTXPebRFimvFWtlRuSM1fX0Xxaq37Vp
jwtod4i2mQdpf92U1xauPxBv9Kp40galSsrrG3PzZXoOReY+4d4TzSuUK10s
XCPm0JS/UWj5Tj8SzWsqb6HUDj0PvJb6cIHGxcZKd4h+hWhGqjyt1Ab5jWga
i+ZKtVfLvlE0L4hmhMqrlKbDEyndjc5E9EtEXyf6PHNdyuOotfCPC18WfoDe
UVnv6C69o5fUzt5qI6t0qdroqnRvyjJDnifyvVdEM0rleaX10U+pnXr4d9G9
qvSYUq3wJaV5ei51yhvDM1VZVsBeED0Fe3/2gsid2L+zJrDfG5OwvAhZyvEZ
y2freF6iWSh4V+Y75Y8G/mXlLyktSFk3hG4HmcPYhOWEyE/QiyEPRob8tugW
KTXV9WC1+bjg3ZKWAyFHQuZzUsZyZGjeUb5YqXnSujDkwciBp2YsIwa/kZ7J
2XoG/6as40OWjAx8G60XE4XfUfiddK8nlQ9LWpeI3J99KPJ74OYxt64TMLoG
4C4x3pkj+AZ/C5jvpbfaP1TtD0lZxs+6SRtbqD+XCZ9Luy/rRn/OVR82qLVc
nefRKp7JjmrnSNEOVztnqbx9reXqpytvW2v5P/97vfjvb4ruDaUnkC+p7lGq
u4fgZ5BnJK3T+Vbj43Lha9LW26EHRQ42UD9HCLdbyv+vRfzHPYU/RviRKcvN
oK+KnPrIOXm3vGN4sGGiP1r0e6XMm4FHrogOrU3cq030hbo1Gm+NlB6usn5s
/WjnOdW/Imn9ETJD9JfIjdGDobesDxwwMqv1dc8XVPZI4DoEDfAGQbNcbV4V
18zXzNs/R//bx/hcpXYOVxoq2qnIYGqtP4UOmRbrHTjqtmd9yViXw9rJ97FZ
fCP/xBzN3IpcE5k2ss1dAx4a8y7zfEPkXWIsUb5J0KP3BKYesszNYsysjDqb
Ba5r4KHdNOrCC24a8+QV6vPmSg/Ed9k1+ovMsluMN76z7vGtIWftHuOKMcU3
RjlzCd9tk6DdImj4VnrEtzMkaR1/z8BtGWMJWwJ0E73je9oyvjF0Yz2CBr06
9fIxT3SLuYI2qYtsfOek5QOsI9vEvcCTc43coGfg+8f/2zz+I7YE6Ej6JKyf
2SbqQsd8iv6FtvtE+9yzV9Cg0+8T7dMH5t5t47p33CulsXN20jIjylnz0MvA
h8GPsY7tkrStA7oZYPQ0yPahA2Y+H5q0DQQ6k6xunkG2VuUy6iGXxmZgQLSP
LmdQfCP9o31wAwMuR9sDAkZfODhoyNHBILenzzvHf98p+gCefKcYh4MCPzT6
OThosG2gHdpGD7NT4HmGQ2I8bBf/mT6iRxoY/dk+8OV4j0PimfeO/mwb/2Ng
8v99H5r8T1/iXjvrwQxRerTK8ltkCcg922ruPU3v5qOUZcysLY35X6LdQWlB
leXKrANimRKrNQD/Vjo5eFX4cHgEZLnIKpBLtlabp6jND1LmufeM9/tRwnz9
hwnvJdhTwFvxh/5Vm9PU5gaqe47qfoFsVPBZgj9LmdeG94bHGaR+DVSaz7wo
mjNE80nK8nLWW6HW8OPw8/BNyJ+RtSAPRb6NvBOd9cyEZXfIET9PWZaHrDQl
mipk41Ues+CQ/3VSw+fpXl+J9hPBg5Avad3oq8n7MOF35v8KvwPyN+HHaILf
Wdfn6/o4Td7vF83T7KQH/JA+qKdU/qnKB6t8K9FvjJwnb/35WNHsJpo/RPOV
aHYWbruc5a0HR39OyJjnGMv/FM2O8LKi+ULwTsjZBH8peIjgfoInZ8wrjBP9
/IrWBKVj1e/fkQnRvvq2SvA6ggewzqisGXI+wTurP3PVnyXqz1DBDwt+RvCV
Km+OrFY0f6tuK9XdXvC/gtsKHiT45Iz5j/G679Wibal0EWsOMlml8wU30/O+
SfQDBbdSn08W/j3BGwu+RHCV0oiUeWL0qMihsVnBXgVdPTJj5Lf76xkOTll+
lY9xxHvNpi2zps4OKcuIsX04J/K1smTkxuwd0RseEu3P0bt7V//neXRVKe8J
kUmfHzn0XdXPS1WeTnu8cE/G1+4p89zowOtTllch0+pTa/kBdjXVacsFgN/R
vd5WKqS934e2L+tjyvsK7CzYox8b3w574knxDSI/538j79sz5b0EOuphKe+v
0O2ztz4uvkH05/1iTmMOPj6+03WQzcaebUu9lx7oLgTvnXLOHvBYbIJqvV88
UP19Jm/eG73HlSpfL+E99InxzV6k939hxvux8aJ/Om+e/wjBj+a9BzkUHVPe
+w50YtyHveXByGnzXqMP1/0OqzV/fRk4jeuf4Qd1fUSteeSjlY6qNQ97juqe
rbSP6p6m/FSlUYLPVH6G0uiUv6ez45t6NPjiNddqf67a/1Xt7yfaxXnvca7A
tkX437OeP86J8bMweGeujxb9orz3OxsJni74D/opZvmdor/zVSnzwoyjRcHP
8n6Y5y6O53ZEjDPG2GPBIzP2d493+WHMwRfGGHgieEze55PBz9IWc+H0mA8X
B9/K9ePBC1N/Lz2vFYKvTnpuviTGWOMq2y3Bd6bV75mq00vpkJT5QcbxNcI/
rWfyZ9a8HzhkYofEt7rGriz4aNrdTfd6VvDlgvcUvIfSE7rH7sqfjzE0Pcpb
qW6pyjZY8OvDRTOMvZCu66tsawX/OlK4EUqLdb2Oxuwc9Wlyyt8o3ywynH/1
/Gur3N7BKfPFlF2vufCXoueqK+IZtGad1VxX1Fx3m+a6Kn0vdVV+HleJ/rui
5+BfU577mVOuFf7HoufavqpbUt1ZqptR3abR3/7C1wp/h/CbqJ8bs09Grq3n
01bpKrXVXbjNsTtBFqDx00H/ZZzwJ+n/nVjrdzVJ6bhaP8sTlI6v9fO7Rm20
QpYn+ozqdlLd8SnPfcyBrCFd1fZmSk+p/dtifqXsWuWt0duIPq+6G6vu/jFW
Tojxw3zJf2W+bJS2rIHvfJAYjfPEaJ2sNEfP4W6lfVReQWeqdk7gm0aPVPRz
HCj6c0U7Ram5aGaJ5kTR3IfuRmlf1X0YnZHSfoK3F/05oj1J6QS181HR77JB
de/Exk91H0T/pTQGnYKe8eN6xvcpnSz6L4p+B7vp+bdS2fPC/6b39BF7/SrL
4ZCvIVtbGjiu70Bfhd6jyvagyN++YV0QfHfGdqIb6bl3VjqLOnrXrZUuEf52
fQ+bK++q9Kj6UKfUVrjrlV/HvFllWR/yJ+wqH1K9tkqXi36hypsqtRP9Hupz
a/X5RfW5ScbfHjLox1TeXGl90SxQvQ7oAFQ+T/n6SlehM1bdNqr7suouEm0L
pfaiv0rPbJG+2RqlrbV+Xadn1i7t74Hvgr3b1aJZrPKS0pWCH1VerfSc6ndU
Ok3t/6NvanVz7zPRyaBfQbeyUnRTeQ9KqwRPU95B6f2UZbiPKr2bsgyaOn+J
5lSVd1T6Te392tw6mw9TluEuVPpDuJXNrQvpr/6sg75N9B+nLMN9TGm12jld
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
P4r3zjf9YXzXrXOWs1K2vmjXR9Zc7bX041gT2+Qsl+X6efxBlQbrej/1f0yt
5ZfjlMbWWg56Hjq/BstHV4h2udIOon9Z+UtKOwpul7MckbVoRqxzrFmsM1/F
WtM2ZxkkZfur3fG11huwpn0Z69d7au/rZpZXr5+zPJL6G+YsU2TuvyXWm2dj
rfg21osOOcsg15SpnWeUBqlO+5xlmaxjHXOWZVKHNeG7WBfuijVgeaxvX8ca
1ylnmStlG+Qs76QOa8v3sb50zlkWy/hgzv4p5u1ZIe/k+rNYo1jPNspZpshc
/qC+9y7C75Tx3P9zzO3wCPAMrPkfxzr/a6xVrFmsw6y3rL+smVvqXf+Q91z+
aaxFlH0Sazt1WEe5P2vjAxn70iO7G5Z2zB4YYtY01jvWn8+DF2NNnR1831TW
x7z97dnbfhFrGnXGanzsknZcI/wX+XY3h3+rsnzxcMG7ph2/BxzrLW3D62Hr
9E/Q3Juxzz916BN9PELgqmbWdZVTtpOiDPzotOM2VWOnkbJc7Tjhd087/lCV
rtMpywKPEn5uxjECkB8+krH/OWV7ph2/Clrsm9JB/2jGfuzI/bBjor0jhR+R
dmyqbMqJ8mMStufKBtwEnbX6PSfnesmoi41YPvq5d9pxqrhenLEPPHI87Lz4
T8cnnBcChreFH4a//jr430bBc8N7o+P9sZn51CJ9ztjfnufySzPzsiVkxRnr
h6nzezPzrLWCm4gH2Fl8cjvNGz31fZaVfhVdRt9TnebbIRnbx2FTB38HPwK/
iq4Vezrs6+Bbj1Ibw7GlULvfZK23hG5Mxvw1dN9mrcNsFnwn/Cd+bt9lrXvk
Gps+7AbhW+FlocWvj5y66DrHZsxv0qfvs9YDr+U1yfEPHJcx/4jd5A9Z6x7h
BbHlAQefiO0ONjzwcd9kzJdxjY0hNofwdMTygheDn9ovY56a/l2cM09E2b4Z
84nUuS/jMd1a8IMZf3ttkF1nPBbb8i4zHovtBD+Z8TjoIPgLPfP7c27jO8Hz
cq73eMbvtb1ovhb+oZzb/lHwgpzb2xI7wJRlsL8L/0TO9Q7U/m6Q5p0WSqvY
i+V8z18EPyZ4oeBtS/Yz3zh4ZZ4Tfo59S/YhR36MLhrfY3iBY1OWIyNDnpSy
XBiZ8MCS/ca5pl2+pfUFb1eynzl1BmhMPaP7DlS6QrzlFOXbcy38MuWDlY5O
+Z7Iq68SzVThBuU8nrpGH67Lmc+gT9fnrPPGH3pc5IyTwdiuqmzHnP8TYwDd
NOOM8YZOHL13j4Cv0b1OFu0O1FHd5cqHoDcTfprynXIeX4w39PjYIPQM+Iac
dee0NQQ7R3Rf6NNy1jNBd73aOUXXO1PWRPNhnZ6RUl7vopnq7IHuSfnLKh+a
s868V/SZvRl7NOTfB8b+FXhztblc47A7Y1Fz8hfYsqh8dtqycHTT44QbiyxY
7f+WdzyvPsLfmLOennv8kXfcrr6CB6udQQ3Wb/+Vdxyufin7MGEHjF3h0fre
99D3PlNlozK228X+uBG8pf7DSOGaaMx9r/wQlW0i+gZsiZTqhP9O+IOFn6nn
sEjP4HqlBzVG/lTdvVS2KbY1om3BXkD41cKP4HsSvFLwnoI3E00bvk/2i2rn
cbUxU+kmwU+QK/XS83lJz2Zb9Je677eqd5DuOxdFkNLeuj5O9ItFe6nSzYKf
VH5LnW2z+U/YWHfVvdrrPu1Yc9XOCrXXi3klaztIbKvxISNfa1+9Y8DHqO5e
7P1U9xrld6nOPug+1LcXBW+tNDpju0yebw/1a92S9XvYwA6JZ16vZ9tB//3Q
TNiSxlyFTSJ2mNjMYo+/S8DbqP2X1XYfpX5Z291Stpf6v7769HXO9qrYsmKD
jb/XrtHmQNV9TXW2V/pa9K8qH6A0FT8F9t6ivU3Paqme0x1K34vmdeEHZ+2j
hu0168OgrNcArrHbHR74nbKeT7ET31H3ekPXO2Tto7Z7rAO7CP+WcDtnwwc6
8EOzXgOw9d4u6/mXfuNnBo716nf1522V7ao0TO28o3y3rO2D9wqaP0XzrnC7
Kw3Pes3A1h6bz5GxVozPeN+JDfhCPf9HiXvIvdXme6qzR9Y2/5Rjt42PBntP
YuWNSVnviw4XvxL2v8TEQ7cLHrv9J5H7KR3IPK98kdIBGfutsC8m9t3P6ueb
us8QxlzJcfpo+1Y9/yV69rOUVmXt07Afa43KU0oT1M7WJdcZm7Lf3oj4X+yz
94u+ddNY2FDXHZF5qM2n1d5tSo9gj690cMa0Y4K+O7Z9ot1EaZ7Ks0oHiWZz
4bsI11lpktp5Rm1crnSi4GeVX4kNq+Blyq+usx0n9pyMwX/y9rE5gLUfRx9s
enimon9OtNcqdWDfRlxIjcF0wf4qE0TTUfguwo8TfgPBmwoeL7i94I7Y0Fb7
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
TvNRP+WfVvs5NVbdxaq7XdFrLWsucvL1hF8m/GFFx0UgfgI+WE2Ef1L47YkX
go6t2v1m/Ye/Qj7PWCNOPPL5NqJ/TvSHY68p+HnBRxQdl4H4DPh4VYR/Wvgd
hG8q+Cni8hcdf4E4DPh4sfbDAyCrby+aF0RzpGgaBC8RvBP7XY3nr0Jm3VH4
5cIfVXTcBWIyEBeeOAjEQ8BXDPk6snfk7s+o7ichi0e+jnwee2Tk48jJkZG3
UJtL1ebOavMSfZv9Qob+LDZc1a6DXJz7IwvfULzQinp/N7sX7bPEt7FG9pyz
PPs51f0uZNzIfPkW18TqzlqejIz5edH8FDLu5YJXhaz55orX7xGCb6t4nR4p
+K6K19RROcvNaRsZ/Fslrz2jdT274rV875xj1ewT3/UBdX53vEPOSae/+FeN
LlrGx7exQPXmVxxzgTWK9Y54Gnti01rttWoPwZlql7FugSNmx0Oq92DFcT32
Ek2u2uvoPOEerjjGx/3K76s4JsgI0eSrvW6x1kFLPBDWGXDE/nhDa+IL9Z6b
7lG9ORXH+Ni76PWVWNDwXvBgxIjgHHnmH+SRnCPPf0JOOapomSZl+xQto2T+
4kx5cuSU+xYtv2NOHFO0nI65b6Tgfwq+B2ddgUNux/lT0CL/269o2RzzHe8C
Ge2r8NVFy5jWzo/kyLTOq7e8ifPJme9ZU5CB4d8DDhkVfjCcNY5MiLMjrotv
ijXs6KDBX+e4qHtxvWVG1Lmo3nIizjZnjWLNRRZ1Qb3lVtRhnWO9Q16F3frk
gPkWT4nvsWMT25yiu9ugiW1F155LMTXmhEvrLd+hPnPYlJjHGGsnx1yxYRPb
q3LduYntUrkH698J8R/f1XN7B/lsznPVtJivOjWxTSvX+JAdH//lsYpj02Pj
/kTFceSxX/+y5LPTzhG8rOJzkvDB4Hy5NeeXqM3PSj6T7Gxdf1zyuWVnCV5a
cVwh7GZeqPjsKHwwXq/4TCz8PSbqO9qw7LZuj5y2Z0fOuvlixedI4YNxR9l+
qpzXQRwE4iEQC464BsQ3aBuycGTj+NUSF4FYCsRDe6riWPnYxxNrgfgMxGT7
oOSz087MOU4DMRyah+wcWTp+r7PL9r9l3BB3gZgMxFsjzgLxFlqF/Bv5+Ych
O0cGjq/rKxWffYWfCeeT0HfWCPZCj/C+UvbLxE8T39W7yvbd5dyPu8v2ueWc
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
006PvHkE8SGAxYT92eFPQM84ne8H3xP8JZRbxfuFL2XLkN/UMpJrVGe/B9zi
jNE4Bvgm8c/M1frW3DP8GCq35VkN3TYhD673OnK/2Bf7X6/e7T9UZ56w7Vq8
z7e17MwzUWfd9mEzlJwcyQ9LfqvO8vA4xu3CBq4C7GmP7TuGPbxoyNTbsN7t
P1JnzgOOGW4ydKNCD4fBTi3z6+0U7WDHeXHecJVhz/HCi7BLi3W8U7vFew0n
Pdz07drnXipHt3gcsWvY8N5hxzq4jHu02B5/16h2ryNTl//pknX+T48OmXKv
kC8ImT48bVCXPjN88Ny7vpL3Ubl3i30LYNId0OKx/34t5rLHz8B27MDN4/x2
iWvyT9SnLvnAu8bxX93gOgvXm/eedhatN1897YNxB289633qrds/9gt23n6x
X+ohg63XEL42njeOHRmf2yhyADimOnPSw03fWe/ykBZj2YFbh8zYHw75I1qM
I4fu4NAf1mKeevwAcNUjd9WbQ546S0s+TuWxWo6rM/Yc7eAHADvvsKhLPWTw
69h+eNiMVTmmxf9WfHxH8wzU+Z4cGfeFezUu7lf3OIcx1Db1rvue7C9qcVvw
cDE+GxfPD+0dFW0iH9Ni3wL/4LGx393arWf/f9fZ/tIojw573mPeZ74nm9X7
fAfUOa5qROgPVDvHt9j3eKLKE7SMlLxjveXlJd+g8uQW41ty3bAHV/PydtfB
/rqWqF9nW+7joZIvaXEd7K9q97ZDY1/jw37Pdsv49y5JbH9ctHNK7Lcbn5Fn
6lrZn8b9qHN5eotxMm9q8Try3u2u+3TYnBr2+7XbHt8gz/sZ8S7w3E6I53m3
etvvVmdsPvS8T924k//Ec31mPM/gB48qut8NNh8+ZJ5xcPfAYeSZHQSea9zr
bmxEnrVuPMSWeO7O+X/P27nxbHPPz4u6fCfOb3Hfm2eM78Ke8TxeGM/VFvW2
4dkjloW6PDtTVE5u8fcK24uiTZ6Li+PZGBv6MaG7JO7dpSonalmpzu/RxaHf
p876ntzTxHbYPN5ieZDkSWCy8nzU+bguiGO7gudXy6rR/mVhv3+d9aTbnZzY
DpsnWyxvXOfyypD34tmSXOZey/5qyWvUubxGy5YhXxX6p1u8jn5qu21Oim/d
9fG88exfG88/zzJ6vkvorovnlu//tSGf2K2P553rdmzUu6G7Te3rlpZ5lCnz
nq8b4xnj+bypZb7upniGb233OY6v87f3xtDfrHJStEN7N4fMfb1Vcq3e784N
8R7eGvedruVzYb9WtEP9tev8T5kSz8bkkPmO3af9Tm2ZF2Jd94jkuyRX66y7
LfT8H6a1+B/BwraF6r19WrxfD6ru7ZL1msz7fyD3UnmnyjtarJsWbdIG/4s7
W+bb3hF17wg97919Kme1zP9H3Bfy3Sqnt/h/dFfIHDMl23jH+V/OkLxE/Mvu
Dnt093Bssp8ZMrb8p2aGDA/yvRxb3fx9LFbvfaPvqHc97PuFblbYP6vymZZ5
4YHzdBwz/zWe9yfimee+PBr36H6VD3C+8T96sMX/Mha29a/3dvR8Nx7H58/x
1Pk/h7yUykdUPtxi3YPRJm3wT3ukZb7tw1H34dDz/eFZezaO+fkG75fj4do9
1uJ3lm8Acs94l3n/J8a14Lx4Tx8LPfbonmyZ/y4jcw14R59q8btMybvKe7pa
D1+TteNdfjpsOf+nwuboel9b3FhPNfhech+fj+Pneh5GvHHEbg7X9/rVFvOH
U2921KV8/v+9I7wzXINVe3jbWnEfn497Cc82vNtwim6iNl9umc+nDdc2PJ8b
4advMbf2BpJfaDFH94bwhtfMrwzHNlzb8DTCrQ0/ODyi5IW/3mLO7Wbp32wx
Pycc4PCbw6u5BTG8kj9rCJz7FsdBXJU4NoJ1cP6ZfwdfCo4A5ujBnYLrG35w
eD6vSYxRxbarE2NXUWfRmuffwcS6NjEuFevz+AFajDt1XWJ8KNaJoSGWBty7
GxJj57F+Y2LsPGJrrk8cn0FcBXE26MDMI4aGWBpw9W5OHIdBbAHz+szvE7vB
nDpz68RcTEoct8G2mxJj21GfWATqEYuxpa7PW8g6x1sSx3BQf289D98GThm4
a+DyEe8D9hkYaMxv7wZvaGD2wdPB8RJLcmviOAxiCPaQzXuBmwZeGlhqxNeA
8QYuHHEfxBlgS7zJvrL/NTDj9pL8WeCvgX/GsRATtEnNvNrgXm1aM2c2uFdb
1MxvDe7Vwaq7RcQ3b1szjzUYUjvVzCcNjtVWNXNjg41FbDJxzuDq7a+6q0Tc
M7HVxGyDM0dMNrHZYMVtXzPvNfhZBxF/HnHbBxL3HnHexFOzf3DpyEEhV4V4
27Hw3+W8Tmw4sf3ELx8i/dYRq038NO8imHy71MxNCJbTobJ5LvIByA0jR4y8
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
ETLztMzvMlf7PPy3RZ8H83sL5DzHB24O+DnkwpADRP7Y2Y3GIAS3kDwyyr9D
Bo+QvB1ydsjdQT5H9i+q/T2K3k57ddHmC9LvXnQb5NygP7fRmIb/RTsvyWbP
ouutWvB3/+GsMRH/imt+AddI25tUHlrz/7Uh53m/njnP/TF315zz/B2YT005
4z4xd9eS8/wdc56ZnOc98Vtnc/ZdL13zPzWv9ZW0/0HE1WhZtma/cCHnObdc
zvNuK9T870y0vnLN/8IUnpiKeZ2LYBJVzN/cis+x4v93BX9lxf/RNsnvVfzP
rubMeQb3GVhNXIe1aUfn/k7F/YYy/sSKY1baAzMd7HRy0ygXChksKLChmFf8
oOL+RC3n72WvnL+ZfM965/xN43/Iv5L/DNe2j+QzevifyD+a/8wrukcvxz+b
7+iiOX9L+f4tlvM3kHk/eMuYJxytfX6a+J/9huq9Hv/ROSr3Kvp4+aei4//H
/xxb/vWvwXkU/+/DwTGo+dzelG7u/+tPUN4T/7Glcv7HfVYxjvxALWvW/K1c
KWfMlQE547cwp8fcH/OBn1aM3b80/tOK8feX0fJlxXj3y+f8jVw552/mVxVj
3K+Q87wfvF/M731eMf7+slp+rNjPS7t881bJ+bv3aGLeMp6tbyvm1lo9nhWe
GTi4mM9kfpM5zG8q5glj22o19yf65/x9XTXnfyvPFm3A2fVDxf+VteLZZT/w
nn1fcf9jTa1/VzFfF9zgpZxLeL04f44Xf/NPFfuauY6HqNw1Zx/SzxX7rLlG
v1Q8PzEkrhc6/NZH1HzPNoh7QBv40bku2OK3/rVinzU4/b9X7EfmmoJBBhYZ
vjSuLzp81cvlbItv+7eKfdbd94YS3zbv74aSX6r3t3lEzt9nrht+95/qjQME
btHvPf1sDJc8rtHv+EY8m/V+lzeR/Irkw/K2x49NuVnU5Vu4Zc7fSb4DG0t+
ud7fwq1y/h5yHTaX/Fujv81b5PwN/6Lic+Gc+BZunfP38DTZn1oz/zHxdsTd
/RrxdMTd4ds7UOe9Q+iJgyNGDp/cAfQlcvYvHiR5p7An9o4YvD8j5o4YNnx+
9BNHhv2hst899AdLHhX2xBTuEvd9f/owcV8Ok7xn7PdEHe8JNWNrEo+2d7xn
4FqBcwW2+ZHaPrZmbFbGWHvl7MNr1D/u4rLrgJsFNhf45+BkgZcFZvjJqndS
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
Ofxg6pNXQ34NOPzPVI0XAL7+s1Xn1b8axzc3b1yox6vO8wfX/5zQw2PyXNW5
+vAAzK46x/71eG7gZYDfYW6cL/afqlxc35CL9b/4Wv+Ld7T+dizIN+M3C5m5
nu1S3xvuC3jH2IGTzHbsZst+29Qy9u/Fffywh/fJtd62p3W084Ts/y14HdsT
G1z2VZufJbbnvOskf0Q7WnZS+5/lzf+O7mOOV+3UJz6fT7TskFoP33pS73p9
6lxS50JyB+ptu3id2/s02mxUO5/zzEbbH0U7lXrrlqhzPey5bpTUf4d55IKv
J/IXebcDlz0l6+9Kv7+O7Tu+R7SpfX0l+ctYkCfjT2vy+m3a19ehh2uVkvUf
iT3W/fpW8jexIL/WwyXtV9XGkU3etrLa2TV1XdrpqWNsKjiH6Eq184P039Nu
3vLVaufoJutWq7OObW3SXS37nyX/FHXY9qbsj2uybk3Z/5K3zTU9rEN+lzzc
1NvQfxfHzHWAI+nXvLmlsMWmpvZ+y1tPnvvvea8j/xry4EaXbNtG9n+q/CPv
/Pe/8l5HpmR92ybzSmED/9QfYTOE+d/UNtj/o/JfLSObLP+dd+78mNR6ZMp/
QoaXCRv4pP4O/Xpq88DU143rCTfUf3lzSDXo2jdqGd1kHYAz26udI+GgLBgD
AR3y9rI5NPU5cu7o6sIGTqf6gnmgaBOZHNKjUre/W7TDPro5p7jvcDyxvSFs
6kMeqmMelfpZ5bldoOBnheeEkvW9m8zr1FwwD1QGjN+CcQMom0POqcxrOUD2
x6SuSzvNYb9ho0vq79NkW+qAJ9AU+91ANtnQf8t4IbU97cMDxTZ4o9iejbon
pG4LuVVlSUsf5i/A7AWTWvrxskkLxjRAhzymyVxk2MGhloY9NueTz8m5aV8z
am6X9ZNTt0+uJbaFsL9I9mXOs4e3t4ZNMeS7G/0t4bswkdgwtVkpuA4L8j3E
eODz4hqBryubWsHrLMj3Ep+pY6gWnPvZHnryOilZX0LnvqDKhbTcx3ejyeu5
HtYtrKUvvvOa19l2euq6tLNw1CU/tBrHxr7OTL0NfW+Vi2n5We0vqrJXwTEJ
lKwPJGYh9Ac1uA3aWryncdzZNlWP6jmp7anLd5d2+VbTdh8tZ+jYv452qLNH
yXq+/9j0DrlPHA8y/Qb6xfD39S34G833ed12vVcF8zPsWfI29B0q+xX8reb+
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
DpeSdfww9B0X/n/6BZP5XLqsXx7tLJJ4rrZ/D8tL9rAveNHQs2+OeWeVi6ns
nXhOk+29wmaRkOGNxbYt7K9osv2VDf7mLhZ1+3CfE/u66b8ukXh+83XZdXJu
oVs89JR9/p/MNvoVr8i+L/vu4bJfYh/7konbYR4TXUfifgX9b+TVQt835KUT
3zv8VP0T16cuuqXjnjKf1CX5rh7uQ/cPG86P85rHM5hYT9/jpQYf8yI9fCxs
w7e8TrTD+OvcJrd/i2wHqFwq8fiI/ity9z4HhP1SIaNfVuUyieenLmiyPKXB
5zUkrgM67PCPXSyb5SRPk7x8Ypk5qZUT8/Uyd4O/adloEx/Z8mGDLTK+rxVU
rpjY37WQtg3iuOvMu0Q7y9R7O3bMT13aZPnOBvvFVgz9Kon3zX7XVLlG4ueO
d3DVxO817+VqicfXGzZZz3dlpaiLT55x1CrRzkZNtv8l3t3V4z2lP7pmtE89
7PHJs0/0jJE3brI97/2icTwfxPPSL56TtRKf78twiKgclthPcgH92tDDn7xO
1OWdWCfeC+YW1otng3awP6yHn5114/np5q3kXWF+Zkg8t/snrvN6nZ+j9eJZ
4l0YHO8Rc0eD471YO+w5ngfw5yfm7cXns3HiefOhKjdI7FN6GP98Yk5efE3o
Z4UNdTeX/sDE69hvlNh+ix5ua6OQH8OPn5i3t7s+dblO6EdIPjix/SnRzsYh
823nm8m/gDn4YWG/W+LngGdgM5Wb8gzovA5PvA6/JPPxm4We/u6WiefT91W5
j5Y50j/Z4LpwZ9N/2jxxvRGJ7a8NeQstF0l+psHyhdH25rGv2fjtE3N5Mwe/
teRLerg/ul3i+XR02yTmzXwRn3xijm/6zei7620VdY9MvI79yMT2l/ZwWyND
5luEP51v1JjEx8ox029Dz//nqMT210c724XMtRgR58X7jd+cbwL9QGTee96L
neOdwgc26v+9g9wD/qn0z/B3d7/HyHwHmPPaOd4p/p3UbQp/165x7/BZ7R7v
I22hbw7/2G5hQ71dYr/EBOwb947nYvd4Nt7Qe7q35LPi/7ln4n/oxDrL/Fv5
VuGv53vFd2CPeLboa6Ln27Z76Dke6u0VdfeOZ4b2b2j3+hjJl8ludLyztbBv
i/dsdLyb1OOYk/gu7pf42wgn1HGJOQrR7R/28GkfEO/UWqGnHlzVcGDzbVm1
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
ZFPp9PjslmgLXALKSSGT1wL/L3Fit5Utbyf9tLLXkeH4nRw8v5Ssj+zpvBNk
YsmmhA16uIx4psCVnxT7hRsKfrm3ysYQom32cTv9YpV3aNm+p8vb/5/Mtjtb
rWMd3pgTdE7Ha1lA+yh16Jy19NG2PXS+WekfKju3Cc5iYvPuVjldyw49fX7s
G74acnRol9gztt8VNsjz6tCPLpvXeMee3s42OGrIr0JPrOC22u/HHeZ/vk77
v7bTXO7g7rdWzCsFjyjvLe/szroO25Qd27yr5G3LjjcGlw6cOrBlP1a5a9n4
/XCfDo93bUa827zXcKhuEu8+PKObxjsOzy7vM+/yTbyvtKNj+4TrUjauP7qt
yvYX7qBj2LrsuGj4QvlG8H3gH75F2Xi8n6rcnW+H7uNHKncpm3/gQ5WjyuYl
GF/yWItx1sklj6MYQ4HhApYLmMLgEIFHBAbycSWP6xjTLbyg9tVhzvITSh77
Me4bKvkGyWe0mrec7d+2mIeTbwrfkw9U7lw2ZwL/9p3KxsWFkxaO2u9azEHK
d41vGnyifLP4XoEVBx4d+MLT49vEd2nDkq8d1w2/5iIl46GSq/Vd2f6SK3Sf
r+z0PSZH73/xnJCL91k8S+THfS55p57mXvskrj+8cx/H/YVr7tO4tvDUfRTX
ljyC38vmhbhU+7ms0981OBn4xsD3BUcZ3zC4HSZq+yV8O8BgUnlBp7+nXIM/
4zpcJN2FWpKKsUp4P8FIuVq6q/h2VMxd8F7Z/U24CN4vux9Kjs+PZfPGkHv1
Q9m+IvJ6fiqbK4bcum/i/SWX7duyv2nkfH1ftv+JnLWv4ltBjuEX3L+ezuv5
uWw+GXJYfi2bZwOuvw/jGYMD8IO41+TC/FY2/wbPxR/xbJCv93V8u8jH+aVs
Phy47L4smxPgmJJ9B/gN+G7x/bpNtjPLfue5j/frn3uflu1k+6DKB7RsL/mF
Vue64xN7sNW56PjBwCrbu2S8slmyvVfLSK3fqfIOLVtF3Drx6/jJpkt3l5at
tT6h5Bhu4rfJ9+9ftj/j+Vbn7eO7u0y2l/f1szlD5d1atoGPUeU9WraVPFH2
40rOn75dumlatuRZVt9hquQRJfcjJveNvoSO+ciSY+nBbNu3ZNy2Ldr8beK7
BMbY/iXjjK2kZ2TFTvOhrqJy5U7zoRb17qZaFis7Dp1zgTdjkvY1SfvajLwl
ybdI3hz831afJ/7J87Svc7XsXnJ5TpvzMPgu7hbHAB7bPiVjsp2t7Wdp2SW+
o+SK8C0FT+6MkmPpwZk7reQ4eeLribOHQwOf9MCSMWLPVBtnaNkJzj0d1599
zZm6aZu/0bQJBypcqGDjndbq7xrfNPY/oc37hjOVfxv/NXzPy5Ts5/5Z7f3S
11yt36n8vq85XPFVL18yJi4+9aVLxt8FkxdsXvzT4O+C94tPHb9aV8mYvvi8
ly3Zd76Crv3yneapPaXV3995395Wf0P5fhKbT4w+3Cbg8J1bcqw+5Tkhg9t3
dsm5AJRnhQwm34R4JskVQA9XCZyyXCdwAbnep8c1v4w81pJz6+Ev5bzBI7xC
60eXnJdPLgI5DHCzcH9OjXt0Uqv/B/wL4LPlOoGdOb7V7yrv6ZL6z36kZ+wq
vjXSH1EybsFqugardprzgON6vexje1D2vTr9zVlE5cJantK2B6RfqNPfcPyL
cOVyTvj84MHlfg5dWN/NTvfV1pe8Qaf7ajwLc8t+Hnj2Honnj2f10XheOe9X
yz7351W+UDaf82C1sW6nORjWUzmk07wL+Cbh3OVZ217H9o3O8Xqtf67yf1qu
lfyVyi+1XFe2vxM+YK5Tp+w/kP5KrS9IX1jLk/EN41s2Q9enQzbvyeaK6Muw
Dd65T6X7RMs1ZedV3192DsJI2X8m/fdNvg8vl30vdpD+uw7/j/HFwkPMfd5O
+i+k/0H2O8nuxThf8sLvLTsPAp6Tl8rmwthR9j/I/sayt88qm9/vvpD5V86K
bcgPy34J/mtq8yHJi3X6v7O4yj5anikbZ/GAkrEW+0nXV8uz0j8l+w7JS+H/
VLmolqelX1Jlp5bn6NeQ312yX3qO7Jfr9LGuoXL1TvNhDFK5Zqf5LfaU/aEl
+73Xlm6tTvNk7CP94SX7wEdLPqxkvzff17Hxjb1Y+jElY2P0V70R2t/ssvEd
9ysZ4/EBrT/ItWB+qeT+7O+SN9JzuFmn/8dsfyD+m5T3h8x14zrObHWf7uGy
894Gqt4ynb4390ddOBI3VJvDO/2/B5/ywJIxKndV/YNLniPYQDabdHrsB2bt
QSX7y/kHDih73oB/4FJlzzPwv+oqew6B68HcANeE9ph7oE3w7MC1gxsD3za+
bPzY+Kfxj+Oj/lp9whs6zPWI7xk/Mj5k/Nn4uPFpfymb6zrM+8ic3rx5vp6e
J5w3Ryj5c9lc02EuSWJV/ld0vArxI18WHUOCrx0fOv7zl2V/YYc5MolP+aro
GBXmKpmnZI6S+JSvi45RwWePr3+e3151r+ownyXzAPj98fnjR8e3ji8dnzf+
bnzdzOcs1+r5nFv7+h+5eXyDT636e8t3+rSqv+H4gPEd4wcmpuaLouNqPtF+
r+gw1ybzGMxbMGfBnNXyrZ5fwseP7x6//Ueyv6zDfJzMEa3Q6nmVD6Sf2GGO
T+YlmOdgbuJV6S/uMCfoDMmndZirlXifb4qO+SGm5tui42qe1/bZWs4qO/7o
vaJjkIiBer/oOChitYi3INaCWKFPi44Xelztn91hftOx3NsOjzGIdXq76Hin
F6V7Qcs5ZcfKfVh0vBzxKb8UHaNCbMvPRce3EBv1QdHxUcRnfVR0jBaxTp8U
He/0nNp7VsuZZcdDfVx0TBR9mVOq7s8QM/Vu0XFTxFK9U3Q81fGqd1yHx0hH
qzyqw+O3Y1Ue0+FxF3E93xcd23OHzvFE6fcoOx7nu6JjcsZJd2SHx1f3y2ZC
h7ldicP6qehYLOJ0fiw6Voe5dObImR9/QfbndpgvdqbkMzrMO0vc1mdFx269
JP35HeapJbboh6Lji4jn+rzomK452v6SlvPKxogeHzjR4FaCY3lqxL6B3Qn+
JrjTh1U9jwf+86FVzyuCI31I1fOBXVXnzZIzS/waOJv3RowbGJ2zIiYO3M97
IhZvSmCEgkN7Q2DRgk97XWDUkidKm3C4EEMHXif4m+DK3hjYstQHaxRcSLBq
rw282g6VS1bNG0OOakfIn+ted1YjX1Xnn6ua84JxcFL1WBgM7YOrnqeCzyFb
NV8GvBCZqnmLGIOWqh6H0na/aBMc3esDS5e8WPRw1oCxunTV/B+cE9cLjpoB
IXPdOuM4aeeLkrehB2N1uao5ReABWbZqLhDqLRXtgLt7TWDvgn97b+CR4vsH
Y5TvMbw58OWAgQ2+N5jazHHBiQP3D7ja4JODPc08D1w8cPDAWQG3Dhw54G2D
B3541XOwcP3AkQPeNpjDYOaCl0u/76Rq9APz5gjElwYeMjjCYAeDGQ7mNfMS
4BPDBQgPIPMY4P+CoQP+KTioE2NOAzxfsHzpk55cdZ8ffHUwxJm7ADsdPG7m
E5gzebpq3FJ8VC9W7adiHuapqjFMp7Zaj/9tmpaXqh4nMmZExieGP2lO1T4l
MNvBBN854hrAZn0y5mTAWgVfFXx48MR3jHkecIrBKAbbFlxXzgmMZbCGwRlm
juiJqrFTmfN5smrcVfxhL1ftEyPO7teiY+1e0bv7spYLyo5jIraJWKbR0u3V
Yd8P7zbY3+B91+ubMKTDzy8+79PKnsuiz3GG5OYm+7xPLXu+a2vZ79lhHxN9
wzOjfzhc+t07/K7MjX3QTx4o/a4d9ivhLz+97Lm7xaUf1WG/GP3ls6LPTHtg
r4O7jg4cczDM8cGfUvYcHX5Ezo8xF/MMF5XNB1enNtftMKZwVWVFy+KS+6gc
1s987TXJ7VqW4DhUbtTPfO3MM1xaNt8P8w+XlD032Edt7tRh/xr7BPcczHPm
MS4rmwcIDk/GJcz1EdN3Nd/vnub0gtsLvr31S+7Xn97q+Qf648wxMg9wednc
fMwP0JdnjpF/G1jtYK8fomPYp8P+wXGSD+mw34pnC+xfOMN6Sr9Bh79bi0ne
ocN+w0bJ63f4W8U7A242HGF8f8E6hrsrJ5vhHcY7bpa8UYe3Mf/DPwp+yUWl
37bDPsdFJG/ZYd8SfWdiO+g/F6TfrMP+vl6St+6wT6235O067Luk70zsCP1n
+sjEiNBPZt5mYtmcSfwPwG2GkwwuHc6J7/ARaueADvvvmMvas2yeSt5/sMHh
Rxsrm4M67B9k/md02dyUjAu5powNmb/aq2wuS/4ZnDc8Z8yXrl02pxrvKtjI
cLDB2cP14zufUfubdPj4eG/BGIf37a34B/D95xsErjj8a4fJfr8O+x/5X/Js
wsG2QcljoDP1PCyk7Qtq6cu1VdlLS7+y4zeJ+ySGk3hJYiWJkyTukphL4i2J
9yROlJhPYlGJNyXWlPhT4jWJ1SSOlXhTYk2JUSXuk5hP4j2JByXm80cd56Md
fs8fVPmAlpMlfy/9wx1+94ghJTaUuNCH8TVJ91SjY0UXKplXin8PvFTEn8I3
BRcVsaWP4B+Q/dONjnUlbpWYVXB3iNckVpN4TOImiZlcTGOjuR1+D4nfJAaX
GE7iN4kBJYaTeEziL4m9JI6SGEriJ4nnJdaWOFtiUYkrJab0V53Lkx3+BhGr
SPwi8YrElhJLShwp8Y/EOxLrSIwk8ZHERv6suo93+PtIfCKxhsQZLqrjfL3D
7zmxlsQ+EvcIvxE8R8QVPiTdkbyvjealZ0wDh+ov7dpfh9/J3ySv0eHn6fCs
+3HwGB+WdV8YLmjmS/cum1/12Kz7+3C9/q66gzr8DozKum8+XPojsu7rwUv8
q2xW6/Bz2Vvlolo6yvaJcp/xi47JetwD7/Gz+JQkvwnGTtZjAjhmj8l63AB3
7tisxwTwKsNjzxgLXtl/ta+1O+JdyrofCp/2T9Kv0OFv1hNq/1i+/Wr/Sfw/
kl8DH0bX+bAO96GOYCzVYf/+o/iRVD4jm8fwC0l+VvKhWfeR4X9+RvoTy55H
/VH7Wq7D48yfJa/U4ff5OdmcpPIt2TyNr0zyG2CVZT1ugyP3KemPl/y69D+o
7jIdnrc4IeuxJny5xH6uXDIX1r8au/3X1/4hOKngsSIOlOSqyV36XzMH0VvP
cpdzTa5WeVWXscyfk/7KLud8PCv5si7nedSr7lTJL4MdomOYIfltySvr+twj
+V/JwyTPlNyk45kjmymS50j/iuTb2JfkFyXfKvlFyXMl3yn5DbBSJE+X/Kbk
jPZ1t+S3JDdLvkvyXMlXqLy8yxjt16m8tsuY67N1nNd0OX/lGslrdTm+Y4jK
wV3G2l9H5dpd5hO4Vjbrdjlm5FbJG3Q5t2YjlRt2mTdgqMr1u4zH36hjmMZ1
AFNK8p6LmZP8MOkO7TI+/Y0qb+gyJv3zavP6LufW3CT70YuZh/zfhdW29C+o
nZs5ri7js86Q/SFdjosZLNubupxH0lN17+C8iOnT9bmd+yL5Atkv2WVOhgkq
z+pyP2x56R/tr/6N5C8W9Rwt87PLL6H/Wm/zLZwr2/O63KccKP3A3uZwWFby
Mr3Nz3C76o5TP+QTPTcrSr9Cb3NHdKle/y6PG+ZqP2/0d7/4ZZVz+ru/uZme
gXtl01PPwJqq90p/c8KsIfml/uaW6dT2ji6Pn16T7tX+7svfIpv1upwvda+u
1S6dnlO5Q8dzlI7nU/yZ2n5cl3kAZsn+2C7nstwr+agu5z+dovLkLmP2j1d5
Ypex/y9VObHLeP/3yf6ELudXXcg5dbn/fYzKo7vMb3C/bE7qcq7VcTqebTs9
h3SadKd3uR88RuURXeY3uFPHebSO8zPmQVR3bJfjp+6RfHiXY53GqTyyy7wH
f6jNy3vpfug9vlA2A7rMv7GcymW7PHacpO039zKX13Zqe6SWx/HxqtxGy2OS
N9T2G9XWgfpmTtUzc4WOY0v9azaWfqsl1c9g3lf6JRZxXPMw6beR/gLpt1Qb
o/StuFTPySRtv1h1h6vuzZIvkbwpOTWSJ0reTPII2W8r+4n8E6Xvs4hj9zaT
/vi+nv/aXPL4vp4rvFXbL1XdzVV3iuTLJY+QPFnyZZK3oD+g57SnjulftdNj
gPSST9X51km+VPIpkodJvrOXueY2VTlSx3+Jjv9TXacFtP6f6j6qZ/XcPnq/
9S28UbqbepkbbbjqTu9lTrnNJM/sZQ63dVRuqnbGq52/ea60vhPty2ZGL/PI
/a5ja5D8l9r/W3KT5H/4f0mul/yn5D8lN0r+m3+iyhFq80w4qyVvLvlUYlzU
/vFa31lt7i15dJfHvtN13/fqMhfHbip37TJ/yH4q9+3yOKyvrmW/vp5/61DZ
2dfzfner7j5d5uu4UtdzD307ztA1P1rPwladnte8Sza7dzkW72rJy3QFf4vs
95L9BNnfKf0uXY5/H6Zyky7zqGyqcrMu+yz2VLlHl7lHJst+4y7nFC6tcqku
+0XukH6nLsfx3S55+y7nJo7V8WzR6Tnpu1XO6HT8ynbaPrLL/CRjZLN5p+eq
J+u56K1ruomejaG6Zjdo2wF6tv/l2LV+kq7hKMk7d5n/ZJr2tW2X4wR3VLlD
l7lQFtd1WqKv5/dKKst9PUd6rNrbptNzw+Mkb9nped9jJG/d6fna6/QMLK7/
bCf/V+lHdHrufGXta3Z/c9Q8p/LZ/uZbW0n6Z/qb62YdHf+oAZ4DXFXyzgM8
B9hH8jYDzPe8oOStBpgHusr7OsB80vdK3nuAeVUfkLzPAOcdPih53wHmYZ0p
efQA5y+uJ3nXAZ43y/M+DTCHdCvv2QDzVQ+WvMsAz6EdKXnPAebyPVHyXgM8
77qz5D0GmL+ql+StB5hnup/kbQeY07q/5JEDzBXdS+/aO4uaD3Ar3auXF3E+
QW/p313UPJNbS/9/TJ0HmBRF9/U3z8YBZpidGTbMhtmMOSIiYs45Z8WEiGLO
ARRQEBED5oAKiqKACAiCgAEVMSuioJgFAVEwK/qdn6f43v/zUNTZ27erq6tr
qqur7j33/Rr7Chwm/G6N/RLWqZ3Wt3tt7kjJP6ixT8NxOu/U7o7BXK1ylmYc
0/JYte1f7bZ//FKy24X30bm/qC/8Wmvfggbpf5ZxzMwr9Q6a3eE4yuOlO67d
8Tw3KP+73THWDpHOLMYO9td0Xt/u3pMsZqzq7njnM2o9XjBWLGpUmbWO336P
ZPcqfZ3U+0B9ZE3WNiH/Kh+i3/tH6tu36/gdSl8m3caH1bmdIeAZKp0l0vlH
+tcLLxYezTNR+kL6s3Sd+Y3mBn1UsnFKu6Y0jks+Um3VX3W+WbJRSp9L//Em
722zr80eTker93Hul+wBpW+k83ST993Zc79Y5QzQdecyLqkO1wl/KHynjt+l
9JX0/+VdKb0huveptR5DGT9XZWzvha3XlFqPy4zJ2HFjX44t97Raj6GMn+9L
/+zujot8rfBvuq8bdF+XC/8sPES4m+owMeM4hz8pP7e7fWTXCJ/T3fFlrxT+
RfpDpb9YeEB3x+gdpvb/gP0z1f9H4R+y/oa9Wjq/Sn8Ytpg1tovCJuoXPf9f
271GPFD1PEP3PhUeTfae9N6aq/aZouPPKB3BeqLku0g+WfLJkk1qd/zVGyTf
XfKp7I0I7yb8DGvzwrsKTxF+RbovtzvW4o2SH9dqm5URwie02r5kSo3fwbx/
H5Z8X+EXdO5w4eNbbctyk/CJrbYdmajynlI6jHFY+RPtjkO7Wvmadq8FT67x
e5p3NHO3l9o9f/tC+eftXvNbqfx7pYHCvaXzcbvjHE7XtU5qtb3LUsk+aff6
62zJT2m1DdBbkr3Z7piTO+ncxe2ODfia8lfbHZfyeun3UR0m6V6+k+zbdq/f
95H+8nbHG9xZeFm7YyHuKvxNu+MNbiO8oN3xxL5W/lW710p3kfzLdsc2/Ez5
p+1eT/1OfbVEzzK3zPPcue2e6zKfnd3uOe3Nwt06HFcto7y2w+uar+h3saDJ
9iWjpFPT4Rhro4UbOxyrrUl5tsNr9g3K6zu8hn2LdOo6HOvsMuF4h/28q5VX
dXiN+ULVq7/62PPqY+cL9xOeIZzW8VSH15h/Vx3/aPc69a0qp7nDsddGCic7
HL/upRrvhbMPPl+689od3+8Vxvx2r62/xByt3XsJa5X/2O49j7f1m7hb7/o/
sM1XedEOxx58XsdntTt2a55+TzU1jkH6gmRz2h1XkO+Dme3+RkjovK4djj14
ieQVHfY7v1i4tMP+6y+qLV9qss3KfOaSOrdJ+jEd79LhGIaXSr9zh33cX67x
nj379eWSlXU4RuJclTGvyfaAjZXmDIUv9C8dv1rteLye9Z/CVwkfV2Y/77au
jl+F/xbrqcRcxJ8Me0ziKeIHVtfVcRnLVHZpk+0qOYf3PDao+Gmx1kV8x5t1
rGtXxysdyXpMV8cxbVWd8rs6TjYcwHABXyNcovKKm2wjunel5fiFtUm/sKvj
tt7E2lJXx0ltkTxX+NNy+xjVdnW8yVHSqezqWKes7RLXkvjfrI8TH5NY46cr
LWffRfeeZa8+7njhN+g5Hq7f3fy4x5EvlMYzx9P77roWr1GeKb3PJd9e57Yr
j3R1rNkm4b/jjh0e0X0UNdkmtkJ5eZPtN25RSnV1LNVCyQqavAfRSXm0yXv9
XZR3brLNwGilbl0dqxVfvequjuXZrGe+rMVrzcOkE+3qmLLYFpV0dbxwfL/u
i9snbITua6Dua3Hcfmb3xO1Phi/XvXH7k01QOePijrHQUmb7PGzzXqFt6Efl
5kVnbL6F7x3hR+OOHXGTyj9f5S9BT3X7pMXr71nhpS1eW8en7e64feMe1DkP
xR03A5+wB+L2M8Nv7P64/c/wwXow7niYU9X+17d4nXe4rnWOrvVB3LzovDdG
F9kn7664/fCay318Ns+ozDaa2Ge2lLsN5pSZ0xdu36skO7nSGL/I7jpe1tXx
2m9kXqNrvYcdRJntPrH5fFLXHR93zAo41XmP3Vpk/nnedaPot2W2AcX+E+56
xvKbi9znsBPFRrS1zDaR2EPSn7BrZO2uQe32cYvX0J/VvQ9p8dp3nvpFbpP3
sPAt7hl3DPNrY16DJv4MPqz7xO3Hyr4FNobYvhLvnLjn+J1fHbM9LnFv8Fvd
N27fVfxQ94vbFxUf1v3j9mOdxVw5br7fK2Pe/yDGDj7NPeKOWz4n2LjAc48t
3o1J26vg33lA3L/l/ZIek7BPJpY78d/xq8a3vjlu/378WfltX6U2WSSdurg5
3bGBOT6cC09APXOEIvuk8jsk5jO+7zy/t4rsV71N3HHs03qGKaXb4uYthr94
huT5khU02+YP/1fGGmJE49vKOHV1xH78/LZfLzKfQUb4pSJzDDB2vFbkuVRD
3JwErzG/j5sX4T3hxrj5BvrEzQcNFzS+uTvF7Z+Lb26vuP1zsS36Km6bUria
WbOZrnMXMIbF3a+5/jrqU+42+FXpzXLvqxEjeEG595mIC7yw3PbOP9BWwq+x
xqnUWu7E7/UF9btp6mNDW7wefYrkn8b9uzlO+JO4x4OThJfF3a9fpV3j/j0x
5/tS6SnV8wT9vTTufn2q8Gfhd8P+H/GXXyx3238b2v+5crcLbUL/2i30sZl8
d8XNU12l59NN6fa4/Z57x+37jH/wjnH7CMOxTdtOK/LexfdK88vNXb1LaMNb
4+Yshq/4v+cQ9LEd/S7u9yPX3CVcF1tW9ubZl+e77tZwLpzHlLNbse1XsTNg
Hz/Nt1iL9y/H6TfwSNwxcx5RejjuODlLdB8fKZVL53Dew5rPPIgvjPCxwvcK
Pyk8sdZx4N+Q7qJmv2OWKf+02WN9m9777TX2gz+SdRGd+wh+Cjq+QinOu5zx
vsn13ES6m9bY575FeWuNfeuP1blPa655lXS+lv5XSl107rfKv2v2O7tDut1r
7Mv+umSvKRUxj1X+plKx8DvK3232uydXbdC52fZO61iH0TX20L38K1lps/fx
I9IpUqqR/nrpnC2dPaUTlaxTi+cZJcpLW/xeP1rHT9Y9PqZ7zJMs3mwbqgLh
wha/F7dXHXvU2Ef/Q+692eP4Tyr/LJ2/O99TjOXUg7FEskm696t17ycKTxa+
RniVjq9u9tzlC+VfNnvOsVz5Z0qdhDPKa5XG6Lnep3fE1s0e01foWqV85+pa
d0u+ZbPfGdsq/6fFfgTbM+a02h5yO+HcVtuo9+A5t9r271uVU6xyclTOSJXT
3uz38S3C3ZvDO0M6V9JvWHOT7Kom29j/JvnlrPGx/iZ8hfAxwrfp3E2b/U4a
I7x5s9+L+ylf1+L5W7nyMvaTdI+lqsuRTbYd+IW5OeuerCVqXjo149/uXjr3
4Cbb+e8tfFiT7fP3FD6gyX4EOwv/1WI/gnNUxml6jpP0HPeQfN8m+yD8qvIv
07GjVH5vyX9vsc3/TsK/tNi/oEnPtrnGfBIHS3eCntcFel4H8u2b8ZgxQfIn
lN5gjqF77Nnsd2ov5TsqPS18sHSnZfxO6yfdd1TmAyozR9epaLZt2D88i2bb
tDDv4f0/t8zP+23mAMKzdXxOs+egc/nuVMrr6nHqTcYN6cyX7MVmz3fv4L3E
u1jyZyWbqrSBsUn5jGbPU+9Ueoe5AXMPyYY3e9xkbYJ3wLNlvod3laql85CO
P0gbxW1ryLg8XTozJXtO6V/GHeWPNPs9wfoF87nJZX4XLqIfldmvfUbc/uX1
0q1rdl1qlFc3u+74tU+P2399ivrGZKVuCfvZPxu3j/5Y9ZWxccdMw999Wtx+
8Pgn8O55rsx+Dgvj9qGcyPNp9vz7Mfp1s+fo45Q/qvSb8CSeG30obv+K1+P2
+3yCvqz0h/6eovyZZs+/8Z14g3eSdP7Re+2LWnO64Nc+O27fcXzfZ8Xty/4U
Y6DSh8InK++r/vmk7ut3rq+U1rP7k+s3ey6+QPmrzf4mgWssntL56idbqR9t
XWO+kNt4XzX7fTyJsUVpscr/hefQ7G+AH5SvUUoIn6Hjb+vc+3VuX+E3Wetn
j5XfplJSOhu4P6Uq4R+V/9Ts75zTpP8W+xbSHybZUKVVcfs5x1S3s1S3MTxD
zonbh35O3H7z+ME/H7fvPvZRLwpvJ3yTdEdQP/19vfIhzX6nwh8wM25fYTgJ
nouby2G0jt+itFZ/v6z8Jca4ro6bw3cU31B3SXZ3s+cuxNyZG+YMN0s2qtlz
FPxq5inFVff7JXug2fOYe5Xfo7Q+1I/vsx767T9S7bVmvj+JQcF3bteIv3n5
bh7Md5DezRfqPd2c732di4Vjyt8ocCw3+MOJQQB+KsguDfhs5QOUGvNdxkWh
HPKLAz4u5b+Pk/4+wn2FDxI+JWlcl++1pMuEE7ru5EIfQ94/6WtQ/qEp4yN0
7sxCH0NOXS4L9Tkx5b+pO9ejTiXwKyo/X6lJeG6h/wazPzRQuLPyYwosj+Tb
9q4Z/1q1c7Nwk3CvUtsasBaIvcHGe9gAL2/K5VPGOcrPVcrmey/qAuEuhT5+
QbguxwcGnSNS/vuoAifOL8z3nhZt20n57ELL0T8JfyClfvne9wVvKHDi2KMF
9ivCv4i5GX4a/E28EeZiNwd/ImxKRwWdy5VfofQJfL/F/ht8Ssry3rrW6aw1
K9Xn2yeIcpjX3RR8lMD4Fw0P3zXYfN4U5FxvZPAhIiEnjspGP6i+4Tzmmswz
mW+OCP5KxMbExws7B/YLqUOF8kP092msJauee6Vd519yNW/C7zS0D3uNpwqX
F1p2UpDT704Nfex4rqN0Zr7bDr3r4ZxO+Z65ztRCX4t7Z5/yLOFokJ0e5IdJ
70zhXOF+Ses0CE8vtBx8UMrH0KUf04fz8328X9ChPUaH57Kk1H5uxAbFnwJf
CmKMlpV5fYE4k8STZI0B2xJk44Mc3jX8uLpHzNPGOsjjwkVlnn8Tp5J4lczB
sS1B9miQF5Z5Xk7MSt5ZvK+IsfnfXD3I4Z/DF6st4niVyLF3Yp2ENRJiThKH
k3OxmyoI7z/KgR8Ov4tVReYt6xsztxDcfifHzCkI793xMXMTwquHr1dLxOuM
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
N7HePhBXKL9SabXquV2Jr7tU4+QZutYH1ea+O0/Hz1f6TjqnS/5+tfnxZkk2
s958J2dK/mG1+fSek2xGvf0qpiufVu+4WP2ls6TacS7OFv642jEp5ui+b8na
t/Mi6V6stBJ/kazjTBBjYqDu47wmr7Nek3XsCuJWnCPZuU1etzsn6zguxHBZ
3moOffjzt9c99WBPCxv/VnPEww/Pb/qt8Ls+Pes4KMRAWaB50VD1q3sln626
PF9v/5JXJB8i+T2Svyx8vfDdwgOzjuVDHJ9PW81ZD1/92arXgCbbvl2SdVwK
YlKcL9kFTV6/vFD5RU1e8xuVddwXYr5cKtllTV4nPkt5/ybbvV6VdVwNYmos
bTVnH3x9H7c67ggxRy5QfS9UWqE2vC7rGD/E91nWat58OPMvyzpmBvEyrsg6
DgcxOD5pddwXYr6cn3W8DWJtHKvrH9dk2/CLso57QcyLz9UOG2q8LzdO13y0
3nH/euhbed96x7zdUXj/eseefUL5k/WO1TZHz//2rNfDXyM2Yr3ju96mMl+t
s6/bKOGX6+y3OkJ4fp19f4cJv1Bnn+ADso7TQIyGKSrz5qzXz2/X87m42Zyw
n0n/rxrvfS0X/rvGe3QLdd2+9Y6R+wLxDesdh/Zq4WPrHcu3FzEB6x1fdxfh
g+sdL3c34UPqHbN3Z+L91Tte7jzhE+sd53aB8Mn1jlV7j/J76x2P7mHlj9Q7
Ht2LxH+sdxzaRcSOrHf83lJ9j5xb75iWtygfXe94brcrv6PeMe4eUj623rHs
GNcXhbG9J7H56h1neK7a5K6s91O21e9gm7R5RT7gXuvNh/Se8nfrzXu0qY5v
pvSO9BdI9kq9eYw4j/MfL/PxzZUe4Tel45/WmyfpE+Uf15tjeLLySfX2u9oh
jD/Yfbws2Uv19v16jTaut1/XRD3DC7L2VV4m2dJ680i9oPqPyXrP6B3J3q43
59NXeo45tbb1uEmykfX2bf1S19mz3nGVtyGGY73jFW8lvHe94xVvQYzI+hBL
Wfq719vn8i3lb9abq/gG5TfW23cZnh3uFw6Hr3Xd3Frbbmwp2RZp8/N8Kfm/
Nd7bnK8635e1XfQ84Xuy3k/5Qjr/1Hjfm+8rvtW7at5yStb8+3Dvw+fCeAWf
yYPqA5c2mJd6jc57u8o2HmOVX9Zg/ukO6banzbfQprw1bT4H4sY/k3Lc+bl1
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
NRsw8y7G09nCDyqfr3xe2t9BfPvMD3hewHwHzQ06RWFu83za95rP2lS1ueLP
0Tv/jax5e7ZUfaZLpzTX15wRrjs94NIwB56W9tj5fKgzZT4b5MyNN54zRnlf
3fcpSmfq3s/gOSidJXyqfms/NJq/ifnXy6HdXgqY+WT3XLcTbUgc2plZ83qe
xTpD1vwkC0Jb/pbjGNrPZ83VShsvCM/lbNYisuayeJ3+En4vPXONd8mx7qtB
H9nr4bc2QOe+njXXUH/WTLLmG2HeMje0bT/mTVnHJyL+7ZysuSqZ+8drPf+f
oHt9X7gL+7x6X9xS41jzu+j8S9OeV9zInnaN48jzG18YfufE+p6bNe877+0z
w7ubd9FZ4X30uXSW15s/+2vlX9UHTuvQDrTP9eG+uPfXQ/nc42n0d6V+nd2H
uK+Hlc9R/kLads7Mqeh7+KmtVB3frLIPC7bjrE2wLrGvytinwfGv9le+X4P5
sw9VfkiDY3Ot1bk92+zTyxyhLZRfzzy5wdzMuyvfrcG82n/oPn6vdyysKr6t
lHp29tr8kFqvz2eYVyv1glNN+S4Njl3P3I621TQ/5y+V8We9eXoWa4z9psb2
dz2lu0NDiIulfOsGc5NvpXxLpT07u18/G/r8K3qOS3XdNPu/wt8Kb8bcSWV+
WWMfkV46b8cGc4F/IPlXNfaDOV19fm2j+dE+lPzrGts2dvAdobSr9PupXQ9v
MOdQE/P5BvMznSv5UQ3mONmE74IG8yHxLVJW6+8R9jGur/Vexs+smdWbc519
ietqvTdRwvdLgzm5z1OZRzeY+yeivKjBXNq5ynMazDveXzpHNJhzpVB5QYO5
vb+knnpPHabGfUr39IHKj5V7PGBcuDeMVXNCn2kNfYkx7IUgB/Ot3LXW38t3
q/+PVpucpzb5UGWukHwLlVnB91GD45h14bupwRzt3+v+VtY75tgIbNx07hE6
d6nOXcX3ns79UcfX1jte2TrW/OrNkf+xdL7HVk86nfg+bTD/92odX1Vv7vyP
pLNSOltK5xrd7zkN5hu7SnhAgznJknzXK/Vgz0XysxvMs5WvPK/BXOwDJD+y
wfwxowq9n8VclTkLcxf4byvTnv8wH8FfsCZln8Hf9VvplTFv5h/CvTPm1sxv
V5/NmK+TPXn26dmL/7TE5+Ine0mz7c+wPbtIf1en7Of4mXRqU/anxscWjP81
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
cOxu4rAQD4Zx+HnpzlKqTTiuC3FfGMNnSH9wg+NXH8e+UpO5sI8Xrmwyv+1N
Oj6iwfHM81RGRZO5cYjtWdPm7xdspYkFiL00OTbNvOPuVvntmie3qU/VY1ur
tHPCMQP3Cjq3qOxRSmPhOMx6rZZ12jt1bpvObapwbB1i8DDOJ9O+L/YpuqUt
Z4/jZp03UukBnbuKfeZW84w26poNSn2Eb6X9lB6WTotkzUq7Sl4s3S5N5gU6
QfeebDJf7RLVIdVkHtsTJU83ma+2CRtapV0SjtObafNYSqzU2jZ/Y95OH1F6
hHUbld+pybxAN0g2rMGx3Icrv7HBMd6xAafdaMuPJFvcYO7qu5TfqTQOju20
/TfwR7gR/8dWj403CH/b6vHzpRZ9S6hP1Kmfzxf+TDiDPYPwp8K1wv1Ul0kZ
c+334Nu92t+An0rnR/29neSxRrWJ0ie67pXcd5v9zAdqjOqjOkzW765ax6sa
HYO3VnlNozngU8qTjY61+4XKXKcye6jMaNrnsu/8iuSfS17PnFf53m3mB/xI
8q/19yaSn6HrPpVxzIoJehbzmxybcpX6xQz1lZ/1vuvM+nHa+003qowb2uzj
/pHquWvaPjtP6dxXmxxT6UzlT2ccrwDbgapa2w/coesOUTuepDbcAhvmNvMl
jdS55zeYR3mEcIuuXYNflPSvk/5x0r9N+HrhE/BtEh4sfEypYzAR54m4Sx/p
Ore1+dvhU5W3TOkFlfmzrrW+1fyRw3TeV61+b36j/OtWc98OlfzzVr+L91Se
p/ofonJGYRPX6vWN5bruT7rG9vjXsP4tnYexG9fxH1vNm7tUY059k3nAV0j2
Xat5c9nHZj+bffkfJFvTam7dkSp/dau/L27GrrPV6yED1LY7S/9p9YGrWXNt
9ZxhC11/1zbzIJenrYNNQpvkh1V7LYK1Ia7Fmk/XtMci1t9uL/FeOnv0HdLv
1WaOy49U9uJWcwTepza7t8Hc85tJp0+buT63Io56m/l8v5TuF63mEr5Huncr
jWdtmVjubebDHSPZHUqPspYree8284eWq8+WNTp2dE3az459rlelu6DBfPBw
/50n+duq57Gadx2ntIW+s1PKk0qdhXdRGX2U1nW27sCgT87fxDltkm5WqWul
n9Vm7X5emyrfhLIkHyF5d+GxrO0p31wpJflIybcUfoRvSuVbKaXhJtM1ezU6
hsPJ0qlsN/dXlfJuSl2kc4rkaeHrJV+vPpOn/jARDnfsdiQfJ/mHkn9V6ziT
fzEnSHu/+Czl/dmLUv3/xj+iyRyGw3Vum859SPp/SB5pMufhzZJvI/mjktcq
r1GKVbq8AUpRlf0rfhz8JqXfV/rV0hnKmKB8W+ot/R2U91CqEr5BOo3CD0jn
fv0eL2lwLIhWyVqUEtIZS12UDsT2j3ZqN0/itdjXq2+s7ar3A37VVeZu+Vm/
i0tqvW4BxxvrY/C8DdZ5g5R2xp9X+b1K+ws/L/20+n2x+vydko1hLVjyGZIn
JP9Hffkuye5uN+fjLMlTkkekP0H4Lb6/pHM/99FuPkf4OmnbP9Umw2iDdnNk
XiDZhUpHqP1fybE92THKL0ob745dGd8L9A/p36j7ahZ+ELsy5e1KlZLfonxU
uzkyl0pniPBi1hDwfRT+mHEJv0/hJeX/u4aqmdMr15hrDdfxG9vNo7kMH03h
j6Q/UvlN7ebOXJJjmzfqe2OJnzfP+jDWQpU2lc45oQ/Qv/L1+ytoM+d4ET46
StsKF2bdh+g/o/WsLmwwt/2/6jNlTebcy8/698Bvgfjk1W1eH56d9R4z+8uj
dO4FDYHnPuu+Tj//R31hg9JWcLro3L9bveZ5m/QvajDvfqnKK2szv3mO8tw2
86SX4JOktJ3wC1nvc7PHfYHOrccersL3x30+p9/Lz4wXafsK4VfIexwfyyd1
3hMNjn3BuLhTGBvflGyR0nTJ71CZrSqznphUkr3V4BgUjCnnsjfGs5JOg3SK
pXOJcKNwufBXGg9+ZozT/V5bYv0TdN690rm4wTEKPlT+gdIsfDGUv6z0jPBc
3lENjn1Rwv6t2m0862R6hjsqVes5jpZsJ+HHJL9VuI/w48L78ZtQqpfOHvQ7
pUyly+jZ7nLuEN5TeCJra8p7M0ZIZ6Lk+wg/K/mRyo9Q2kzyqdSrwfE9nlI+
scFxQiYpf7rBsUSmKJ/c4Bgju/IbUqqtNAfuOaG/7S3ZXkp18F3qGd6jtFzP
cVbW9gfYHiTwdVXaUfKyrO+Te0xJlmRPSPK08m5t5nHuhL2ldCaUO9+t3Tim
4/E2c5RXZN1GtM9dkt2p9Jnk03TNZxsck+Tc8L7gGXXW8U5KO0jnMj2vrJ5p
Zz3TCsmibeZ8P0HldWk332ws7TkPtkmrpfscvnnwGKjs1bzDVP6t3exzjr/5
+lzPKZlP3tbNfun4pNMvkeMLPKSb/a7xuV4s/Jrw6fqNDO1mX2j8oNeq7B8a
HEdlWDf77eOzv07lHpm2DzL5UQGP7mb/dnzbb+9mP3l85Md0s/8Pvj/fqbxv
GxyvZrnyzxocm2U7jeGrpHNFhX3WKBO/teVVnt8wt9lGOt8LXyadXsI/CA8S
/kVl/Ky0sLP9z37p8BpzT+YmwtdI57Mqf6fxjTZL9XmVMV1z47u62X8J36U7
u9lnCX+lJco/IsEnWuXvQL4Be6jM1cJXqcwl0n9d+Ey12zLhN4S3UZkvVnl/
mr3pBxi7uus3KjyWbyvhQcK9dH+Hpb2P8CjfF5IPlvxZ4XrhocL3ClcJXyM8
VbhOeAhrBcJJ4d2Fu2sc6MC+UPc+U/JGyW+Q/BzhSuHdhC8XTgsfKHyXcDfh
q4QvFU4J7yc8XbhBeJhwb93jWtX/Ot3jJL6DJL+u1H5sv3V4PRj/RPxC8QWd
X+V9evboX66yHQA2ADw/+sc36m8vVXlvnn35wipzT8A7gc/c7x1e0y2oMtcJ
PCf/djO/Btwa+PD92uE1p9wq87nA5ZJXZZ4XOF5yqsy7AefGJzp3ofBZulZ+
lTkv4Lvoo3J+FB5SYR+LnzrsZ/GN+s7XSi+qDT/TuTfofufrm+J+/daGdXfc
v6Tw1d0dezAmfGV3xyosV/kjhBdLPyJ8o/B7wr/hn9rd8fruk/5Q4TtUzhjh
67s73iA2GgcHO41aya+V/C/pVwpfJfybcDfha7o7FuII4eu6O4bh3cJDhG8X
Hi48mOcu/Cf+st0dg7GT5Fd0d6zFCtXtJuEl+Hapv6xnLi75Q5KN7W4Ox9tq
/e3Bd8foWn8b8F1QpnOHS+cDnfuryj9P+DvWKlX+pd0dxywqfLnwesYH6Qzs
7niS/+ADK7yKZ4pvbHfHgcyT/sXdHRutSPgS4bXCpcKXdXectDm6fpPwKNUh
I/mg7o4ViS8H7YaNzOdVXnNhvQW/FnzV8G3BTwXfIXxVsG3/Vhj7dnxW8DvC
bwVb+E87vA6HLfw3HbaHxx8C/zd8IrB//67DNvD4lTKnZD6J7876Dvvv4Luz
rsP+O23CK4UPKrf9+IoO25DjZ4PvH742h3XzXJN5Jv49+Efh48NeImMC+4n4
ucBriS8OPCFwjGLzy7h1drXHLvxy0MEm7Q/139+ZW3S2XfBBwVYEHyD8vvAD
wv8ADlbs3/CZgSMM/wB8XeBz3Oj/AcZODE4T9PFdwPcKrq6N9vJgbNIeU/lX
skbT2XZYw9psizW41t+QfD9uqv62SaPj0T0i/culP7yzx/sr6zzm87scWuff
JmP85XUe58dJ/wrp39TZ4+7VdR57scdP19omn/beUOs2v1B9bF2jY++dL/xT
o+Pz8R64ts7vAt4bg+v87mCcu77OY93m8PDUek+wHhuZau+nf6vjz+idu5Z4
oipvC2xcWNuRfKrkP0q+Unia8Lou9kWorLU/Ar4L3Wrtv8CYdFONx6WRmusO
Ej5K+GJdd32jYxDi05CstV8Dfgydau3LsELlP6vyf+pin5gutfaLwfclVmv/
l0Eq86o2xxrB96Vzrf1f8JlI1dpvYkSt15VYUxpZ6/Um1poG67xBSh8kbHM0
vM12R6OU39xmDkJs1Ue22V79DuW3K32acJvd0uZ2u0n5iDbzGt6qfLTSsrDu
ul868N2l/Td4kp7v1Xq+t2DrrjaoaHRcwSclf1nfAidrzLkg6rWgZ/SN3qDj
9UpfSmd75dsprRFuxJ6o2vYVO0rWU2mt5D9pXnJ42n7016gu17Y5fsmWGa/d
sG4zrNZrMazDfK92nq52Xq92vrHWazes22wt/SW1tp+Bp497YU13W8k/rrXt
DXOBETWeD+BfUl1rHxP8RWpq7TPyjcqfovJ/6OI51/Aaz7sy+AdUmyd/e5X5
Sa1teJhTXFjtecVYybtmHbfyEeFE1vEp8Qvf0OG9xNXC/9Cnhdfg38P7jnEP
/x7mFcK9dc184ZZS+6D/0eH9z2rJ87o7DvkuwgXCHaX2Qf+7w/uTp0jeWfKd
JN+Xb1/hzYR3Fy4U7i7cT7ir8C6l5gz4q8P7hHAJ/Nnh/eG+0ukind7SWYuP
EXMPyc+WPCG8a6nnFjw7uCnwSWK8wlb830avobB+8jw+3Pr7ZOxAhOcKHy+8
SOV0qJx7VM6ZwnHhPsKvC7cL3y08SzgrPFL4taztaLGhXSB5q+R3Sv6qcJvw
XcLzhFt45wq36jot+HjwPSV5s+S3Sv6K+u23+nup8GnKY5LvLHyccFS4h3Bf
9euHVdcXdL+nCz/ZZt7PCbqnVNaxXbnvI0K//avR3/98+58o/Ue4T517o651
XoPjv50i+VjJ50h+svBDwrOFx7FelHVM0weF41nHVb1fOJZ1XNVBKqdJ/TKh
MXCN8jcl/1Xyx6STzDom6/GqfyfVv6fqv6HRa0P/rQs1eu2GdZsDpFMinS2k
s4dwkfAmwvuxpiK8ufDhwuXC2wgfJVwhvK3wocJlwlsLD1N9BjY4Jt4hkpdK
vpXkj/EN2u6YHEPw9W5wfLzrhJtV77Tq/3LWttHYRbfU+vufb/8FWdvjYovb
JetvVL5Pr1N517c7rsZM9c0k9abPSNav3TFCmJfV1Hlu9qHysTr/M7XJe8IP
CC8VvrtefUTpj06ep9TVea7ygfKHpPOpdN4XflB4WRfPB++t85zwJz2vdUrX
4KTUrN+C0hDhvyT7W+k65l3Kf1MaJLxc5z2pclZ08X7ymkbvKbOfvLrRe8rY
D65otA3hYuk/LP3lXTy3Kqvz/Ir5WkWd52yfKp8gnW+7eG4br/P89jPlT0j+
XRfbx2OvjM/X/ezJKD2Ozad0xknnS+l8JPyI8OddbEe5stG2lNjKrWq0vRw2
et832k6PuW1Vnee3nyufqHNXdvG8tXOd566rdd9rlK6Cq1n5Z0oXCn+kfInS
ecJr1PY/KGV5LytfoVQvvIfquGeD40jvpXzvBseRPkD5gQ2O5/yrdH9TahN+
T7L3lWYKfyPZt0p12KwqX6KUFn5D+SKlOL995fOUKoT/Vr5BqbvwHOUvKJWz
DqN8sVKKfRPlXyrVdvYcP1Hnef4SXfNjpdmSH0R9Gxwj+kW+lZWmsI+mfD7r
IHw7674/V7oIzmrly5QuEP5Y+SdK5wu/Jt3XWYOQ/jvK31V6Dvte5auUXsF2
V/n6BsfNXqj8DaVp2DYrX6o0R/hz5V8ozcM+WflX1EN4hfKVDY7F/aPynxoc
i5vvpFSdv5XYS2DPAFvl23Tft9Y7fu8A6XyofvBOuW1YsGWJaT5QhG7asUU+
Kjbumud3zsk1fu98Inmx5IPUDxe15uScJHkvyR9iDFTaDz5gxkml/eO2m6xN
O57UfZLdr7RP3HEdCoL9zAOSPai0b9x1Qf5OOJ4fdLhmCXsH+a4XdU3k+b23
W43ffXx7/ZXx9xffSb9k/K10lPr7kUobOvu78PeMvw2r0t7vfDLH6zz4mxEv
JhLKpx3wl+kc9sKYA4Hxl1nK+hNjaxfXi/oRH+RsvtVU/tvlLoOy3itwPIxI
KPMT1p94f+vc1/VMFirFOjsuRWkoZxnrZIzp8EvoeT6u3+Y3wm+pnd5WOht+
Kjhv2IvqqvaS7F2lAfCuqLyrldZ0cnklocxBkg3GdhzuDum+qdSfPqzyH1P5
X6v8O3V8TL1jPtN3ykL/Wci+utJZ0v9E+uOl/5X0lwg/KvwFcyr24ZX6xe1L
wt4k+5Jcn3pcl+/yKJc9rE9Z8+Mdo3Ov4l1R4xiYtHGn0M58mxbW+fuU793i
On/zsnZySY3XT4aq7w9RGsMaAmuHvM+62CeKcvBHoy7UCd8W/EDA+Niy5xoN
ctZsBtR43YY5yxk1nrcwJ+pf43nR3sr3UtpU+Fdd87cGx5/vqjyhtL3wSdI/
pc72KRPxX8iaW/sp4aFZ88M/LXxD1jbt2HdulTYvRw/JttW528OtJLydcA/h
7YS3Ed4OviD1r3l673bWfHUwPEbqAz+pD/yLT5Dkm0j+pOSDs+bxfkL42qy5
wXsp31Hl7KhyJkh+ddb289uwZ1pjv/LHJb8ya07yPZX3kX4f6Y+X/NKsY1Y+
rmtNUMplfVj5M0pFrLfreC/p95L+Y9K/POv4en/CMaI5wa26170l20U6u/CN
KfnFWdtdb6c6/FxjP/cewr/X2jZzK+F1NfZzP4B1Kb734BnQuRdmbb+9r/Jd
Jd9V8tPU/hfVmWvzYun0yzq+51/C97NnXGb/g28b7YOA/8F3jfZBOFHnHl9n
u7DddN2/a23HOox3VIvjhOND8E2j/QhuV5kDso7HOhTflBbHBh+Cf0aLY48f
3U3vOv09U7+pY4SPEJ4lfK7w0bzDhM8RPgqfKMZn4SN5h+GvqfJvytpuf4sS
zdHUTz4sdg7HDfbzcL3gz48vP3YHZ2Rte9BT9f+j1n4Mf0v+gPDtuvcNwg8K
3yG8QP3lO7XtMrXtdZL3zzqW6B3C52YdD7eXyvmz1va29NMtQ18dI53zso4r
ylrOLzVez9m0xDwz7xU7Rx+7/UnSH561j0ZvlflXre1zH1Gbt7fa9+FwtesR
jY6jvrfyfZR+7exvEPwz4VI4Q8+nRNe7QfPDvsIR1i8qbaOZSdvm/3613331
jiX+oPIH6h3XHZsQdLCTGSXZzfWOMf6Y8vFKOMZ/qTKfVj1X6fmeLFzEd5zK
P429IOFhlW57ngHcFNwf7YKPwgiVMVxpXSdzvvbPmPf1BNZOmdurjnHdU1d8
rtj71pixhdIewtsq3455kvDOyvsoHSC8k/LeSvvz3a28h9I+wpsq30xpd+Y2
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
2t9XdL6mb9Tftyrr1ecy6dihMnqdsdBqNB4KJ2J/2bwIMLfuaNxtidq2qVyC
yyf990nPXc3GtbqisS1y+PRE+xqzB/ks20vBa3ixbG4D82taNsf6tGHZrL7+
1blsXM9iccl7737Vb1E9C/o/ql9Y8v6Z3EGd0fmDxlQ/v2QbyBq136r2jQXb
zNZWbDfbrXfsM9iOr/V7l9/8cXX7XJNlfvvwbt4K5t5cgp9V8tl8VL/TLunc
lbcNqV6xHekv1XeqvpM4wBp3k8Ydl/51ydvgeReMfQ0E41+Hk+OtE2sdvGgw
GDMCQ3s0GEcDe3kwGH/ZoH6exh9G/dyssZ4tOQfLY6rfgT+M6muSn8J2oHFX
Sd4IJ5KzreQnOfdKflfr3mSwKn3Xquof56yu+m7JT3DelrxO8nb8eQrmmLxQ
Ns9kQPemzru20bHQFkTHQ5udrRE8O/yt74n2uSYO65LoWKy/SefFZeeCJ8Yt
sbbx5f0157UG38bf1aZNbdrU5mtduxQ71CSvQzdka8W0bC2CZ94DBxhcdZLX
khuzNvDTa9EcddqiGz4yDfRf8nlwZ5P3b+83OMc93Kz8RHMxkOFj8P+BrA3x
kO6OjokE3+q9YM4V8eHmRceIY2/OXpFcY+S35l6xT7ygcTv0vTryjvWyKDre
C3GV5kbHVjqrNu1q05439+qNYP4VXJhjwXwY8MahYMyxnulG/3N03WyVOXnH
aCG+Xrt0/g+yd/as
          "]], PolygonBox[CompressedData["
1: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
Ldb7VMP/6QnKj+v+13Cdp/R+QGPAI8Fjaf9nHZc3yN46YZsx2Yrpmd0Hvhfq
WsP37LmEbRRlmzhae4CEbQJlCzgGXMDzXsax8SHLtF9N2CZPtngTOFYE/zWO
TQxZxvx6wjZ3srXTsUL4ryRcVzLjlxO22ZOtnvqsDf8ljo0LWSZdC/x8wueW
zPmNhG0CZQs4iWMl8N9M+FsimXcxeHnCPMnEZStxSParIdtMhOE/m/B/k85g
acI2gLL90zmXJGyTKVvMseDTqf9iwmXJxFdTXiV5cpb7PMT9LeZ9n0+5Uti+
NbXB80L2sVlD3Y+hCPXvCdlW40gdl2Wz8UnCMSMUK2I6x7pxvrUJl//hfOsT
lmFIdqEch58lLFOQLEE5Db9IeI+mvZlyKM5mPq1E/5dqfud63mc9tC5hW/qK
WfbliErmELJPx9cJr+G0dlPOxS3gzfpeZfk/fZXwmlhrYeWIlG9NBPxgyD42
su2P1fW3Rjb+26l/k55Bls+xDbxV832W23Rjfs3i+i6n/ArXl9b9A7fV94fx
mQIXgdtoftL7rHcRqpzvb97UpHNgKfdV9XzHmror6bJiTik2yzRwjXzHaLkn
6RzZyo2tYxOSznmtXNdV8h3rZXzSZcV8Ua7GEfS5O+ScjefEnWNQuQVfZD7P
oO6phPdWyzlWVeeGPtB8z/djLOWSQp5RDV9zBXBF6C3418CvpHNB74J7VzHv
tKT3bqojXuWk94Kqc0LvX8J7qVc1H+i/0H8O/VdSTCt9TzSG8/3N7AS/oXRa
Vfwfnk06p7lymYfzHXvpSXB+vmMwPZV0zj3l2tMxxRJ7Jum6iik2inId5VTS
Xk8xsbQWk4wx32uO0XoW8LNr+Fg/eDcmXFfftN6Ur4FOhfyNHKy1Y8LXrjXN
HbTPo/2h6q4zHByQjTX4JLgPda+HKuT7GzoSfkgxdKr72AhwEHy4uu/BP5q/
oGXU7VHF5X8T3vvq2PGE76nuZc8qlhX3ZPw+GbLM+C94fyas29Exyb57wX8q
ZBn43/D2JqzL0bFHy5xjW7m1pXNQ7P2W3ONvQo7B34rruxzqnOVjR7V/TjqX
Tyu9E1HrgKX7VU7U1vCugK6E9y3HjpU5R6pyo0qmv59z70tYNv00xx6OWmcs
XbFytJ4qc05X5XKVTlmx/S8vcF+K8V8p7hyryq0qHbN0I9fUdV/SkXxP399B
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
VbEG9oBPVHHMAdlqrIg7V55sNrS2X5C2ranW+Ip9elqJc/EpBqpiBx8rdi5D
xRBWrOG/ip27UDGH5Rv+B/hkFfuIB3k2+eWODawcpoqVMKjEtgyKmaDYCINL
bBuhGAnKraB3Qu+CciwolsItJbZtUEwF5e4cWGJbBuXwlG1n1YRzscrG83Ch
c9QqN61srLfzX76BBoadY66G5O3ljm2sHLfK9TGO/sZmO+dHLry8cscaVg7W
MfDOK7Bvz2iNB3g55Y59rJy1yg2iOuIpR4hyeUwAj892Tg+Vzy+wb42O6VyN
Cuw7pHMqNqd0etLlKUanbFn/iTsXpmxalQu0d4ltiZQTtDr/pbN88mW7yzV0
oVwj7Vym0in3AGenHWtCMqHu4Ky0Y1NIJtRVvlBpx6aQjroV9+7yhPuSjlt9
V0vbNljnqKy9pGICUK4RdrlS2rbROvYr1/4LdB3lU/yHC+EfTTl3qWwUWtD3
pQm3lU69mfJhppxbVjYTVbX34dhw2ceGXa6Stq21jrWk7WUJ86TDUW7g3Smf
SzmC24Irpp17VTrpFnq3UvZVGqL/B85I2xfpVv2HYq8BtfbrDq4C/j7l2M+y
+a8M/i7lWM3yGfiZ78tLKccOk87mYq7lIqh62DYmFdI+h/rWsVP6loKHgqtp
DqVuk4TLsoG5QLJUjdmwbWiOU7859QfrWsIuH0vZN0rHWoNPSzuXsWxOTqT8
H/Xf1IfOdTJlXyyds7Fk1Qn3JZsc5WbeBf9kvnM0/6zvJ9Q7y8dyir2m1lq6
R5ZjL3QscWxexWBQbI0rSxw7WDE2fi10jkrlpvyWY1fKNgP+1Xo/ws5d+VNd
x2ZXDkvFeuhU4tjAivmgWBCdSxxLWDEhGspWA9xD7xrtj/NfT6Qda0s5MZVr
99oS28op5658xapBdwftM9aJ9t3hd6fuqLBzF19XYls85TCW71pN6N6gfdjk
uxaA7g/ah02+aJnQPUH7pHWgv26070Z/I/V/wF3BXcEjwIdLnRNYuYC15viL
e/kHdIP28mHntv5d+9ewc1xfAD6csm/bAI0f8D8p5w6WDY1ya/8IPpHvHNt7
KP8G9clyHzsp/wD1ynId2VKfiDv3p2yqz+JZ15c+MGybns5x62Cle/2Q/5NZ
ZJtl2SorZuo+rbegftqbU+dIyteoa1MfyvX8d8o85Xw+SHm/rl/60rBzER9I
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
          
          "]]}]}, {}, {}, {}, {}}, 
     {GrayLevel[0], Opacity[0.4], LineBox[CompressedData["
1:eJwl3Hf8j9X/x/G3WRmlRPZuKImkIe0oWjJCKrQnIu0QiSRRSUpSGUUSSdtK
RCiVUWlLJTvVt8Xv/rz9/nh4Xudc57zO65z3Nc55neuj9uU92/YoUigUdh5Q
KEzdp1DI8bQShUI/+nfRQuHnkoVCV+e2Vy4UnqhdKIzFR/UKhZW4rGqhcHed
QmEKPVJ6Mq1evVAo2qBQqEa/rVkodJO3vW6hcK3j6/DOEepUKRQa1ioU7qJr
DisU1mI1+qkzsEah0EL9e+nF6lWVN71+obBBeu2hhcI61GZzsnNTYlf712GZ
9pfiJv6deUihMKRaoXDWwYXC2Sih7r/qXKfN/+jP6rXiS9HDC4XW9BQ2T8Vu
fbzZud7ozM+L0Qkz1OvL9i2YGLvsncjHlrS39m7Gwcrcy/ahygyIf85Nwuf6
1V8fHmB/GN7Q55768zr9z7nd+BdjlDlU+ePZPYTuxunaauncn+m7Oo0dH41V
7K/g4w362RwnYY1+fkE/0qfj+VLR8UHo6/gqNrvq54HOdaMV6BV8uRLn8+MW
tvriDH09E6fjWfVu1JcbMIgf52n/FH6cS0+mp2rvFHQ29jfzZ7VyvejD0iOx
UHoBrjM2t/LjMe3+oPwGtGf7Gj4NlFebL4NoHdqHP7dgNJ8G8+d+/Cv/P/yD
Luqdz+Z5+EVbO4xZE3a203/5dKaxaYGS2tsm/R5f79beejYPUf4d9t7FSvkf
YQV2KfeDvO8zBuo15Mv59FV9vlPdu9JH6YtxHuqwNY8fs5wfyY93HQ8zXnPp
EPoAhuIa9ja4nu52fA/uwpvKPKDOULysfhdtn8z/i+ntxuk2HKbMaL4ersxj
9CXnpmGYPn7Axhpj85j0arqBLz/iB3RSdqEy1egg579g/yZjUUPenfQGZW7M
+KrXSL/70NLslUEp3KrdNtq8AI3UrcnGMXyrQW8wJtejq/5PkO5uTHo4HuZ8
ae31dHwJpsifIu8Feg5aJl/bD7B3rvR52Ev9H7VXkHeDNovQTcaqHful/Mbt
aSt+tsbefOyg7F70KToOT2KZemP4+Tjmqn+N/vRi92rakz6gnaHo7zqcyb8j
2HqF1pNXFxfJv0H6E/Wvp9X4WB1V8a50ZzqA3ROUbYaqbB4u/bZ6R9CX1fue
D538Xj34dg//i/BrFf8/wcdo7vxJyjXPc4nNL/0ODYzNF/R/7J2gjWb4mf2P
pAfx/b/ca3ydxeaTbD6Fx+SPxqNYq9zRxqcLO43pFc6fyN6XzhXLuLHXGmfx
cYlz1xj/KqiKUtiDkvzszrfSjsvgcsfd2DtN/b/ZOZ3+Q4/jx/H43TV8jDo9
2OtDb0FvzFFvEH8HYpr2LlWnA/8uoe1pH/3qjT7G7GH9/0q5Ebmu+Vsfu/Pc
UG+O/E1sXW4sP9Dv0dpZQpsYw2NwNB7iUzHliuIVPs1ANba7qX+IPvwtv7w2
K0lPYbcynSzvi1zT7J7KXgl2T6FL2PsAi9HU+eOUOxar2PsYA+Rt0b8T2bjX
cTO6m7/fydvC/0nyRsqroM7z/JqIj5wr6txD2vhU/9/Am3nG4+fcq/I/w1hl
p7L1Nz/ukv8/9T7L9es3Kyf/FtpZ3y5GLWWOUL+ZMvVwMOpiVH4vbXdFJ3XP
yHsh7wraiH6AJbHN1qNsPs3WeGxk7w5lfqSl9LM09sgv5B1EjzWOFzq+jc36
zh2O/dgpJ/28Md2fPqfNNdo/15ieGHv69KpxvB9DMBhf6mM15ariaTbG4Xb1
nzE+38sbT1fxqz1tw9bndBc7d6p3F+anj2zfK68Jf7/j0/f4FverN4RPLV2v
99Muyhwlb4pyX0nP04/52K7+bOdew8Xa7oK3tP0mruL70+psU2ZM3rPa26xv
4+RVZfcpusI1v4bWYbcuqmOl9FUZZ2WupAPY6Y86mRvk2ZL5AZ3t3PnKvEq/
4vMg9Ubx6RF8rM0+effQU4zVqTgZo/S7tPql8IZyr+f3z/ucb1+z+aPjHc79
wNZn8hbK+9Pxj/Rp7fzD/4Ok33SuDdsd+XQBPYjtSqiI7nmv0QX0PDqf9vOb
34MF7L/IVhn+vkDnS8/DZm1u5ssWdJH/uLxfMo70LRwi/2AMNg53svMKmyPl
j8KraQfFtXU+LUHPUPZMFOXbKOkitCWfz0ILvMjvHpnD5d2nTxcYq9MynvTU
zAfzLsaNfs+7+LNGuTtpeX4fiAPwlvQv2rs884PM5Rz3wbvsD849pY0l7A3F
AxiCT9l+UdkX8A02S9+mP9PVu0Z7n/O5DntTnZuGy7V/BRZp/728Q/T/NOXv
4/Npyp+Oomz8oc5l2vszv2Ge1ez9qb3mtDGbR2Ona60n325wvivthsswU707
2L4982p2O6h3Dpvtaeu8k7VxPXryYzD7nyt3H63jOqidZ4z8m9SbJX8jW5fx
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
eJE697DZxLljcBA7tfIONKa16VRtfq399sa0U+zp0x7j+C2+wzd5Xjh/lnIt
sdKY/MqHxp43m+hvaKqNY1EwFmeyuYCNt7QzWPp9/RvD7lB5x2curNwObMOI
rO2VO4etkbSbMsfKe1+5HdLfZF2Aw7Kmzj2gP6/pw5zMszK3k+7OzpuJNeU9
ihvU25m5grz3+f0GfSTrTMePyF9EH06MBCNxHbub3A8DHQ/CvXg7ayh1hide
lnlG4vV8vIzenecODs98MHOLzAnpK87NwHD+L2Pji8wrsn9BN+nDr/glsSll
FylTgw52fj37PTMXlHc37alML9yu3tHG4Ta6P3sHoBxuz2+lzXY4OvcKG8fy
rQ7tabx7oLtxeU76isQQHQ93vqz2+ji+DNMSr5D3Er0wezzJ1/aD7LWVbod9
1P9Je8UTB9dmCbrZWHVkv4xrolPiE9n/QJnETJQtTZ+lz2EClqv3FD+fzJol
8Wr9uYXd6xM/pw9pZzjudS2+lj0wtmbTw+Qdik7ye0p/pn6PrM35WBe1MU+6
Cx2YNaayJ6M6mw2l31XvKPpK3l9Zj/q9evGtP/+L8Wst/9dhTeJHzp+m3Kl5
XrD5jd+hobH5OjEA9k7SxsnYxP6qXNN836Ps4PiaNQKbz2SeJf8pjMXn+U2M
z6XsNKVX5TnM3lfOlci4sXc+WvFxqXPXGf8aqIlyKJLYPT+v4tv+0gfg6szB
2Guh/m52WtI9masp2zzrZNfwser0Yu8OemeuFbyRfZU8pzFde93V6Zx7jXZK
nEa/bkVfY/Zo+q/cI7Rh1g4oJG6t3huJZbF1pbFcntif/A/pCcawWfbM8HDe
ucqVxOysKfLMY/ty9Q/Th3/lV9BmtazVtVc9c2d567MOzL4je3tlH42uYG8l
lmdO7vyJyjXDavY+w33ytunfKWwMdnwyLbD9g7xt/J+S+z1xvbzL8ozGqlzP
2WPTxmr9n4t5eBebcq/KX5d9A2Vfyp5Y9ibk/519o6z5EiOTfyu9VN8uS1xL
mSMTk1LmcByB+ng0Y6XtK3Bx9jyVaZrYKz2GLseHsc3WaDafZes5bEpsO3P4
rJUTQ04sJHtyKI7jjWM7egebRzrXEPuzc6D0JGNaIXNnba7LXp8xPSn2Ess1
jsOzF4AHExPRx1rK1cSzbExIbEn9543PBnnPZa3Kr4toW7a+pH+w00+9/liY
PrI9KHGOzPGzF4ONGKreg3w62/U6jF6qTGN5Lya+k3eZfi7CLvXfSHwFl2m7
K+Zq+11cw/fn835RZqw6Bba2JoaeeIPjZ+nnrvl19BB2D0VNfCx9XdYmylyb
NS47g1Av8cCsxxMTpG9kjqfM63nP8HmweqP59Dg+02bfxDVpC2PVEmfiUf3e
T/198Y5yb+f3N27rjcW3bP7k+DfnfmRrTd418v5y/BN9Rjv/8b+y9NvOtWe7
c2JVtDrbNVAt+8raaEvfpxfSRXSg3/xeLGF/Olv78vclulj6fWzV5na+7MCl
8p+Q92vGkc7NXoT8+hhiHO5mZxabj8kfjdfSDvbWVlu6Dz1L2bNRkm+PSpeg
5/L5PJyDafzuzf7NiRfpUztj1UL/2mYtn/V45nHo4ffsz591yvWjlfldBZXw
TuYRiSfQ37LOd3wb5rE/JPeUNpayNwIP4yGsZnumsq/gO2yVvkN/ZuTbiKxd
+FyPvVnZV8HV2r8GH2h/SeIu+n+G8vdnDat8SxTPPahON+39k98w+1yJ5yZm
TptmbyfXar5t4NtNzl9Fr8aVeFW9e7ImwAvsdlbvAjY70fPzTs444GZ+PJB9
TOWG5jp0HRycZ0zecerNlv9z9qb4uDDjrp0F9HDjfwTqZ72bOEn29DGVTy/i
ILYvU7+efv2PjbLaLCP9LLtlM3eW9xm7rdltyl6xrHHp/OxlYB4aO98k84nE
RNlbjn7yNuvfCWz0d3w8/S/fpGS/h/8TM4+Sd2CeH/x6DiudK+LccG18ov+v
YQ5m5/nAr0+TjyeUfTExqazn5f+p3qdsXe262E9+H9oxe/KomTFIbEiZ2qiD
Wpm7JSav7UvRMfsGyhyVeRptSBfj/dhm6xE2n2JrHDYktq3MD3TvzHPwr/z/
8A9ONY4d8y0Nm02dOxaV2KmTd6AxrUunafMb7Xcwpp1jT58KfPrBWG7A9zg9
6xTlzsZHxmQLH472vNlMd+G4PMsTBzEWLdh8j423tXO/9GK2nmD3AXkn8PU3
5XZhJx7O2l65c9l6hHZPLFreYuV2Sn+XdUHu93zPkGtVf17XhzcwKPO97Fnn
/tPmfdKDs6ZT77fEihPD4/fb9FF+L3b8uPwl9FE6Go/h+qxX3Q+Ds77FfXgn
14M6IzBT/Sv40z1xW9ot96l2bs9cwxg+xbdvMy+kxyTmnr1bdT5kZ71+n5hY
Mj2Yn4egHuZnbpJvKOi23Nt5fxnna+jN+tsbd+Z9Iu8OeiBbFVAed/DtouxH
oIl2Dmb/OONXj96sfq/sdxmX5xO3z3g4fsD5vbR1k+Mu2cuSP1ney7Q9Wsnr
yq/h2VuSvgil1P9ZeyUTB9fmXnQLXzsn1sKvixOf4Gcb7MvHdomD04l0Ep7H
CvWe5uc4LMjc2/jdyu6NiZ/Th7UzImsd4/h65mlszaEHyiuPDvmeK3vE6l9L
yyXOl/sKb0h3yvdU7B6n7PGozGY96TfVO5i+pN63GS/X9sW5R7JG5/sX2ZvG
5zjF+TOUOx3L2fzO73eUsfk2MYDsL2jjVPya+Gauab4XHN/P19fYnMDms4k1
yx+PcfhCueONz2XsHEevdv7k7Gs5VzLjxl6bfJ/Bx2XOXW/8a6E2yqMo2/sY
v2v4dqB0BVybGC97Z6lf4PfZtEji5NlPyhrZNdxEnR64IfGQXNt4Tb179W0A
pmqvCx/a8e9i2jbXTGIgWVsZs4f0f33Wilm35Bs0/Ce/l3qvyf8lsW5juTjf
HfH7/Xw/lGdu9vcyJ4tPyhXwMp+mozLbXXOd6sNfmW9oc9/MfdjdL8/2zIPZ
PYfdE7JflrU1XZR5Q+Jt+fbD+abKHZPnD3srM/7ytuvfaWwMcXwqLcL2Bnnb
+f9C7vPE9dR5Md9a4BPnSjg3MvFk/V+AhZiPX3Ofyv8C45Sdnr5nb0L+P1ln
sXW936y8/NtoV33rlriWMg3VP0mZI9EQDfJs0f7V2r4qsRB1W2V/MfNIeixd
iRWxzdbjbD7P1kRsTmw7/tBymQ9jb2X2wV44wTi2p3eyeZRzjXAAOxWlJxvT
gzJ31ubn2fc3pifHnj7NyZoGI7MfkD1EfayjXG08z8ZzuEv9Sdmfljcxa1V+
daTt2Fqf7wzYGaDevXgvfWT7vsQ5subIPZL9mHzjpd5DfGrleh2eOVRiW/Km
Kvdt3mX6uTh7I9kjzrsC3bTdHfO1PS/3O98nq/N7vn9Spwhb29K3xBscT8z9
5JpfTWuxWxvVsEL6CuVPU+Zy2o+de1BbH/roQ122e2de5dx5ysxM3CJr7+x5
8mkkVmqzd2zR5rnHcGLGLnNK9ffGnNz/eacbt8+NxVf5psXxdue+Z+tTeQuy
znC8gY7L3Cz7HtJvZP6Zvbl8P0MPYLs89sdlmc/mvUvf8lt/RyexOzHzGOMz
I7HQ3F+xzebvmGT8JuZ6kr+FzZ76Wyr3svzn8nzJN25YnrhA4g/Ot2B7aK5L
dlujpPq71ble/T3ZS1bvnHxrxZdz6Wn6ejoK/G3P/z3G/hJ6KbrglcTxE8PH
pNhlr7nxPZveor0+OESZQXm2KDMw96hzU/BFvrHLOov94XhHG72yD0TP1n6r
zOMxmh/7q1sOHyi3BB3zrlK/NK7K/lLuB8zAK4m7JAaU71HYL+l8/8T7+bsu
MZx8KyL/dtqdrctxlDaPSkxH/0/N8yXr8sSA+H69dq9LH9U9J/c8W62zXqZV
tVMl79PM07XzsXJX532ScWVzKdvvOr5H+XsdD8w+XPZQtDMWo+Q/gpFYo1wj
fb3Y+B2V97nzzfj5hXNFpc/KHiVa8mNx5g/6VwmVsRd2owSfL+Hz3o73yT5y
YtjsnaD+7+w0o39knsmPRllv+T0rZk2AaxNLzPsHs9XrnzVPnqPZU0gciZ02
9Fa/aV8cmn15fa2vzLB8G+Pci3meZh84zwL2R2SdrL83a/O9rIn8ng3RIGv4
xH/yfUP2EJSbhkrGcl3Gj27L8yzfNEn/TX+mT7H/F38qSL+eeDibFyceTvdj
sxz2xaVZ39Mmzn1uHI6m9/mNBuE/Nn5JjIOdDdo+jP6e2Fbmv9o4LbGJ7Gdl
74xPQzM/Yb9H4k7KT6DP4hl8meeavEUYkvtFvVcSg5a/i72PM49kp4z8XvRC
ttqimjLrpI9SphIq4yA8xM9OWQ+gvbr12TnBuB9G52MemuabbueKZa6U+zmx
vjxXHH+V73DkF806Pmu+7OvhXOfqJj6j7PNZayVG6zeswt4h0m8Zl0PpdO1+
x4eOzt3E1gD9Ks6vjcbyJ/yY/be8t5VrjY+N14nGYZv+NaNb6brED7P3pH9n
oIS2v9fONHlXJ/aV+UH2LPL8SgxO/nIsyzpBua/lfZU9KPWOzP58YsF8u1Ld
q9BRuhNaZ+7E1sv8edb5Pvx5KXt4/J2e2BFtgwvQNr9t/n6Bjk08H0uVGa3O
Y4kzZL9D+z20fyW9iQ7JfAO3GZunc01mTktP0MfjcaM6S7LmME7NlH8z3xPp
b30ciiXK7jGO3enMxFS010W6X2Jy2Yuj5+Q5i9Z4SV+rKFcZtdSZljTdmn0D
xzWVuSpxAn2+PusF9V+XdzOdwo8XMBlnaONnNn5KjCdxuowxfpfelTHK2lH+
ajbW5F2mjV2ZF2YvUn9noVueaUnr597OD0jsh+3P9fnGxEDk35Fnr/pXZ2+I
D1WzR6dMYxyNRnhGn69NLAw3qHsCO81cg8cnpsbPS9BBme+1cW6uvcQvshbM
+y77KFkfaKcBjkA76cPp82xMynwAN2p7bZ7tmYs51yj3FWZkDsTGPdik7bto
ZeXvzBzPtXAbrSR9O/3F+U/U+RQfYRU+xstsPMW/+5UbR5/E+MSjpZ/Ou0G9
J/JNh/TYXE8Yk2eN9OO0mfpzE9+Tnpd5TeINxqkC9kd5HICq+nUQrYSKqILK
+CN7UZmTqz+fXsbeO66B66XfpW8n3oQbpOfSI/M9hTF9GKuy50W/19fd9Dva
kn6cvSE6HA2Uf5yOwbb4Tx/Dpdr5m/6DovgP/yYWmz10+heK4E/8gaoZJ9f0
uHzHJj0+90ziVso3S+wbJ+Br19Q3+DLPKqzH9er+qs5mrNOHlxMPyx5P1qx4
CSdmbuL8Juxh52f6U3zWpx/oBuyWv5H+iGbK3+veGIgBuA+DsJb9frQ/7sI9
uBvX8eFC90jbfO+ifnvaLs/67CHTTjhd/kX55goHsX8ePT/zBflt6AXZR8kc
gZ6bGJz81rQVqmQPPd9BZR9Y/lG0IVrlnab9cXgS4/E0/sreMvr4Xf+mw9X/
j94ivTvfHGU9qL99pfc4bs3O0ew1QZl8j0kbpT31ttJtaCB/B92OC/m5i/6e
MvJ/ozsxOXPzfA+QPUm8mzhL7gnlS7v+5iROnDhi9p7pa9KlHK/MfmzW55iN
OXgNk7Jn5fkwAE38jsdgXL4Xyf2D67Kvwv+t2VfNewQHSx+KTvk7qDz/2Zid
/TXcos812aqVd2j2ZlAda/X/Auf+zNjhfzhf+l/t/Zc1aL53yt8J5Bvd7Etk
HYqf2V8rbx0+wxqsxhnslUn8EcWMT2laKn9XkPmG/i7Qt/ewEG31oRQ7pbN3
lLVC4tF835s+mNhaYgHSd9D1mbfr42Q8h4l4Pu/NrHfyfVfiaYk1ZC3I7lh5
VdR9Int6yrxMa0rPoNudL5HYQuaHKI5i2JLvCYzJXDTLvYNnst+ACbhLvQZ8
2ZH3bWJuqC99BDo7f3jieWx008Zy/qzEClyh3n7Olcv+KfZNnD/7snSa8l2V
X6rch1iGDcpfJm8/ZS6lW10v79PDpBfTPxOro/WllySWbMw/pEdIL8/3CImT
0MOll9IHtPF7YmXSf9Bd+S4EvaX/pC3Vr5Lv2FDSb1aZVsq8Rr16iQ3lu+XM
W+khODvvkvw9T37bfENKD8Mw5Wvl2wLsnW+VaB2cpXyNPN+wl/zqtBr+1q9y
+fsIFJdfnh6AM/NsdR2OyRoGY/EENud6zz43v7fQodrbTntK76Db8FtietI7
81vkW52s8VGC/Qr0wPRHvY30Jxwu/5dcz2iTfW66JX2T/yvdhInKv+J3mZl3
I17FrPy2yu9jfGdnPasvnR2vp69K751rwPlTaTH+nJKYBTtn0hLZy8282fkz
aHHp02k951vTvaTPyXPC+fMyj5A+l07J+o62ylo++4pZo+VvKRNP1+6FtJR0
W/qd8+1pael22X/LPj0tK92Jfu/8RbSMdIe8Z53vkj2ZfB9M57rf7nV9D0Q/
DEB/vKBcG+XnJi6bvXh8y9YF8vZR93y6mS/dabnEFOiPmYPS/aWvoC+xcQ0t
n306ujHxf3qA9FW0g/M30YrSPbJ+cb4XPUi6J53u/A20QuYw9KfEmuiBeS7S
f7U/K3GO/C0J3ZF4HK0tPTt+Zg+Q1pV+k+7MM5jWkZ5DL8n80BhcK/0GnZPY
QuaPKZ/7Xf1hro8H8/e8npUt6JfafJl+Qc+kK+U/QIfmexHlH6GPYqv8UXQk
uuQbAvpM3i+Zi+dbQTRM/CN/a4Pt+Y6CPpk5BduT6ZS8d+S/SF9AI+VfotOx
S/40OhVdM86eZddirHnpU3gSR2UPx/lJ2Kn88/S5XO/sf0O/zbwlc8vMfRJn
VH61ft+k/2sSF8RnuFH604xT5lZ5DmVuRXfleedaKYcy2BdlMz9jZ2+6D/ZC
aZTKs1T5t3P9q/9W5pa5Fum+uRbpD1kvuM4+wCIsxvuYmn0Sfg7MXjMdiuGJ
mUg/mP1V9f7n/v0rc4bMuegfeZ+r9zX9Js+t9JF+iwuyrqU/or78H+j3eE75
adl3TZuZ22J6ntfK78W/WZlDG7tbHa+lM7MP4HhZvnFQ7sW8zzEFk/Fs1jF+
k35onDU2xvL5KTyZeyLrTOP6a95J2Jx4nXRddMz3Ppm3sDGLb6+ij75WYatq
9gSzRkw8IGuUzLWc2+XZ+Qd+z5op7/rsF2JX/j4Fv2NQ4v15zue5mN9Y3qf4
CKvwMU5n7yHnR+R9nuvEtfRNvitT9yvprzN3zv6eslMxGS9gSmLyifHwaVX2
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
SQ==
       "]]}}], GraphicsComplexBox[CompressedData["
1:eJxknXu8TPX3/wclZFBJNUeKpEF1kDkiWWqQJM2RImVcQjTHJVKNlFMYEiVG
pJJxybXGXTTu9xGO6xy349zm3M+hcQmpfj7fx36u/XjM7y+PlzOz5733+/1e
77Ve67XWrttvWNcB5S0Wy9lGFsv//q20fHm1wHNj2kSvLnX5I5kCbtvlpXpR
R67sOlA/eVJsk4C77Lxv2MRYWDGf/35RySWHP18/D+bz4F7TDvWMOo4rvkfu
+tcXO62Y6129OXW3L1ak1wNzPTDXA3M9MPcFZtxgfi+5W+KsiKtMfw/M74H5
PTC/B+b3wPwemPsEMw5w8GybeyfHlsn0+aM3hnzZUr7lE1/4I2lSdj3hS2s0
KkO/XX044sqQjsmb33I7C/X/Fy5xPxkMlOj4+T7j5XOMj+8zHr5f7cHsX/Ic
ayXU+e4J9mCWrMz958+Q76jct3DN615rVG49rNoWS6aM+LubPewpkF2vjN8a
COXJwa5Xr9vCxfqvfdmsAx77BcXcH78L5jqj/93Tz+kt1XHyd36X6/F7YL4P
fmjxo9/EbEX/H+b63C9/5/mDZ9c8cSDq2KXjADOPv+UPezzJH9H7AHNdnjvP
E8zvMB7u79nNT93wR7bJ4GvZpS53jlRp/dNOa/SE3ifzwPdYH1wfzPXG/zvi
x6mxOXo/zGf8/fF9cPx4+Pwlzwc/Jvn3Kma/gFmfXA/M9ZbaNrZNdx3S77Oe
wDw/vg/m+zwPPj9wRtuZbucpxewHvg/m+9uKsgYGA2fN52GsXzDzw+d53vyd
eYm/f77H8+Z7zAeY58d1sCesL54P65znB+Z+WQ/YG9Yf98c+4P7B/C7rh3XM
8+J32KeMC8z448cTf30+z+fYb+D4+WE/MH7GB+b+eJ6MC8x98Lz4PJj9yPpn
nKw/nifrgd9nfGDsKb/P9bgv7Cu/z/XVPhrfZ/0w/2C+D2Z+wdhrMPcNZv3x
OfYv65P1xffYT9wPz5vnxbrlfrhP5ov7Yj4Tnz/ziz82WW4cGJUU9mTKzaEF
kWDgD+n2yH2VEsI5UuT3NksIn5GVo3875bHny+Pesa2DgVvjOPrG8pCvSLIf
23He5S6WgQ3/HmONlurvsn7A3C/jjrdnzC/2g/nlOcTbz/jvx9uzePsUb2/i
7Qf42hM33ytwLJS0uhnvup1Z0jhnVzeLJU3ve1bbTt87vefEl/ZwNYulQMof
zh/u9Eb1OTz0yJ56p1xbZPGHHX6K2bKleV7S117rCf0c1+3V4Ivn/ZECvc5v
nzSqGXWUqH1iPooG3fb2Zt8O+fTgr8d8sWzJ+uaOa4HQSTlV37Uo4sozf2fM
nx/Yg4V63a+PTe/otZbqPDE/rAMw34v/PPPXYdui5tWiu/X3sSesx3n3vVCx
t3O/rhf2B5i/M79fP5veJ+xJ1/Fjj1i/rQuX7I/ZTut6Yz+B+Tvrg3FxH/wO
98k4uC/dRwbm7/F+Rvx+Zx9xP6wHMNdlvOwzxss8g7lfvof9ZTysJzD3s2Z3
27MzIyt1HZ36auZme/CIjqd9ie22FPt5/T2eM9djPzLf7B+eI/uF77E/eL6p
+SN/C4SK5OI9WcPswVL5cEiw1SVbWDKs/9xw+G+dszXP5YR8p6XVgLl/+GJ5
En666b0WS674QzI34ipSu8PzZRz3/G8Y/gt6f2DWH5j7BbOewNw/mPvS7xv3
Bea+wNgXni/2hOeL/eD5Ys94vuzj1mPfXhUIlZnr2Lg+6w7Mc7mtcMVrbmep
DH5/3NgW/g36d9YX2NdqYINk9zHFrCcwdgPM+gGHt2ccCXv2yeXsfZkee44k
b3k/aA+eki6t3l0d8uXpPC775s7x1mih2gl93sZ8cX/cL3/HfoKxX2DOGzD2
FYx9A2Nvwdg7MHYVjP2LHw/nK7/HvuP67Eeux37j/vAvwaxf5p3nwT4GPz+o
xh0WS4ms9n+yxRcr088zPv7+f8vOVqbrTOfbWGdgjbsNrHGzgfEnwJxHYM53
Xf/G+aTzZZz3YPYBGP8Ju8B6ZV7wl8D8PT4eZd+wnnnu+FNg/h4fv2LHWO/M
O/MM5u/x/hz3g33X9WP8Phh7Dub6YLX7Bv7xZM95syLzZHjW185gwDy/eV6p
w+uOSrEfVrvIeud5rLi31mde6zlpMO1onsudr8+R+52y8eDbbmdU7TD3iV3l
c4yH68bbNzD2X/eTYe/AnAdg7B+Y+1J7M+FHZ0v/YulZdVcvrzVLalW7PjTs
SZP1bw9IDHty5XPPp+us0XNS4/eK5RLC+fJRbrlP7cGopNy95KjHXixbBkYG
O72FYtvy0TP+SIkMe/dZy2jrbqn0m39PIHQrLr97YQeLJV36V0+aHbPl6f/z
PfYX+7XHs2dLHP5i3V/4DZzzYJ4f9pp9zn5hX4KZ96O7XFXbeQ/qfLJ/2Ldg
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
rP53x8mI67RUbv/X08FAnu6b/j/MrmKxFOk64Dr8f6eMhw577KVS6bnnx6XY
90rL9Gd6eq05cvGTBpO81lPiTzzXOOzJ09+54Pv0H1u4UFrs9Xq7utfIl497
/nS5s6TV4ZzciOuo5I+rujMQypWfHx/cOCF8Xtc142IfcI6o/26cI2DyO2Dy
lWDyN2DylWDOMfWXjXMMDJ8DZr+B8cv09ww/TM8HI15V+2vw9zr/Rnyq69vg
68H4hRofGP4smHknvuK8wM/gfMCv4jzAj+L8Iw7hPCMO4HwizmBej++7fYcv
ViJNi091SXftkZ076r7sj2TLba/GhgQD6VLHtrNO1JGn68T7Xv+LDn+hTE5Y
WqNRcJXce19yrseeJV0WBsPW6BF5b2hsXciXK5vKOe5Kdp+XA7tnTLRG83Vd
Ydf6zc7pttkXlvoVhr/v9ObI3IZ/XQyETsvYnnd18EfydJ+cXrX6vqijSP1t
nhf+PRh/W/0Bw78H42/rejP8ez2vDX9b59uIL8CMg/2jul+DH8BO83l4wLlb
V6W73CbfrP6lwR+C4QfA8M+6Xwx+AAz/rP6yEY+DifvVXzLiMTB8KnzZ+ddq
DstwzdXzgvWEnfS3L+05P3RI7QzrCzuZZLk50h8xz2vWG3aSc5JzkPvjetwP
32f8fJ7nw/rmebC+uX/W99WPnuw+xL5VSlI23m+xZMuyv10/uJ0n5IVdPYtc
7qjasfkJN38PhApk9ocvfG6NFkn6OOvPIV+pDD8YXB8IFcuuX5/b5ouZ+Sye
T6P01s/6I+bfu31+vJLFUqzfJx5i3tnXGj98u2yDxbJP99XZJT3nO72m/WVf
sE9ZT+ofjuiUPdq6Tu+jwY37/guETHv8f+GFLVPtMecz+Q/iR/h4xgfm7/Bg
nFPwzN/XnTqhdvh39YeOLip4J+wx/SH8QPwh/HXNQx/sVdbOu1nnB/sK5u/x
+QbW25a02p/7I8d1PrG/YP4en59gPWK3mH/sM5i/Ezfht3L/b02q/unqwAq9
z4+6vPCt13pE/d3c5X+cDflMfxe/E38XPxX/Ev4MvxT+DD8ePw0/F78Mv/Xn
kxXmRVyFUv7JRe/ZgyVSrdGF9LBnl1x8bPtNhz9bRsZurrYHI9J5bL9DvlhU
/5/vaR4hLl6FxwIzvv+eTet4yWb6j8Sn8FpgzQuMKS0K+Uz/knmF59J5Nu6P
dcB98jnWJZh1zbnEeQb/B48Bxs/rOfM9Wzvvbj3v4PvgOcD4fTb7llejDvM8
5LnAg4DxA7ku47IXvFOzt3O7Pi/sK98D83y7Tv/vfNizTT+fmrwxLWYznx/2
l+cN5nn7G0xYbw+e0M+zT3me2GeeI5jnT5zB5zkPOS/wOzj3OJ/Z3/A3zCs4
Xr/DfoavYb+C4/U67F/4GfYnmHOOf1kffA5eGcz+YV1xXoOxl/ir3C/j4HrY
L80vGPaLOAocr+fl/MJeEQeA4/W+nG/YJ+IyMOPi/OP3GR+Y85DfYzxgzhWu
z++DeR6cD2D8Ivg+zi3mQ+unjHGynsCcQ/A9XJ/rYafq/bdpi8Vi2rd/zmYv
cnpN+9b8weYfOL2mfSs68MEDUYdpH+FDsN/wH9hv+A7sN/sK+826wX4zXs5/
+B/2HfxBfH6a8xI+IT4/zflJHMlzVH7MOI/Yn/in+Mf4F/jD+Bf4v/gX7F/m
nf2JP8H+w5/gdz57/2SjYKBM43nsFfE59od1jz3BTmKvsZPsJ/gA7Cj2GntJ
vI89xj5jD7HzXJfrYO/Cs8rujTqKZfpXcx4PBkpl5LWv7N9HpolsLwhGXJmS
/13tmNd6UL67f/Jn9mCO9Fk2QyyWs3JlWONXvdZ8fS6v7P2jfthj8lH4g1qH
Yqw3+CjWK3wU6xW7z3pNn3cxaYtvk9iO9tgXCN3ySyY8dzxmOy7vN7zxXcx2
y69/721rQjhT0lK/9zi9BZKRsulvW7hIantTHwp7SvX8YL9zHrC/se/sZ/ah
8uPGPgWv21GvSTBQLJUWrm3pj5Sqn04cAa/11xcXW/gjZdL82jeVqkc3y9f5
I074YlniPbO00sTYcSlqU3NxxBWVET/MeizqyJL23677yB4skKTjvoVJ/p26
byfu3Tfb7YzItPdPvOCPRGX03YsvuNzZuo+bbC+cHrPdOrceub/Y4S+R8i9N
Kt8ouFHcew88FwxkyRPDH9trjR6TTXWG3GOxROXgwJM+ezBTan5QLepyF8jJ
q8ueCgYK5UPn1k+t0RJJW/blYw2Du2Xgs2cqJ4Sz5Xizl05HXOmy3T/mjMee
Jw93HDTNGs2W2iUP/hLyFao/zLzDp7Du4FPwH+BTWPfwKdhV+BR4CPgUeAjs
HucTdlXrT+okvLQgtF7ntcajnR9IsZv8IOsaXgg/Fz6P+wo93eyaLVwiuWO7
W3s7d8uyZl3G2YPZ0vvBpgdjtnSpOPlCN681T59Tn6xpDcKeQv19/IjFl/Ka
nHKtl4JVq5qHPeZ4yAO8bts63Ws9Ju0qv1oxIWyOD147+5n5KW5npsztczni
sReo/8R6xh9iPWNnWc/YTfivXvMbHh9t3SzHz0a7+CNZUmHP138HQsclsfnE
h6OOqPz2TZVAzJYlk7+0xxz+AvVvOc/xXzmv8U85j3me8bqzeP0X44HvYr7g
t5gv+Czmi/OR+fr09bemJbv3ytmuV2pZLDmyfNKaain2U5K07NsClztPqo78
YVnElSPTyz29KRAqlHqxX2bUDq+RJxfX/zXiypIrp4Z7wp6jMvnf3WPtwVzp
2+LqKmv0vOS+9k6y12qe06w3eMictfW7up0mX8F8EI8zH5xzzMegz6YtSwib
460792BCstsc755PGjYNe8zx3nih1r6VgbU6Xs+FyR8FA+Z4UxpM6u21Zup4
2zz888qQL1/j8pVXe3i6un9X+3n/929mRVym/Xx+zMUZ1qhpP681eqpFMGB+
//1Xi15Ld+1Qu9Ng4uj3goGTcnJwx+2BUFQ6xf5702vNVjvEvDivjLh1fF/Q
+A5MfgRM/Agm/gOjlwKTTwETb4KJF8Hoq8DkX8DEp2DObTB5EzDnOJh4Fsy5
DiavEn//+DXcDzwm48Ov4ffwq3i+rEv4GvxF4hEw5zLnEv4pGD6c+IDP4/fH
nvNludxFsvjtgXdHHaWaT2Ffkq+CZyZfBc/NPuZ34ZM4ZzmflV8zzmf8fewC
+x47QN4FnhR+fUXnewY5vUXSb+il2RFXqeo4OI8/ffGVAUPsG2RhqM3vIV+W
HEg89ZPbeUz+uydzijWaKz90SLzkcmdKT89nbrfTtFPMH34amPwG+Oyw9MXl
LCsVk18C47+ByYeA+3s/Xun0muuZfBQY/w5M/gScdtLyly9mrmfsEhj/D4yd
AuNHgrFbYPxI3V+GndfxGX4rGL0OGL0SGL0SGH4CjL4HjF4JjF4JDF8BRg+k
z9/QK4E518D41WpfjHNO58fwq8Gce2D8anDjM7d/dNCzRP3UI/f7roR8aZK9
77bzHnuuPPvBna0tlgy129hV9vWU+7/s7/SWyOVDBa+6nWXSquylL5LdB5QX
ndSt8Z0p9jO6D4jb4OnhsxlPp88bV97mm6+Y/QzG/9fnZeyDntdy0jx2M7+u
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
+uuGH6b+hGFX1d80/DL1Bwz7AIYPAVO/o/6m0Y8FDH8Mhi9Rf8io51F/2ujH
AoZfBuNngjlX9PcMv1PjG+NcAWMfwdSvabxg5E/1eRh6AvXHjPo1MPoBMHkW
jbeMvInGU0YeRP1543wCk+cG4zeo/23k2dX/M/wGjc+MvLo+b6O+Esx5Aib/
q/6h0Q9F/VOjvhLM+QMmHwymHwoYvwjMeaXzbdhFzr19c6ruOOBZqbrrOuMr
tUjyH5GahctHOL25Mjlr6ide63kZ2vbldv5Ivtpl6jawc/UvfJ3v8JdJ9frN
9/lGFEq1q1+97t5ZImt7r/ROjO2SmxeWZXmWZEuHqb0qTIxFpMcLndeEKubJ
G6P+rB9dly2r55aOtw4olONFLc86/RNVd+5741A47PlDWs9wtgkGciRxcsly
e/CMzC7KrW6x5KvdRye6+fBtTYN1iyX3pb8mx+aUal5b99ejQwY4rxdL2geN
F4Uqlkme94ebtk5Fcu3hncPtiaUaF2l8bPh5+vwrD9/jG1Ekr/9ceW2gtdmf
V+M5Q28E74SdxI/k//k8fBoYPg4Mv6bryeDn9PsG3waGr1P7ZvCIup4M/g+M
vxHfj5W/w8+D4dfB8ONg+G21VwYfDIa/1v1i5B3B6NmUdzb0cuTD0MuR/0Iv
B7+Mvot8N34tcSyYfc86urFh5tKQr1jXOX4c/0+9TdYXHRNuLSj5x/eJzWLJ
kqVDyxomu49Ij4w6JS53rtz7x8jh/kiGrHFs2xwI5WvdCn4wdS6Dc8v3dXrL
JGleg3rh4mIZ8WduX+f1UtUHs2/RB2OH8COwO52Xdp2cYjfrde5a/euXXqtZ
r4Ofg26MfbZyeMd7outKRDp9mzI/tEvmvtt/bmxOtkz5PG2MPxKRG9tvH+68
HtV92+2Bxc/5uxcqv8p8sa7BxGtg8l9qj4x6MjD8Lph4Dkw+TH/PqDcDwweD
iffA5BvA5BnA8Mf6+0Y8qPGtkZ8Ek2fQ/WmsQ90PxjrU/WjkYzQeN/QOGv8a
+Rcw+gcw+wDMPgAT/4Hh2cHEb/HxttoDox5VzzMjXtT7NepRdT6NeBFM/kr9
rU5bSh01i8W3Z+UL3qml8kmio/qi0M+qP36zQkpBxGXqj/f2+fPJhPA51R/j
h6M/xu9GfzznyTkrLZY/5LNJ6zeEfDmy8f2jc53eM3L2fPcvrNE8PbeIq6hb
wo9EF4of2e2nDd+Vs/ymutPn2l9a4fSaenx0oeiQ+3xaZ/j8kFmP8sMP/k/9
EbMehTiJehTiIuKFw+P6/zzGukj94bzS5DMxW5r6w11fitRN8pv+MHEW/jC6
Xvzh0Imtz12y7dE6sE4dB+SHfGa9HHkd6somXX5tY6B1kXz//ZgngnVL1U4y
f8TF5CmwL9SlYF+oC8G+UHdC3ESdCPuf58V+5nmxP3le2GXsLfsL+02+HHtH
Phx7R54Te4e94flgP3g+2AOeD/uV9cD+ZD2wH1kP2Id4nbwvMaNa1GHaA9Yb
PAd8yZtfr69sSS2SNY1df9k6larOhnj5snvwiK7uDXLF+/0DltQssa97KCfi
OiauI62LXRm58tIXR/3WAZmy3J4RCrQuUH9s3v/C+NgFPW/A+HtgzjMw9Zdg
6g/B+Idgzj8w9Zpg6hXB+JNgzkswPACYeQPjf4KZRzA8AZh5BWOPyHNgj8hb
YI/IQ2GPyCthj/CbtB+uYd+oF8G+Uf+BfSOvjn1DJ8S62ZXedEyK/YDyY4de
nDveaz2j64a8M/yY6noN+1ZW/fFNUcchqTBw09JIWo70G/D9I0n+s9J785sf
2xPzZVDfGutCFaOyseY/nb1Ti+SXJVUGX7fNkaXVHkj3jciU4f0/v+CoWSRt
aiUVOWqWyqHCfc2CdU38ZrczR+qGv9fP93+0w96wx/y9OsPty+xB8/f25L1+
zVHT/D38Rz6Pv8jn8Q/5/Nw3Q+/bLxTJ0Z9mrwmMKZUPVtVfGtpTLFvCfxz0
FJj6fcZT//LeTt6D5t+7zO1dK3rF/P6RhWm1ouuKZGjSuU+sA27FLdf/+yVU
sVBmZ77/oneqmadn/1LvAY9NvQc8NvUe5CGwQ+QhyBvH61uYX/hytQvGdZlf
6s/xo6k/175SxrrDj2ad4cfDBxAXkG8kj4s/Aib+J24gP0heF/8ETLxPXAHP
TJ4XfwVMvSx2l3pZ/C54J/ws6mXxM6iXxa+hXja+Xy/2lfuFt2kbuZYRDOyT
b3t9/mPMlqP3B49TdX+5pITwKflz7SPDnN48vR94HeLQzlV3t/VHCtVewtNj
/9CnYM/IEzAu+j/CkxGnVulyo/WC0BblIanfh+e4cHHnvSn2E8pjU88P74Eu
A94SnhQehHw266nxlYcOzYz8pjwufBOY/DPrbUNP6yZ70Kznh18Cky9mPcLL
U5cEnwSmvpdzm/pe7CQ8PDoM+FfsZqPyT1z3WvcrT/xZRoLTYjmtPCQ8K7ws
uhT4D/xl5uOpaJ02/u7F8tPr4++KriuVWk/0vaed17z+X5ccrqjDvD51SFwf
nQzn7tyL71/t7Vyl/Ir/u3rtEsImv2L5a/Fkt9PkV9DdwK8Qf5L3gCemD0S/
L082POXaJNYqw3I8S27Nu+XvaV7rcbXzp57c5nHvzJSdv63yWQcU6HyT92M+
ydMyX+RdJ383ZmzU9ZXyMSPGl4/6IyYfs+inihutUZOPQQcEH9NlfZV2C0Kb
xPP1ugbRdVliuXPSfSn243ouJK2tGIykZUrdNtf2+0YUSGKj+3q6d5r2uWLq
2K9ic4qlZ9+7ZkfSSjVeYX8ss66497Jti2QuPPxUuDhL4xX2x8k+F1+yWE7I
MzeH357Qyezfw/6oe77V/kDrLPn21bsjniUFaneYvy/X3f9rQni3bLjRYpB7
Z7Y0++2bB5Pd6XJ311Mtg3Xz5PDkO5uFi7NlyNLRd1pSb8XXR1++Y7R1u8YB
uzs83sliOal+PLot4gJ0Wvj17Bvw030La7Xz7pUnanQd5byeLZWq3UiOOk7J
pHcudfB3z5NN66Szv3uO5Gzx3x9dd+scu2PfvHKWtTK2/2dVEzplSdfeG351
eo/Kmd/rZXiW5MqWUOsrvth5cdyzKxiqWKD8DuOFz2G82AnG++sHFeo3DJrj
2XX/xPSIyxzP/c/4vrYOMMczvtnNTQc85niqvdvOkeQ3x7M5J3dzqGKmjqek
34tdvVPztQ6vVVYb9xD777p+Nt1771y301w//pYvx1wZ5vrpVPD1zNgc8/uJ
7g/Phj075MDhCl383bNlfNXta+3Bk/LYY4seiq6LyrXmC/5x1MyWzz7t8Kej
ZqGUvjl/T+PgUl2XRUve2GoPpsk3dy5JtSfmyusVz9+eYs/QcWY3bfZzJC2q
vB9+xPy7plyxdSrTehl0INTHoMugHgadB/Eq+XDWgfrnhv8JJh4FE6+BiS/B
+Ltg4lcw8R2YeBSMfwxm3YCJB3V8xjoC40+DWVdg4kdw25VHelWwLFE79v4M
We30pklzX99ng3VzJfPirmu+2Dn5+lz56pbUfJ1X8nLnTuTv8I0okfZT2q8O
tC5Te6bxxsLe3+z0TVe8a1WVv7f6lum6Wrgmr31COE0uTCvbGWidKzXuSpni
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
wetwrtGvD94Hfolzg/588EfwSZwb8FJcl+twbkxo2eWEZ0mh7LPUPufKKNF4
FH+C+IrzhfGDiT/B+nwNDJ8Ppn4TTPyp3zeePxh+H0x9J5j4E8z8gOH7wfB2
qncz4k8w8weGb9B8nMHLgdGjxuvjwPR3BWN/wNR3ganH1PEZen7V7xn1cGDt
A2dgzvN4fwBM/aL6T4Z/AKaeEYy/AIYXBGtezMDY3Xe2HVwXaF2i8Sp1jPjL
8Cj4l+h38Y/R73Iuk6fiHEa/Cy+F3gE/Gf0azwf/kfvH/+R+8T/1/gz/8/PV
P4+cH9omr28qbBusmy0r1vdI9UdOyKq7vrzbkhrVc6jq4MdzXRkF8mtOdF4k
rUDzphfvf+CYp6BI6vW6cld0VKncc/6ZFaGKRZI57cLPoYqleh/h/7lVtgti
+ael5YhntupSvTfu+sViOSSLMkcOdO/MkSU9q/3o9J6Vck/f+3Swbr7ceXb/
e87ruaqD3Tv0szss24ql2qSGjwezSuX9hyYf8ywpkhqrvm3l714qS288/ZJ3
qqkHWX/+9u0rA79J1/+y3vJOzZKeJ/Z8EAwck19fH/dkuDhX+j/ws9s7NVMq
/VrfktCpQCo1d/SYFFuvecqhy6a/FXUck0svXV0cScuVsgpTkv3dM+XlBbO8
9sQC+Wbu7gqjrTs1zwafTB3l2scHdbRYIjJ+RXE/906TL0YXUGP3B3sDrbMl
o8LU5sG6Jh9M3eWekRvfdV4vkFZvPlnRkloi028rd+W062flDf795NFFbmea
nLQk3HDUzJV3zywrDoTOSbMeoQO+EfmSUvv+72JzorpO6x3o2drfvUQKKv43
1J5YJoN6Dm44zL5Y8+e/TVrdONlt5s/r57UY4Y+Y+fP9AfdZzxIzfz7WFRhr
HWDmz3kuK9a1TQzWNeNp5oM4mP1EvT6Y/vNg6vVVH2D0l1e9g1Gvr/vT6AOr
emSjXh9MH1cw8SL3D3/I/RP/cf/Ee9w/8Tv3z+eoM0I/iT4MfST6MHhr9GE7
Xzpcubdzr+qGulQYciBmOyWNsldUSOiUJ72aXK+U0ClHz7UVZ2f4WvjXqE5p
drdG9mT3Ufkk6eyc2JxcuW11cKg/cl4iUz9JcV7Pl3vn/Tsvyb9b6+o+/OW2
WW5nuqz7Y/pVR808GXH77jJXRrbW6XUeFbvDklosN8+Eu7l3lkrKVx37d3Vv
lTaNan3ovJ4ld3w263zEdUJmf7aho7/7rfh2WLUZ1gFZcjm9hy26rkAuPpic
FKxbIF3+V4Zcs0RO9k6/YetULM8defaQZ0mpbMn+8O+Gwc0y7qEvLroysqT2
62/vtkaPS8YHjXYEWkdl1xuXJ9gTs6TloQMzYnNu+f1VWp0Zbd0oK8fb58Xm
ZEnNzFf/CYSOqZ3YPrckEJuTKQOf8jj93QtkU8deh6OOHbqv9pdr/mSS/6Su
Y3QK6HzRJbCuo1U3jU2x75f5j6Z8bk/MkYy3+/m81tPyzxhrN+/UPLVbPY7/
+mi4uFAc1aZ09h4skt2RXw95BpUqL6rnndE/FUz/STD9UsH0nwTTH1Xjd6P/
JJj+0xq/G/kUcOr4cuVHW3cpD7HiId8LltSIfNujU6tg1i07seX2vYEx2cpL
PD+k47vOlrfWwR1Tz7nmlij/ovp9I4+h5y3vlzewvn/TwMRDYPw/MHwtmHwr
mPgJjH8Iht/V+gQj/wom3gLjP6p/ZvDBWr9g5DHB8GVg/Fuw9ccpAzf7tqlu
LLb8wPVA6IS8OqXdYd+IqK5bzlHWaeVnJo6wJ5aorqWGbVc5i+WC2NfeMT02
p1A8H5/4LpJWIrmuxDLH8SJ539Z1uH1YqSxcfeiyo2a+nnurlzfwHfTM03Nt
9wB/mdd6WLYMf6FJuDhHukw7/KzFck5s+wrKJXTK133GOdoktCoxmFUsCa57
7opeKZWeA1/821blVpz86PmrtsmlUn1D8kvprn1SYDv/t6Nmjlx++smUYOCU
PD8i9aBvRJ40OfDGG96pOTJ3f92fImmF0mHN7MqNguvULrSZXLzPGj0q3+4J
9nfvzJUTI3+baE/MVDtxs++ZFQc8IWkw5/lfImlZUuQINU3yH5fUP3M+tSdG
ZcX+h0OhillytuMEl3dqgfT76O3e7p35WidZp/KKP2pEf5Eu7U5/5LyeKdMy
bH2ijiOy7PuPO/m758rNZ+b9bA9myG2XateOrstXu0ddGs95U6D3Vt+IMlmx
6aPpsZ6F8sbhD3b4VpdIg0075if5d8kL+6e/7J+VLWM35c1y74zIgoebPxS9
EpWrdyZdcM3Nln8+PHHR0a3Q7EdrrA/0NmDtTwyfZrzvAjz8r59GTIztk/bz
HpVg3Ryp/8aJ/3yxUzLvrz01LKl50vHNJx6JrsuRv7sMynZlFKqeFr4WPS18
OrpF+Fl0iviV6EnhbdCTwpugJyVPjZ4U3Sx6UngS9KTwNtRjcH/oZ9HHo58l
7uQcRB+PDrtb9RYfW6NmP9l4vR51sG8Fk/5zO81+GrZ1D++J2cx+GsT99NOg
/h0+l3oo4nTqm9B/UK9EnE79EfoN6tXhEahXh7egXp18DPXq5FvWLx+zYIT9
J6no751gSc2UV1yjs/yRQ9Kn2FLqysgR/4TnN1ijZyX0/Pwtgdb5uk9qzXFO
i80p0noW8kXYCeLgz73VvoqdLpYU6/Bh9gulsvyRn99wVyiW1OxnXnOPK5Xv
Ai3aXLLtk8kzZ/8WqpgjLZ8MREO+UxItaTnZOiBPjra/p5YlNUfatjvzpntn
ofSc1P9Cb+c6OVu49xV/9ywZN9b9fEL4qDz93OC60XW58lHZe+2CdTNl+v/a
ENUskBotFk8vZwnJvpo3B7t3ZkmTxonLnd7j8kjKj88E60Z1H3+6s43Vklqg
+xaeqeMa5+wx1l/kzy0zHOHiTDl5bOqpmO2IdK7luCOhU6483/Seh5P8GbJ4
yMl0z5J87SsAD0Ufgl61HxhjHVCmfjg6TfbxsinHHg4vL5GUoKN2O+8ume27
sDwyLVvqOeZ1i66LyOVz0z6xX4iqXejiaPaK9+VCfe8IOgH0KcQH6E2IB9CP
4P+jO0Y3PMUx9Eo7r+n/pBVljvNHTP+nTv2nop4lpv8D78p94q+qP23wN/H+
MBh+SevpjPpKMP2rwPjPGq8b/BOYekyNr43+VmD8bY0HDH5K6/WMOhAwdkP9
BcM/1/jBsCNg8nNg7Ir6X4Z+FX0b+lX0a8SF6NOId9CfEU/B0xJPoZ8knkIf
iR8Kj4zfSX4Rfpfx0c8n3t7R3wt7R10S9g6dBvaOfl3UhRKv1R3Ro/Ml2zb1
i8d8u6ok5DP1u9SZ4iejXyXvgz6VPA9xMXkd9hd5LuaD9U0/FH6f/ib8PnlH
fp88Kf19yKOC+Tt6FJ4f5wP9VTgf6JfC+YDOifMB/w/7QFz157I1S0IVS6TN
ygaHVwZWSuVX3vnPUTNLxlR+ZXQwcEQG/FzpiG9ErhQMPL4tZjsvW/9ZOj+S
lq9xXcJrL71vTyzW9ch+/fzbKu1TnF/IU9f/DQdaZ8pz/d9M3uz7Q6a65v0Q
m5MjU6o/dSEQOiOFi58b6ryep3Gf879s8Xcv0r4rbVt5ZkZcZj8C7BH7GXvE
/sQesd+wR+RxWS/2DvPfcW4skloz73wi2LdUZiz/ZPPKwCbpv7xt8/DyW/O0
L3dUsO5x2VY++/aEKlE5f7fD7T2YKbae4yKeQQXyzbsDPrMOMOup/E9nJm7x
mfU60z2fHI3ZzPoc8mLU41CPhj2k3gx7iM4Me9ipy19vJQa/kWmftq+W0ClT
5i9c+lGK/aAUncg771mSI5sTT3/utZ6VDk9MWhWqmK9+6rzxDcdZBxRJ2YXl
u3wjzHiYfpdg/o6fQp6O9UE9GfdL3g9+2n6mZ+Fo6ypdP0k1z1rmh8z1M/+9
vi9EHeb6IY/I+kl9u2anSbEtGp/TrxLM36mP6vxBlTeiDjN+p78kmL9TL8W5
TnxPHgXM36mfgsejTgu9DHlI9DHUB8JrkZc8W7q81ubAFF3/G7yj3PND5vrv
aNs2yh8x1z95UtZ/5e2zwjMjm6RmWc4J3+pbcdfLjTfaE4/L0PYTFkdqROWr
19L/cxzPlPAPDbz2YQWSPql9Zcs2cz0HM3551j+rWMpvkxe8B836svh6svj6
MdZnQavef/oju6XPGwPvs2zLlswbzbdaB6TL7yvvKHTVyZMGj5/73H4hW2pV
WropMKZQru3dljoxZvKxg7ZHK06MmXwseWn4WPLQ8NH49eBv8xJ7bvbtlZND
U+tHr2TLBtePlwKtT0mTPXWvOrrlyd3d7/ox1vOWHXlw517f6kJ59e7XHrts
Wyv2ncHfQx2ypNz8ni5L6lEZb0ueal2UK0P+O/+t8/p5yXgv5nZXMOvDGC/1
YYyXOITxuv4MZQYD5njuPZmTlNDJHM+279a2CfY1x7P/sWHNT7nM8fR+LDDD
O9Ucz8Dn7xnirpCp42l3W8KCyLR8rfMee3JVZLT1d53/qsfeuxlobc5/69kf
B2KnzfmPddjSzj/L/H54zgZXnfBi+Xxqmc2y7VY87fqhxsQRaXI29+sSV51c
afpr3e7h4nPydOumWwJj8iVtwrFDvtVRmT7j6Nex00Xia15rhH1YiZQVjezr
bFkmd+2qfHv16FZpV+3Lwe4K2TL80N47Jo44IXMHPP5MsG9UymY2eCw6Kktu
hA5WtWwrkC79ew6dH9qpvMyMr1d/4u8ekYJ7F8+OnY5K6tWEbM+gbOVpFrYv
+XBizFxvbVI/Lj9xhLneeO6st2aexG/LWTbJ+kE/TrcuypKWT9+1wnn9mNy1
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
mP2u+hRDbwlmP4OpBwC32lu/0qLQMuWJXr36RX4kLU1mX6g90tkyV7a+Wv3J
hE4Zyhuho6GvILqZJVcsBY5uZVI/1qPeMPtyvd6qj9MaJWeY13vw1Gvv+bub
10O3yfXQeXI96o3QdVJvhE4WnQ86UXQ96Fov120wwdq+UFzeva+7F5TIC90/
GjK/9S5pMzInyzMpW2p88dwn/lkRmRMevyaUF9X/53u8v4w+FmD4m/I9Zj5R
Lbpf+/bxvjHe0waG3xlS2dUr7DHfJ0GdAu9lA8P/UNdAH3V0tfQFARN/ootE
n8f7ReiDC4Y/eTlp3U2v1dTj8f4R+rCB4U+mXzvfzmIx9Xro/uj7BoY/sSxf
vTvQ2tTz8f4S+siA4U92rOqdMsRu6v14vwl91cDwJ2df/DHgdpp6QN5/Qp87
MPxJx8X1CgIhUy9InTv122D4NPqwoO9FF8k5B4bfe+7kqKbBLFMvjO6RuB2M
H7T+jSuDnNcLVU+MH8v7a8DwEfc/njHAudHUB5O3ok8SmPU/o9Gifb5mpr6N
ugviQjB5c+o0qLse9Nm0ZQnhvRpXgeHJHpnyYNNq0b2qn6g792BCstusZwFr
f4ZHavYOe0x9BX1AicvA8IKjtv1x1DfC1F/ceKHWvpWBtVrvAiZPM7xXkxMz
I2s1T+O5MPmjYMCsfwFT/7Lv/SO/24OmfiOlwaTeXqtZDwOmHsY2uHG5pJqm
vmPl1R6eru7f1Y8G44c3qDryoxb+31X/cf/3b2ZFXGa9DJh6mVEPz6+f7Db1
IdR5My9g5g1dCPoR6r6ppwFTT4NOBH0Jdgo+BIyumb7i9DGgrxD1c2DqTbQP
kaFf4v1x5OvB6INWVhj4bZL/gNY18b437cNgYH1vTO/fvnE7zX7n1PmQ7wcT
B1AXRD90+srCQ4CpD248rPoH9kSzPzj1H9Sfgak/q2RZ0aqT90fVL9Vpcuzl
zT6zXxQYu36qVZ/jwYCpb/r4ytDSQMjsFwWGV0wfva5JQtjUP1F3T70amHo1
1g36KOo2qV8DU792LMlT4jhu6qOoI6WeDUw9283M8r8Fbhapfor6XOqztF7X
qM96r9eZtwscK3SdUo/LvICZN9t+y6sWi6lvov6W+i0w9Vu+Br7vnF5T/0Td
FPVcYOq5qLNCH0WdFvVdYOq7qOtCP8V7wfh/MN9DF4We6tWH+nVNd5n1X2Dq
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
58Zs6flPQvNg30Kp+d7Jz6yPFsuUZY+28s8qlWcThr7sfblIAmP/fCjc2OSR
0Gthv8hHwvvQF/WFlystTgjv1zxpjfGVbcnu09KzfLdZsTl52neRPOTqJpN6
uscVyVuTP/051KFUfh189Vo77waZm75/X2BMlkT+2jHe3/2YXE/0zImdzpX5
jRZGPYMypdvEqinOlgVah/rK/+QM12/FkxNia/McKxXT3xW8/d/tl0K+I4rp
9wp+4q0XWlks5xVTFwimLhBMXSCY/BF6BvJF6BXID6FHIB+E3oD8D3oC4lP0
b8R76NuIn9Cv0e8AfRp6Nfh6+hugR0OfBl9Pngf9GecK+Xby6/jl5NPJ/5A/
J7/DOiB/Q378/5H15XExrv/7Yzkd2yRkOQ0dHMtkiYPJerwxCdmmZAsTjixN
4tinE7JNZGeQEJM9yxBZMiVKmEJIk5CpZtqnGDvh1/m+5rrv1+vz++u8rtOj
Zp7nfu77vVzv60JcgX444nD0vxEXbylI+N1deZuWuPb4LvHJpx5jZ00wx2Ux
XRFZ1pIx6ub51OnVkiMGhxI2/4bnkTLU8YuTJ8fQEwPGOQqM+T1g0aYzH9UG
jjGPDwy9a2DM6wFLF0c4B4o5hv4ZMPSqgTEvCPylzYtbQjPHmP8Hhp42MOYD
gbUZrfy1Go6htwYMfWxgzCcCo27J/r5NbwAYc6nAmEcERp0TGPpuwJhDBcY8
JDDqouzz2/QNgDF3Cgx9JOCD0R3e2wl2MPzpy907E+W7GYb+FTD8RjBvBr8R
zJuhL4d5syNvft8QqznF+tqhU1z2Kbdm0OaOPbcJ25uo/Nr5Vzq7XCpclekn
X1dEXes7NRYkmRlPo+D61DhNSDkd7Nq8lmAQ1+/E/CfmuzD/iXkuzH9ifgvz
n5gXw/wn+o7Qb0JfGPOC4IGhP4Z+H/pr6O+hv4b+HPprdhuuvpVkFjNdH8HB
egcNO7g+1Ky+HXyyZcnk2vfmOvGCfGoVHLFQ28bA5uDulG2bohydz3iduQvW
ufnIub7QnLTxD4T+XF/oqfhFE69cri/UWtq9q/4M1xfKersoQzGX6wsdc5+n
V/UoJp//wiRnrr+Ozwd9R/w96DXi70F/EX8PfSD8PfR98Pegb455R+ibY94R
vCvMO05penfGfPF1mlQwYax6Xx4lt/0UJU9+Spf7fW5t/mCiFoMSrbIoI9nv
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
NlrjqXGcx2+CC3nUdNMabVoZ749P2/HQ1yzJpMAGxaUyezPF3vTv4daL98Nx
X+/9vUmnCSymHduW6nRZvP+N+wYdfo+/rvnJd/N5RHwOU/+7L2X2FtIPfFvl
5MTnP+FvnSkpmCN/l08H9cdGZe/g84nwt3bdur6v1quQ4m8bArWD+Twi7lO4
qX19wYUSctxxfrJyGp8/hJ92h/DGPyXueeSXM7BBp25c/xt+2mvzLmWook1U
23HPfeEGPl8IP+2XfcZHGwTFtPAfJwevH3yeEM+hz46Pi8V+ZRRUNLaz/sb/
7++N9w2fBxjfHxifBxjfn/172+cBxvcHxucBxv0Hxjpd1TjdT+pSSVVlX2sK
ZP+/3zeuh98CMPQwgOHvAAx9DGD4PQBj3QEz3oUNY10B339nbnbAwP2/vZVF
lcrRfF7X0Uk5UHCEz+Pe7r/6tqYB9/+GfwTmaQtFM0+7ZfL+gVzhdkBewPsF
s02v3sjO8/5Ay92t1dYAzpfB89xVtG+oMqGC2u3d9VCxgvcvse4Wdjj3SJFd
TrlNEvJl53m8hPhO3vq+rzIhnyqcMwu0eXzeFPFZ/PKALnpRIZkCF/QRBfD5
UrwXjo/q/3AKLiGxfzBp3/J5Uqw7j5CmtQUXLLTl5taRyml8fhR+3xv10zuY
zXm00Nh2TUtP7ncOv+/8NjU/S9zNtLHpw9n6+tz/HO/NQOXR+6roYgq+fjpL
NYTPg16e1765eQPvT8f/aXwVvPUq4xvkzPv+XTOV8weO/T042hrA+QC77vZo
7LeO9/fdbkU9ssbzfr13w8b1RdXPDXlYnUSf87os3k/Hc8L6wT4D/Pn/BtuP
MYz4HBjxKTCeFzDiUWDE38CIP9nftz1PYMSbwMhvgbEugfG8gbFO2d+37YPA
WLfAWI9sf7G9J+x9tb0nbD+x5XfAiH+Bkd8BI/4FxnsKjPcUuNuQ/wq14Qxj
vQJj32V/z7bPsv3Mtn6B4VfPvq9t/bLnafOrB8b6Bca+Bzx82dI4wSDuX7+j
xSCN9DfuX/8jPn+x9D7nQ0aeinNdID7G6lw/2l2bFF3F+QjlC/IWqZdz/sHZ
2ZdeKlZwvsHMph9XCyWcX4DvG5HhfsAgKKfuc8uV4p/czwDr9cKSz29l9nlU
e92hfs8zuF8B1mOD9P3JmkATuSZ22aM8x/0LsN5m/9F/j1VfRJGi2Be6DtzP
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
a6W/wf1t8D5eK/01XueWT7p/9K/0Z7ieB96/xkNObxbuMZPn3oA48Viu34H3
L2i/5zT5u2J6+eXTd4mJ8+/w/t17U+aq9SqnXaf6aQxHuD5H7t6YqwLBPepx
w+WMQVBAqg/Zs6OruB7Hy1O+0VLlc9rSOC1E7FdI3bPfKtXLuf4G+njF8wLH
KBNK6GFkf6NiBdfbMC/yzA8WxtH6hpOHaL3yyK37yUGJdnFMX6PD1+Y/Nbon
ZJz9tYnggomCXbRZ1niup/F/25OTkfolHjDL7ItpiTTSXuTE9TMOtNm6oaX+
Bi3st3WqMiGPynNLCvySuV7Gk+PFc/SKTNLvdHXVi8zU4dlqEgVwfQzExR1K
Hv10Ci4mz/01pdq3XA8DcW/ooH8eK7LLSDB8aKHsPNe/+CqP2GEN4H5EOF+s
keu+OgWXkalqXh/tW86Pw/s/ytouXZFdQZFnzr6Qnef6UdifghXH6oiCC+jh
8vPeCalcLwr7T+btoTmK7ELy3v+yUjOV60Nh/+zuVHRG51ZK0791P2AN4HpQ
+O+QW8LWepGF1o9YtU4o4fpPr8f/J9wdReevvxGKgo3UbmRYcZkkiuk9qYda
fKN1D6lOo12vFdkFNOCYqJ77da7v5CaoWqw2vKRZc3te1LkVUXi33SPNz7ie
E/KcxJuZa4V7SinEo8EIdUeu34T7GpD5JFZTbqHMBXVO67K4XhN0LFadjoow
hFrox29Hloh/cn2mqRsbrorVnKUIUzux2WykHzXv9+urPsv0OFaMGbZXKXxM
7/unfpG4myh9Ze58ff3HTH/DdCb9pU6VS2N2z0lTRRdRnxd/XxZu4HobqJvE
lNY5ZKj+HD4Hl6wU/+T6GqjL1B4SEyT2q6B6I6+21t/gehrIQ06Nc5slPV1O
sqBH9QUyPn8KP5u9o70rZdvy6crGVhsD53K9DPjVWI+9S9KUm+leG3W48hzX
x0CeNKpKvcvqWUKRN7fMle/mehjIc873WPzOKZif/86OtXrrRUaKjFp+OVsV
zN47nEd9Wk0ulLhXxyM1mjqYN3B9K8zHrLjjckK3jM/DuH35o7/6Vz7/0vq/
11TE512OvLVzMfvz+Zavw099laTweZYJR0akq9ry+ZULn0oPGUL5vMqsN9OS
VPkWFgfLWuv/UoeVka/95+eK2tXPTb32tWxtGY1sJ0xVxZRS37NNhivHW6j7
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
8derCN7yuI+ca+JiLaHvg+6nCtMPd8FBDEItu8SbirQET/n4v7bpECOhh4Xu
twP8GW1Mdz1UrkvZwBhsBO3WLhsLuSUQ/oU3S4D/PtJz3b7zhQ1Q5e3Wm5SF
wZ29826YKDKg3RbLmTYaCI44engK7zFcveHSk7pPClz3zY4+rFr4/vV1Kxu/
f3683O0mYktg2ZIdAiF+f6xzPDGHJ1ZDzM/IR3z87430LJe3PbgoprWDdY3/
XSEXz6N8pBq6p4HgkcRPqCzjBuqIdRqt58d3XT5BfqaEqnnLHvPX68BpdkgX
UpQBtMeDL4mLjYR+J1q/Zw5vchEcNADt+qfjpiIjWFXd/sIhv4R+FpoabqCc
0CdG+4Pfsk2X3bq8hBX9d5Xz18shrMx3NonUDOH+cbfFxUpCzxZ9rivcKedZ
P5sga7v9ZVOREtrjjaV8DwW8yhqzhzZES+iDo/2lSzhLz3RXgHXFo62MwVpC
n/iw74QarkhO6NU2Z9bcEtNUhL43WgccOS6r7bFE4jlE/jCortqz4JuU6aCF
+J7ju5JsDcT7oviXu2lHyfj79gqTpgptDBDm9E/YJgl+denzibldArKj+RJL
UhJxfb8rtQYdPQn2by3jkbdJwPLm36M+rCpYtfZhGf+VnNDfR5+/y7hya0//
Kqh/GrSZ9VIOO8Ye6x6a1gLZOSsvmZxVhF4++n7bP6sWYSktMKF/t6kCJxXB
M+/Z49sWxgktoW+Pvr8hzW0hrxcGJ7enWZGOayGdkj+rkVkFGScXXTXh71+s
lW4W8FvAUq7fxsCv1/92zioO/vr17meAh78e+cWg+wTpx6Nzypg//xKKRGBO
zhDx8e8fOSJguOil2V8Z+SWgfz+1fsouGh5P3TvcRYDj5NdfDfT/8V9G+vjo
/QIPv5nJ+4T/Ht5GOwzHpMs1U3m+RmjIuZbFdzHrraLnwz5yzgbGSiPYvxh9
S+hs1stHOrJrhted8mG9gJv6qnI+vu97qwXjbOaa+2MZqRfG2ax8AZJO/nlC
Zzkkbm/vGUprgl+MsMumOCWc92ldJ6Ka+2fPxr9ZJxrRBO7+P06QTyih8+aC
dHG1HFYl2QUzNBrid0b9tQHznWu4VXK4lJW0hqXC88KohbeU9AJYTwr+Q78t
JfxsUH8p+Wpd1ssxBfB+I+WmCceXCn3bhZZ1IPS1ruZaYIT/Cuo/8WIKJrp1
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
R3FME/wPuxRz6Q==
    "], {{
      {RGBColor[0.5, 0, 0.5], Opacity[0.5], EdgeForm[None], 
       GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
88JfSXCr8mcrXVHwY9p7B3g3I5NQ2QqCmvJVwR5py7fgOeAFttT9/ZL2Wn+3
rl8o3FVC1gWPDj9+L2u7ylYV9BT+b2nvBcjAoP3hOzqofEXB7yo7Qu/5cMEN
yh+qdILg+thnWPOhm1cS7l/ak35pbzkc/D0yB+RI7BfITJDXsRcg35itZ/xG
g+fropRlF8iCkC3MjXHeqXGer+src8+quzx8jto+Tv0fK7iJdUg4t+j6aqxL
yt+qdA3mo/K3KV0z4/XvhViL4H8/iHd6tNo4SnCj2umm8q6tlgc8obq3q95a
GfOnH8Y7nabyO1S2Tsb83cfxTl9Q+V0q2wBaRPm7lW4keBaaROl6glnq50XB
ugXzdPPiffUUgXmd5uIi4YzUtREFz+M5gtkZy0KHq2zHgr89eLFP4h3torKd
C/6WPtBa8r5gM0C/t09blpbTN7+vfo/Q75X1HE5W/qu0ZWXw5fDTv6csK0I+
9o3K7xVOH+aH8E9V+k3aMjfoEWjVTLRN3b+E/6Bwthaszr6n9DtdX6jyB5Qf
zLfGeqW0c8ZyNugg6Oi07n0y1wU55R9SOjRj2R10CjRjUeVTuB9BR7VzFu8z
bdkgdAo08trQkir/WeU/q9/7le+fsXwMmSKytfWFc4HKFghnXfhM5X9NWx4I
b4o8rYPKz1D5D2nLAJFXIVuarWd6ia5dzPrE/sA4BG/q2b/BPivcd5S+JWiv
/GtKXxE0K/88e7JwJwpeZh9Teq5gQ2Rs6msh9LpwPxQsI/xjVXZR2jT6+yqb
K1iKNlX3Qu6hwXwN/B5raUHvdz/mjn6fKdg5bXkZawPvdVbKsjNkYtAwC+Nb
410vindPfquM6X/kkRsEHuWvqb9XG9xu74xlcshTx0a6erSxKL7fVYqWHf4R
/SwKnEOjbd4FsjFkoMylssa/v9rdTb8HxHeMHHBgfMf0h+zwn3gX/eI6v+mf
64z37ZhfzM0hGfNKyGjHRcp8G5Qx30TfX8c8Zg5vkzHPhez2kEiZV9tlzE8h
3x2WMT+F/HVCpMwZZLSFeBd75ixT5vdeOf+GH/xHz+MvwVZZl0PzLi/8/fRu
9xWcpd+D9H4f1/W+gtWF87fwz05bZgw/DC88PsbCd7FPzjJxrmWVpgX9VfcA
tfc/wTngqc0nVDYga7k1vDG87b4507krKL+G8hn2Htb/nOXp4IFDH/CVidIc
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
J9rdU3VPLVr2sI/yZxXNc++l/OlFyz+ewaatveV/Y1R+YtEynn2VP6do/nt/
5S8oms+G78C3hzlyoMovK5rnhqfGjwo+Fx4T/xn4yAOEc0nRfP/biXk2/G/+
p/KLipYTHKT8FUXzxPC/+NvAy45V+VVF88dzEvN+tDskb96a/mYn5o2pA19J
2/CU8G3wc/g1H6J2ri9aTjxB+ZuLptnHK39j0fzifsqfVzSPfmXBPB082jiV
TyqaBz1M+duL5gUP51somoe7tGC+D37wwoJ5PXjMQ4Vza9E86MHKX1M0f3yE
8ncXzasdqfy9RfN8fAesQ/iqP1i0/TprwruJv2P8q/j+2B/wnedbZ13HZx9e
A1zWnotFm10k2JpvMPG3i38VPAUp38fcxGsJ7xKeiLbhbUarnVGCIZpPY5C/
CbZVfn+l+6FTV/4a7PgE2zHPlE4SDFX+KGwriuZT90QWJxgm/Ct1/QrBtug6
WG/gi5CtK91HsLPyt+j6zYLt0Rup7LH2ln8fgF6UMfFd6fql0J3CuVHpDYJh
yg/IW96G33tG6+cA3c983pWu3ybYQdfraqNZsI2uLaW0vWBoo+cdMo+T0HG0
mp4mfsE+TXoGuv6s8k3CrQkG6/dHDaYz8IdHt8maur7qrok+Fz/3Rus/WV83
UHmu1fQ08QjQkbJOr5f23KftHdGDV+xHNyvrb+V5pcNVPknttQo+ybtf9K7Q
vdeqrJ1gnsorFfvjvQgdpDFv2+j6fJcvKN1J+C0V+7a9pN+76bnsXbT/4jVq
o43gY7VzoOoOa3Qd9LH4S+ArMbViP72Xs/4WkQOdrPLrVG9Z5pzm0CGquzP8
oeqNV36E8jspP075HaGV8577yI1OUd3rVW9FwX2q+7Hgo8S6vXTVMgjs2ZGR
z4k1cILaGQWNjk5A9VYV3J9YF0g97D6nlbWmlW3LuZOe+fBWv88Z+NeUbRfZ
GVvaxDrobkqXT/xMp+OLVLb94zOCM8u2qXwWv6Gy7QR3VFs7CP5R312xq02s
W5+XmAZBT7iLru/c6nf+tOqcUra9ZBfhLJVY39qhneaV3sGjRdtUUg9a6ffE
9Aq+X58lpmXQGb6hef+64Fz93jxxipzy08Q0EXpL/FMpQ26J7Sp6TWglbEW5
Dj31eWKa6KPAmxfPFttP+oH++iQxjUx9bDbRa0IHPVmxPeuX+j2jYlvSr5fs
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
zT7TbCXhdCx7Pt5U8nl4yNqOL3o9PkJtPqw2O5Rc/j3xO5t97tk+xKUr+oyI
H/R7TLPPQDuu6H3jsKzlevQJj/Jr3WdkYtf1I/WbfT7Du3WfkYCt0qPq65ei
168nlP+16G9mRY1zjbLn8nzVObDZZzVMKfuMBObWT/q9f7PPc3io7PMYqPt+
3WctYM/0tNr8rWh8xs46fZTGObns8yHo95O6z07AnolzPzjbALv4BmitFsfj
3rRs/xDOSfi87rMN8BnoovI2Zcfi5ywRzlTAB2VMxdf4bjcp21+Fa7/XfT4B
fCBnzfFtEqsfIG4/59UR05/2ONONs0HoE5+Y3eGf4nvm7DjaBpczK1jT4NW6
6npT2ecKcHYc6wxnAOxR8TV+b1y2TT/3uXnZvN/cwKMe58cdhe1b2TH3tyib
h2Q95fwN1mr4y25l83j8JtY+uJzzwRhrZd8PZ2hQD97xdPSAVcfjPwtbharj
5Z+t/D5Vx7BfVPeZkcSzPlPle1UdX/8M7Baqjp1/DnYIVcfI7122bw97di/l
e5b/jXNHujiOOrx/i2Nq/133eZPE5iaWP/Xw9SE2P3sx/kDE12cvw6enb9k+
POzN/cr2vWFvm6gx7FF1DH7i90Nf4aOzVdn+Qvwmlj/18PXhrADq4TM0AHur
sm2M9i7Ht1ewvRFlxPHuU7ZfE2PqX7aPEGPaq+zvjXNsBirfvey1YJDSHmXb
QjW3+NwXfIRWbvGZNPhBXVuzjIN9orHFZ8ng10TsesqQMZRafD4Q/lRtWnyW
DP5LQ8v2p4IOW6HFZ97gK9XS4nNi8F9KWnwODX5Wy7b4DB58tLbRs3q17NjJ
2yn/Rtnxj4ldz16ATOW6muUm/Mbeivsgvjmx8eGtkKPQBnRxscGxPon5iex2
kNp8oewYtC+VTW8WVD6kjX8T45nr0NcJdhc1y3dod6kWn/GDfwvnPHB/+Jwx
RmjbEv77JccmJubOOyXHESYuz3Ro/ZJjAD0HrVwyDvHLib2LHP2tkuMLg/MS
9HrJsjzitmZj73u35HjElN9cs7ye+i+gUyi5r9trlr8Tl5cYq8RfRV7+UM2y
bOLgEmOVmKvIL+eUTYOXlR/Wxr+JUX13zTJ3YvcS+5UYsOgNiEeejzwxxQvR
DnG+K/GcH6lZtk48XWKKl2IM99csr+c3sVlzce/X16wPYI8nJitxXJHB92/x
uS/Y6nVocbxReOnDK/Z7JB4n8blJ8YkkZiuxW5GjH1Gx3yOxPIkL3ibKV2tx
bFb45HVbHFO1HvZS2E0hz16rxfE04b2fqFlGT31iqbYPnE4tPo8Kv8rNW3ze
Fb6RR1XsJ0ncTeJzE1cUH8e6ylqKjhF3ZMV+mFzr0uLzrvDJJA56Ne6d+N+0
gZ/lxi0+Hws/T+KFE/cTf82jK/a95Dcxy7lX/ESn1SyLZ6wbtDieLHKK7i0+
4wpfzeO1th0n6Ks+X+U5lxx38aSK/U6J53hyxX6kq8W8ZH5iu3qM6h2NjlB1
fm2r91F1HMdBLT5rB/vIXi0+fwgd+Yiy7Vmpf0rF/sarx3fC94Lt6uSiz9Y4
LW0ajvhEEzWl5yJbLfisriPhcQV91NaJFfvWEgeT87zWLfg8IL4BvjvsZHcr
276Z37SxbrTzUIvbP1T9bNXiM5k6BA5jwDZyVvwmP7Jsm1rGCu8Jj3hHym1s
GO3An5Bn7JxfTmxU7AzZp4mftfg8uMT0Nvv1DwXjgcM+StwuYnZxDhLl+Dxy
pjN1v8/4rGpih/2QcVmnKKesc5TPFc67RfdNH1wjzhjnONP+jxnHmCEeDedt
wWPAa9A/8WaIO8OZcZz1Sh4582uNjiO5Ytpnt1KX+Aa01zXa5OyezQOf6+Bh
1/d1ybE/OdOH6+SxFewW+ORvLvhcRc6cgk/jvnhmtNEj2uFcIc5+RV79bcnx
RzljiLKeUd4zcLA/5Pxp4nISk5PYOVzjTDrObyZmKPFCTyr6vCbO436+0eVL
p31Gd9/I017vaPPSuK9ro23Ozl427bOpOSdq+bTLBkT5y42O40n5NyXfC+cc
nVI0Dudun1Z0Xc62/q7i+oydeoOiLmdj8/xP0ph/rLicc7RfbPQ46Gtk1Dkh
Zdz/Y+q8w6Qoui6+uzO77OzM7Mz0hAUFRLI5p9ecA+acc3jNERVEsmJOIIKg
ElQUA+aAIiLJnFDEnBVzDvgavvPjXB6/P/qp29W3qqt7erornHvObvF7XZyx
VhU63WhKoxmFbg5ca3DAsZ7+a856weiCXZ6xzhW60uzjA0ccWtPks+ZF3btH
/ZdmrLuF1jC8efuED/XtFfUvyTm/PurbM/Lhx9s7/O+qeX6HcfTVGWtJofVM
3v6Rf2XGmlroWU/POR+NvJ9ybhP3aUbOOtHo3LVGeeaL7ql5bMn8BscPDpu8
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
eRfix3sS/ljyGVPzLuWdS7vQpP8r6qGf9I/su+rdH6FO8ubHuebFdfwZ7eF4
XfjQr2mXcf+KvktzxjzrKaXpjJ9n+jzYtHH5+C/B8UteKvKbMq6H/wW/xfvx
P6Lexoz54znelPk3D5uxP7y6jWE3RJ1cL9dEO+G33zrlfWx4dWkn8wD0h7Ky
H1WaV5rLOI8+WEvG17Rtyj5doy9RzPg3yWTs80j0qfJRlt+qkPHYn/rI539X
jPwZcc5c1NlH9ZcyHr9XMp53XrHOc8/Y9DcSpeWM/++cM5P5935n4lo4jh99
s1LY1Llsf2a9+0Tl8OE/U4v6d0i53bR5y3q3gzasHzZc97Sda+D9c17N40TG
g/Dd835dIv9Vyl53BIvBPFSHjN+3yzOvr21SnX/7zhnznLfP2KcXc7MZ5+8b
7+32kb93lKcsnNidMuYW7plx/pw6l+sUdR6f8rkukX12e70nMq4DnxWifr4J
3aP+XeXfRfbwOqcrhg2XNPtTuUauI2NNCrjXu0VZxp7UyTVRrmuUbR/1t8WG
P5o/6Dfjwzv2zijDec6o6J1cNj6Fa+oY18V19IhrGa2tt+x9Il0p2oN/z7i/
u9EHwq7zXMCqGXPX498ryjLfQVnq21DpKhlrypCurO2QsFeNfK67d5yLsVWP
aNtx2lbjvte57rXjvKvzn8tYU4bfZM34vXpEOyn7n4z9jozfbq34/cZG+SPq
rCezZvxej8ZvQBvWDH/y8V0t/JmzWCPq6B2/F+06hfEV97XOWrjo4CJYgr7O
+rIPqPN1b8B9j/P/J+rl2HpK96/zugXrF3BXUN96USf/qw3iXqENsVFcF3kb
Rv5GUeeRUd/6UZZzbBT3sEurOTI4B5p76PqhJ7liq/kvWOPp2mo+i2VrPKRw
Xewf16hPSF1j2bpx6CWzJkQ5ODa6tToGkrUcNJDRZkbfD61mfNFURmcOvTn0
J9H2whdOjlXiWrhP7crWHaQ8mn5o/KFFib4xWsXo9WXL1sljH01jtJDR/UMz
D+089CozZWsEosGIzh96f+hJoieM3jB6fYWyNQL5zdDuQx8QbUk0ANENRJcy
X7ZeIOcola0jSHl0htEPRuewh659YKwvoi2MHjAahqxDsi4JFyta5bQFrUK0
DdFARLuyXLb2IXVVy9ZHpHx31Xl+rGuyLsj6ILyoY+L/w/+oJzH0sXaIbiL6
iehYsu5HW+B3PSGeP5491g9Zi4SntZfKDo61SfAc4DrgaQRrAuYELtSN5LN3
YOtXkr1n4HHXkr1d4LDB5JIHv+vqyt8nMCtryt4v1v7BoYCBgR8VLDDl4B1d
jfoDU8L6Ob5wrq6t/F0CnwF2AQwDHKdgI8BIwGcKPgJ8BVyoxBsTdwzf1Doq
u2tgINaXvUdgL8BDkAdn63rK3z3wGRtwXYGTAGeBL/yo4Ds4P1yu68pnt8Bn
rCF738D0ECvAvYFzdaCe54NarCXcs2y+GLSHhyr/kBZrDy/Qd+1VbYdqf7Dy
D26xT4+yuWMo26tsbhr8h8vncPkcnzFfC1wxcKX+R23YNOf9tRONN0rmceld
tl7jsfxesh/IuOzG8j8qMDdDWozBBK8IvgZ8DrEZcFTAkQQ/0oEl497AeW6i
skf/P6wPKXEdmyr/mMD3DG4xzhGs5gEl4/A4xy7y6Zj1bzM06gNHCu6HthDf
sX/JGD7K39bidR3WdIgDJx4cHrCzdC1Ht3itbHfVuWLWMeTEQxNbDa/UAcpf
O+v93WR3yZojgDhq4qnhkCIGnTx4x4g/pw44xPaQf9esY873l71W1vHbxHmT
B3fYrspfIes2EWvLcfitNtL9/6ZkvpN5uoeH5YyzObLFMavg2lh/hWuGcQpr
86zRw428vsp+UvIx1hWpg7XF3nBUxFr+BvL5qmRuFdYM4UlhDXRD5X9d8j7r
qBxn/fRAlV0n62veT/aa2X9j10nh+GJegTYyXjhefYPTy+Z0OgNsXovXQp/W
tRyRM/aN9U+Osy4zqcXrlKxRMv/Bcfr5rGHCU8X6I2uY8FexXnmi6j+z7GMn
y+5b9rEJcR7WW1k/hBOLNcQpLV53ZM2xH9i/2L+1xeuLrC0yZwP2ifHCfLXz
8Jz3z5X/sS1e55wcKWudp+q855R9DtYhiR9mzZE1PfpErOtNjOeLddgddW//
V3JsH+ucpKxLnq06jonrBxfAf475HNYPwUyzbrh3xTgt/s+s74EtZh3tLOV/
VfY+63WjMl4HvL3Fa5ysbx6lc57c4vWxqS1eI2R98M7IY72MdbPRGa/lHarf
9/Gs9+9o8Vog64CHKP+xrM9xpOo8KY6xRjcm43W6aS1eS2MdjbUCYolZazga
DdAWrwcernqeUD3Xy74r8lgfPEz5M7Ku6+4Wr9WxTsf62PiM1wKOVT2nxTlY
K7sx4zW1I+AJyNrvGPmc2vLvWh/nYY3vSHgCsi5zHLqiLV5zY72LuGvWtnbX
b/RTyfv94dtp8ZrYvS1eP2PtjDU04sNZF7svjrNetqfK/lJyPPd5KntWi9fE
WI8ijzWpPeTzc8lx4ax3kbLmdU+0hbW/B1q8TsYaGetFxM+zNvRgi9fDWAs7
X/WfHft7q87fSo5B30v2ryXHl7P2Rcp4h3UqjrNWNUBl+8Y5+uv5eansczzS
4rUr1q0GKu+cFq+PPRQpa2T0n+hH0dfbR+f6veTfeJD8+7V4jWhf5S8pOXZ8
eovXllhXYg2KOHPWjFiH4ThrMReB520xNmew7P5R5urIA6vTsWIM6LJvDykY
z8davO7Fmtd+Ou8fJZ9jiOo5L451qljL/CHe4Uofz7gv92i0l/WsFSvWUH8k
Y51y9MrpZ6JtjtY5/cwdow76mT0q1v+enrEmORrl9MHQJEe7nP7kahXrjj+h
/ZUq1jjn3LtEOfqfe8Rx+pBolqNdTp9zrYp1zZ/MWP8bHXD6/+tVrC/+FL9B
pPQt0R5Ho5z+50YV65TP4V0QKf03tMPREKdvuWnFGuTz+N9GSr8R7XF04eln
DgC/nDH3+V7RFvquaMU/E/lwh8EhBtf7dhVzir2g/YGRwkm2Q8V8YS9lzIH+
fOTDDQ9/Plxlg+I4Nrriz0ad9Fnpu9K3vT/+T6wv91GdSfRxd5JdiT4u/V3y
6LfurPym6PfvIrs5+u5f691+SM74+92Un4u++O6yW6Pvfnub+zzgdhkPMC5g
HPCO+lkbtxj/tKv8W2LMQF+fcvTxGZcwlmFcsod8itG/36tiTDD10u/nnIwh
9lR+OsY/F5ese0398HLB/QWPNhxjcI7Bgw+vGDxjcOO/pGtZI+d98PHg55nL
f1X5a+dc/kXw+zmXh3sMLjI49BcQ+5l1DBjcY3CRwY//ivLXynn/Zdlr5lyG
8QnXwZiGmDHKwVH/mnz2iDi3hbJH5P4dE5LCmch4jvEgXIiMzxjTwWnzuvwv
zHn/DdkX5exH/5W+LrEF9F/57oFH3qdinDHHGEcyroQjcZHKXpzz/r4V44/p
775ZcIwucRqTy+YFqaUd7wt/TFH29WVzipTTjqvjOuB/JB4Xfpoc66HBIUgc
MPHEcLo8rufwhrK5TCppx/7CKdKW9piMZ42x5lsFx1rz29D/pl1LORzL5j6p
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
xzM8L+wG/vvqt4/Lm2fjJNlj8+b04P2PfV30l/Chz3OUfG7Mm9+jb9W/VxL9
CvLpM5yh/PF582zQn8HORV/ipvy//YQJeX/3J+e93sBaw64qOzH/73oH6x+s
c3BNY+KesI8Pax/HV10P/BvkTYqyrC1Q77L1Duonj2dySPx3WMe4Je/1jmOr
bhv8JHtUXZb2nFT0/47/9N5V+zMfS3pr2KwtsMbAmseBYETzXju4P++5cubA
p+TtwxoE6wB35b0WsF/Vx8in3NQoe0fe60msNbAeQf7S9Y+c81nDYJ8yrIkc
UnUZ/KmbdQjWFJi/Z06f9YBN0EnJ/7umwBoD6wez836GeH7Yx4f1hXvzLsta
AOsU1EnbqYtjrC+wJsB1si6wftX5+B9edTtoA/XdE+el3bST9ZeNqi5bjDUI
7hX18V17KO/v41ZV2/A1bQumK2/+pc3BjOXNAcU3HHtgfIvx4fvLmgJrDKxJ
9JH/o3mvL5BOD3sHdFXy5pjiG4rNN5dv5mPaTkr5e/V43t/HWXm/I3g/DERP
W/bQtP/fvMueVv56xFu12ZdvHD58+86rup4h8p8Z/ryjjm/yPvZlUf8z8f7h
d3mWd0KT6+O851bdtsGMmXSetdtcnv843ynGLSc2+XflN10XHXPZf8ERDa+L
trl56xs+o+0S1fNs2HB7Ln0X8nyr7KpVHyN/buTz7j25yfvYvEt4p9ySsnYb
9V6sOudHPu+ZDYgXa3ObnolzUyf6hGgiXsmavtKX8uYLRcfwef6PaesZsn9Z
2msi/O/473Kc/GW6ipS9Ku3/If8p1iVfiHrw4fiLUf/m8E63+fjqVaf4bKq8
Tdp8zRvD4dPm6zizySnXsmbVbaWetWUvyJuz9HWlr8V9Rm8Rjcxr0j7+avi8
X7NGOHMXr0T+SK497bLX8pzrnNu0+Tcjj3pHpz1HQlnmSbbW8a3aXDfzHMyV
cJxxPOP5bvEc0HdhDMs+WuDMXXDOV6I9W6qOLdp8PeiPMyfCfMhHNe9jd4lj
42JuBB/y9ky5fr4pC6OdXPvb0QbmEz6teR/7jWgn186Y+/28x937pWzzfSFu
jfg1YssYB3+Y9xiZlDE23xHikYlxZmzIt4kxOfXR90H3l/7Y+5HfHN8gylIf
fQzGzJvF9nHe4+6Vqo7Hpt4D43yc6+Pwp0+yuOb6+0f/iz4c3xL6TZ/H+b+q
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
q+w7dXxr5adps/KmaPsZfkTlzWpv7esOatvm3cw5u5zsLbuZ43UL+WypLQWP
qdK75N8I56jsabLb0U6l22u/SfYhSqdrvyT7VNnz21sH+0zZr8nuKPvwzvo9
unoe5vMeejf08LzMl0q/6uH5lCPl82BXz+F8o7xve3hO50+lf2l7n36hfO7v
6rmXjOpv4XdVfk5pXtunss+Wz9tdrdX0vcr90MNzT0cp/+GunoN6c3k93z2t
U3Sh8p/tak2j3spbSdt38j9a+Y929fzSqspbTdv3yu+n/Je7WpvnItkvdLVO
0k86z889PCf1Os+MttN17acrfVX3YXnZBdlFnlf59FXZN7taG+w65Y3WtoZ8
rlU6ivPJHqm0oOdtVXAxshtl95Y9VvYYbWvJHsFvpfyesi/mN5fdS/Y5shfp
vJ1lX8DzqPwe5Ou873a1zlNNv/tG3cxBfDX3UD6rwOUpn8e6Wt/rnx6IVOs/
w3yQ8md0tdbX5crLyH8l+TfQBm0fMjckn5ldrfXVpLx22j5W/pVKs/JfGf5X
/mfa/lH+E3o2Z2qr07N9hPIeV5vL8nlU6UHcr7I1wxaAXdC77nU4uKpeA4Ur
m3xiajjGPpzZz9Xshw/HXwufYpPzb9DpRjRaDwDuf9Inqo6Teg/NAm0jU+aT
f7nqeCXSV8J+R+m7YFbk07vJZUbA11T1MfLRQqPMIOZa2zm/p3wfbuf205bu
2hbJvqDOHN6vRjvhsH8pzoXvG3Et6DTdWnVsPpyNt4QNruCGqrEE6PNhj9R5
RzUai/BrnXECk6tePwVLMD78wSngA4aBcjdGPnkTIp8130lRFh072nBRO+sF
Uue1jdZFux0dqTg+JdqGH+28A4wBa/FVx5dR7uaokzJoSt0T2lLUAxcBnJO3
hU3e1GX57azPhDbTpW2+79zzN1kL1na17IvafG+x+6athYAOwnylT1cdb7iP
nq+H9Jzl+ZYp3U/7rWVr++F3VtoaDfPDH72IGfGcUN+zVce+oZ/wTNjo9pHP
OR/Sc/2wtj9V5x6q+wGdIyt7nvLma0vrmT9G+U8ov6r8GUqP0n6F76yOP6bt
b9kHKO8RHSvwTVS6l/ZzsndReq/2M3wfle7GO1H2fSp3v7Y/ym7Lc9E2tBte
qDoWDw2H58NGw4/8bfU8npm2jgUaFmhPYJ8SeXPCxvfFKMszzf2/sM7POs8t
+gvc+zfj/j/bzjbP+yylT1UdV4gOInVyTjQOOXZu+t/7ji4GWhLz4v7TPtqM
9gTl5kZ70LOYFXWeG/toW6Bx8WTko5vIf5z/PenM+B1H8N3p7niCRfou9Oxp
fbwL+NZ0d1zCcNnzu1onbznd1w7aRuvedlS6vLbr6AMobdN2reya0qq2UbI3
U/q+3nv3yd5d9h69jHPcQukHyr+/7G/Ftr38vdiG372n+9JvKd1e+2cqP1Fa
0naN7FaleW1Xwemu9E3VczfvVdmLZN8le23Zb8i+U3ZOdlbblbI3Ufqe8u+V
vaHst2RPoy8h+13Z98guyi5ou1p2RWlZ20jZaypdIJ87ZG8n+/Ge7lfvIHtG
T/efZyk9UT57yWe+7FNk7yv7Xfps2vrK/pB+l7ZzZM9WepJ89pb9p+z/abtA
9iKlA5R/huyX1P/cRL/NUNlLlP+7tmFl19Gnl+uZQ7+IPqjs5+TfWf6nym7R
8Yy2K+j7qQ+7ZS9jMmnLjr3cntdkL9B2mux2ymvSdhntVz1rqczRst/s6d+D
3+IF5W+g+i+V/SL9CPqpsnur3Etq8xTy5bOhfC6XvbLyX1b+bbIXdNJv0cNa
yDmlA/X9PYE+g/Lz2l+XtUClA5R/vPIXKn9wN+vZFpVf6uG1orLSSg+vIU2X
z+96VnuyJiF7q65eS3pM9qHdrJv6h+xtunq9qZPKde7h9aRXlJ/pYV3nZqX9
5f9f5f+l+o6VfTT9Kz3/x3b1utVy8lm+h9exakoznT1/2Sa7pbPnR9vLznb2
fGpVdnNnz1M+onP9pnp7qJ3X6L7u2Mlj/Gtl79zJcwiDlN4in9V1roGyJ8te
jfPK/kx2QWWXl/257KLswbKnyF5DPh1lL5ZdIoZE9q7drF+6uu7/q7r/U3X/
V5X9iuzb6cfK52v5d2UdSOnu3Tzf/Ivs/WUfJftR+RzczfquI9XOnTp5DmSU
7D6dPAfygNJ9u1nH9XuV3bOb57B/lL237CNlPyyfA7tZ2/Yh2b/qWHfiVWT/
JLsba0V6ju5U24aU/U3lm/ub3qsv61naVM/ScOX/KJ/b5DNI9gS1YXQXj7UH
6boG8/zxH5Hv2b2Msz5f6YGdjZU+R/Z+nZ1/fG89d9oO0TdotOq5tovH/ifL
Z0f5/MBYu5d/J36jE+V7krZD5X+e8g/obAxyP9n7dza2d1/Ze8r/GbXhOqW7
8o5T2b2Urqf9+fzH1bZze9n/OKXbqey3sifq+HVdPBd9vPK3V/53cHbJv38v
n+tUnf80bUepDccp/a+2g2WfqOM7yP97+eyje3l6L89VddS96qTta93/N1RP
157WMu2utIe2b5U/jLFJd8eiVZVX07ZY+ecpf2FX67b2l72gq7VaB8m+q7tj
3V5Xncv1tP7q3so7tZfnrYbKZ05X67AmOl7W9jlz9PLp28vzZaf18vPEs3RW
L/8HeP4Hq+ysrtZ5PaOXnzOesYU6V+ee1pXdV/Wc2ctzcEPkP6274+q66PiK
2r5hvKN7c7S2A+ljyHdb+X0Dn73yjtV2kPJ3Uv4TPT2nsVjpeD1X/fUbfSn7
Rtnnyf5a9gTZA8p+v+7Sy+/YNdSuedrfVGV3pg/f0/N+F8p+UcdeZzwi+xJt
X8gervR55S+Q/Zl8L1Sd/WR/Inuo7HNlP6/nfH1d58Wy0/JPUV72P/L5W9sI
2d8qnST/82XX6/jdsi+S/b3yb5Y9UPbPsqfKHiz7A9mDZZ8t+x3ZA2WfxZhI
ZV9Qe15jDMX/RvZC2ZfJvlzbl7KPULq17ttXum+TdHxMF89N3SF7bBevj4yS
zxnyWV3/r8NkbyX7S+a7dI8P17a/7vMh/G+07Sf7KPlsI5+vmddS3pHaDlB+
X6Vn89vwf+SbL581VOeZyjtL2zHKX073ZryOtdc7pIPscfQ5ZLeXfb3smuw2
2WPpf8geo/Qs1bOm6jlddZzBM6F6zlF6rrbjZF9Dv0M+q8nnSvoU2r7Stb+i
32Iz1XVh2bwscLLAx8KYYGKMC+CBpx8Ot9j+VXNwwye2j9J9tV2l+zM0Y+5j
OIrhAsambwOvMP7vpYzbBdcLdnff9raz8l+xxfVS51Clw6rGpaOtzn4h7fpW
izrpP2FzTuKYe1Wtdws3Yeeq9XqHZ8xTDEcx7yP4auFtJV65RzX0yeS/QtUa
vcRYd69aQxc/uG2J8yDeumfVWrnUt0bVfSHafkFcC+mFYbN2A8/1snWcwVXr
+bI2dH7VmsLwWg8Im3WeQeHPehBlz210OijKHqh7dYnsMrEqXGvVGGb05jn3
opRj6PpXrS/M2hPnOKfRuOiLwh9Neuw3ifNq72OFercFf9aVwFCPCH9iCIbE
b0E6NGzWuAaEfyHiDW6tM7aXdoLvhed5narfOZs0mVMbrmPmv9BvhjMS7odq
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
cd83xn7whe0mPJ73UbJz3PvajdI7xb333RD3b/bQ+X+XkIcx2a5xc6CRBmYN
fKT+q4z/O+T9N22XkCeuc7eJ+z3dKZQJZ9e4cN6x0n+Ha+O6GC/uETdPGnVs
H/e6LmP6ncKx/90LYtZ3CHm4po5xH8v+zqZ8XwP1/zOURTl5cd8TOMculL4g
vDPc+8Jw33JYZ4nZpo57lhPet35xH4/dFzo/7rHuduXdEfN3T16OJX9hvtP5
9vPDsZz3+FAm9mZF4bxwqcFRlh/y8N3w/bTHpKTA70Uk3Mt4uJ+F4X3h2KYh
/84hnXKZy/x7fPzf0/3Lj1EU8ufk+hz8v1+B8+wc7k+/cI+wzTsu1PNY6b5x
7zPuF3ffTL9M2wWm/Rqc6/9IXynpHHf7w3+k07/T5h0ad5t5cNztKW3p0dI9
4/ZR6iXdO+69V3g/+Q8+1f0kncJ1cUH7hLodIN0l7nN2lT5I0pDrvoVz0L90
Yk4bnle3AtfttnCvOoXnTrtOfThu3yKXz/fCPdk3PPebmrhM6kydjhJexXcX
dz2p/028U3H7cMEbe5jwx/m+bvoJ+gjafzD3Az7NI+LmwkV6cK58l9E9lINf
GBj+z1HouPNx3lvirgfnvTHu893WxOfjXNzPYyRLc32eI+P2HWNPmnvOPaZc
zkd9p8R9DPef+PMci1sj3JS9QjnU4YhQDv5olMl1/JHr+/9+eP5dwn0mrWtI
P1f6PL7ZHI8DwG8Lny89KO62FBubU+Ne27877mPI/07Id3Doy8jfVXha3OkT
Q/nnxN0f0S/wjXfLcVtOmanQHh4fvlX2nnm34UicEd71HOk74sa889SD4+kf
OIbvgvbhuFAO7+EJ4dvhPcH284SA+ZbAtMNtJYPj/7+OwaHOb4d6U2dsC3j/
ud+cv0+oT+884zk5Xhc7S7g56xXh3k7J8f3me6jP9b3mvz7S3QuMybMp13n4
Xu6MuxzsTtFnB0y5Z/J95tlW6oy49z7WKv20uO2m6Pe5z51z/N/pfHd5/v/0
kOe/3/V5tnGlfOrOeafGfQ7ynhHy037TjtP+b2V9LW5/TNYFaOtp52nvwez7
Ldd/k4Sfk54hPV7ylPAC3m/hYumxvOOSR3P8/4SQh+MmhmNfzjFuGe7DnaFu
2F6Q/036QfZ6w3uIjQVlvpHj/yj3yRxf053hHvLs7gjP7/aAeZfIe2vIf0e+
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
N3US/kv6T+ohvFF6g2QW41bpKxOOcV+UUl8neY4xtnS+5Fnhf5Rnh+Qp4Vyl
5UieFs6TbiJ5Rniz/t8keVQ4prTWkheFn6nXc095/P9HpdrMlPkwNsFrmDKv
w6/CA1P2K/1N+NSUfUYfFu6XckzOGcLHp0LcWuETUo6jeyLnTzrO4SnCs5OO
Y9lGOC6ZrzzrlP+0lH1qpwsfl3Jsz6eFjxGu0LfwOHxxwhHhJ4V7CkeFNwif
njIXVB/p3pyXcaju2VHCg/WejFWeY1OOY/yQcN+UY2uPEz5c+FN8QLivScda
3CL9h+Qx5mvS6ySPCPevNacefHon1JoXD068bo3ms4PLbkCtuergqbuqTu+N
8I+Mh2tUTo3HORukN9Z47HSr9Pgax1D4VXptjfvlBdIv1Tguw8Bac4rBJ3Z4
o6+fay9SetNac8L/o7w5teZy3yz8R4255Q9r9L3jvuXq/ya15n7Pk86vNS99
gXRhrfnnT641lxk8Zgc1+h5xf7bpHmzlm9F9mK2y59Q4rsRC6ZdrHFeiVPew
hGfM+6D3qirlOeMjwtUpz/UeE06nPMd8UjiT8nw2Il0umStcwbOVzGNeLN1U
8rxwc+lmkjnCL+icc2sc8+JBlZNKeb65QnVcLpko/Ir+X1LjWBhLpV+tcVyJ
RdKLaxw74zflXSt5WPlXS3/F9yz8nfS3fPPC30h/zbfNtyC9RjJT+Afp7/nO
qY/qUJvyfPB54ZqU58UddA/fbqN+hXGI8PhKxyv+JeH3knfyEKVPqHSc4fPr
zLHI2CM/6feVd7VD0t8h32BR0t8J30jzpL83vrWWSX+TfI8lSX+TfI9n1ZlL
kX78vDrzITK+ggMSzkf4HjfDF6f8f7LOJjxN+C/hc+rMt8hYBV5G+BzhZhxZ
Z+5IxkWHqv4TKx1beBP8csJbis3LCBck3Iy7J9120G7gm4pPKXE1ifFKLFvi
vBJTd1bMMXnRxAZmjYU1/SdiXmNBPxkwdu7Yu2PrzVhwVsjP+Il0bOCJucox
xGklbi9lcp6nYj4v6zPEVqVM8sIX9lzM60Lfh3zE3sW+nvNhT84+wVPhWPwW
yE+cWWLnPhNzHF40sXWJqwtn2TMBk/f5UD7xdsnDcR2TbgdpA/dIul2jTeun
e5tNOFbqzsJj9S5N1vW9DN+n8BjhXZQ+E15f4azwJXAzCu8kPFp4ovApwqt1
zJvCjcKjlD5eeHbCbSXt5MlK/1J4mfBA4W+FVzBOgD9Q+R9g7A2/qX5fzDxC
eZYr/WPVrb3wW8KfMuYVXiH8ifBb+hYOTnm9q530Z5xLx76p9INSXpN5Xbhr
yuskS4UPTHkdrA7+V3h6lf9Ulfm98NvUs85cioxjB9aZh5Fx6Z5J91v0WXsl
3Z/Rl+1N31ppjp8DhZsmHL/iAOGihGNfdxEuTDjG+H5JNjnN8bO/cJOEObo6
C+cnzO/VVbg4Yd6sw4UrhPdm/CIcEd5LeEqduRqZ70yuMxck85HT6szzyJh5
Yp05FpmbnFFnLk7G3oeonJKEY3p3E24lvCffmnAL4T2E76gzhyNzqFK1280k
87GN1b3qqOs9RLh7o/tR+tAewi8L1xU5Ftm2cscjI0bZ3+WOU0ZMsO3ljgvW
pcwc/PD/Ex9sR7ljhLHGXxDmKQcoDwbJxLD4JOwHMGc5sMxxJ4h50afM8SKI
H0E8rq3ljsn1flivZ27CfIy9E9bwmY+xH8OeCHsmxWGOszLsBzBXYh+gKMyD
GIOyZ8BaPXs1zPFY22euyN4Ma/vswzCHZP2fOV5JmCt1LXMsDuJc3BLWz97J
8/h6RsRjbPTMiON9P8v8PeI4OXNZS4k4fs70iPORB27T+yLuX+h7HuAa1W6c
q3PcGzFfx70hD/jEcF7GqwtZW4g4xs5M4TkRx9gZFzUPN748Y6Pm88aHjuNO
Csc+TizLiGP7jIma5xu/sNFR83zjJ/4u9j3kyVU/R3zMiGPI3CX8fMSxZdjX
Yj7MvhL7YMyT2fMiBtpf5Y6D9mXUnIy0aReGNcgJedbMt+Fqu1hj8sMjjl/K
2J19L/ZWerU0ty586TcQzzHi2Gs9W5qbFl7cPi0dZ4O4G+xHMd9gr6drOBfl
79Xcv4cHPg34L/DFuFRl9og4JuplwsdEHE/1EuHuEcdZpa4ce22uj+vCs2vi
vQUw+wvoA0L6Hs2dD3xUS3MGw8Hbt6XjfhDj4x/WQYUfFV7TwrFHiDOyrIU5
g+EK/qWF410Q12PfMsfEIBbG6y3MAQyH8K8tHKuEGByvtXA8EOKJEGfvz3LH
2iP23ZZyx78jnu2X5Y49+0ELx0IhNkdDmeNyEI+DWIJ/lDueYK70RsnTSsdx
YYPkCeEOcFtL5sCtJb1J8pxwN13XGmKeCB8s/A3zZ+FDhH8WPk34UOFf4BVu
5vf6/vBu8y3xfl+v+zyoub8FuG7QDwbMnicc+ex7nqk8UyPmnLlb+p6IuXrg
bYW/FR5X9jnh12evk/Ex+Q9s4v1S+PXZM2X/Ck569rD4/85Q5vsBcxzrHRdE
zNPI2gprUnAtdm7ub6QsfCunBDwmYL4h1mQ45r08pw0MeV6RnCW8GzanxKoM
ZcL/znoZa2WnhmNJfy/8vhFuvea+Zq6XOt4V6oy/K/66rDnAUz8unPeTiDn7
iR35WcR8/8SOxO69Tcg/Sv3Dtkrv+dIHnpVyP3ir0v+p9L7wGOHtld4LZhxP
Hbo2Mcf9mHC98CzfEtpGeEPhD4ULlD1AYg6wD8i+NDEN2Jv+POL4AMRbhJeZ
NaaleeYxhc8UTlE4+llL4p7B6c860ZI884/CWwoHKZz7F4a25dDmvrdw7nHc
2eFY4jp+Hs51HXwyEcfSJK7AW5IXCh1j85Nwr65XnlURx4QkNtrbEfebxN78
LNxDYmqxd8u+LceviJiHirhn7NeyV8v6zcqI13RY/3w34vWIj8K7TduPfii8
5/Ql9BMDmng/Dy525oZLWUOOOGYacb3YQ2X/lLZoQWiPWFt6L+J11WtZD484
diix2thLZh+ZeG7sPbPvTEw29oPZC2bdbVDEHInnRvwbzP07J9zPJeG/9rm+
x2eHdJ7b4PDskPOFOyhP9+bG40Pa4IAPa+5yKP+GcC7K/iB8y7xfrMcsj3je
Sow49n3Z8yUGHXve7Hfzrbwa8foNbfCbEc9PWadmvZr1bsqbFr4X+lr61IN0
b8e0dgyNIew3NfU9p19eond/h8ZIjS09vjs75THea9LnaT54pfqyf6oxwnLs
6I3Cm6odO3qb9N/Vjkf9HlrykvAW6T+rHXf6LfJK5hP/TXqdZIXw99I/SF4X
/lb6O8lrwmukf5W8Kfyp9GeSxcIfS38iWSQ8Rfp2yX3Y7FCe5EX2x6SflDzG
Hov0IwjjLNU9P+1Y2fPIK3lGuEhpTdOOd32S9Mlpx2culW6Wduzrlzmn5Hnh
xdKvSGYzRpCeI3mK/R/pByUzhKdJ3yt5iH0J6Ucls4SfowzqJ/wq1yp5AXsf
6S8lS4S76ZyHpr1PcqD0AZLN7LlJ7532nkmldJu097WqpFOSb4VrpWvS3oep
l65Lex+mUboh7T26s6TPTHtf6zzpc9PeY5kpPSPtmHh3S9+V9v7PA9L3px0H
jzHyg2mPkx+Xfkyyk9IfkX447TXauHQs7f20PtLHph3HOyodSXufp4l0btr7
kAOlT5EU6NgB0iemvW7dQ7p72ntBnaT3TXu9eQ/pjmnvKR0pfUTaa979pful
vXd3nHTftPeLdui+bq/23mCJ0orT3qctk24uWcV+oPQukjXsE0r3lGwXLqRe
ae9DzpY+uNJxuXsJ9047/vnx0iekHcd7LGsFmoc06tu6WOe8RDJOeS6XvkIy
Qfh66Rt4d4VvkR4tuVP4SumrJJOFz5Q+S3IzewjS/SXXCg+D41/lV6v8Pko7
lmPKvG56e5XXTk9R2kDOofRB0udzDq5LupdkpHBc8527q8zZXiF8V5V52q/V
dVyX9v7hldJXpb1+nNVxcc1bD+IdE64kzqBwjXAb4YO5RuW9Iu3Y6ZdKD0mb
zyyh8u+pMt8768d3VnkN+RbhKbqWOl1LlfJMqzLn/Gil36H0ejg0yC/cIPx3
g35XmaP7L+HRVebWvkJ5blaeKjgElH5LlXmzMzp/VvK96tZCumXa8eET0sm0
Y923ki5PO357Bdeddjz5rtIHpR2L/jDpw9OOP3+29Dlp8/qfKn1a2nHdD5Y+
JO049qdLn5F23PiLpS9JO1b8YOkL0o4hXy2dlnzHPrb00ZK/hdvynUl+FN5J
emfJL2Ve555Q5bXuEcTG0fVmmnrtfHKV18+HE1dH6Wml/6P7MLbKvP3jee8k
9/DdsW5ZZX7+kco/Xvmzyr+nzrOX5Hf2zKV3TzuG/G7S7SW/Ct9NGbRxwhOl
J0mmCe+n//eXbKD+SksQm5I5k9K6VjpG/XO0Y5WOXX9tW7VjVY45e7PwvlWO
LXuD8D5Vjj87QPV/IGW7x6Gq542qZ2tiJgtfz5qCcL2uZZjONUd5RujYPXVs
Pvwiwl2rHJe8QXmGK88L2EGoDs9yParDVcqzV5Vj4NYpzxXKM5t1eJ33wZRt
RGfpXLN0rgk613FKn5ayfeajSn+MdVSlH6P0u1O2w3xM6U8ofZLSR/HtVtsO
4nH6omrvUQ9hX0V5osSRFr6aNRG+ZZVzT8o2nKcJP5Sy/edRwnelbF/aQ/jO
lG1KWf+YmvIayCXCV6qccpUzWtfVqcpxe8cJ71fl+LwThTtXOSbvFOEDqhzD
fScd2y9pDsgRKm8P1m2wvWFvJ2kuw13Yt0maK3FLvb7zlG38WBMamfK6UI7q
dl3K9r0HK/3IpGP3sT50TsprRI3CxyfNN7yJmB0p2wduF742ZVvfg5SnR9Jx
z4YrbXfWnbCLoY+t9jx+GHlZgyr1OtMdKa81fS/9nWQ6z07P9BPhe4S/Ij6S
5H7sJ9s6nhOxnL6R/lryIDZFrKdJ7sWelvU2yUzhtirnMmJ+Ca9R2i+SR4Rr
lH4p8b+Ea4WHEP9LuEVbx5EihlQ7pQ8lflmp19VuT3lt7Wm9g531Leym9/BZ
xiDVtnmZy1ig2nYN10hfXW17kOto+6ttp3OB9OBq254MkD6x2vYa50mfW22b
oxOkj6+2jdJI6RHVtpcZKn1Zte1o9ie+qmSQ8HDpYdW2VekpnVLdRghfJHxh
te10hkhfWm37l+Ok+1bbruRk6ZOqbQN1jvTZ1baFGaprvIw2V9d4vvSgtPeN
r5G+WlIhPFx6GO2v8EjpEWnvY18kfSF9MzFGpW+UxIVHS98iqRQ+Q+c5vdr2
WadJn1ptu5g/pDdX23Zpq/Rf1bZXGqvjxqS9/9xFaZ3pFxlfSR/APaXN5x3T
87pA+CCeg/CFwr8I/1xtW6eF0i9V24boG+mvq21n9Jv02mrbT/0k/WO1bbvu
om+vtv3UVOk7qr22dL/0fdW2VZnJmLHaNj7TGTNWe33rNsYC1bYVupVxRLXt
pMby/Ku9LrVBer3kLeEF0vOrvQ63Wvqras+fljKurLZNWQ/pD3RdlwsfQl7h
i4WPFk7quQ8XPph3UukX0TfRnit9mPChXDdx5RijCj8vfKnwTdz7ats3vcl9
qrZd1TLp16u9Fvguz6TadmofSX9YbbutD6Tfr/ba3ufSq6pt48Za8rkprye3
V9opxMKjb+I9Fz5R+FLWzDO2b7yMbzxj28tf1Z6srbft4/sqZ3M71bvY+7pf
1Hlvd6XSNyr9GfZ3lPePetsr/y69rt72iIcq/36snyv/ENb2M7ZRLBN+V3lK
NFfaIL2x3nafhyh9X9beS7w/9kGd98jYr/u8znt27Ot+Wee93UWqw/eqw7hi
77N9VOe9NvbNPqzz3tkK5flZeWYoz3LhH4UfKvb+9sd13uN+R+m/K/2xYu8B
rqrzPuAHSs8Rnl3sfb/Vdd77+1b6G0lKdf5O+vs62yW8p/zrVc5Txd6XWJzx
3kQL4fd0jaW63rel36m3nS57FC9nvE9B+/1zxm34Dv3/T739N5qrXyhrsN9I
UjrVYFv2W5T/r4xt2nOV1qTB/iFX0IZn7DNCP/NNxn1Nvv4vaLCPSpF00wb7
e9ygPL9n7PdB/7Mm4z5om87/d739T0YpfUvGvgzswX5W533YapWRbrDNfRvp
ygb7PLBP/km998p7sW+u/JvYvxA+gD0I9h2EO7NPwd6i8Erlb6b700r4feHm
wsulV9Tbvpa+bnXG/d2Nwusz9qNpqXO2arC/zU1K35ix383Nwpsz9m1prf9j
DfZ1Ga30bRn7CPypsv+qt809tg+f1Nn+gT3hT+u8L8w6Vqek17IuUN7cpG21
WPfaJ+m1r2r2oyV7Rr3WtW/S61017NvW21amlPddsgs2vtJFkp15Z3Sese1s
V96M6663fdICvUurlH6j3qX5wh8LX1/sPeSVdd5HTipvQrKH8reTbivZR7hB
ul6yL+8Ye2T1toPpLt2j3nYwh5ImOVT4KOkjJYcLH87/km48U+nKettOVUhH
JR1Ym5eO1du+qlF6p3rbAKXZc6+3fc8uXEe9bXrKpVtJ2rN/It2y3rZr7+o6
Rrezzfvbwje1sx39W8I3tLON/DvCo9rZ/v0X4Z8laezG2Deus13ReukNdbY9
+lP6rzrbLW2R/kPSFpsz3jVJhmfHPnOd7ZMKVJfCetshvaX7vEbnelj3+Uf9
/1Od7cxy9X+OpEF4B+uZknrhJkrLq7dd1CalbZTUci0qZ63KmaVyFgp/K3yL
8Kv6f2md/UCekX66znZ1T0g/XmdbunnSc+vsc4KNz4o62/nM5n2ssz/PLOlH
6mzb95L0gjr7mSyWXlRn3xJsCt6vs10BdkbL6mxrhD3RG3W2KcLmaHldsDti
/7bO9kUvCX+lOt+sOu/G+ET9RV/myPou1mbs4/Y2NgDKc4fy91DaEZIFGhsc
SJskeUG4t3QfySLhE6T7SZYI79XO8enZ1+vYzrHA2Qc8SP8fLJnLvop0L8nL
wge0c5x49vgOV1p3yXyl79/OseTZX+uktP0kzyt9X96jau8P9lfaiZKlzKEa
Hb+Q2IXYiTyWsa3Iz9hf6Dk2VZvzkPT0evsYzJR+uN7+CdibzMjY5mQW/VW9
fQywDXkwY/sQ7FAeydgW5XHaznr7PDwl/XS9/St+xAaE77+l7VOezNhG5Vml
PVdvfwlspp7N2G5qH+l9Jc+p/u1pmyVPCT+hsdiTzG+FP2MNhrEgYzxd35ha
77uOl55Q633XG6VvqvXebKXKSEimK/9tSptS6z3YuNLaSB4ifh3jWD33w1gH
E64SPlx4d+GLhQew5sP4mfi5wrswZhbuLdyOsZBwN+EG4Wrh7sIjdJ6Rtd7r
m61rnVNvH480fZTkYZ23XrpB8hh+DLqm6ZI64Xukp6XN6X6xyrik1vtU52Nb
VOs9qFn6/1FJo/JcL31D2vbaN0uPStvWe5z0rWnbemd1nhrJI4yrVca1td5D
Hip9ea33xHanb5Q8rTz36rj7JG2FG5W2k+TxFrYveCljG4MltPd13lNdRHtZ
5z3S9/Xc76L/0HP/CLs8vaN3K/8nwk8L3yP8Hv0GbY3yfCb8rNKnKf1T4Wn0
p0r/kL5IuInwYubKwptVh1HSF7WzX9THSr+Htqml7eNurreN3CvYCirPGJX5
MvNvpW/SsV8Kz1H6fUpfJXyv0gt07OfCzyv9XsZIwlMZlyj/m5xX6ROU/obw
7fSjSn+L/lB4h/C72LUpz1TlWcYagPB47o/wZMaLyvOa8K1Kv5WxFvaJwncx
tsSWUPhObDaErxMeiy2H8BQd+6eOfVX4NuEtLWxbd0u97etGS1/Szr5TC5U+
kraXNo06MNZU/hdpy1O2dcWWanbG9lRzlT6v3r43HRk769mtKrHt1dyM7a/2
Fd5F6V9iyyG8m/BXJbYrWZKxbUknxnX0nbqHrzAuqPO++qvCr9XbF2sfbNaE
2yjPMuk36u3PsxfvknCc50vfW+f99t2VPl+/Wyt9D+zR6IOF53EPhddzXcJX
0G6rDguEhwuPYpwsfJXwaOH5wuOVf0ML20uOqbfN5BfC99EXqsyx0kPa2c9s
T52rQXX4XMf+ojyvMJYW/om1DeHp3DfhocI3Cb8gPI45gMrfm3UFHfuF0i9I
OT4oHPMXphw3FN7fi1KOJwpH7wrW+rAN5V1i/ZM9Rd4T4bOw+xReJnye8ADh
11lLFO4v/Ibw+cInC78nPFL4At5D4eHC5wsvEO6F7YrwSubRwhfxLrHeiG2o
8DuswQqfJ/y28FDhc4SXC1+ELSnvP+uQ2K0Kl+iZ17EOy5p/xt8e3909GX+3
fLMTM/5O+EZGZXyPuD+jM34ePItpGX97fHd3Zfyd843fmXHbQbtRStvIeo3y
NxM+nDUs4akZtx20G7dn/B3yDd6R8XfLNzufNXnV+SDhl4SPFe4mPFe4u/D+
wvOEjxDuwj6n8LXCVwiPwc5U5/qk0HZ8X6Rty7deel3aPsTY5X2etm0e9n1f
pm3j95X0I8yLlWcNa7Fp75Gulp7FOgm2CcI/pL33+LP0T2nvtf4u/Vvadv1r
WUNN26ZjI2ulafuu3ZLxN8D7v1lpm9L2Y8OmqTBju6alrDNjp6v0V4RPxvZX
eInwQOHefDvCRwkfKLxQ+Djsd4UXCw/APpi9G+ETiMMtvEi4P7HDW9hmqiBj
uylstZpmbK9VLN2W9WXl2cJaeNr+0/dm/L3xrWHPVZSxTdfX9F8qcyT3POM2
i/ZqbMbtNW31fuqX9pf8gA9Mjb4NyQ3C86VfrLEvzuPSj0lGCj8t/ZTkKuFH
pWdJRuBjIL1McqNwV5V3kOTnVt5TfEb1er9AYzGlHSL5RekHSB8o+Ul4uo57
SHKFcGeldZH8KPyI0h6WDBd+UvoJ9j2Fn5V+RnI1th7Sv0huFz5Cxx0p+U34
b6Vtk9wj/Kf0Fsldwlul/5LcLdxdeXtI1gofJn245Ffhd/T/25JRws9LPye5
Rnhf/d9J8r3w3tL7SL4TXq7/35TcJPyW9ArJzezVZzWWIKY8c0/h84kdL3yU
7v+RPA/d/57SRzPGo33juUmeZT+CtQ3JTN496aOwcxUuE+6BjSPvCeNk9reE
dxPeVfKk8C7SO0ueEE6xHiOZITw+436OPu7WjPtO+s1xGff99PtthWslsxiz
SbeTPCrcnHEyez/CEzLuO+k3W3ItSr9HOCbcWvKg8KHSh/AtCR8vfRx9ImNv
6S6SOcKHSXeTvCjcWXp/yWzh0zKOEU588NMzjndOrPMzhD9hDiO8J9+H5Bnh
M2kblf6W8EnCA7hO4b7Sx3JtwqdmHOOc+Obl3HPhe6mnnmE3yRp82DIeTzOW
Zl/ijKz3Jn7lWhKOdbaOOiccS+pF7rHGoovzdJ3cZ/U9rXRsW/pW5gj0cRmv
v7P2vpPKe4P+XnnaCS9krZ78wgsYHwg3CL9KPyfcKPw6ewrCdcKL6DuF67O2
D8A2YEHGtqrYqS7M2A4VG9RFGdu/Yvv6VMbrIKyBPJ7x+ghrI68LtxeuEH4j
43EAY4BlGY8PGBs8JPw79qPCMzNea2OdbVbG61CsQb3GuyccFX6Vd084IrxU
uFG4XHgOcwThlsLPCVcKt2jp/YG9s94jYO1/r6zX/3eX/pD9j5beN+iY9d5B
WvpJ/c4y3xF+TrhGuCrr/R72ekqET0445mQz4VMSjmOZzHqviH2iyqz3k9hL
ime9p8V+VjTrPSH2g1pmvZfDPs5vqvOhCcfjKlP6wITjWLbOeg+M/a+mwicl
HJvx64z3bNiv2SrcO+F4iZuEeyYcg6tG+eeq/m1V/6zwHOFa4VrhF9mjaek9
kD2y3gdhz2TPrPdNcqT7JRxPr4lw/4TjB+YLn5hwzMwNOtdhCcfj+lO4V8Ix
J/8WPj4RYmMq/4CEY0XuUPoJCccP/EP4mIRjbd2f8ZyW+ewXGe8bsWf0qXBK
+AXh6bzP2DAL3ys8v9Jx2B4RXlnpWIKPCn9d6TiQzwp/LzxI+Gnh7xgjcS6+
BezJhWcKv1fpuI6vCf+tb3Kb8IPCL1U6ZuBc4Z8Ymwnfw32rdJzY54V/YJwm
/KTwt5WOCfm48DeVjgN5jHCe2uSuuq4DhbewvizcRXgja8fChwn/I9xF+FDh
bcL7C3cT3s6ao3Bn4fXC+wgfILxZuJNwD+FclX8Abb5wE+EDhfsI5wsfJHyc
cIHwwcIDhIvYUxbuJ1wofAjfo/Ag4cF8p8I72JtW/V8VPk/p5/N9Cf+o6xqs
9LdpA1WHJP1OxnMD5gXnS3/I96/3ZxDronzD+Myynsy3zZg54/kGc423hPsL
J4TfET5ZOCX8Vcb7lOxRfpvxfiR7kYNZA6etYc8u471D9g3fzHgewhyEfbx9
st7LW6X0moTj4LGPt2/We3ljpZ/VtcSUvkD4F+GhwguF17D3Qdsr/LPwZcJL
hLfqnmwVXiT8J2NF4VeEz9X9GcQYWHhepX1ep/LdVTrm9q20IZWOM38b32Cl
4x5PEp5d6VjKE4Sfr3Rs+duFX6h0nOQVwjm6hu3CP6vP/0kyBds36VVt7J+8
Svgzya3CZZrTDKuyfexOzKWqbIsbFR5RZZvb/o1qS3VPTiYuqNKHV9nOFp+V
q6rstzKoQfcp5djuFwg/mnJM+TTtlr7T+apPHfOnKtskZ2jbko53erHyP55y
PPpS5bm8yra7+PRcWWW/Hvx+RlbZ96dGeW6osv3zl21Vd95h4VXCJ/NuN/P3
VJX0N0Ub0CLpdmCl8pyoPPs383efTPrb/0TpJym9SzN/3/Gkv/Fqneu6KttU
L1GevsIdmrn9qEy6DflQ6QOU3lnpZ+papqccs76pjh1aZRvmatps5X9R+c9R
npkpx6kvUJ7LqmzPzHP+M+Fn/YzK7Kn0nZS+u/R7yr9d72EH4XeE/xbeU3la
6/fHwk8KHy3c2MzvyIaE35PHlH6U0huU/pJwH+Hdmvl92ZbwO8O79mvC7xvv
1O8Jv1ePKP+Ryl+v/ENU58sazBP1mtKPU/ruSh+qtMsbzBk1UvpKyZfCu+n/
5arnVuH2wm+xJyG8SMceq9/tuV59E4eyx9DC7Wtx0m1svfK0Up6XlH8n4XLh
heyzC7cUXiA8XOcZ0WAOqw5Kjyp9kfCuwhHhl4WrhcuEXxTOCrcQno8/kY4b
1mBuK/qEwqT7BdrvZkm34T8o/0BsZpq5Xx2RdN/aVcdNSpmnC9+XKSn7v9Dv
DU6676O/vSzpPpc+8MKk+0H6/GFJ9/uHqJzJKXMi0R+eknSfyBjh8qTHCfR7
g5Lu+w5T/ttS5uDqIDwuZS6yPYRvTZmLbG/h8SlzkdHfXpx0n0t/eHDSfeLF
tKMJx0L5rd57luxX0ub1TbrdW1/vvVL2SfMavCbOeviaeu+nspd6CZp3VbiT
8kxImeusi/DElPnN6MMvTbofL2zwPhx7cIxPX0x4jFrR4H0s9rAYg5ya9Dik
RYP3utjnYoxzTNLjnJ/1XE7Fhg07f+HTsBNr5r46m3R/vUHpZyi9RzP357VJ
9+nblH5mlW37abPbJ91uJ1gHqrI/Au36rkm37TuU/6wq2//Tru+cdNtO396Y
dP+eq2PPqbIPAn17u6T7d/r2dNL9O31gfdL9YFJlNlf+eaUey5ye9HiGsc+5
SY9/4g3ej/yXV63Be4HsAzLG7530OH9XbLdS5oXbCZu3lPn0GNOdnfS4ro3O
1UznmlvqcdaZSY+1qhq8R8j+IHOIo5OeRyQavOfKfuvvOvZ0Hdu9mccveckw
hlH6MUrfuZn7qx0J91lXqj/p0cZ++MOED29j7oAbhScInw7vBn2O8GnCVwsf
0cb+/9cK9xMeCM+I8KFtzDVwufBhbcwvMIb5tPBZwpcJd2tjDoKbhScJnyE8
Qrh7G/MXXCx8SBtzH+wQ3i6ZJry75lV7q95fCe8hvK/w18KthWO1tlt/Qv3d
scIbhSPS0VrbleMfdmS1bd17Ch8jWcf6g/L3Fd4knJWuqbUtdlvpdrW2ed9L
ej+d61u4CYQbam273Ua6stb25knpVK3t0Kul07W2T79ddX+j0vbyU4XvqDH/
wV3Sd0ouhn9B+rYa8yh8Lb1aMlH4W+lvuEfCM6VnSIYJH6Wyj5b8Lvyg0h6Q
XC78vfR3ksnCX0l/yfMT/lH6B84h/LH0R5Kxwh9Kf97GXCfvC6+UjBb+VPoT
yTjhL8gjGS98v/Rs5R8q3Evn7y1ZL3y60nOUfqDwSTyvuPpT4XHCU5V+tvBu
ytte8oXwBKW/Xmm/gVuol/KcKTyZNZ9K2/tP4h7UBM4V6VZt7H8zSDjSxv43
pwr/o3MdIHymcG4b87RdKBxrY9+ds4WL2pjXabBwRRv765wivEPHdhE+vk7v
Wp3t7PtJ96+zjf4A9hvr7CNxiPKn9P5UKv+hwlXYzQgfLJwUbsOaj3CafSnh
bsLV7DMJHyScEI4LH1jj+Txz+S41HuMyvs1nTQx7XWIDCz+Kva7wPjUeTzOW
7lTjcTZj7P1rPP5m7H24cIY9MJXfhDU0HXujjj1ReKOucQ+l92M8GTcfEGPh
nxMeDz+oNqGH8rdTmzBD+AjhOsYYwr2Ed6ENEe4tvKtwR+n3dd4dOu8LGgMc
hv0Be381XodlDbYXa1bw6nJvGa8KNwj3FX43bh6iPqyJwdvbynuDHWq8P9iT
ta+4OT+OVp/Vs96cF7lKf0TnvgH/BdbxhK8X3qIx8wPCw4U3Ma8Vvlz4D+a1
wsOEfxK+VfhS4c3C9wlfgW1P1vbc2HKvy9oWGTvk37K2UcY+uYT9QMmbrA0q
/Q4dOxQfuKztm7Ft/kX4NqVfpvSfhScKDxH+IWsbXOxv/2GOovTrWKPI2sYX
+94PhC9U+sVK38q6BbbNwn8JPyQ8sqVtupvX2K57m9JnYBet9Ga8h7rn0wo0
9mSdQ+kj2BfLeozO+PzLrO2nsZ1+T/gC5bmINZCsx7WMab/J2rYYu+LPsh73
M+ZfnbU9OrboHwtfpGMvYW6rZ3IAdht6LlvrbdODPc/naku/aWMe5avUH/2q
9G+VZzptNePScrWl2AZLRuBbm7LvNH7Tu6TsO43f9N8p2+xirztbeedIXsQ3
T2W+INmuMv9I2XYTu82P9P/HkuXK0yFl3gE4B3ZK2U8bH+13E/YVx0/8lYT9
w/ENP4pxsmSMjj1eZZ/QYJ7WP1O278S281n9/5xknvIs1bHXMS/TsXNJk8xX
+jwdN1eyI+qx/x1Zj/+xHa7I2n54X+X9oMb8Uo8LPyF5odxjwLysx4GbUrY3
xdb0GpX3m35/rzI3pGyTij3qvIR93fFzf1739gz9rim3fXEsaxvjL3XsV5Lm
FZrX6/8b6HvwC1baR5ISpT8n/bzk76ht8zdmbZ+/ivG1pJnyVOs8aUkd/PRK
69tgLtpF0oslucRf13VMlzyvOtyntPslm6LmdHm91rwuVyttrer3XdTznlFZ
z33wG1ifte/AZ8rzqaS0wvO8h7Oe6zEHmpz1PGhHynbh2IRj+3xi1vbPD2JT
LdmM7zLzOMkfwreqXuMlj5bbHnZCW9vETpKeLHlM6V1UTkdsDJrZBrxNNvD0
Kv3krG2qe9A2SkaX2+7++6xt7xcr7RXJQqW3UL3KJNkK+1uszdrnoo3SKiVt
K9w2NGt0+zAJO27h65uZm+elWvPzHKS6H9xgTuEhSrus1v55h+o83SSjhPN0
XL6kWmXOYs4u+RO7KeluDeZsfU1l3sQ4Q889qbwpSTvln6PyztR/teX2Efk9
az+RnowPJWPLPRf8u9bzwSUJ8y/AvZBTZZt77O0XJ8ynAJfCS8q/UEJwrwXY
2Un+wbZE5T0tmasyi5S3kPepwu1x00a3yaXSJZJMhednpVnP0S7U+S+qtf/i
OdKvVdrPGPv3E7LBBl74x6z9HZ7FZlCyLer59JSs59RPKe1JyValj8cnQOe6
TumPK+0JyV9K76Q6xmlX8T1W2skN5mWm35uWdd8HZ9KCWvMmMQ9+IOu58Bsq
b99G+9yxxvBQ1usM8Oi8VmsuHebu92U9f5+vcy1AdK43dZ7l2D7q2ldqPrK8
0T6fTTTuWNFov9NejE0a7de3h/Srjeb8X6H8rzfaX3CJ9FLJQGJp6pyjEvZp
/kBlfygpVv65yv9ao30rmQfcmfVcoEDlv9Vof9elqterkpd17Gs67lVJXoU5
oubXmifqdaUtk+Qr/XXlXSZZhE+1/j+Nfk34Lf2/QlKoPFt5JpIk5SjPcQlz
CrIOMSPrtYgtvL+SBHEfpL+VtKiwr89XWfv7PKZj+ybM8/eo8LEJc3w2ZYzW
GHyDddxKSVMd+670O5Ii4ZnstbGuovxPCp9Kf4dNjnCfhHkr4Svao8p+qYx9
7s56/HOe8iyvtO/4dtp4SarC/klfZ+2jNIh5RqV9x89lvCCMf/mnujefSVbA
/aD7/26jfUPnKc+NCXNJTlV5d0rW6327W/ouyQbhF5V3vuQkPdOZKuNhyWz6
C9YKaE+V53n6ScmJxICVXig5ubXHceOzHsuxDjQx67UgfF9SWfu/nK4yzmgw
F/mP0j9JWum6vpZeLSkTvlb6dx3zg/J8L/yDpKXSX9B55koG6FzXKW2d8vwY
tV9Ldda+LfcqfZpkY9RrbLOyXmdjvDku6zHnYyrjcckJxINlXYXzKf9+utY2
ync17bNwkrETfv+6h+802gd6oPKe2mDO9zG0W5JZyvOC7u3VCXM95ihvrqRK
dX6EeRzrHkqfS1ubMAfn+/TLkjeFl6i8VyRNiMmitEqd9xqlP6v8p9Pv8g6o
Du812j84rTwZyRClT2QthT4b+0nGDpL+uq5PU/ZXYb9piv6/nfulPJ11XELl
X8s7Sd8u6dfaflGJrH2jZtF3MQZSnkX6f7HklNZehzgn67WIs1W3syQ72ONW
2Q9Ltqj80/keJX+38vru+Q1e471I+vx25nseLHxeO/NAj1PeW2vNv76G8Zsk
Qswc6XPamTeatc9zG7z+eTLrt5JJyv+67s0o9sHVFywTHs2cXfhG/X8T7265
fcJ6Zu0Xdp3SrpfMhK9B5fVuMN/9KKXdInkEv3bpLyRvldtvrHfWvmOsT1/Y
4DXqtdxvSbTCa8CPZb0OfJeOu5sxVrnXmJ/Kep15Z+XdpcExDHbW/7tIrlCe
m5U2qsG8+azHbM94TWY3pbVvMI9/P+XtL5mA3Z10R8lwxo2sqTLOEB6l+3dL
rbnqWQe9KOu10BtVxk0N5uhn/XJ9rdcwxwiP5V5HvSa6qdbronDavVlrXrsB
rHtLJqrMn6mjpJzYNaxzMo5R+u+8U5IKpe+mtPaSYeVeTx2S9ZrqmYwVJdtb
ec3+kgav28OZt7zWvHmLKs2Vg//vM5Xm0IE/56lK86/BvbaQ/kHyksrvrPF/
l3rzG7J+WZD1GuY+KnvfBsdXYM+ZYEzsOxdyv2vMT7mfjvsiYb6Zq5V+jWSG
0jthGy45UOnLeG+V/6pS72P/U+u97L2xJa83x2JHbL0lnaPeA99a631w9re3
1XqP+yXhgayTsO6KzVu9eRjbY+st2V94sfKcwTxUeV4WPk34ilLvpf9V6/10
1u+L2noN/3TWKiW3lXuNvKCt18nzpYfWmF9zT92DvRocc2J36Y4NjkXxlfKs
lrxdbv+/SNY+gKyXX5L1mvkTleawg7+ONePcrNeN8afsm7VPJeuI/2S8lngs
exySW8vt+3hk1v6P2AjktrWdAOv6eW29tr8xYf4y9oBGKu1KxvH0R5Xm9YPT
b13CHG3s4+B/2T1rH8w3Vc4F2MyonLUJ87uxv0M8oo5hfMJ+zhNZ7+lcquu+
oJ255G8RHt3gOBYVjItYD1I5fZLm/ILv66uEObng4zpcebs3OI7FFVXe02I/
a4b6/el15oo9Wv/3bHCsDtazi7Je08bWYI+2tjfAD2xqW/uC4R85MGsfScZT
xFKizvhftsraB/O7hLm34N1aQB+rd+DPVt6vGJr1nsU3CfOFwRW2P/tLfPsq
cwXjgRrzCi/CHrjGPKyLhYfUmIe1N2ssknHC9yv9Pkm83Hsyv9d6XwY/ttva
2pftcOnDaB+Zb9JXKM8W1riU/6x25iV6VOmnKn2b0l9m7CD8l/Ac4eOF/2CN
MWFONPjQbld5d0geV5nD9P/wWnOK3CN9t6S18B3SU2sdo+NAXeOe1JM2VvpO
SYXS75Wexjqs8Cv0UcJbda5zVPa5ktvLvbdQnPX+wlms50umlHvP7awG77ux
R3RB1vtEk1TG5FrH93hDdR6r+3af6rx7pXm+4Piap7S+debGqFF5tZLLys0b
90Ct3yXszvZptO0ZfsOnZe07PEW4OeOxZt7PaZ71ns5VjB9qHeeB9Z5oo9d8
9lMd929wbJjr9f8NtY4XcYDSDmxwbBjmAQfVeS5wkepyoeROxmyV5pSETxLe
0zdqzX3aWmkxSa3evetVxg0NjukySMedx7PRsYOlL5BMLfc6U8tGrzWxp9Qi
632liNLKJTUV5qpcVmu+SvbNzs9672yqcCvluVHXe4TOc2SDY9i0qXRsMOKC
sU+4ttZ7hey/nZf1Hhx++d9m7ZvPfvKDtf4GX2aOVmOu4gbVsVFyuXA76Tra
QeH/Aa5ECus=
          "]], PolygonBox[CompressedData["
1:eJwsnXd8VMXXxkMNJCF1AwnZsLtpu1lRRBEUEcVCsRdUELuoIIKAHakW7NIE
ARVEUGxI712kFykqiEiXIr0jzff7/J73j/nsPPfMnZm9Ze7MmXOeE3n8ubs7
lE1ISBielJBQnt+OwYSE7woTEl7LSEjYVy4hYVsoIeFQTkJCbfDC1ISE1siv
41h78iuRvwQeR/nuyA+Bu4AngXuCj4CviiQkpFA+FTwxLSHhTF5CwjmlygkJ
vWj4BuRpyDOQT0N+EbgyOBn8A/hycDK4Cngc+HHqbwh+lvZXUH8z5OngTOQz
kQ8hf4T+Xg4eQZnOlP+B/nQF76f89eAbSTX5v6/Q/in68i/pDP3pCX4W2deU
f5Xyeyn/KLgBdbajruXgD8kfpv7LkH/KsduQd8xPSKiWnJAwAPkd4E7gHPDH
4LvA95Cupr3Pwc+QH0X9r3D+HvDV9L8KdaaBJ9H/Dsi/Qd4F/A/y7uDHKbMM
WRNuUJlc+luckPBXZkJCI8q8jrw18hXImyHfjuwkaSPy1aRl9PU0eBP5Ysr3
pPwTlF9O+aaUb0Q+lfbTkU3l2FPIh9J+J/Aq2r9QnevOsdfp/9DEhITfKHuQ
Oi9FPpf/Pxu8H3yJ7i/4Bcr+yPndwAc5/xznj+VYL84fzPltyH+J/GXku5E/
DH6lBr8pCQkjwQ+A93H9vuH6LeJ+dAU/Rh+X0rfG9Lc5+A/knyGfh/xB8IyS
hIS7sxISFoNbgPcg/xr5QvBS+neA/tWiven07xXkE2i/B/gw7d0H/pvyoyj/
M+XP0N8fOdaT/g6ivxHarkgdlSg/mj7cyrNSmfM/SKcP4FLklZAnIf8enBlO
SFjP/5mB/C/aSwH/Bp4G3ghOAK8FTwb/Cq4E/hU8FbwBnA7+HTwdvAlcFbwB
PBO8BVwevA48Bfw7uCb4L/A88D/gS8GbwfPB+8EtwHvAy8FldM/BO8GLwf8i
vxu8C7wUfAFcF7wVvAB8CHwZeAv4J/AB8OPgf8ArwRWp72HwXvAKcHlwc/Bu
8DLwf5QPgv8AzwJvB5eAN4HngneDC8B/gueA/9b7WsQzAz7F81qB1B58FnyS
fDlSV/AF8L/kK5Pe4X5cxv0/Qb42qRfy/5CfIZ9MWs79vBT5MfJlSC8jP4/8
NPlE0usFCQlFyA+Sv4s+ZPN+5YD/Ad/EPa0GzgXvAzcGh+nvRs6fTdmd9Pc9
7v1k8GDwEHB38ETwIPAA8L/g0zx/V3LuGvAU3sVJpJo87zOoswH1baP8z5Q/
queT8hPAA8F9wVm0X43291L2RuroTf8TKHMWXIV0Pedvp/xCyp+k/O3gv8FL
wOc0RlJ2Ifgb8Azwm+BJ4E/Ag8BrwYvB34FngxeBfwaPBk8FbwQvBf8Ang/e
DF4GHgNeAN4AXgL+HjwPvBO8HPwjeBF4FXgR+FvwTPB58L9cj6v4L+vAhfQ3
kXs0A7wLXA+cBJ6t9xOcybu5mns8hvF5Gu/k5cgrI5+l8QV5BfBZ6rsavB5c
BnwGXB/8GzgKrkT5mRpvwYdpfxX9GU9/VoD3g1eCx4GXgXeBV4DHgheDJ4Hn
gr8E/wj+ETwHPAL8Pfgb8CzwcPA34O/As8FfgL8FnwavBk8ErwafA68BTwKv
BR8H/wKeAF6l5wM8DzwSPBb8JXgmeBj4K/Bn4Ongz8Bfgn8CLwB/DZ4Mngf+
CfwVeBJ4Bng+eBR4PHgYeAb4c/BI8CDwNPCn4OHgG7leO8CLwKfAfZFPAQ/R
eAfuD54KHgr+XPeP8S+RY5W5vt/w/q/lffqV1An5Qn0vyK8nddbzAI4ytv7J
+PkR5TsynheC12s8BT8LzgUvBb8FrgHOB68Evw2+FRwBrwO/B24HLtb3APwh
uAM4BP4F/A74NnBn/s9B+ruG9lM1XiP/C3kf5J2RXwzeBu4H7gJOBlchledZ
G8L3oBX/L5v/Vw35z5xfC1kS7+Ay8CbKVxImldP3jfJ55JdTX2/ktyC/CLwF
3Bf8KrgaeDH4TXAQ3JL6A9RfFbyA+o8zNhwl3cz4sIH3ex/P/gHScZ7/16j/
CPljpJPgbuC7OD+T8wP6HnN+BepPJJWlP58gvwV5BvIs5LOQl9V/I5XR9w35
eer6j3SB+l4H16Z8EuVTKD+W8u/x7ozQHITy6ysyl0GehTwb+Tzk2+jrCdIf
9PUXUifkv4AXk/8D+UHqPkw6Qf1dqf9hzfcYz3YhX5Tmucph0vpMz1n2UPYf
0lHKv0z53bzL65AvQ3Ylz9sx8GrwEnAd+nCK/LFiX6s/SQO5N+Xo3wXyWaRU
+p5OqqD5C/U9hTyZPnxC2xc0ZnDub6RruN7LKf8A547heenL89JL8zv6kqTn
S88759wCrgR+H/wpuDPlx1P+Y/CHlH8WPA48APwe+FHwj+B+4DfBT4HHgvuD
39Z4TX3Jeh/Aw/R8cm2ipGfpzyH605f+luWc8+QzSO+Dy4DPkU8jNSf/A/X1
4fzu1Lea+1Wb848jK6vvH/9tcrG/NQtIb/Iuxkpc9z0a8yhfC3wUnEC6mf4k
6v1CNpT+LEJ+CfIjyP7jelXke/R7sa9VfdrbFOXd4pyx3K/pXOPN4HXgieCZ
4A68fwfo32rqS6G+bL1vHOtK/nPuR2v+TxL3YyD4PPVnId+K/DXwZ8gfR14Z
+QDwOeRtkO2nvl+orzLHWoP3gVeBE8FZ9DWD9CjXbzd9zKf/F/jPvZC/pvkI
+Dy4J7gLOA98DtwD/Cq4N/manH+Yc+/lWDP+S0Wux7v6vlN/ht5n2uxC/lP6
1xR5BY03yAdz7GLOvYjUIcV1fMX9+Ydntqbmj9TfGNm3XKMTzFcTAzxP1Pcc
37iqzD/7Mx/9GHya+oZS/k3Gh6HgC+DPwW+DB4PPgT/TXAA8CHwG/Cn4LfAo
6v6QPjXj2h+jjY78vyjyU/Tvcfr3DLgIfBz8IPgjzbfBgzi/B+d/AN4LHgju
Dq4Voy3qa0F9Dejvz9T/ObgluBz4KuTDwA+ArwPfCP4a3A18E7g17UWo7wjt
3Ud7L/D/XyTl07eeyNsgL0R+DPkDyH+g/aeL/G6W8L34m7q+IfWgvlU8U50p
H6P8acq3pvx3lH+yyM9OMeW/0fqmyM9KEbgD5Usof5Lyj+p9pe3nSUHa70H7
zyIvRn4C+cPIv+H/9aG9W5J8j7pSthspQv5drRnJv0oKgd8Gv6P1A+cPoL2u
XK9xnD+A8+9A9i9lAsia0sbV1L2TNrLAjcFXgXeA9/Eu7SU14Xn5Te8nsgLN
SZEtYbx9Q9cPXAieA07k+n5M/XdSf036f572+oNvB8fAL9G3l0k1aLs3x4op
PxT5feSvRD6L8kPA94L/o8wxcF/wreAi5PPAn4LvB5cB53H+YHBzcB3wNOSf
gO8Bn+f8H8D9wLeBT4EngQeC7wKfBWdw/iDw3eBLOX8v8o/AN4PD4I70tRMp
j7LdwTuQjSZ1R76C+30t538F7gq+Qc8b59cnjaP8Pxybz9gwj9SJa78XPJf8
HNJz4D3gqynbgDSe8vvA15BvSJoA3g+Oc30/pXw5rm8x17cIPBRcFpwLng8e
rjkOuJTnqQu4JvfwHPhZ7uG11HUdaSL1HaC+QuRDKF8GeTXOD4MHgS9o7AA/
AA5y/n7kt3LsCPg95EfJ96X++8DVkf+DvCnHovz3uuDyGR4j/0K+lPLVkLeg
fA+Nz8gvgDsiLwAPRp6gtQztRcCfgP/T2AjuCr6Y8ueRd+BYL43/4P/Ar4A3
gZdQvir4fupfztj1B8/nCp7NuNaL/Nd7SIv5v8f5v2/yPfhS7yz597lfX4NH
a02f5Dn7O+CR4LbgPuAXqL+U9v6l/qdo70FwPvgA+HbpH/T8g4/q/2l9Ca4B
Pgi+E/woOAQ+BL5b+iBwGHwY3Bw8lPa+pr3OtDdCcxrJeX8KtL7h/3+A/Cvk
7ZAPQP4K8os4/yzyZ6R/An/G/y8PjlL+YvAw6QDAF4FfAscpfwbchvK7GGu6
M35fzPidpjGM/GXIE7hfeXqmuH9XgMtl+Bv2IPLLwWU0/9OYA64DLgvOB9ek
/s9pr4KeN9p7j/6Oor/P0N9+lT3XOkD6PdNzrivjfHc5/3XOf0PfAI2n/N9i
zl/D+W3BBzl/NOe3ov1W4PGkbO7tbeB25CvQhwnIHwJ3AieDJ4OfAD8J3sX5
I8H3gx8DbwePAN8DfgS8FfwF+C7w0+D90qGBW4KfAO+Uzgd8L/g5cGXqnwR+
DNwenAieCH4E/BB4nr5Z9O8OfWP5L0NJNcAXM0bej2wMKQvcDHkfZB+RcrS2
QH47sjLUN476GiG/E1wOPF7jh8Zgrt0Z0mau3VpSS+mnSAHOv0X6HfL/0d+x
lL9Wc8Qcz3E1t23I9X0eeRXqm4L8SeQ3az4hnZfGljSP7f9K55jkMf5zxq+N
4M+T/EzdiPwU+HtwPeTXg09I5wq+Anwd+Bj4W611wQ3BR6QTBNfWfIyxcjHp
Pt6/a7i/05F3oI3HA75G/2qtz/ykVO+y1qjgy5iDPMi7+zb4OZ6nyzjnRs5t
SKpe3ceU/6wC9wi8gvb60V4Tzc+1NqS+QvJ/aI0LrkV990qXoDUhbW+g/GdJ
HkOHgzcHrU/WOzMMvAk8LMnP9HecX5vzW2mupTUy+FLwfeC3wKPBl4Cbg98A
V9GzzvUeyvtVB/w18ouR3438dc3Bqf936v80yWO2vrVnwWOS/M09Bn6f9+kY
+X5cn1+4n1uocxX3syZ1rOf97Uv5mzRf4VgznqWmpDu4HuV5nm4lfwvpTnAF
8GrauzHf354kjUHI7iLdrW8z8jrUnS39Gv2tjPwOZLerDPKKyFdy71aQWnP/
niRtZnwo4Pr3p74lvN/3UrY56R7KV6L8Gtq7Kd/frmTpDMCN8/3tStGchrKP
kFpQPkD5dzTf0Rwf2a8ce1vzG3AUvA7cW/M/cInqAn9I/gNSNa5NSYrfjX+K
PRfRO7KO9prk+9tWhXOu4HrVJe3gXcih/OOc+xipJXXlgt/VuwsupexvHPuK
//o16Tr+6yfU0Z/8AFJNcF/wN5oPk24EDwb3Jd9Pc2hwH/A48uNJt2b5GWtF
3Q+Q7qXuJNqrTV8uI22hP6ngLpR9jRSm/DuUn0B+Ium2LL+DU8hPJd2R5Wc0
hfGzP/frDc59gT5voK5+PA+NkTXm/0+i7GTS7Vl+hh+m7YdI99N+Gucc5Frt
JzVN8ZjcQjLdQ+SVOfYT5y4gNef8rzi/J/lepELw++Du5HuQCsDvgbdqrcwz
+iH5Zfp+IXuDVIT8A459RL4PKQ7+CPwd+e9JN4GHgOeRn0+6BzwK/CP5saQm
WX5HfiA/htQYPFRjDP+3Dmmb1l70txn/vQP3O5vntx/rkRPczw94f47z/vTn
GRnOWHCK67VR3zaOvan5N/KVGguZc51hbnAh6rnoTPp/u+5f1HPhZI7drPaj
nitWBk8HTyPdlWUdfm2et8tJ1yBbJB0A78YXtPEofX2X/tTQ9aP9p1O8J1Jd
1w/8ZIr3CF7gW/gi6QH+zxXcj8O0dTzque106itP3ZVinjvPBt/E/0nmP86h
/Gnp/yj7T9Rz06nIr6f+r6JeS1XgWA7nBmOeC89H/gDy2VHPpTM4VoCsJOa5
9gLkd+v5iXouXIVjqcgyY54Lz0V+H/LpUc+l0zgWRVZKukprLeSn+C+rwp5r
aE1YoOeB/9s2xXs4lSmbTLqY8nMov4zrNYzr9RDXqzr3Yyn4c/CD4Fzw39S1
iud1EdemZ5rHnu15nmtrDCqhL8Mp/zD5r+lTArgM6R3ykynzB8/mbs7/Vfp2
6WOkayD1RD5e8xPyJ3WPsqwDiJN/m/62T/Ez0pi+NtUYRn9XIl/N/1uj9TX/
rb50DGpP10BrFdWnZ4VUDJ4B3kf+ACmitQg4i7LZpNpau4C3IdtBygdPAZfQ
/lu03y7Fe2S3UPY29QH5L5X9ru3M89pS79wSrsdn/P9W5HOkf6RsiHQF5X+i
zC18ewYgb6q1IP8/wPgxmPrfov6XeCf+4F3qj7yJvp/8nzH6dlPm3qocr8Q4
prGIVJnrk0SdTck3IyWCK2n9rHeZVAFcEXyn3g1SMjgFfIRrf4jULMU6s+81
t6P+u6m/H/U30vci5rX3cvrbgPx1Ma+dloLb09fbuN6FXO/nNOcF3wwOS/8K
bge+BRwBtwcf4P+e5BrVBS/n/54AnwLXA/8C3lFsHZx0b2tIe5EfR34F8qXI
x4P3gS8GjwEP1X4R+KIMzymepb1baa9A+lvaO6L9D+RF4JWUb4u8GfKQ9L3I
t3P+GtpbSlvdOP9bzTX5/3fw//vy/+vyX+vHrItYzP9tzrW7l1SF65fKsSHa
f6V8M8qXUv5hjZdRr3WzSDX1bsas61jI+Wdpe3XYaz3pXD7l/K84/1bOj3P+
v8h/CXvtIB3MQM11kd+APIr8E82dwY3BMfB5Pe9hr72k03mc9hdGrUvJJu3h
v+0iNU7xO/YO8nelE6T/udKnkH+SlA2uqvWz9mpJLajrcsr/yrlrSQ1SrDN9
kLIPSSdG+UzKd6bs86SWlK+D/ANkH5JKkechb0G+JSkNnA5+lPxjpCzpMsC9
9T6TSsA54PfIv0+KgauD39T7RioGV5P+QGsZ7mki7Y3iP+dqbQWuCB4J/puy
u6RTofyHXO/tXIspvIMLk/wOT6P8VNJYxv4FHKvBvfkJ+Zokv5NfIhtBGoV8
luZkyOcgX5nkMTEAngf+JcljRBb1zwWv0vqPNmdy7gzSfM7/mWMZyGcjX6G5
inQS3KsjPIO/8uwF6O9u3u8efB8v4fuYLp0u8mPIf9d6H/n31PUd6Xvqm0sd
2dQ3n/pWk/9Y1wS8ALwWPBD8I2XHkH6g/DzNV8iP1zHwfM2PyI9WneA54D20
35P2a9F+hvaE9N9J3yKfjXwy+UmkH8E/gRP4/7Nob3mSx9STtD8DvDTJY2oy
eCp4kdbn0omAp4EXJ3mM/Yj/d4L/t4G2gtK3hb3G0NoiDt7Ct3M57eVq7cv8
YDN4GTgH3BJ8APwO+DBl3wIfAr8LPqK1m9Yr4I/AJ8Efg0dR/2nq/1Prb46d
Qv4h8hPkByB/B/lx5Ouln+HYFfS3LulHzY/o71atXyhfHXkryr9O+aOU/w1c
lfL1KHslaayeN8qnkZ/J/12m9bW+0eDp4CWai4IXUNdPpLv5Fuzi2Gzys0jt
wbu15iH/EPcjhfvRV/MP2jtEe2tpLw1cHvkjyKtoPgV+Bflh5OuQZ2g/Bnkr
5MnI+2hMCHvNpbVWkfTJ9OcS0ndaK9BeVHMr0mjwn+C9vDv/aM6r+aW+j+T3
k7qCR4MPkD9I6gb+FnyE/FHNmbKss99Nfg+pC3ik5kNcv0zGh+20f6X2f7TX
QXqK9/Vz5DcgzwBvQ14X+QfaGyE9jXw48mbVrfOUrrMB8kPUfZjUnfq/lz5I
33rSkxpLwTuQ7SS9Iv0quJRvcT3kFTK8R/M6+TdIj2tsRb6eshtInSn/BvhP
8ptIL4DfAm8hv5X0kvSz4N7aOyS15vwh4De1t0h6QvVXtu7qDe73e5Wtw5Lu
aIjmnJWtQ0pn7B7I/XiT8fRF/lNv5Ds4vz/nv8Yz8B54N/hjcDdwbe7NZaQf
NJ/n+bpV61Pq25bkOce1XJ80ym+hrsv4f5dTtg5pjNYDyJtQ/jfKb03yHOlH
7WfT/l/SDVG+Befncf4+8M3SV3FuTdK3nP8X59Qifynpe/AW8B2Ur0b53ZS/
XvtLyOKkb5BvQh6jvZ9pb12S55x50u1pjwf8CWVuka6I8//m/Iac36S6ddjS
XdcHNwKng7eC64CvAaeCN4NrqT2e7atpoxF1v0u6DXlV5LuQX4f8MmSLaO+3
JM/5c2l/IfhX8CDab075XMrvpXxjyt8FzgHvkS4FXI3rU5Fj07n+W5kvLOXb
N5Y0jW/bfNLCUr7tyCchL5fNd0H6Q9r4jLp/JTXLt45UutE/SXlc63TG2FWU
78X5B5HXBG8E/63vJ/L7eCY6Udcl9PF58P3gF8C1wIf1baD8Jtk3Ub468jTw
StleUV8uOBW8Qvst4BXSf0onT1/WkZrmW2csXfEfpL94H4qRf5Xla9iJ8++l
vQ60dzHt7ad8nPo2UN8OzWml/6P8l5T/nfQC5VtQ/mXKX0r5VdpP0Bwf2W/S
WXP+RZz/B+fv1Pos3zpk6Y43kYKcn4H8F9ma0d+cXM/BNPe6PtV7PdvyvFbV
ns+v+n7m+d2Tzm8deFae303pDO/Mt05VulTpIJdJN4/8ycpesywHr6W/66p6
DXJ7vnWy0sVK57dW43We333pHL+kL5civ66idYbNkX2mOY70qfT3dsrXqm5d
2VbSxjzP8TW31xj+Z57XSFobac9gU57XUFo7aU9hCPVfIh0751bR90v953r8
KXsVrtc9lP+U9jpLnysbHa5XA/rfkOu9nz4+Rfm7wI+Di+jvo+BbwHeC85I8
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
NKxrVZpzbeuMfPQ/8d5WLA==
          "]]}]}, {}, {}, {}, {}}, 
     {GrayLevel[0], Opacity[0.4], LineBox[CompressedData["
1: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
HWv0ea/spWjPtOwLxXd99JT4CfRivvfK2o3NdzN2WY/Kfx9/Xqa72P8z6171
fptzPj5VwJ3KHpdnEv2crX+F92UOxtfJbDyT30P2Avj1e/Z51F059waq4Abt
fNGYlsi+DQ7JnDl77fQJui37jsr3dP2k66HCj7G5Lt9yqOde128L/557B22F
22QfAxfld5NzUv42RUv+rsi3C/Tl1Ju5d+ZLrl/KHnfaik24RfwtytZU7y7p
f+IMvrybPafMTdi7A//l+yhcLd++nKenT+Ubg47yvaH/38QsfIzD2a2cczjj
MEn6HvkOy/c1OaehrbLHyfdntaWL65eyjytfuZyRy9sbZ7ke4/oZPJ39GXU+
mPkRbSR/Q5wpz1PSzlDPmbg848DHK7LmZnd39o0wXLuO0E+VcGS+LUAP7T+A
j8Ozxsg+pHbOUOYj+jwdx8ZH2b8WPkb5hVl742zhT5T9DJ9iLZ5LXH536q4n
fDyWynu1sqPz/qJnZT5It4hvQO8UP14bnsMacWvzfYu40/XJGdkP1p4m/Dod
TVE25y60HO0nvS8+kn+/7HXQOrkn2O3Gh5vTL9mbw238G4CPlX3OdWN5PpWn
aNafmcdk7qPsrRkj5eqzdxJOxGh1fZ/zraxTM6fJXnX2h8QVpG6cm3Mf8R3o
3KxXhGfittzn6rmd9sr8l/1D8LgyzfV/S7TIOa/7ojhdQ2/h481ZD/P3TeVW
K/+g8KzYyPMhfZe9AuHPcgbM37VsrsYa3Jk1ZfoqZ185z5VnO19Pyzeh9AUM
UXZr9sPp29Jn463MB13Pzrou34VgG4ZlfzZruMzVMm/LuiC/TfYGuX5Um1tI
+931zuz9Cv9GZ4l/LG3FOfK9pC9fwcv4FJtyZpb7zhg/L/0v+cYp8634Z3OG
yMZnfBxqbD50/aQ2j8ZT6CfvDSil3DFs1caxeDRz3pxF56xRvvuwlJ0P8g2A
/vsHrdk6THybzGuyPyf8cuau0h7n+020hzJF2D8Qj2jvqcamCU7LGa0xqpXz
WjpU/96T/eGUzbcRdGTuN7bPY+tKZXfn7Ej8KdpZPHtw2VOQ50C+92C/e9YT
uaddP6QND2Mk6osbiDdy9q9sVbTKvJrNU8Rvy3oR3dkepq6LaF2217O9AQOy
nufT39id86Pcx7QzfSXnfdnXzDpA3Eo6RpnqWb8p9wS9Ub/fhK6ZL7M/C29g
fPZVcr/THWxsz1lJ1rHyFs19jn7K1+LrDfRjfbxZeAseyFwrv+fML5XZoB0/
4EFt36tP9+HffBulb3/P91C0D/vXZv/d9bSchSl/nfBU4T50B7annHraqaMP
Wx+wuTfrOPp+3iviqrNREzUyZuLuxmXZL9S+Gfmd5TsPaWvFXaYvhqRv1HU3
vVncYfIfnr2OrKXV1wnnYXDWXtmbzlxIH9TJPFWe+Tkvpx9J+1Y/XCA8mRZj
ryj6sH0QnZfzS3afx/l8WGjsF2NR9paVHUfbsH1n1uoomnkkWwdmXpm5kzI3
CdfN+bbrIXyarx2t+dEG3wp/g8FsDOTTkDzPXH+Xc3/tWpXz4ewv4rKcP+Zs
gb6XtXHWyKgl7Xb+HkO3SHuTr7PTf+r+Rd078St2ZX8V/+VbEuUuwXw+/c23
ebRm9riUP4OtVspeo+6rQ+bk+c5IuBo+lec+ukj5hThT+TPwQ74l0CfrtKGR
9IZYrNzpbD8jXEF7bhA+h593q+Nc2jx7ctmbwNDsheifwjggc7T0hfJX0Fn6
4w18nXWAuK/os8rUzRw7e2fZa2FzeuYFOJJf3elC/bRM+BNUym9Fnsp0g7SX
tfcVXKytX+mXb/A1PtE/t+U5mO+xleuEX/M7VM8vdADfbsV9uBdnyltCfAV2
ThMuJLwfOqID6ng2/KueIzMvzryPfs+vMvzox5/DaNWs2eX5Ku+5fIukrcVw
EIZq52p2WuiHm/IsTL+7np1vxugrdDobe9k9hf6beUi+I8AIDFduUvZYaB31
Lc480PXvODNndtmrpW/krF14Us40pD0sbx/aTf59fPgPIzJ3yPcuqJdvYPRR
9XwDQ+/k6x2Yl7LGaG7qzDkC2+ew1VvZX4VPEt9QPxyYeWL2tOTZX5s7avu5
6ICTXd+tL4finqynxd2G17ShmbJH5pu6rIfZbCj+W/pd1rTsNco9QYuxe7n+
uSJnO+p8IXNp+mK+x8j6DBOU6cX/S3EJDma/TM466KPa8gg+UGZUvqnJOie+
Kt+ZrauVLSTcRPxy+SZkfut6ubQ9rv/BXlylnqszt8i3KNpSGZXQI2d5+rwn
rac9U/MtAN+P0Uej880E7ZHzDixgc1HOIzAt3+Hw50X6B/u/Y4V6v1F/WT6V
w+3K1s0ziS7Pdx7Ce/N+5uskNsZkrZZzHn7tzD6Kuo8QXwlHZk9HO6cZ02LC
xfMsxGP5Poo+Sn/MM1r5Hq4fdz1E+FE2v+DrTvXckzl4zmyFf8n+onArvJtz
/fxe+N4kZ8lowd/PtadkzinU+wKmZm/a9dS0E9OwETfnrELZGur9I2comY/y
ZUn2dPhxe+aT2Ju9Zlwl3z90duYo8o3O70u+Gfr/dczM+VvOC7NfyW4t4zBR
+t/ylc48Q3wp2jJrPr6Pzf6A6xeFD8o3RMr2ypkPznA9KnNSPJkzGXU+IP6U
rIHlPwmny/OEtKb5rgm9Mw5ZK9OO7O5S31+4X7vK66eKqIBjcZH275+5U874
s8+nna8p8yF9jj7LxofSvxKulT0vdhagWd5zyi7LHBtrMF7csvzu1H2ccF28
J+9Vyj4pXJSeyV59uln8ifQO8c/mPACr8kzK2bG4Jtn3R/l848mv03AqDmO/
fOa59PrsMeAD+Qty/k9r555g94LM6/K9l3aMwq1Z9+EjZcfnfS3PJ/IUFi6C
AzP3UfZmlFHuePZOQD2MyrkV/57MOULmNKkzayZx+7JXgvbGo6z4c3Ken2+L
hF/L2VHuc/UMoBfn+cF+cTzG17PynUr2hrEy9wVdRW/i4405r+DvG8qtUn64
8OvCPfM+00cnZW9K+FPhfvxdxeYKrMQdrkspXwal0UuebXw9Vf1T6GQMVnZL
9qPpm9LfwKzMB12/kXVI1h85s895dfY/s67NOlj6v2ipnjPZuyvfrWlzc2m/
Zh8ue6vCv2TfVfwj8j2K9vJN1ZcvYlreh9iY7+ly3+V7Pum78sxQ5pt880X/
zJqNj/fkex3Xj+fsDaNwvbx9cahyNdmqhaMzl86cV5lH8jyT7394j533xe3W
f3+jJVtlxLeis/ONmPCLmbtKeyzfCdCLlDmA/cJ4WHtPNjanoDF+MEZH0430
bv07JN85pKy+WpTzkdxv2VPMmlzZXVm7i2+sncXyG2G7lDxF+H4h+xegG051
/YA2jMCD+f1lbYfXtaWFslXQUvnNbDYWvyVrOnRj+z51XUjrsP1dzgdxa84i
+LQLf6Jj7mN6Hn2Jzy/mGZ91gLjP6VPKHJUzauUepzfo9/45A8+ZI/szszeK
Z5Ufosw4uo2NH7FMvV/kXso8Fdcrf3TW6/QjfbxReBPuz1wrv+fML5X5Pvtu
eCDPR336D/Zgsb79jS6i17B/ddYErl9ge232zYSnCF9Nt+HHlFVP28wz2HqP
zT2ul2RfB/dk34yNaqiaMRM3OHsu2ffUvum4O/tXOTMR11tfDErfqGswvSlr
uDwb8HTmm+rrgHMxKGsvLNcftfXBsZmnyjNPHzWgH0r7Jt8TCE+iB7JXGNey
XYTOFTeO3fHozIf5xn4B3sFVyj5LW7N9e/YXUCTzSLYK5z6iJyhzo3AdbfjJ
9WA+zdOOljkbxpfC63BX1hR8GpR7xPVXmVdp10p51mf+ikv5UjX7+vTdfNMq
vA41pd3G36NzjpB5HV9npf/UvUPdP+Mn/In12GfcemXPAnOzJubbHFpDmfuU
P52tlspepe4rQ+bkqJozMHwiz710gfLv4HTlm2IDHtcnX2hDA+knZc2gXFO2
n87epfb0E27HzyHqaE/PFrcteyI588m7Qv8UylkUeufZrvxl9HX9MRNfZh0g
bh0dq0ydzLGzr0hbZf83azsckXM/ukA/fST8MY7IbyXzHbpe2ova+xJ6ausX
+V4D67JfmDNVuizf4ivXET/nPlPPT/QWvt2M/2EozpD3EPHl2Tk15y/C/2Vv
gZ6D2vm2WD1HZF6ceR/9Lt8u86Mvf0rTKrlH5VmHW9gprK0HokjWx9q5ip3m
+qF/noU518m5oDJzs/dNX2VjD7uNs69C79ffD2QtgGHKTRR/f+6BzCszD3S9
E6fLWzL7e/T1zEGFJ+Dq7J3kXqYXyL+XD//iwezrafNxqIuv9NFR9OucqfD1
tpyLpmz2rejwnP3kXJOtS5X9WfhE8Q30Q5Hs+7B9iDyFtPkcbW+X9xEauR6k
L4dgcNbTOTfBdG04K99Uo5nyX7LZIOso+nV+w+w1zD1BD2K3t/65DFPVOSVz
aTpNWsWMR9b5yvTg/8XoiWLsl6bF6cPaMhJLlXki3xZknZMzc+U75RuH/F6F
TxP/mXzP6+sm2SeT9pfr3fgbV6jnShysTRW05QhURHd1rNLnF+XsUntekF6Q
tUzmruKfo92zn571OpvvYD5ekP9//JlKf2N/Jz7P+ZL6D+PT4RigbJ08k+hn
+eZaeA+e5OvEfOOStVrmBPz6Jfso+c5DfEVUQN/MyY1pEeEDMxfDw1mn0pF0
qzKDlL/I9SP5NkX4ETbXZt9DPYMzB88zT3gHWmY9iyW4MOtIvp+as1o05+9y
7SlBp6h3EiZnvz57NPkOEFPwA27KtxnKVs++pvSdaMqXxbnv+TEg80n8rf6/
cKV8u+mb0p+Qb1TWnPK9qv9fw/TsVaMMu0fm2xvjMEH67sxflCssviRtkTUf
35/Rls6upwkXzTdFyvbMngKaZv/V9eN4DI3UOTxr2/zm5a+PJpmTSTste+m4
JOOQe4N2yLmd+v7EsIyjfiqHsjgG3bW/UOZOOTPMPp92Ts9+Kh1Px7LxgfQv
hY/OO46d+ThL+P2cb+GDfG+Q+YG4j/O7U3edzM3xbs7TlB2VeQI9g716dJP4
E+jt2dfJmggrxK1En+zH6pPTUE57GvGrMU7O/Jb9cpnr0j5592f/V/7/ck5E
j809wW5XPtyYdZJ2PI6bM87xV9lxrhvJs0yeQsL744DMfZS9MWs25epkvyDP
iPS9ur7NvlTOUTKnwftZM4nbm70StDUeh+dskr6dvysQfhU35z5Xzy2ZyytT
lP2DMkfOmjP7PnnW4/P8DRFdQfvn24ic1/B3pnIrlR8mPCPz1OwXZC2Vvamc
xwj35e/nbH6G5bjddQnlD0VJXCzPj3w9Rf2T6EQMUnZzzp/p69JnYGbmg65n
ZO2RurEV92b/M+tafuyV/g9aZK3K3kB1PazNZ0v7yfX27K0K76Cv50w58+k8
g+WbrC9fwJS8B/NdgX6qkPvOGI+X/mfmWsp8nW+/6B9Zs2WeZmzez9pCmx/F
Y9kDlvc6lMyeLls1UB0PZc6rzEg6NHsIeJedpeJ26b+/sl/IVmnxLbLPqa4X
hKdm7irt0exb0O7KFGJ/f4zM+8DYNEJDrDdGNekGOlj/DsLClNVXC+iI3G/Z
U2Tr8szJhRuKP1k7D1JPe7YPzZkw37tmTxhdssZ3PUwbhuP+rEWztsNMbWmu
bGW0UP6HrE/Eb6Sb0JXte9V1Aa2dPZzsR+fMM88yPv2O33Bu7mPagU7j81Qs
zzog53x0tDLV8k2Eco/Rvvq9H87P/mD2RfFqzoGVH6zMWLqVjS34WL1rcx9l
npp9e+VrZr1OP9THG+J3zmsy18rvOfNLZb7Vju8wPOtBfbobf2Fh/j8YuoBe
xf6V2QNzPZntNTl3EZ4kfAXdii34Wz1t1HENW4vZ3O16IV2EIdmbYqMSjsyY
ibsLl2aek/ZljSxPRWmrxV2qLwamb9R1F70xYyZ/KYxRb1v1tUc73JW1Fz7L
mlkf1Mo8VZ65+uhE+oG0r/VDF+GJ9AD2CuEatvenc8SNZfdZdOLDHGM/D3Nx
pbJjaSu2B2R/AQfk/sm+QOaVtJ4y/XNGpg07XA/i01ztaJ59MaxJm3AnG3fw
aSD9IucgmKtdK+T5jh/foxdfqmRfny7J38oJr0V1aQP4W4NukjYz69T0X/bx
1L0d27An63z8m783zp4F3ubTX/n2hFZX5l7lm7LVQtkr1H15yJwclYUrYZk8
/6PzlZ+HJjnfxPqc/eUcWRtOlF4fC5VrwvYY4XLa01e4DT8Hq6MtbSZua56B
uDv7GfL/h324JM92eimdoT9ewxdZB+TMmz6jTO3MsbNPkjPPnIm6Pj7zEbpC
H1WmB7s+BOe5RzuiU/62tYR3TWHzvkL///8i/R87ZIUf
       "]]}}], 
   GraphicsComplexBox[CompressedData["
1:eJx0vXucjOX/+D+p90oZxFLNSnTQUFEylORSI5WkIUXKkBCNQzbSSFExpJTD
lFJkRI41zoVBrOM4tI7juHbXztozButsf96fx/V8Xb/H/X58/9rHc+977sN1
eJ2v667TY2CHXuVsNtvbnWy2//69dcGCSqFnh7fg78btD7Qfm1il4HZpdw4c
k4gKd52wq0vctU+4mrrjeiBxWP2/rmP9y/VgrgdzPTheOs8TjGWq/9dzWa9r
/cv1Ya4Pc/3/13tan9N6Xetfrg9zfbhlu5fvi7ty1P+rHa3tYH1u632sf7kf
zP2s/WRtV2s7WJ/bel3Y+pf7wT/PLjrrCp4U5v6cx/1h7m9tJ+t7WO8DW/9y
f5j783/uD3N/mPvD3N/6Xtb7wNa/pVfHbwokCoQL3mo7L5C4LPxj+XuqhkNX
hVsvLR4W81wXPuNde6KsrEyY9+G6vA/M+8C8D8z7wLwPzPtYnxu2/m30R4Wk
uOuccGbnwwPs8fPC396yIOYKXhBuvuiTll73JWHaA6Y9YNoDpj1g2qN9x4ZT
Yp4SaQ+Y9oBpD5j2gGkPmPaAaQ+Y54Ctf0fd9NS0SCAhTHvBtBdMe8G0F0x7
wbQXTHvBtBc84Icl/8Y8GSp8tEX1cYn5atLMYSsjgWxV7qlHvwrG0lXJpZSv
7fG4nPdi+zVve9358v9qSTmDE47L8v9Zc70NwqEi+ftWp9Buj/es8F9/Pvdb
KFIq5/fqUq1i1HdRmPeDaS9+z3PQzzwv/SrPpfuR69BvXMc6HjnvjwXpfZzh
M6Y9D9zyZcKRUMOub+7h9herGzetabNlqlHXU6eNT0xVfS9mF3u8J9Q8x8qW
Bz271MZXR60LRXLVPwVZvcOho+reOQ9OTDgK1J2zlr7ht8eV80i4izN8SaVe
6eiM+vLkujs7lF5yRAuVc/6U7T7nKfnL/WGen+ez/o7rwbQ/53/wSP+/Aglz
vdZf7C90RM/+z+/5y++s/7c+B7+nv+D1i5cdc0SvSPvCzJuBXUe3dvuvyXGY
4zUrvBH2OcvkOMzxCjenNvPbz8vzwPQv4+XH5P3b466NMp/hSNuqo53hLPXM
micuB2P/CJ/1fTStSXCLzIe/Tw58pEkwJuMIpl9va/5rmj2+X7j35Jbfe92H
ZDxyHZ4bZhxwX5hxxXvzl/eC6X9+BzPuHs+o830ocl3GZVLjcdtcwTJhz+gX
6gZjF+X3yAHaExb5pcc9/Vvpnuw/cl3LzHjV7crvYX5PO3M+7Qwzr2HkENeD
uR7zjvMX5Vw7EwnsEaaf+D3M7+k3zqffYMaPVf7we+a5tIeWDzD9zO9hfk+/
cz79DjN++D3M70Wu6PPpV9gql2F+T79zPuMGZj5xfq2Dz9QOh87J8XOP/t7R
7T8vjHy3ynt+v+PLSl/FPKVy/sxDH63xOS8Iow/4PSxyqOHxM2Vl5nzGL4w+
4vewyCktfzn/+mN3fRcJXP4fecXvYX5/IDAyzeO9IucvPJp3Icd1VRj5xe9h
mT+N2j/it1+T87uMXdndHjeMfOP3ML9nPnM+89k6XrF7GI/MU+QfzHGr/scu
Yjwyr5B/MMet9oL4F3o8ch/kH8xxq33BeYxHzhM7VzPHuS/tyXHsH5jxyHUY
v1yH8QlvGPlLO6/7jLQv9gF6EOY49hjvwfhinmHv0b/oX+Q29hu/Z3zxe96H
47wvx7HvOM744Dj2Jffn/bk//YKcpn+Rk7Qjcot24vrMZ/5Pe8PS73p8cn3x
t/X1GT/8jvGAfcj9uA7tjx0Ic12RD9ouhLkPzPiGuS/MuIHpT5j2hbEvYZ7f
Ol5Ef+r+F/tM9zdM/1qZdmP+oleZF+g1xgXtjnykPRkXtDv2I+OD97POD+RT
ep2M973uLNV38Jcjmgb/Uo/4RzQPh3JUoFnvuu29e1UgvXYlmy1PXd4+pEnU
l6myH9pw3OMtVIuG/X3I57zRvyPeXRyKlKje9a4Mt8eNnWm1Z0Vf6/O+2zvp
Rb+9WOQt7YH8tI5b7BL0J3YB7UA78t60G3LSau9Y7RWr/WGVz1b7wKrvrfrb
qo+t+taqP6360KrfrPrKqn9g+mnpppZHv48tUh3vv/PWlOgJdejb79c4w7ul
354vctzSz3lc3bbnzQWRQIE69IBndsyTq94YcO6ThKNUNR5+5iNnOF89+cOK
t9z+M9Jvn+38c28gka1m3PlCUjf3Nvld8/y52xKOw/I77js25frnMc9lGUf0
O/dFXjJv5wxt/WvCka0K+tzy7prABuHW/8xuXCm+SZX79+QHbn9cZU0sfzEU
OSD83TMHu0d9B1XXul89F4zlye9gnvvvT+snx11F8n+Y50Ye0o/3rS8YYo+f
UdX+O2yCN+zFoloTYp6EMOOfv0227CooK7si7Xxfotx/or6rws/95PwhEjDt
i/6C8ffQVzDzKvfZMRt9zrPy3PQPz8NxOL3f6gxX0PDlGq/ND0US8nue2+oX
8n/O5/eRKaculpWZ6+E/wthbzEuY/sWe4jjM8csv+J7yuq9Je2G/Mq9h5Hqw
uNOjwdg5GU/oB/Qh8u3e+zffd8iz1uhBzegP9CXyr3Fuk+/8duMfwjwn12Fc
cx/eC+Y5+T/yk9/xXnCle5reG4yZ8XLg9T6Ng7HT0i9tfV8867efkf6BaX/s
Gxj5wnNgj6MPYMY7+oznZfzyfDDtgHzi/La/TE13Ba/I+cgrjtO/HEc+0g70
J+1EOyIPYPqX/kIewPQn90EewPQf90EewDwv/grtRXvC6Av0DPYKjL+JH366
1aXrOa6Lcj/eV+anlt8XH706KM81S+Towyc2drTZ0mVcTGnZ5me3/5iMe+Tg
kk3fv+L2X5L3nH5623v2uGHkOPP/FsemHEf0gjzP3A33V4v6zPPQ3thttC92
Gtdl3tF+1vg4z419xf2wx7gf9gJMv6G3eU/anetI3Ee/l9Ue5/7E57j+kuCn
awOJErW570uzIoESNebbnytHfaVqbe9YX7ffyGOui/3E7zkO4x+IfNTyjfu3
bnpxqNt/Q04MPb9yUSiiZn7700vBWI56cXW5IeHQPnU13iwl7spTXSpu7Oq3
Z6nOzxwtcgULVZXVSTelRE/KfOW98Y/pB+SjyGMtP5AXv599emYgcV30NnaC
PL/WszB2A4yehbEjYPSs/F7fB0bPyfW0PSC/v+ubF7zu88KPbHx7USBRKnx4
4KN3h0MXhbEvYPQvnJP662vO8DXhibU+iHi8Zf8z35ivzDfsQvoNO5D5Zo2n
W+cX+hrmfo16PDLJHs9Svd/bvslm+0d9s3Lnu153XN17h2+e279f5VUZ6AqH
8mScPNenSnmbrUjGBc9Puw5/adYBR9Qwdjz3w06DsevFftF2m7U9YNoDpj1g
2gN+3/3PO86w6b+7Tk2IerwXhDdPfecJv/2S8ODWjX4JRUz/oV9E/kzb2z/h
uC7M+8L4UzD60JrHYZz9Xzc7SpRj7cdPB2MmXkP7oY+4HnKNefJB1nfucChT
3dY4M/ew50+xH5gn0Scfr26z5aiSd9/5zeveLXKQeVJ3wp5cj/ek6rI+Nz8U
yRC9zP1Hnvzw71CkQPWs3OTHhCNXDZ05fETCcU6NLYgnHNFT6qbxPVLt8bPC
6FvukzTnoU7O8BW5z8SJ9jZu//+Pu59fFUicFnmHP4u+oz8YzzDXR16jr7EH
kfv0B+/D/GXew8hn2tlqT0r+Rtvb9B/M/EJP8nvsBLjhc0f+CCbGCaNHYewG
GL1q1T8w+gdGDsPoCRh7H0b/w+hnGb+6P2U+ansJRn7DyCXsC8YZ742+o/2m
r1t80OM1eg+9IP6Njvfwe/pV5q8eN7fkL3zd6zb5Jo4Tn2JcI8+RE8wvmOfm
99jl8NUBebFwaIfRH9oOl/4O+hulRI/8j70i+kPbKyL/9LiG8Xdh7CGxD7Q9
BXcf1HuFz2n6B3td/KOt5cdGAqZ/0OPdB93x/NrAErXi3V4No74ctXHltljC
sUf0+mN3vlqrSfC46ld17h6fs1C1a/b+kkggV+wJ+oH4JO+BPOB3Uo+i7y/1
KIxX6lGYd9SjWOQdLHUcmqWuQrPUJWgm3gRj74m+0fE06T8tf2DsRbFHdDwN
fi1rYoW4KyHyG7sPuwW9jJ2CnMEuQW4gjyTvoK+Pvc/vsDeY59j/MMet+Th5
H223ivzQdoXIC23HWuczzPvBYndotspR4ktW/0/6W9srMP4bjL8Gox+t16f9
rv62vGY4ZOxl5B3MfGG8woyjlOFnm3vdRj/hfzDeYcbZuzsX/RQJnBM92b1l
u4fCodP/Y+/KfNXHrfl55BbxHew0GP2DPYRdxfyAmd+RrUtqVI4vF3sJO4v5
AzP/f67cqOKYxB6xp7iPxEE0Ix9GrXirXtyVKXKT39EuMHKgWa/pOwKJXJl/
+KvYY/QfzDgi/sXxk7vym/jtF6Q/0S/oXRg5bq1DoF35a/0/9iLvhf6AyZ8x
v2Cpt9LykfvCzGviX+hl2ovj2DH8tf4/deW/9YIxM54Z/zDxLcY345l+wx9j
PDN+6SfsGdqD8Qmj7+lf7C3eB3mBXGF8wsQ5yLsjT/gd4xMm3kXcAnnDX9od
pl+kjkI/N3YF8oPzeB/ai/oB2t06jmBr/Yy1Dsfqb1nz35yP/QrTnthHnM/1
kD8crzm++8KYJ1utX9tvSntvmvDA95+xDbNvUh/n3PSZMxxXOyJPV+3njAnP
qjqrtc12UO15+rdX/fZ8+R1869/BzaFItmowuVWdqK9I/g8z3hIz3Nmu4Bmx
//us6HrKETUs9an4f22TX/a6jb9Qo0eDzm6/Yeavtc7U6t9Y/Rmr/4K/Qruj
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
3n3vfFmZGb93+D8vF3eZ/nyp8pNeZ9jM13UPdPDZ44YvrLp1i8dr+rd/+n37
XEHDs3sfaui3m/6mXgsmnwfj38DEI2HyFaKfdJ5B9I32+0Xe6LyC2Afaz4ex
j2HsX2kfbd/KfNJ2BEz9LYy9DlN/CxOfg6m/tY53GLtf5KvOy8rvdV0HTJ4W
xu6H8Q9g7HwY+17Gr7brYfwNmHpXq/0l8lTXu8LUu4q9oevVRB8NT7zp9ifE
zv+nw4WjruA5telo7uPhUIHYG9RPjWz9+MpA4oxqk3Hvvz5nsbrw1emmwViJ
WlBrQKkjWqzeXuHd4wpelnj674/0fTglelw9frBtlXWJ96VeBrmAPHBV6Jjv
ChYL44+Rb8aOwR/k93lXv50bipyVuGyz9muV356QfHuDxE33hUNn1bRGr/Z2
+wvV0Wl7xsU859XhxUvujLtMvhD9sCC381rf3FL1+4GbZ8Q8+aJPyOt//Yjv
jMebpSbVSnn5t8gKdfLLimmhSI6q8mDbu/s596pn/7uswJGn1Pq8cMyTKfc9
P/Dh1/x2E0f2T/7xtrOuUZIftOYDkRtDO/16e0o0S724s2tJK/8atefPlsd8
zrham17zi2Bsn3o0KfvPSCBP4thju3450h4vlLj19ynXpkcCZ6R9sReRo9wX
uUg7I+eGdx31rjNsxgPxDxi73Zn3XnI393r1wsYuBR5vXI1svzI94Tggdjzv
ce2/aRNHkTw37XT89eSBGZ7p6tt3+xx0RK+rYMNjD0d9ueKHdvl+kKOVf5Pk
pR3Ota/FXQfFL03bUOeVYCxb8t7+QT1Pu4L5Eu+X+bq6fI4reFryzx+n1znj
iJ6WcSfr7vT55IFg1kmJfNFxOZEnuk4fJq4Ns44KJm4HU9cPE+eGqWeEievB
xEPkfXV8Ve6v4yMir3XcDyZeIvJMx0/l+XS8ROxTHd+U++t8vNgvOp4FY4/B
rBeCWW8As34Ipr4Hpt5L7EudT4Gph4TJn8DEJ8Ve0usPYfIpzJOf7hr3uTN8
QgWfL+4yM7JL5nUT29UPg7Gj6tUtOx6I+gpkniIXmZf4h1yf9X74N9Tdc5y4
OUycS/SdjpPL++q4Fyz7VGjGv4XxZ2HkLUy9FIx8glk/B7O+0dp+1veFqafA
Xmddlryf9pth4u1i3+n1VGJv6boAGc96PZXMV10HIM+n4/0yPnW8X9pbx4Fh
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
skggrj5buau1316iatw8qJPXbfI92BnnN348PpZ+VkWnlFSPu0w+lOddHN25
KLCkVF2Y3P26o42xKy93vP9sMLZR8ij55e/8xx6Pid6Z36jdl85wtuRpumdN
qBv15au68XvrhOuckzwycfu+OeXecftLZH0J44j4NvKOeR5ou/7XXFdEDa53
+aeEI67GLxpSEgnsk3l/LfCpw2bLUvUPNn8mGCtUS13/rAlFTqrQidwvE1PP
iDxjvSvyYN/ReLtgLEvd1u5y898ia1XDxmNqx11xdep0WvV+zv1q3NfOhCto
xmk8e1taIFEo45J+m37t8zqt/OulH55+u3WnuOuA9CP3oV+47lTXhi9jnkui
L1pk1F4SSJj5zn5q9A/1nzDxEJj97GD2V4EZDzDrjZm3HSs3/cQeL1Eb/3z2
n0CiWFV9+yVbk+ANefBlz9+H22fL/nX8nngu+pX4C/5oJU/yubJ1peqnSo7V
oeambov6UvQDfhFyhjgG8Vzs22Vnm63zOUtF7t5X/65n/OON/mF/P54P/w6m
rgO7Bsb/I76L/U+8B3vosRE9g5GAyTd/dzJ1fyCRpbJ+6zGoaXCdKmiRPCfm
iaueSRn3tffuV8//sPxjZzhP5PaM4jfa+O1FIqfxy8hvw/iT+FnjUuZVqR9e
LEy8CD3ablY4ao/vFiY+hJxbdZPrjvbe48L4qdg91MXBxH/w82kv4nfEPxf9
+5/kaOFZVWn8O98lHIWSV3u88FC7g57Nwqx7oE7rltcS/cOhg8KsayCuT90e
TF0idTjMD5jxwfoCxjPxGOQU8R/GA/EF8R90/ET2+9LxSI4TP4CHVZ1zyuPN
Vm3ndRjXz5mmDvR9cX0oEld3LPnza789ph5bnz8p4cgXPfDNXV/3dPuLRO5j
92V99WLKQGdYmH0SqM+ZN6CkXnvvbmH2QcCOq77jww+CsQxh9jlA7q4PDj/i
c+YKU4eNXT3Uve4ze7xImPqoKo6NN9lsp0SvDLi+5Xmv28w/9Cx6+JfLTzUI
djonftDO3gcCznCm+rShq/LsyO8Sr2G8s56S8U0dHOOZODzjl3HHeOX+2K3o
ga1TK27Y7lukOmfUKvJ4c1StUbc2bRLcLXphXNb4T/324zJuh/9aoYfXnSt6
qVG7tv+x2Yol34R869nzyz2ejITM4/oVXt/h8Zr2gMl/Yf9gL8Pkq/FvsRNh
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
2ClHJZ1r3D/q261uOVuzZnz5SZXaftVSezxDdW+zttiVXKg+iN37qbNhrkrf
nzc71Nzsv8G6GfY/HNYjstmXd0a1qNGkwJVcrN7Yk3/cMe6yapP33feJqSfV
2kjz84HEcdX0sWpT+5xto8Y3/6dyfHmJqvfs+7fYRhbL/obkv52VxjcMTjmr
Jr7f63N7L1PPv/Hg48P7ObdLPf+ul6aP8tuPiJxin56P/JUH2WefUyuTr7X1
jy9QH5zrNCKWfkX242N9TZ/PJ8xPiW4RJk/Heps603emtPceEiZPxvqbzZ/W
ezzqOyFMnoq6ONoLJn7P/GO/L/IPyFf28yKOz35c1v1/rPtnYRd+0Xx9omyE
qUdifx3WKcHkR9m/Z/rpwaXd3IuF2e+K/XyCP93XKiW6W5j9rtjfx3Zhzjiv
+7gw+12xDwz6D6Yuj/2t+D/7uUT2r3v2rGOzMPWi7O/S5sVeJyOBg8LUh7Lu
jHVcMHWD1IWxjgsmL39m7WRXtDBTlXqTb5od+VO1reEqn9ImR7XNn5Mb8+xW
c/ofOOibe1L93frRR1OiGarcpqHzI0mFqmqHQ0+F6+SKvN1qq3nMk1EkLPv0
DK/UNNjplCpcn/SaN61EfbJ5cf1gJ1Mfxr6KzAf2J+I52Q8GeTH14Q5rPBnG
vtjT4+W7wnUuyX5nQ47dst+VbHjqjmDEN/eCxK/5Hh7X4/t38KpQt3WB1BJV
N9CjdrSwSNZ3cHz4PL8zvjxTtVy0u+vNtrnqgC3lsis5Rw2erJa4/emqUefI
9kDqSZV5euPFQOKY+ibcdVos/YZef2j2vfHlcZWXVDbA2bBEHdt/ckMgtUhd
mVs8InH4rEp5/eXBzoaFIueG1but/z1Nesr+FcSpmYeLbu79Q5PgdpHL7m5/
T/S6j8g8ZNxitzHeiI8xX4gXMG42/Ndcn3rD70/9fFGo+Q1/f8TnHZ0Njfxv
W+71YfZeN/yUF175IZZeok4PPbDXUysh/f/R3mClcMisj6Q+ReIH7fpu8s1N
yD6FjnuaNPfbjT6ZdqDLjCmxGXI+370Rf0XXN2BvUB+B/dT2if4VooWXZN8i
5hvX5/uo1vWC2B9P50342N7rtMgd6pc4n/XcxG1Y78Xz8X1F2T9Ix+fJv/E9
KY6PPHZzwtHmtNiT5DG3NR7ebU1go5rWfN0j0cK4Sh/qLg1FYmK3T3+/5/TE
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
x6t0c5vvl/NdOPIIA5qe35VwmO+ZM88zbh7fOFwnX+K0zC/mC3kH4rCs78be
H7Kw6Hn/+BL188/DHw3XKVYVXn2vzJWcpZKTvrv5ef9i1ev3W3cHUnPUmVp9
xwRju9W6a/NmxtJPqq7DS3bGPMdlXUa86Klx9l65sp6FdV0Lt9WORJKyVItF
df9dFFqkytfZMN7eK0cNr/DqsHBot+rx8bvdvGknVV7vff8kHMfVmn9veTxc
p1DVz154c0qbXHXXQ7+Xs40sUZkTTv0eSTL74dOe1Ouy7v3tVx6/PVpovscL
oy/Zr4Tjf11u2seblq0+ymy7Ne7aLHbMnJ0L6jcJHlT95w273TYyX437/se/
I0knxK5p2erIW940E3f+evldf6ZEN0kepdHfE+9p7z0oceh/x93eKFqYLXVz
o59qt983N1++V0jcGMbv/nx+3XvC75j9wSa+taaTe6WJF1XY/na5aOE1mYd9
FxY7g52MfITZr7pG/btrBzuZesYPw93etfcyfP78hJrBTsa/+P/IOvPwGK/3
jY9aqx1UU9oJKooOWlE1sTR1WoO2sXSo2o1dtRNbLDWqKDVIUcvYYqmxpqgh
dsZOMJYGYSIikshESGQZCaIhP/1d8zmnl+9frttkkpn3Pe85z3M/93M/H1bp
Ot5YlCbem1vzo0reM2L2dw/b23tkiCnvBfR3W26IO0fsb3v3vFhHxy5csUXc
kX1/jUZVnqAPvi8e+WqWlExV/Bd52fWu65oNNa4Qnxk+bmqvrvpjiMPxbZu+
csrD9D2q3kpfcLOyf3z8UKf6ncumdEtx2VS/M75wxP0v9yeDqXNIPdafXSPD
9SclznjQ5aZPF6f6R0uHZ3pMClMHAb8Rs/03q9YjcdcOnqAQ+y2JzwzIbxzo
Vpg6iey38eu55Ofr1ni3y+aVGH2X7Mfy11HA3HdZz/TzqpKf9vOqYPgNcOeB
VX/yRSm8ZtaqtY5QxT8Xv37nji5MYfqJpB51/66OxiKFnyZ/GuGLUvwz8Tg4
OrLSTV2Y4p/LVfm2lr2Hwt+G3DYai55LHHOo3ixXOcVHk/dKPt2vmwOzD50/
9N5xW8QDiYnPmfcBfwyfDK/PPDw5X97//eifYj4euPwYzxB9rno+6d9dXv7s
2lIa1b/btf++7Uar6t+lL5b+3be0qTW9ezLk+9Gp8n50qbwfHpb3E1+z77QY
eK9aW+sZua9WqPS0i9dwQ+5DB/eIjvYed+Q+O3rI9FxDwH2xt/roH7RDVXzf
a1GD9+09FCYenh6zaew6l4qHt+3tOc3uUfEwcTfxMHE28wPIP5kf83J8T514
0+/tW5tnqH7iJx3Xr3JMVhhem/lm8N/MNyMvxgcb/pt8mnVCXRm+Ep6UfjTi
Mte/8tYFL56rCrGTtPVy5ffsvLdi2/WugzK/0Lw2u3q4XuUX1LnJL6hr8/eJ
d7gvi/dHZto9brku9h5wH9R6E+V9ok7O55nW4fsa7kZqfhn+oOis8Qfle9NX
h+4a/v/a2P2z9MEpIunB1mqHHXNF4uY2L8KWXNkHyTwizif0OcR9+MtQBwXD
I6Pvgj9l3q/08/Zj+Dj8YMhvwdSj0IeRb3Yoe3aZI1TpGfCfwieLegCY/ThS
v/eTSt7j0o8K3yvifjD7884xA4a4LddlnyR/R86B8mP269/vRlyz+VJlnsD7
yCPA7N/oQ+jPJN4Hk/fgf4GOl34EeBX0MWDmQ8KL8fPovvDXYC4p/UzsL/ir
EfeDyRvg0/Zl9LhpSn4geVH4X/So8LvwpMQJ6E0556svuHrOos/7H70X64H+
B3gpMHwP813hx6smtC7ttqj1Aub70Q9NXoZ+CIyfCHkc/bz4szRc+35Z7x41
XxWM7g++DZ9Q6hfg/QsrOny6VNFxVbv+s30xko/DF5T6Bjjg3tYIozVdTD3V
3ew1XJF8HT6g8Mxgzq2soKQNeudted24n9RHwO5lOW95DVky3kQ/g48p/DOY
+vuiRvoJs3yxUl+Dbyn8NJh6vGHsilKzfEp/Q14Kfw0mjyGPRZ9DHgm/DeZc
J+/k/pKnVyvSLPTE5cs+Ivrf6UcCUxeAnyDuwu8OHzTqBWCe+6TJ3itewzHp
f4dvGfUE8P3WAZs9Jq9IDHwSHGK/JnVg+IxRbwCzT2xwtT7ksqVKHT75EfUI
MDwZ+RB6enQq8IPU18DU/eBn8SmlfgPmc7zSYfYrDZ0H1JxIv68o9RtwyZsp
c7XedPHh6PfPaL2K38UHlDwOzOdm7ir8L76d3CfwnhN1mjgdWVLvRD8nz0nF
olLjfFFK7wZG34m+nb/D/Ff2KTA6WfTP3Kef72dcM9iVng9MfZr+LvgrMHwV
/jfwTsTr1CPAPDePjn7W0L5M1SvHTfki3pSs1jeY+43/DX1ZYPgr/OA4z8Gc
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
V5cO520xd8WwOXGXPHHJosKf2as8VV7cl4dbIrX1MqT/JPfrya/7401r8mVd
bdOzrcO1QxVfNOSDkVEOl+L36eeR+ZJ/fwLjbwi/zHxjmU/66xaTzxXVbGs9
Kf2+GraZ/q3X4JF1DM5R/Lw4N3fPvGZ3tVd6V+aaRf6yv5EzSM2ZYf2at+/q
Yp6RK079G45VyRWarTGnHaF3RNOJoce9Brfo/Uq3Zb6oDGFb8d77IfZEsbdX
4XBj0T1h/Sl+r6tcutSHpnd4HOmLeiDKbut/0JL5RK4z5oHxfO/XajbYfCoe
ORXuOm4yq3rPlzsm9TNa1f4R3/NmF71T1QPxjZb53eIWP8/yKb+mtU+SB3oN
Kj/rvjmo7Cyf8mN6vfuQaL1T+S3Bz4Ph58Hw82D4ecmv+PlCcCe3aGM2qv0c
PyBZ3whKfdPpUPs5/pdg/L7k33syX7/Ss0DirtXT/kkvLJK+a/Qvc30rXLtw
1mRW9d6vc8Y9KJmq6sMJU661sXbKk/U0dAo7NkQv6WI+JdqvfHDTkukVp5y9
3giP9sg8aLktd6tnQZoo/qrJVO3GbNHZ0PRra6d74pWPRm4baPxTfr6+sytP
iXFsk5i+J1m/Ea9mOB0qn5773puTnQ51vyZ2/mKpVavOZ/qiwI2fzWkZ6Fb4
ybTlJ3w6dV6nb72Q5LIpTN+UvD9+PZnk1/z9cvL++PVlYHSbYPRmkn+jr8OP
0Z/J7+/Xa0p+yN9fK+MTv34MjF8vmPsJxr8ejF80GH2vjHf8+5OMX5r/U9vu
URh/EzD92ZLf8ffjy3hn/ipfukFh/Hvgt88OeeNza6d86e9SMPhRe2PLZ/Lc
Lhwwo4Fz4Iv7OjhhvSs2R9Sq+7HXEp0iDm5ffqy9daPcV4xjl9cK18fJOM8Z
V3Oo03FL7lvw/Oxr8PrkDX/XbLAn0K3qAd2y3wnqYlb1AM453se5tj/13Yna
jXnyHGIeBPoB/Gw43/AL43qQ/4Af9ekQa9ErvGNYQkezUWHOGzDxt+T//P1I
8n7hZ/vSeSL3syuZxSVH8+X84WNdHycZ7P9Zf37+/7qtUdf1LsX/1xFVAsP1
iv+fv2rJQKdD8f/PJmu7Wecp/t9Te2Wu3aP4/4QHXY9ovYr/X1cvfLo+WPH/
6BtaN6z2o7EoVQRF9Oz4UHdMLP9l35f2Hl4xeenObJftmihI6Knz7smUcUzn
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
Uep6HO0R/Jn1otpvR5TW/OmYrPbXFWtyw4xFal44mOc7Txxf6Sh+Kusj4bX0
6xx91fkGLwn/iB4N3hJfM/TjxOURv77itXsuyDh/4x/lDmi9N2Wcztwj/N/R
l+P/jr4c/3d0lfDM6Mups6AnR8+Efpw6C7wgeiV4vl2/t+tjPKD4YO6H5Jt+
+O4LY5GKh8DE03+/1nK5o7hYxmvsl+wf4WOGXjWZ1e+L7Hyzu7FlgbjfbEOK
KVnNH4BfRj+F33O3pF6bHMXKDwPMdUTvhX4SfRf6SeIC9JOsI/STrBfidOYt
8PnRZ/O8T/4mYLUjVOkB4K/A8OXwFugFiD+oK3c/MHlKDfdRqYc58VvdYW6L
0sMwBxo9DPoI9J30gQ87UmG0L7FYNF69+64pOUPytujz4aXR58Pbos+HN+f6
UiddW7HVzUlapa8JSPnmmcOl9DX0SaOv4bxBZ4je5Kfj1jOmWkUyL8r9q36s
KVnNSxw+uPYRy1ml52UeE88v85jAzF+S9XN//QWMHyN5xo1bi4zmGape/DKv
wL9SL/D/7Xy5wte8WqA7K1e8Me6rPxzFT+T179m/Y1f9qOcyX2aeCD4K4fVn
97dqVf2cOJ48G39s/t7mM30maDeq78fzCP527Ae3Dd3U9xv4SbVTluEKPx/+
4RlLtPp56qlgzgNwxai2Y7VD/9Nv/dVHg/SjCqWPCfof9v+6rpiq7q0F4kDA
s47Wefdl/yiYOeQVNNtahVlXi9LDDv7pibsjbrQaEO90XJJ9bgmT9jQJdCfJ
91G3ou+MOpX+pPOQq32qEJ/O+fyIbbf4VddlnnZjunBtu3vdF3VFJI/xmc2l
X+QhM/dWCqyYIlqdW9zEOTBLuD8u2umKzZB9UtPSPvnWPOOBWPWlKC551ydO
1Nh83xCfLefJy/n0foxvj2ZI4WD9qALpu7B90/Ky3vEK4xvP/cNXGYxPPBgf
ZTC+8GDpr4Mey88zgPHXkevF768j99OU8R/Yeyh+vsXc9ktc5R5LnNG8+vP0
PYp/t9+5O0w7VPHt+AeA81rNaWE+qfj01Rm9HLYIxZ//bMsfo62n+klO/DQk
S1dRYeZj8PP0ccr87Zv73yaYlH4bnxRw/P2WSUb7LKV/Cn3cYp1nmsQpO0at
CnT/rfSWMz+Z3sWscP1Zk8Y4HUr/je8KOMlwOKCLWdVfvqu9vny4XmH8xsH4
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
JC+WPGf13BrufVJPmX502/duy1XJi+GzTtyJPwjPs71FSvAR2xH5vC6y/HzF
p7smn8epQ355PTAsVeX9b55yusplynmQ3Ff266QHW6sddswV4c3ebmEu/Vw8
m6ztZp2XIQKmz99tW1QgRn7yVqppzX3JWzA3HX8/+AD8/cj38fcjn0e3R/xK
foHeD39xeLL7YfYJ2pn5Ivm76cs9Cx7I/mTiM/xMWB/D9/bL1bkVJl6V8wX8
8+okjn3PZcl8LJZ+U9Vjic4UT98I/MI8Q+lrbI/PXjcEPJG8Jv7bYPqHue70
CxPfjHtLp/UalP8/dZxpXz19eNS2XcZ1qzeVaRcYdlnWbV4tE/mb+WSy/J74
MpG3sd5+/q3BNZNZfV/06C/Pi3x5PuTL8yBfnv/IvEf6mcnP6FcmH6MfmfyL
fmPyLeJB9I1lRrxSzX3eJ7r9my7XyhaJ44ZO9iUWSh6FOYMDxrzR7ogtRpxo
9HWAZlq6OHXgnMenuyLnDnJu08fDOYxug/gJnSXxEToNznV0dJzT/dJLtzUb
lR6b+R3w4czvgP9mfgfPNfM7eI7pi0cfDF8S+cv+Rs6gHDl/A3028zfQXzN/
A3018zfY/2p/vaO45Ha+aPt0S5Kp1gOx6cnYsu5GxdJv6snFmcL6oU8MXTZg
sys2W8w9UvaMY3KaOGUd99Ms30mR+dbm5b5Er+gcJcrMivBIH6lbPw2q5x2f
JtacuveJfVm2nB+Y5th8wzDukZy/GKm5PtszWuGOywaN8PVW8zLoZ8GnKGRl
zovbmiNOe7Zfsgx/IPulyT/cn34/0dgyVXx3t7a2oXOXqL+kYph9Wbpov+zi
Oe3QK2Ja9tZAb+GLfb+ga5UuybdFkrHTA0O3LFG5QXgj99YMMfFey1RLZpqo
ffmtTgmmM+LqZzdjXO0zRHG7KiOcQTdE4+WTf9VuvCd2X3b3sna6I+bk1uxu
Lv1A/DBN+0xX8b7Ug6PDqvi8pccQ/1jeZ8fiy9s8VdLED3Wu/hliPyaK70dM
0Y/yirU5I1eaT14TPdoEmKwXM0X5+k/zTGtSRcyKPUHuRtnicHyo3dc7U+wd
vnqRdmOqqLl08I7zloPijWOth5hLe0VBmzVNQwLiRXj1FINzYKZoErfQ5YpN
EWdG/lJecyxLZEyJ72+ecVfy03K+h59/lvNB/Pm4PC/9fDO4/58/5ejCFJ/8
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
uXt1IiIaaAYHDnx84kqmpurXfjak88MG5R15vtuFEfJIgeAFz3d7tOHacWkl
5bsdLHRYKu1n5Hl7smJdilbzlDPmv5C/1zQxvbe9+3vOmPdCHt+DQ9cGan3S
OWOOCvl8qB/AmC9CHibmTZFnCX8QMOYikZe5KC525jbzZc6Y70J+5rb4vtNN
UfGcMc+FPM3SrvfCxN2+cMbcFXSmyFkGY64K+Zqnh+Wt2Gp+whnzTMjbHLh+
dc2t/kmcMb+E/E3kOoMxr4Q8TuQ6gzGfVNr91SVDUQp7MnDhwljFJSbb5rde
PM7I3Gr3LNW5xbPzX2w8lRczWeTMm/0FD5KZVZ/INvp6ucwm5dgDjUMGm7Fz
fJloQQGL2Zk6S/o+j630WnFF5VnOc5RPZDlmShIK2IioyAeqyF/f28Ct9vqI
X+v2jE0dtD6/1h/rHx5quxTmEhDY54UmkKlSkwYpFxbz3++1/dAJ8+RUtuIt
O1pDcJ2FpPX3l94yMnfPdxellW/Y/8WG2GWxT95dVkn7pTC33WuamgJy2R6r
xS1NZRk83/1l4SZpiegJZ8yHIe99/IThWTqrJM6YB0OuLnKjwZj/Qh483i8Y
8zJpqnUpErWZPzexrxMPd246VPmMue6s91Ex/9c+u0ZzD1PUe77P6619NUp9
IJ2ZXceuFTrns7xpjQolXjk8/wv7v4cD7WRiLeVLlwvdvlZPL2VJ24bVFTzI
YfdW7DqiyzCz0Lpp3vJaeex03173ZHKqRxYcubvKrC9n+498Gazuk83z0LBf
Rz6t49CrH/QKyqddXZ18VdyN8mmXdXX5IfGifNqOn5edMNhks2Y/+5aKrAtZ
z/+NRzoWcJ9i5KCB4fsEPxtjZo32+k7Z3Ccra0fDp/sMOs7+K8puXdboWBvf
owO0TiZ2ZtDIm2JtAucRd2oGaDUJ3Der7rh51RLbVM7wjXovSkmWJedS/8/C
8H3CeQV8ZYZ0//5Klkx5Zejf7uhWkNrQYxFn+FnDJyuljbBjA9ML7pM3tXD7
FL3iI/fFmnOmTrzK38j7v/CTBGPed3m9827yaMqTa/G/MbZjhaz/xPKTOrdC
tjG4QCR4kMKuP8ldkCUJZ5+Mu/JkjkbWOjFtvGB9HOvr2uOeJjCT7ew5P1Ra
+Znt2ftml/lDDlv7bPli6S0TK8hZ6iPt9+t7WXGriSkgjx2fuLmRKSqf9/8D
E8qZMp/8liYNbfuPeBftDw6qCiMMIWks7fG4Dh20jznDb7n0c8gacaGJfWZd
PhriDJzhrzxW4jJOOSabnR77PkQYlsYZPqjnd7xtpY/I4/UzGH4AmOe3ubK/
v9o7n3XdWf+eyqWQzRLsXCT2K2CPum9dIb2VyiZ2FtVvaLrDWm4Tj1TbmdiG
rO11t/onsJVfnotMAVms4mQdsakshb3trciTJOSyix6jXqgiM9nFKXd2C53T
mGrhJe8k2UNW5+rUWfJNJtZNPdVf65TIZln/7KVNzWKvvi6eqoxNZfd8jlsJ
BuWxzWevVouCslhq4YWzGlfysxoc//crRXg+91XMcvkSqgkkv9N7HYJeyRzL
+L5k8oNXB3VWZSxDeaRK5J7DTlyuq1VFVvD+5ciGfeViLfHpU+1eKOYXsrGd
Hm0zfyhgL8fc228IKWCadcV/6TvlsxlFfWVqu1Q2rF3vAw76K0w3/IOTKcDI
fmR4+upz41mz46tLJAmZ7N+hSZHCOV+Yf7nDE5VLLsuNuxQo9svgrx9zsKhv
dy5utcdDHsMZ/iWod6/u29fQNzyJM/xLUP+GKIURBpt0zphrRz3sJpaNVcZm
c8bc+m3rYJVZVMT3sVU1l7ZUG37wuYWnPXr5CueQHzjqZ1eH4m9K4TPO8NdD
PR2U+0MqWP+eM/z0UF+vPj34iSYwnTN8GlBv9xi/eb60Xw5nzM9HP/3nssEm
hbX2O/goSeXPjKMqgsyh+by/i34Wzrs7uLpodG7UDzvZPnC7oYjOrw/6N/xL
H5HP+j/f213rk8v+mK+PVO2h82Orb7O3GS6X8/ng3TYp6Yr5qWxMh/D4fYbr
LH/ehihdjJHdn1d4W9ztLRt+v/VWoXMW2z/ztqC3Vwo71ezxJPmmXDa60Y9T
BptMdiG11RSxXyWft+z6X8JkaSWdh86OHvRWYkv9sZsVDRvoR1UwvzeZLUxl
WWzPuUfO2g3FbMd55/7qA7/ug9KYefJa6ay83doNvuJnbOeo+f20Phksa/HQ
rcrg9yz7ZN16ggfZrGOmca58UzqfA0vZ195aMCiHRd5x3qqzquY+h7un3PWW
3qL+IOad8Pr+XGKYLS6knyfUP/xcMaKInwMgL5jroZacH6qtkcLWb4grj+k9
lO9T547P7VsiesEciifYCB5ksL/+/J6ms/rI96luLg9sBYOMvC9VlVLzpqbq
1/P5f9u8fb/qKIc3Q5VdCtnqEJ++6gMFTPZI/VDlks/WN3DYYIj7xs+VTjr7
bhR3S2fxfQoO9VY/53OrXsrAvXLpBzYp4ZKzPvfXfiVXkC9LTmdXO8kqRO75
PN/Ta9jWhcKwcr6uJjUNXy0MK2DWsU4jlGPyWczmJUd1c81sEDv1VRSUx/22
MCcHPQ/OB7CulFdMmCm9lc+cN3S8q4os5OtOqzEnSmSOKb/q/J1/NBCsZ8Gy
E0fMoems865diq3ml/wcpabzmCqV+SOTVqcxtfevff3gf51MUUaWFus6ROuT
yvKy/jmfIbnOBjonNxE8MLKzBvtindVbdvB/NjuOWSwoNM5eMCiFlb5tdUMT
mMsGjWxyX1OVwfU6eO7O3XZzjVlE62l4veI15m+lfH/Vtd/9TWK/NPZ+7CCf
u6poFhQyY4Iy1sSSNjtXaFwNfF/Sesm7Y+bJafxzSvqr+RC1XTZzjhwyWtrv
G/ujxMHBFJXJ3swc1VzrVMmKWnr01jplsUGKTW3VBspT7yrsaK/dQP7TK3NH
5ojOl7KZSztViYJymHftp9dU/qV8bhs+mLgesa5yfY/F9xKMdZVfvxafSzDW
VTD8Qbi+0rKucn0c/GWhR7XkC3A9oCXfC4w8ajD8qPm/N7ppV6WQ9D1Dvpr2
a3Skt4IfN7id6S8nrRP1l5HvDMY5HNcrWs4RuZ7Ncu4Iho8O149ZzhXB8NXh
+kHLuSLXl1l8dsA4V+R6T4s/E9crNknzlCrp80FeM9dXWa4P/v6beQXrVKRn
O/KobblRQp8P/Gm4Hq3rox5qb9JDQZ+N8wXMR0CHZGhuf0gTSOeZJ6IGN9bn
0vNEH7x2nDya1suGm4qfKcKJNekZm8yhtN7fWnp7jDyaeNyuG3kidzpvmPfX
9usqf2Kc/6AOQH4h17vITwxSBtPfezVC1VPtTYx8E96vtPhTgR1vfo5WbCth
B8Z+WCr2y2VJbg+s9Z3ofkS+N34fc8DWfpmlakM06/e2VoUkwcSKbSsfCOcY
+Fww1onCDW6hhpA8vi5snTSqpT6igDXbV6+L1iefHZH+eUiXUcpGpnu7aH1y
mP33J4kql1RmjrcSDFNeZSs854UbQowsu9FWldr7DYs/V2eVuDCTTfCrH2uI
+8K61Dg/Sjkml83IePafMCyDPT+zn2lTf9X5MdtiTJKnrO3PPo0EgzLY8QfP
O/S2fc/WTXifJjv26zm/q/1NnVs6+3Bh1TVNVR7T/b1girxWDjPLutazt05j
l+3c2gxVPmBjwl9/Usw3Mem/4kmmqHcsvHrxJV1MFpuUPnGc+kAqq+XdeL3Q
OY812HPILPGiOd/w9SNPZUhus5lrDj/SVBnZ/rvehTqrBD73izqkeefkOdJb
ubzugF4K8+DQf+J8u/TKd1ttje/sw/WcVWK/TO6nde5b31HK4Fx2fuOsydJ+
Zl5nW/WsOUx+lfYzyRvP7zYsLub7oOtXV1mZyuj5njzTXaL2pu+7nb6ivXZw
EZNfuuoh3/RrfXiRHWwIofNB5c4jZqOEzgf3rTPXNJXReVDLZSN0Kpcifm4C
vTD8M7YcrJcoSy7iPscZQV7d1DdK2Np7Vud1brmsvPHaKdJDxdwHpbFfI1d5
9Hfuf9GnOr211omu5w/Ko18ktsTov6Mvcc21Tkf1jXLuCzPxP4cA87dKNn9q
kocyNpNdt1u8QDiH/FXgG3P6073L9u6PWah+81Vdhonde2F09Dhm4J/rftso
F/32NCZTPp0oP5XHRkdXvFOMyGYPCmoohc5F/JzI9eBqjflDCrNpGezaTx3B
+4INatgt0ufG8TpxlfzINeGcZH5uhzowvEyQJfEq4HVdr0MdlAYZff7Wq4zN
9KPMrGpk93XCsDx2PjfESZtK89zQbfgKF/uJC/OZw493XySlZua6+bCtqSyX
HUt6/kwTmMoOqTs2aWi6wSq7KULNH4xsT01Zva3+b5nX1vq+0n5ZTHA5R2wK
SGHa5It/qw/ksuvyLi9VLpnsv1o/0xRZqWycdOH1y5p7zDj5+DWdm4kNutRq
mdbpHWORg1TCsCyWWHv8NOWYVN532XFtn8De+le9cbXna9m9UvZHgfGmJjCH
962uSm1HeSiDmWvU1VOaQDofTtl+Q6qMLeR1/qBjMyqr79N58GWFzWVNYCG7
udJ8WVNVwJ+H8BPB+X2dc3lHDDa5XD8OvQfmD6FPwfMIepRloxZUG8vo9z3D
S0fLe5qZ9Wavz7J7v66DN8erJaUpbIDX1lWRmkvsTIfB8SpPIysdnrhPOSae
1dyQdtJwOZPNCJvySReTzKYmbVombpjL5m5Y3EjQKoPd7ObsplxYwBy6X72m
+ZTH91W9Wqx7IBBE875E7ZzHZ6SViXyfdatN2HJpvzTep0A9gXlL9K9af2rs
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
tcwPcb1xy/8NlJH/GnR6fP9h/FGsU1H9DJ0eGH7oYOj0eD1m8TMHQ6cHRl4P
uLTLGS+pkvZ/yIMBy7YMb6c2UL2C9wu+8Cmrwiih/RDyKcBWvYKeS9RUv+kO
FH6trqbPAz7N+Dl8p8Hwjeb1p8WHGgwfaf73Lb7UYPhK8/rT4lMNhs80GH7M
/PPq9qW4upo+D/FH7WSxlvafyDMGb3bx6KwU0vvvkey0T6Oj/V7f/denSJV0
fcT53kmWqOnzGK3YOFgppJ+/vJ47TdqviM8N4Pvh8zGP2jTRK2j9D3mc46j1
of0S8jzAkzx0SqkyhS3rHJ3QSavhjLyZWwPCmmo1dF41Y9DY9loN3b/QaeL9
QDcJhk4TDN0kGDpNMHST/P+36DR5PWzRTfK/Z9GR8v+/+Y7hcildv8grAcPv
m9d79j83GGR0/fZ++iqnupq+P6P/8fFiLX1/yCPm/YCTgevMIvq8oXvl9bpF
l8Pvvzb/G/Qkv6CqRVkGreY3v5+M3ruUQrqec9RKF3s91Z/w3+fvz+Kvz/sH
Fh97Xg8uKl1tFtH7/0P0xCjS0/Ub+WTfGKmSrt8ZS+ZeV4jp/Tdo2ecvtYHu
Z92zP7fpVHT9RiXWvKtT0fWDXK3yLQM2eshfc0YeUQNBtYNJksnmtTr1p6/4
M2fkDyFnK2eg7VmDzMQZvuOPLw1+oDL/+r7zJ7orhXmc4TuOfBCct6KfhDyG
969yWqgNxJifWvZX0FtFeA6bFXv5kE5FDP826DuRI4b3hxwrvB/khuH1I38E
rxfrH/6e/aiPFzU6up/U/caYZckpbMRV6cFA4UXOU7c1XBupucAKQwqiNa5G
lvg2+L1ZFM955djh+5XCeOaetWufOTSTDenRpFVvdTJnY8TLTzpVMgtjPeZJ
K3P4XD8YueXIE8fcPhj+4vB5n7xtduF0aRRn9JE/3mmdrAg3sk3r5EPs9W84
ow8MnRLmkMHo48K3G3MBYPRhcx9ajZdHF3CdFhh9790zym6rzL/piyz58Hw+
5U+HbmpDCXt8VdlG3ymX5d/Yv8Mg+81vz5JnCV37ercet1Rm4jLl4RaC9ans
+pfaDy9rbnIepM+9+kJxk9dlk9/FLNdq3nKuGre+Z2/1WxYhTtZpXLPY7BZn
5MrgFM64j1BHQn8IxnVW1OBcfVNAEc/DOu4x+pImsIjnBo+4vGqaVEkMP134
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
ML/B50PaiK4oxPR9wb+Ez9N98nwvOU3nqYerl+w2hBTz3DIwdDZFXev+K95V
zNanDZgg35TP6uRvOK2bW8AenPddIn6dx8+zsP9HHjrO/cHQ17WtvX6NuX8Z
c94euknonMP6b23gooyl5yPyHvD8/T70q71eQXlY5VNGxSjEdB7qvj3tqK6d
mes/pWX+SqGpkM/L4/PE+bT+1CKTaAGtp2DMQyPvBO8H/pWlr7LGy6UFnOGj
7TmuoqfarphlWVUvEncrYMt3VVvpR31nrS5MK5V4ZXI/SOS6rjVd8jdPJv0/
GPpy5KAhPwZz79D/Yw4HOX2CiMgnGtd0ppvZ+ppAoGeTa3odMIdmMP3O/Sek
yg/cJ96+PHiptDKd+0Xa3Y7e4iEnv8iV/efV9RWTX2TJqPKzhjgj932Y7zl/
u3lyPvdfRj6X/Yo770XWP/l+GvN+0MseGLrgoqaqiPvCgD28/ncgVsD9RcFu
W4Xj5LWKua8a/h749YdWdU0BZtZ/Slcrwfo8zjuab58tVeaxm7utNWYR5aPZ
Zkf4S5WUj4YcH+Sj6Q8UNDVJKB8N/pc77L2OBwrJ//Jzit8Hcyj5X44cWNaq
ty35X8JXBHP48BHB/QG9Lvw+J817GW6vJ7/P5rtzRR7J5Pc5ZMXN7voI8vv8
6vz9rWJ+Dt8H8vNni48FP2/Yt0Q0VEn7JcxNgLEv5Hozi88FWCS+N94kof0U
5ir4+ZNlnwiGDwYY9RTXC1jmLvh5mWXfCIbOE4x6i+sJLHMZ/HzNUn/x/ZfF
BwHstHfYHyYJ7dfgXwN+PbDZQqGJ9m+tqvxfyJKJ1+RkvJOoaT/36qy0lzKY
uNP+GwPlUtrfBY63PapxJX4/eNtZlZn2ex2rjbX1ucRb8yfZaDW0/0s6H7XI
HEqM/Azwlokqg8id+Nn0958ltrRfW3Lvz2CDzW/7tzp965ui6PnbdN7cO6pI
Yk/3+3GyZNr/fA/PX2f+QPypV1i0Ipx4y963/sIwYujidX1dvor0eezKj/Nb
zKH09+G3yPX0D5pdVdQhvTz8fLt1tJssj85hY7V2I+WzKP/0YfbzpvpcM39e
N2vhky/KoTxUMObkoSfGOoY+HuZi+n8YNUv8upT75ZrOX9tuiCPG9Yn8Q1yP
yDvE9Yc5HlxvmMuBbwl8OaCDR17lsg7fDplFlFcJHTx8aNBnh68M/EuRVwm/
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
GnShH+i5qUTjPdBsAMsHH3x43yi1YzY5nNZ9jNSK1Qtce9H7N62snDiO67FF
+LDe3u8zsCtPwvpBw74f3yrpnpnvC9LL622u5DbrDw17/9DSDT0dI5KI18d1
T1RtWL9o2P813zyHa80ySfKA9oe5Nax/NM4Dd488TZIlG8mCgVMGqEuL6PuG
c6jm2JAOhnoWyOerdRfSSdX/hB4u0XyWOffGhy0RXyKb42t2C+uyqF8Y+StJ
9wbtUDeKJ/H9zjnJF+ZQvy7uw/gO96I4z69kwC7SR/skj+4jyE+ZO7JbMzNP
A1EkpVcI6s+Z2Cdw7mybLb2msS6g7xNpYhmn8Mwlojufync5MT1r7KehmxN3
8j8X1D+XxTGybqweFPNx8/YDBaLofPp8ML/0c3s7iQ2V5JGnwwWdMJeoA/b6
a/SV5K3SZT+/fy6tlzl0flCxyD6P+uurRFZ7+RV5pPL28n268irS+5rAXfyH
kWz9vH01v7SKvN/ureSGGWm8+6psZ67Iq5CUvIvKkm3PoHlQ8Fd2fWhpUR70
kEyzXBGmSdLTPCb4J4e1fj+Dt/gjubLD5ABfZKT7JvyRkhE3tCr3dNL409W5
0hP5dF/EOdUkq2CtuH8OjQ++W7E62t8lgsb/0h+cfyhs94nG9yx9O9aJ7DNo
/C71z9nBuvp1Xt9nIJE2+kGqVy1YJI3NId+bnVnFr6smM+L9ykRxOXT/4R3r
6CgfY6T+tUsuFY/lwr9ZvGjJtv3uxpfUf2PTdtxB+VpW35AoylolLcukz9FX
37c1LzSX+kvx/LD+gTGPwYjPgfEeUvuqwW8JxjwHI/4GxnsKhh8TjPcAjPga
GO8xGOs1GO8J/fyG9RuM9xyM9Zzahw3vEf1+Des7GPF4+vkN6z0Y/l8w8h2o
fdng/wUjXgdGfASM+Bxd3xviIWDE4+h+0LB+0/ezIf4GRrwDjHgbtb8a1jlq
bzW8Z2DkE4LxnoGRD0i/T8N7BoY9Su2/hveM2hcN9iYY+XZg5NOB4Q8CIx+O
7q8N+W50P23IZwMjXw2M9Qk8ZPw/DkJf9vsa7DEw7DVqf/aO6fVZEkG5Zp1R
p1a9YfMt2/qonM/spzylfJiZ9st/7EU6fxrsRXq/G+xF8Jx15X9xAja/0J8A
DD0r8OKNKx/IhGy+tO0+sodSx+6PJq65j0bB7k+IxYw1Ql0J3fd5t4Z2Umf9
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
ntqWx31kqXrw0+hX0wPaQTjtdYQkUg6zH0R+Yl1sh8qPbyMkz+XwjK9VdAra
YdkNayUrHH9/m8sMnHAu8FSu5uJMzKsQ7+d+ntujW5JH5P236j/jYT5iv5Ej
DlDv1YHrvBsmFL4a1CvXG8ru1sEW8eA2Gs6zXZKAS8Vg9IrU7UyVFvzzA6IE
fTE092YZs+YkL6UO0reV5dw4pkb5XvkYyRL+LjmsfypzYPdshmHtC+2FNkpY
av/rKGbYDBCRR6XYKlG/TEr/gYPGXFVD65G+UTysGebRk85TfylQPWJc8vp0
Hk0BPTHn1zwv0n+NqN9v9a8S8+QKiIq5dwR704ziGqL/E60PXdeb4AZsaGfn
qWow+vGoG2UA6U9oPClu0WoxB80F+ie41HF/paG5h8jZ0Q6UrX/RHKBp+p0v
Am8pmstI8SvyZNqQ+Z//u174We6ScHyVUGa2zVQMTbD66mgm/5QSP78IvKjL
muBZoDWbfVyJ5rxnDt0oZyyqgsnDn92QsMj3T8xnErz5TbYn9UALpCcejxE9
UEBuy4yrosMtYN9z+F7mfTI/Q/z+uW+XJLyUMhj/19D3F+c5lAyd+EIyXApZ
lrx6ES8TZh/57Uc/pYB5R3vPpVBKgJ++35lbrIa8PY7JApEMqkf1sxbP0UOw
5aUdTK4WmqbUWos/6lD8c6hkIQ9bVA13Xbqncfyr4NWhj1O4l1tQvxihp19U
Vmhv9uQr0ssv/IVtE6dJkC5f+MC5ubzwCqR3v+HryWN0dxWa90f7W1e8TzAx
b4PqcUWKAWIOyUQcjfajrjgW7QddcTR6XrriWIKJOJpgIo5F+0tXHI2+/644
FtVXuvIUBM8aNfg3i03uP4rfKnsulay/EPEC+v7HXjIWc8j9pCZr0wGMRtZf
iPUL1fts2hcyueT+QMSBBBP5S7T/d8VlZD3njUUfWRxZ3+qKmwgWJ5dkiTk/
yP2yK24j+F6fqabnMfJ6EnEVwS5Jh4V0IdmvRcR16H7tql+j1+uKuwgm8p8E
oz6QLibyoQQTcS3BRH6UYEKPg2DhzGl/GXySifw9wUS8TzCht0Fw75DclzyM
/P4IfQ2CiXlXggk9DYKJ/Qfl47v0Mwgm9BoIJvQy0Hlv/iAWXUhy7rgvKRw6
uV8Q/TkED+gfNslGmIw48H8JZz/y+vmMOOJNzyDXU8+cYgmLrMe/HGhxhksl
z39EvwPBRL8DOs939TsQTPQ7EEzMRxFMzEMRTPj9oPpEV3yM8sHzSt5w6OT1
IeqFBBN1SYKJuIpgot8Ine+66nrofu+aGyGYyPOg+2nw6cdW4jTy/NqlY0ww
MVdCMJEHQuvZnsWWLmyyvkvoHKPzdVf/FMFEnohgop+KYKKfhWCivwqdf7vy
SOj57cpfE9yPe8ZAxiC/j2V9ZrLpQvL+/zTalUOVkUzkwwnemzkyl8En+Yln
wWQulfy+CP1Zgol8BcE/x319wsNIJs53BB/N4ZsJBSRf2b47nybugC3TCvzp
6+XgmzmihiYm99NQq/YHIh65fxB6qQQT+QmCp/+NPkaVkX+vl83p6OwkeUfr
2t4yBvn7kdU/zmE0kkOmspaxmeTzR+TLCSbieYLnZ1myucVlwPtfwi4K7tIT
JovnSCGRmdDnPJYJdac2dbO6qwAbAawTc0qAJWnL5jSp0b4aOelBhGidHu2j
u+1DL4oGtMM71wsXqD/lkLl3Vx4rshqGFIb2kf3Sg/uL43qaEwZZAy3iBBFa
mL9n1XNBWS3cyD0/SjxKAxuuLovlOZF6mxM3TVbRcCb6F8P/qF2Yho3Qfc1U
U4qlCqoV+/2whgbo2WmykD9MBatq6+zFo8pgzBujbmaUAIjLM0gU8cqgZZOg
sq/sEeo3MTZ186c/lEPKeeNJ/EN10OwZs4v5Wg19JkVcocoqIb9fbap4fAbK
e22Qn3xB71OM6swVIwyaGItkSBf3duaiexJ8XaH7eupp6zA4FJJxgH5LC+3+
qjLGBgy+f/Jcxg3VwoRrlVmZM2tB/pffkxJH+ie9vRB4iP5QA22dhVepjEoI
Xnh8uI3wJ6xb77+NfUMObzpS8iSsQngTPXSasEaF3qep0aceFJYOva83Ea+8
6aeq0LzpuVE3XZkRDXBLsnC6cLkKBNf3B0kiG8D+hbqa4agCoyPbM1nmdZD1
UqljtKnB7H7nWSy4Bry7pU8QBupgg0BKEX/uAJuoP/70jXIY+fxCOO9bB8Te
o/ajbMDjv6FhpbR3ZL2eNf7BQOGTFuB8a6llBCvAdk/SV1ZkC3yuv5bGu6iA
08eWOTK5beCv9ZgprJeDed81c7iX64DZs9VCdl8NhSsXz+Q/04PHvtrbEvxz
uQq3TuBvr4fQt+O+83qpYUCwdzJHXQeF+r/A36RGPjcJ1HXJ44Uv4UHOtZ1s
phRGD4tJovfJQrrJIf4MQ++gElgTkGtMoeDX3bv4iYQiR749b62GL+MmaoF/
aOVnTnA92Jln5HKqSf3molvmj0X2+PniqFmn1KYJNh66wxBeUMKQyNvRPKwR
9rxKvIGFkzqa/Djd2RkD4pCOX7b49DiXpGykm2k9oPsMsRXpT5ybsriQky9H
cerFA0EnqKE6ONc8/BvHAUPPV65dHwvhzhbgfj8TioXj6+oK2RvO6HaonXT0
k+CrHJTBV/dfH9YO2c2HPpWnykFu2ydS8ojUL1wYEHOc3knqE4YVuKzgbiH1
Bw8PnSpl+JPzWo/q+1+SjK+H4RVBZ6mT1VBnxV3BVtbAtAvCRtoAHX5df0YJ
cO5fYTVc3F+H9OHvLn1/jA4qCJO+L2HcrAW/QR9LWR4a2OpuECyJqIMrZRUB
1MtqeDk7ZiL/SR2svP4xhxOshoB9WAbLtQ75SHrWyBaxvzRAZYztI8lsFdof
HDf+mSa8oEL5O+07M2OKjwbt14tP7q1lFCnQeSn5WBvGGKIE768nr4lsm1Ed
mtBRdMZGp3Py9Si+K5ebOnMHasA5TTOLu7EeFjWKdzP74fFsln03CovUS3aY
zQmV4JxX1OsTL1wPA/x/p3N89aiutEdqsI3J1YOt3ex17Fot0qt5aj2mv+yn
FsoWzC9n4CyaObWJJtbCGvHgKlY0Oa9H6Ca/sWdywv1TIWbEx88CUzma1zO6
WLWGS5XDt6ax/vwZ+dCLu/k65kXOSxNxreX4deWc/ArwzGzfzvxJzusRr/u7
4PY5aqgKPp0amMAxb4apTwaGS0YrwTKRLmbdaQTnuMtb2L/wffvnVazzXiNI
nqTWMNKV8Ox6PIca1QjyAa2PJF+VcC17bG5mdQ280Zw4Se2lg3dWk7JCHtZC
jR9t/gA3DVzpESVh8Bthw/HXppRMJZS87Szn+FbAS9Wj11biL2ievMelgwZ+
v77AbFNBrChPBguz1w5zYUvQ/Lg+PGkpZasE+NsXBlIZKlSnI+bFJ1BGfhd4
V0B1QuU69g0tqsMR8+EV0Tu8mDYq0AfPlzGkZJ6T0C0ucaWdx3BWb3hrRWGV
oTwHMS9+wS3xdAmLD+vezfJg/iT9J4i52egnfc9QQzXgUL/CxIpWCXFacy1f
8gNubgm4j+FsekU6t7bwB4Q5VxVyfPHvL+eKiCorIH3NIhqlInkBNDwOeSnK
U6G5c2fTVAe+BH/fp5MGUmIqwbXV7iSVoUNz48+2e5rLcI6Y3O2DwFsNi2LW
6ljRpL8F8f/Yeo7cEu7/Cx71bEwSmCrQuY+YVz8dYnGEP6MIWti3QzAv0t+C
eJ2mhl/FnHwpXN4YPZ/7DIM1lq3LuAu0YBjefxc9CgPF5iEDZPO08GHIWS/6
h2rwHRlrK4zTQ9A1ZQErWo/qfiXNQ/bRhfhzs3mfD91dB94Hduaw2BjoHV8U
s65o4bNrYxGDXwdrhL8CqHfUSB/rUEku8N3VwLNpieXJ65DfwZDp229QGeUw
4zuX68qOhYNht8bJcJabDLXqszMWfC/12Mm+IYXZGZVSCSsbftfObGbwpSB/
6Ew975oN2RVP7IU1Cng6Yc94K3Ep8vl0bc9aLU4rhUmzlxpTWBpUtyN0Stmv
xv/ihctBXDqtjSGtAOMFC896078jHYOtFf1zxeO/w9gZf37xFsqh+sTYIC61
APlQh628GkPvUwCnrxx9KHmkQnVDQtegx7qLrYxFlVAkG3SA3qlFdUFC5yqh
x68Hkv/YZDKX+ZPUNyD0mbe+e1tVyHoBwVsznfjjpEjPgNBjnll3PIL9OBOU
7w8MkQWS+gWE/nKESzeNYEgJLOzTX8+QknoFhN5y0PovtzGcH3i+/cRbqEd1
bcI3Yb6R0Vz+eZwvpH0XmFaA6/XOUjHnM9KrjZyWNcVm/2dYWe59B/OSAX9s
4Du68A/Sp3Vo1JVIYv5A5EwzDvOnEtV1CT3adZEfrlNDy6FHiHAuf5wW1W0J
/VnTjW0MoYsSDouG1NHwfY3o2yL2Oe3rvAiRvR6+9XW+hHnpUN/XEO7pYWIO
vs+5MXI4+fj5yLZOKAgmdWV3XKcv4l7Gz/X/yZFYVYGx+61XkkfloDvy3wsl
ID3ZsHj3pJgRCbDj3cxT9E4pKP3erqBQcpF+LH/50KPCbrmQRC1kcbcoUV8b
oRd7eo0Lm5tYBrSdx0eKP2pQ3xqhD2vfnd/Nyk8B73rttqCwKsHjduWaRJ4Y
TA+FRUpwTpgV98Tqohj6epgoWdFyeGDTWC0QFSJdGKcW98EuSYXg/SHyg8BU
TfbNjShdwaXi57IobLLYSgrtfqOiBEswPG6oUzOe/6fj37OcsRSD2voly7jP
tOA+8IINv7MB6S1n/ihz4Y8j/WYIXRj98zeD8jnnwOuhLJe3sAI652U61tJS
kD70ulLBHRfrFPjawHsqeSQDb3+dWsTLQ7qNlivW9fcOyoPhK+m+9E4l6nsg
9KEX/tG9lODs9+TnMu4WLeprIHQem85OYXETlWDk6LWOya2D5VsiA6iv1FBQ
+CaDdbQO+aoS/ZghB09sYEdpwPVAYs8xUIvq/uOdem2lPyP9p6uUVgep1Dp0
zly8yyFM8LYFPUd5bV5W4o+kPw+h6xQ99VAtza8KXGO1t0S8egj79aoXpU4F
NvH7L0qCSD9eIj9h/G6uhBOiBPmjRaksdgs8nT5riOyJArQXamhCQSP88aYz
hPhzwtGFiziPGtFzYmH0qZ+YQfobEPNYRF/jGrv2lQ9Ma9DzMUFvvJW6rAOs
Yh7504/JYUmszk/C6oBFUUMvUv/z1+zyIwraGztJeEALW49gI/jLW6H+GNNW
vBpfN9zj7MVLyyB9fOtKp+ZrsOt6jyzGhlZYum/eYv4qBXz2CM1iGLWC5Q1J
jMiL9As56bWgjrFDAb/H1joxG1uAZmhuK96vAEEuz0G4sQI+H3k4wSYjBdrH
080p8TJwtvxTJCnLg/Vnf1ayLFRQPPvVNerECogt9IoTHNbCDVXVdKFKCTNt
NZm+qbVgtnfrKNpsDZq/HU4ZFSmy1wAvs+2uCGdCl2j0daPtzLU62DqfFiWK
VEPpcNULQRMGO5cc38ms0UDfxNknqMk6mMkPKGUFaFB/4aTHhzM4TVoo7rez
lhZQBYr10hhBjyr83OVwAmPXo+dqQPBIPWt2JTT9cDR0z/kJ+yq/fBLcloMi
2eYn5lEI4tk7r2ENKoi8Kulppa+EjnfrjK2e4vv+cHWe0O4XuJk1FXB6KCB0
b4udlXkRvN15J0rkgZ+jZTBXmCpF/bUGv66eoa7QwPP/HfurYPeCYBkjvgpm
B+T9ZvDbIHjTbQVLL4cb6wLrOk81wG3zp2PF7io4M0k1jT+M1Ash8g3uKx5s
Y47Qw8kzH8zEmgYIpt4YLBujgp6itiRepB5mvezvyMWvG+F/9cYh3pjSVwNf
v6ycww2pg21HauyE99RgmsS1FgrqISc46BpWoULzEo5Nn5j8cUq4TWm2pBSV
g3Vh0/uY5ETA1t9Vs2bLoPbG2cNCVS6sFM4RCW4rIcb33BauXTk8Nyq+jDVo
wHPcd4qVXgGernuOS3p1oLw5oYc1yoilZOFcW//2qiQYg1UHhKeo+DoRf/7o
LvohDHr7zzWi+GqB9tb4CHUnhvYvQg9rFtv5jTzuNdK/ajlsWSuSZyG9K8/s
+7MoW0vRfaS+1e+zwFsO042f19BOVoPjqp176YOqQDiNyeamlsHLeBMvZdxz
6H1JOlk8SgoB/G+rKSGZsLMisJtVgAL0NcvvMk1KIHnWuBxOmRpePdvtw0yW
wcH2oAiRhx5aBgybJEzVgtW1HxGi+XrYvi6qv+yEFn/+9rKYxY2w/9pUHvWV
Es6wTpiKJ5N+Int6G33mxNWDxqJXggA/Z/4OyFAwfPB4eNjLt4IyLXz/YkGX
6crg7cfjEdu+vIJRVvHNDGcpSHMHHBfaZcGJgxvTeJF43D/1bjIWWQIFP1vC
JMYaKP3ep4eVuRwcy69rOztboPubXUHUvQq4uHv9Bnp30o+J0O2fxOj1W1af
gupABr4XJ9rX5aF9JF7dM0FkX4HqQvvuOG1h1yqhIT7Xib2rFnLq4zawL2ng
RJZFOqdMD2MkSz2Y+HMZbGb1QGSEQfuXgAxOtRbGJnznUuNI/fyRvHkxkuFl
YD23cWa45DRMP3RPT5uJQdjVfDUjXgtim0Y7/iwMqpP2p/DeaeHOXslH3sFq
WDtolSt7fBVQ3Mqm8UfXwC+j99uY/fWQENSh6Vzdiny8l+2Yk8pJweA2dd8X
3lgtvk4PfCHwqQXfihdXMHy9IPKTIxSf5azdCji6K+ODaB1+Xjxp7RMuSoHs
JJ9L1DgZhIXxT/IleTDBwnwLuz9+HmwPruDQK9C6mxCVEUiVKZHftufx4HeC
TA3yo3rwoaaasQh/vqLmFTBiGmDYOodV3MUqOLJfEUK9j8ebzhFCK/VXyPoW
5MFulcHds+utXfQSGG9tO124UQVnffZNFcdWwPkjaYYU/LrMGvb6D8dHBet6
7WXTrzWC3o7K4mYpwWHZBbp3SCOEDeJticZ5fUmLL9WmGlb5PxNzYqqg6Wdz
DqsXBi4J/mqGVgu3c+evYJvg8e/cpO1MnRbp03c+d8vj9FWhvhiUj+6Ki1E+
tKsvhmAiLiaY6IshmIiLCSb6Yggm4mJUz+iK4wkecWNxDxmDzFdnzLfYS5WR
+eoTavkfBp+sH4y/+X4+m0nWXwoWBD3jYWT++bxuQ1+hgKwfTL9jw5WwyHpK
9pWrs0vut0HMobNDZWo5iDbsK6dFN4NAbOFHVyhA3To4l3GnGb4NCThPrVLA
8lyhsSwOg3eLLq9nT9PCD/eCYsYAMv9LrMeo/tClz0NwT/b3hdy1pB9ZiYcT
g7++GqzUqYk8N9IfbA9DGS5aWQW9TR76UrdUozwI0Q9F/H+JMS4izu9GmKqv
MKW8VaK/J36eIHD/xDuoh/SoWnOZTIv0z1E91cWLVTKvGqYuLJUxLlTBm+W5
3wS38bg+NU8sS/0KZo+P3MYaZLD9c/V4+yIJ7G6x8GKuVYHSbM4HUWQFfHWJ
n8OP1cKDxBOb2btUYPxWqmDs0KO8x5Yhg/2pO/VgLvAMxnD+8cPoiUBUD8M8
fdpp2SrYfE0diB3F71/vY0PEo0i9dVRf2+HWyyqgAgIa5hw/b/4VBopa/3LK
ZBC9YVSP8wES2N///ivRfBVQN60ZIztRAWle809R72vhi8mtH7zZKqQfv8Ry
+COJgwoavqSHihIaIPV41gI+qPDve0YS52MDXE2YEkjFOfvrGjmnRxnM8lm6
d7uVK/QtLMnnGZTBjCn97+6udYKYnUF/aYbtsE81cBv7lxwyF3/Yj/Vsh8Fn
ytN56XKoApMA+q5KGJ35Zmbt7DRIyXZpZeyohK/5dv7e9DRYdityNTdVDidT
SypEFn/B2rY2nZcih9/LHpzjUv/CE/3yMeJRajjS780AiqMUfM/wH0iGq1He
tXOxroEWoIPxn+veC3poIDef4UM/pUPn4ZTSjauY3CZgrqXIWJ5KkA644sS+
WguJkiHGlN0a+DC43zzutVro1/NtKctTA6KfsackYa0Q8kc9QzhLAd2njXvO
u90KLesnvBbNVkCdk4GYgT8vD9/1O0GfgZ9HH9T5SvZ1QsyYpRPEk+VgEDiW
zt3TCUuLwvcz7eQg6TeUIrbrBI/+Kd2t5sshNVzBos/qhPiFG/9y5sphfsnw
NzysHuzjrkwTvlbBj3l9shnJLRB4YXABB9+Hkb+BwriOcQ4/zzeVCAW3qyCl
d9oirl0VDPiv3H+zCvmK5I4dlMYyb4S1/a56MfupgNLLeTVzXgPcW5Wxkhuo
gkbmgfOS2Y1g3Hoij9OGn+fvPbASQiMYpZQNljUrofpv2gzu5QaIPPP3D2eD
Cm4bOCxmhzRA7ShtgmCdCsqDDhXEXWuAkQatDyX4fd/nrckG+uRWNLd/52Kq
mrajDtWlCT/ZtbEb9QycZxQ9dmW36uGedtt+eqMOTPdr0zhNeqSL3xC8fS1d
2AZTHYOHymRyqFvzIpYT1wbH1WEGVlI5SIdOesp71wabmCbjxZVy8Cj6PcHl
WxsMyVoTMa5UDk9Nzv9mJLfBmGVpr0Vlcjj+7bUtf30DiCbOfiU6qoLX+TNs
+BMb4d28Eb707vj9/mBTPmNKIyz/WNpBM1BBsurnQLEGA872ywNk7Rrod/ha
IH1XOeyuUL6QH3kHe9Omrufi51yjm53VIosc+D4yly4epYQP3BQrimMZjPI7
0kLD99n9dMNPAvycnHbS2tQqoBwGXvlg3mdMPDzqtyuQfqoc1jx8f6cbJR7G
5X0q5pRJAfs8rff5gBxo2W28nlsshQWLa18yuTlwZuI2oWi+EiZfLaLLTpTB
us8v6OI5SuRDUHzO4Az1vgZk84al8/D7M2bQ8hbaXQ3yIXj/wnWsTFcOaXPb
4mLKk+Di3HsPMTXp79WvW10jw1kGj7x7HBba/QH5jbkHmMtIP6+9G0J/8iKV
YChbtIW7thwcNMUL+c/IusN3of09ibEWPt44T7EyV0LYwlMDZIZaVHcw6TiT
KJpfBtf6BC914V6FkhCxvXhOGVy8439KxroC6YELDcVL29D1KpnUdEm0vA2k
HZP3Mbvj9/upzWLB7TJovLct7Nagx7B25NL7opMY6osk/GsJ3QpCX/bRkjXb
mTY6uDveNZFV0gEbkx90t3KVw0JJwULm5U7Q/rj5RELHn0f51ECspBpUp10+
8fz04OyVt4zdWAvTio12MftpgPq/do8qWHZ7aj7raRVU/G+cvwr1NXU8NVAw
pKSf7Jo+M45TZXqgnA+/iOGcvfr7NnpUPRx/M/gctVgFl7hm90Sf8Xjwmq6F
Nl+D/Nw2fJPqj+xVQ8JcmpqWWgdO1h9Hi4+oQaic8pb3vQ4ernBtox1Ww/Vl
Jx5hXqQ/rfL16+liTjks2Jakdf/yDvSPrA8yf5L+tItMVhtZiaUgqn+7wMo2
B8U5RF75wdY6CYeuBL7N0EVClzKIWLVtoCyQ9KdteR/6QsTTgFO+u4JlpgDr
r1tuCESd8PRmS3crazkod4Tb8fdgMNYvqZgVoIULBmFJnADSr1TduG4x+2wD
5I+bMli2RQVTJO33sIZKyBsx6rB3fAYET3q4l7lWAev1N09z1xaDPNAB+LFq
qBhzZTt7lwwWFpf3lfXT4+e2TCPKaC34xQ3lsIeVw1b6osLQxteQZ/pprvCE
FM7uskikN2bBlB1bzShFCqj6eq+7t08pBH/sVsbC4+5J1/o+kRyWI/39oOCo
h/ZrviF9/ZhRm26yH+cj/fwrDj56llkl6hNcVPXmGiZWgdGj7myuqgxMwhf3
uzj1FWxtjJgsXiqFV/2ig/jDskC0ckk3q6cKGLx/WobkdglYPFVkc/B9aZFn
0UWqCf76F3Ycodph+DoqyeB81kIbfI7nTcVgqzboAP2TFjzGOAmwhjJ4v8LC
7015NITPzr1BrSf97JL8NQeZa6UwatyPUO7aLGi7dmQnezXpX2eZG7yIH6uA
q+dWFIl+l8AGlcUM4WvSr+7w+EkWMvy+7vDZ048yWo7iZMKfzuz2xkLWPj3y
8aS4J1JkjEaU97Jxm20mntaI8l5f3UNaOvvXQufjkYfoEg30nTM/TDSgFpLW
tn7h5WmAtcN9MbdYDyvvjIsViHSAB4sfRbxyqDK9ujboYDzytX4+XLVJFpoD
bpwzbDZTCb1ghgv/fBny3f6s49YxFilAalTYwdhRDs9q5VMKWO/AgX08k5ci
hXW0T9e51By4GzckXDJcCRVzwr3ZTPy6mSYdop/SID1jwh8kd+yc+fylGlK3
8nv1a4G3HvkOOO2YMq4g8yPyNzx51CWEuzcX+Qw07OFw2LVlyJ/wpWW0GSVG
Adtrej3nPW+FJlnNDCG+/q6QtKew/mEijjp9YdbOxCXJyNduwsiRzYIheSiu
Sv+U8xATlyMfu4B9Fkz+eSWMlQ0bIRxRB3Vfqo0p1Wqk19xsrnkt+i1HfkHL
NxwcJj5E+gkReeYx2P5NTJyJPPOLEeX9hYJW6DsrrIAzUwHjF2e3Sfc2I12F
NQ6reok5zUivpa5jjaYzthUu2fY3sJqqgGSh/hkvvhXqDr1PEkxRIL8u4rxK
xIcovqHvT+DNr4EFBWufiPQ66Bil/c6ZWwN3/MY10PD9f+S5TbbeQQ2wiCdN
qHHD487EOVvplxpQXEj0GRwNE92SUPTIz8FiyclCTrwcXEc/8pe4tQOlNmem
ME4OIz/f7SF+2gY2dfjBS4mv/4/SbgtetEHOpX2ruQo5ysei/qkPA28L+pL+
0nndzayFJfVQXCTbxE5UwVsHfqiosAH6rf3wSjRJBSYvftjw/zbAR+25wbKJ
KuTnSczLEH4ZTz5mNdlM/oT8MNalf/hKXfwH+V2U8R8G0t3LkZ/FTWYFXWyF
77s9R5mIB7ZAneicjfiTAnwjYlql/Vrg0qEyb2ayAuldGRuo4wQTtDDl4GYH
4QHS3zD4Z3s/SibpZygf/rCSNYn0L1zo6xAnCCb9Cr3/uM3g/mqAT7c2r+Iy
VMjvmeYVG0itV8K3/8pc/atg1tdNvzh0fL/sVzCF/xdD77vwQKCx7BeG5vaM
SudelWRi0DaLksWx1ILl7+cqxg4dqrfHB410Z+Jx1pD/ZPEGVIHxj6+Hmcsq
QRvwc2k+SwwewzyX8J/JodLay0soKISkoz0tZYZqoCcd28Cl4vGAY84+qqoe
tm+qPEp/r4LdF0yXRe+pg25HFo/2ildDku/B97wqDEopVj0pLfhzauymo+nx
851t9Xp2qwaktEF9xO8a4FrtrwX8BSqouzi5gBHfAAecZ3sxcTbdfuql4EwN
6ouW529s7zxVA/YLa56IbuqgyLXegkKpBPuZ/sbu3X+AfeRNJYsthyDuFzHm
VwDXu81MEIjw682JMLbyq0RzPFNoiiiRvRo6N/46S99VAS8f5Sypnf0FNr3e
t5abKoOUiVUqkYUE4oz7jhOPUsGtxbMtKY4V0G/r6yYavs+uqPP/KOihgtQz
12yEG6vg/Yx5Q8Wxejj7+3G0xLgcLlwwm1MQEgPFYxafpu+Swu9Ox1Du/SyY
dULuwk3F18Etv/+KLEpRH9TqYpt+FEc8XhtvU08L0INJsPdbQQ8dGPuM30st
aIC5F3KO0Ser4GiUw0r2MdIfifCzJHSkJvsdHkSJr4Ap4aZSYXIqXMoaqGJZ
yOFc9KWZVm75IKO/TxAcVkFzYBAIVRWw4PSGYCxbC8LpaRWspyp4UBjHppp0
ovdzb/dxWWf3TnixmP1EgvOCzZ17qdvw+PS8bA/zgApWLir0ZTaXwfw+V9lK
hhAi7x134q+XwhpY70rZmgU9aocMkcUp4HNY0W1mQQlsdUrSMQZowKI9Zj/T
hvRLRv28Zpcn82/VQp9QridzmwYC5iZjnacage0+tpNWiO9/OyythJcaodor
0pSSq4TESmmiyKgM7AXubcPCN0M8lRLBw9oh27H2AvWyHKxfpttyVe2QcyZk
Cf+qHBxS7x6X6NthXtr07lZX5Min5/rVoYXCbWlo3Zk+hj/NyvYvqpuwkk3n
CV2kyMfLyGdVGctMA3m70tn0TY3AH3m5hqFVQuS0N3yRG8m971+fyF3fBgGZ
EltxpxwmLBprKMZ57zvxYj7OLZMc7gh2tcEFzagISQt+HviqWkvf3gYDBzbX
MdrkEB48VEE72gDF2T1XcXeqQDV5715sTQfk04v6UvDzFOEHSvQrOcb4bWFy
yXzFVq+FiSKPMggonIdp4m5DnubKEepgDMJu7FjH/quF7C3HokYMwkDrEpHB
KdZC+vfv3SlFOnj5IkzLiMfj+Q1/XejCDihb4LGGu0UOlq6F9uz3HdBrXuk2
9iY5WAye5yd52wHuT/o3MDbLISx236Luzztg2X6bzyPc5ZCQXHmFmlwJtkdd
ey8y+Y3/fuBW9jAFnLo9yVl2ogh8fMZOFZ5QQ0PLxmX8Vik6N0zqPkR4GQtB
+hXE58m7MfPEeYzU+yJ0Nghe92yE4XmM7B8mdDcIJubpUb6qa56eYGKenmBi
np7gh9b7Cxh8Mv+3QgwL2Uwy/0fMnxBM7O8EE/slwT24AbLOTrK/NPSyOJm1
jvR/ONR0hX5PEoJ+vn0B04ASr4f6d49+c3x0sMtvpaHsYR203EuOF4Soke/Y
aMfLFEpMFYzq6P9A1AuPD3gew8UaLVzHroZI+mLg3OfJW4FUC70afzV2Pq6D
DwPanbmX1aA2+tsqbW5GfbyR8bHOTJwJPYKYDMMBYg35vDZWJn4UzS+HyjKh
qW1VLKye436Zel8KT9e+/kk9kg2vrlPc2a0KMI+17+uiLwUTtWCKcKMGwJg9
XhwrhydXr4yW6SqgZEWxc77Pd+immNzAcJbD5h513kK7Atg0P+s7L1IFlTGi
jdy1lfA+9OAdibEO7rh3ttHM1WD8J/0Hi90EDSYlnbSDSng8fbapeG0TeKSK
GMIjSvCR5fxguTWBoHAJXXxICRmzxlazLCqA/vDuC/u3n8Hm2vdkwWEZUF65
3mPn/IFA5e4bWLYSZhhqq1lPy6EUeu1k2mlBFzuJj3koYeaQV3raJAzMGq6s
Y3/RojxhmqlJd4qjHnrJzSNpAS0wIJS+l3NbARVTb77n+LfAsLdH0nh3FWC2
K+aM5B++fnCjjHa0EWbcXxItKlGC4PPTWMFhHRyI22UnVKnhdHF3jOZUDZTq
DBf2IXx9/M/W91oV7OCd60YZXQWVZtgfXmQ53LmKCdOiEgA8bzyTGMvAtVvA
VPvRuXAncTqXvksJ7sKzItHvMqgfkOfETdXAQPY3d/YlBVxLSJkv3FgJM5+c
tLbJEIOm346+FPwcZxzz9Y+krBCW7jGsYFmo4aPRmCvUiVLg/x10lHmhAlYP
83DNZ31Ffo6eaZ9tbPZ/heqpH5byFTKw2Ptuv1AgQf6O1l92/pXESMDpottg
2WIV+juijr4kpD6EGloBT8tb1YwILfp3wv+xbf7M6UIXFepzIe6/zUF9Tr4R
vCTnBbr6ytC8R5fuPpoX6OqDIdh35dKbXCpZTyD6zggmdPoJJvpkCJZGpReJ
eCQTfWlofejSryGY6KNB60OXng3BRN8awUQcTzDRZ0MwoXeDPn+X/giaHwiK
P4HRyPqFm02bO11Irl8Dpl+Q08QkE88TwUT+FvX/n75vx6WS9Q2fS7bxHDrJ
OybsuysQkesdMQ9KsHn+/O5iDrn+pVekXRDxSE4628cbo5H1EO6VMEzKIJmo
p1A6jx2n4/tI3+VFISJeM+StKROKGhTwtOHAuanONXCo12CPL391sLXya7jI
A983ym7aClPxdZP+TsKLLAPWtt23b61/AqtOr38hMZbCzT3XZ9mPzoQoSZMf
fZcCDL4POs29XwyGk+86c1PVMOP6yu3sSzLYxptjLR6lB53DNSOKoxbezM59
JfhcDa9X/7AVvtBDQq/LPIxG7r/E/CPBRP8EwUR/KMExnvnObCbJv1/HtnR2
klzBO1XG4JNMzIOi69ulT4PmS8Lu6Ghi7P+7/ru7/50pfC1H/XbEz20fjTOU
xdVBTKP6vuS0GsYFNkSNyKgB8XEXR+5UHfRq7nYYu9sC+ntyM0qIAu4yUs5K
WM0wklPD5PdWwgvsSgJvQg14TjyvZBjr0feZ3XN+A2MRfl45ln8Kk9fCNY8V
kSJrDRw+uTSXVfKP/rCt5TzuZXJ/uQVTndhfSCZ0fggm+gMJJvTOCLbf3U9N
E5NcunbA/hLWA3JeImC8yWdeOGKbZ1lpc/m3EPPP2XrSJ5Ovj5kceCGYS/L/
xguo1bDP5jKTK6uCsphDR5lrK2BdVdbS2sgUmGs80JEfK4NBa/epRb/z4Kb7
u8GyfipYWMC1pIyuAOzdeg3DRwtN50UfBWVKYB/P88fu1sNL8XMHvkIFY8sU
iRxlA9KZmTSK9ppD7wCnq9f96afkYDh4+OveYzqgY8zRN20488euKQw0b4Bo
bcy0VQ9UUDLm6mrmoAbYbTB5Af+eCuI9Zk/iNrVC7cw16bwhCgj4rTuDxWOw
7EL0CPFkLfhuqgwRBTTD+ppJZpQmBRhFxaawsluRLqZP3fpTksxWpD974AtU
05xqwHRV8H56qQ6+pV/vKy6tR3HXcsMftwRz22GxNnuoLFEO/Y0jI3kTWuDu
C1939nsFjFW36TqntsDj9m2h2FsFfp5bGSrZWgWaZKPV7C962H1R2yzt14qe
S+fcc1mhfVph+uwUeQjO1t/ad7NXV8CTQ9dUQkEK+A19OFv4WgbzB62cYyXO
g9zDDqaUvipYl6ByEI7A46L08mLWPi3yrf/xsYPFf1YGGWd3PPWnPoHR/R+N
lBlKQa5z+YvRMlFfkutyyQh7fjEUJlek8lLUKG80ffC5W5LhepQnCorrncop
xkB1dddkYW8tzOisHCkcUYv06MPubUjgaJvg+DKtSDBdifRvI240DBH/1YPd
3eZKRlg1ymOzH8Vox1W1gHgUvS7woAIovIbrkrfVSPeTqOf68XWPRQl62HTH
YAszsRr12bpdv7UXm9sBdt2XW8u4cnCSpWSxltdC1L5ZLbQIDXQ/7n1FsqQW
VmritYznGmCeKesrjq1HfcclNzy+skpakI7e6nGnKJT4KsgJsEzj+FQBxS5Q
xhBVwcSbo0Mlvvj5ZJs+h/e7AsIOPJtmduQbnIu/+kQyQQ6zLDZuFcfmQ0kf
u2P0SyrInbU/h2dRCbN3ZTtyVVq4qHx9lJ6jgi2l/b8LDlfAzbSe2xKffgET
1eCXEt8KoAyeecH7xxf4YB93G8uWwUymSaPAWQI7HT6eoEtkoN0z4hJ3iwT6
X1nnxbRTgQvr+wPMowLlUV5uz9nNxvfl/bLGOfyrWjQ/ZFXVPlx8Qwse5ham
FHzffeF009gqoBJaxljtPW+eDobhMwo5ZXLwqjZv5wX8Bffm/CjRfDVoxqaP
kJ2QwvSTY2ppT6vgpMWGNI5zFfwvLWpRBf0M/P2pE/XwsNo+iUerAs7AoCVc
hh7lTZx/Lr3In5GJ+mLix/7KlMQUo7yM+cIXl6ihMpTn+VGtmSR0If1yz72J
cuIWa0C4+OxAcf9alAddPGerD32XDunZ1CzyXMvm6KBvkvwwXaKGso08T3or
BtupJc9Feg28Y5tsZLZj8H7ukdNUnQZ8D932pl/CzwHd5ifx8M8xi23mR71c
hT7HNIZ/K8O5Epz9nHq4bxdD+fyAMg6rEt5995tgFiiGq8FDf/Ei8XXobuQP
LLIQ5twc9UYULQfH5JTN4o+FoKpMeiAxVkNn662eVuZSuKX7epZKVYNbn4gs
Hk0Kjqtr8lmz8XX+c9VNyWE9FNVzrlOTy8FnEn1VkLkIZq6g7mAPk0HPPavc
ZCdy4XpENEN4Qgmzt3ux+K1loG9d1ZNSpIHqfq9qGfEK+DH80UvJhArg72M0
83clw0jfBSfp+D4eN2D4F+rEPDiZUbGKq1KC+Yfsc/Sccsgfe26EeKkWfuwa
SBdfVUKJ+s4znrIVtEONV3NHKGBEVGsGQ98KDise2orx80fweflG+ogWcIw9
uYj/EV9PRY33RTSM9K/hpI0WUknGZOfKGRSSZ/5tdGPKSP+hfYrx8Twe+fO5
Nzvnc7kkl/T90NrJITm6ut9uuhXJxHwJwfO/nxstZJBsenRDlOCfnzdl9YsS
sEj+dlpmx2eSvLv1gZ5mT/Jd57Rd9H9+zlviFybCSI6/9XSguPOf37daEoD9
83nSvQ+2dt4g2RaLn88V/PN+HgWncvgkS9sWp3JEJL+JGuzMFpK8ZmyOseyf
v+cd6zyDRZPsZr41m/XP+6MnT9vIlJEsnqMbKJaQ3BY8+KpESnJfu61XJf+8
/sKAYGPZT5If9cxZzv7n7/e9e5rNEpN8rtus+yIeef56ZfhAy7KQgumpl0us
3DLBZAskCQ4rwLfI7jI7pxi2vy27imWroTbsr4r1VAafegdsY9rp4cVy68uY
hxaWbBtjzT/YDpvmvb9AFcohc1rC+GaPdrhymaJk4fF094ITtwSe+HnaxUDJ
eiOHvh6+1vx//BN+eebx6MIy6OHe3/oi9gTKVk9P5XzDQNt9dwlrpBYsBv45
g+EsUbk103D+cChhBftLDRjE9LkjcdBB2Nx7H3jvatC8nnHSlDlcQR3pr+Td
I4XDJzlh88Jp4jkVcPF/gWsyWLyt7GF1VwavD2zdIebkIV07Ik+f7jH2uWid
FuXl/65LW8vMqUNzKHOdeUWM3DoYfeONGxtnM87vp4KEOlg013Q384QaHM2s
hwtj62BJ9JJyVoAa9tV8qmFNKgfnsMXuQdgbEDtu+yIIlsKpr+vYMkY2jH5k
EIqpFaAZURRBF5bC6cbHnsxlGnj5KaaewZfDkPshbtziCrg+nn70PPYNfOvs
JojnyIFx6E6381g+0gVz2d1ntIxRifqAif7tRS9/nqFfqgR/8ZlwK7d0eNSd
s5qrksOLhd8GuTz9Cy1upmPES9VgmjlmsviqFOkD52QOvSOZqYM1f3TfOOk1
aM5nyVL6WJlhBRT5y7JljM/w6MHPRsYOGRRaNU225/+Btnqvn7wUJarzrVth
ek8yXIvqevWCmYm8yCoY7HtpEXct/rwqL61n/qmFxawfZ6gTNXB6a2nct5xa
OLvsyCinSRooe3ViUK/6GqgZIks2MtSB25C63lZ3y8FgeZCBrfADvDsUWsxp
ksJEn3HfqbIc6JtmLxStU6L7zHtk/mlqnAbtc+HKlkPYgxbY23krRnRFASOd
Xw4U3ifZ0SzYk3qnBQZnUgo4eHyxePHLL5yIWoh1zCxlrdOAnnV/AfthE1yd
pGRx1yrBeqK8ujO4CWJPr2aztyjhwqLYo0y7CuioMygRX0oG2b01jvyr+PlA
woujQx5Abf1gmU4Jr2hGHYyicrjndEvDcNbC9p+OAsltJURFNE7lLmuGnVic
UGSGn8/S+nxnuTVDnNDcjGKsBN7lqkHCtc2w7fRxe6GJEukV547o/pdlpoep
kTbXJTif/PB7CZeqhyY49oc1tQbNDb+Lf7OHPrkGfs+7omT00EPDJwdb/i08
/u4j2MxerUJ+ltOyzYbIEhWw5vLzMpp1C9L50nZ4PhD9rYE5peztzFE6mLp6
a31n9wYwvN95lP5MBWWbPQsZxg3QfYdHgiBCBX4Xggxkdg2w7PrBakawCsLG
TXsuqK6F4PdHDtMHaaAk1ySz7+I6ELy6bDc5Vw3v683jeEvrYGIt5HDwdSiA
sba/eFUdxB2Yp2ekq8H4neUO+qY6cGPbjRZ/UcPq6DYaJb4MOkxndfts9Az+
xtH6ikc1oL5Kw9e3hgpHNEAzNXYlN1QFmcM8jGXlGAwp/XWQ3lMLEZ8DHNjQ
DP3aPvIxcyU4HrG14o/shNQFtKX8BXKISLJ1offvhNURwWu4i+WwaQjNGxvQ
Cebrdj6R4PGk3/kp/YWGbXC8Wv9YYqmAwpOvMxiWbTDK4vRNzFwBDuHaHfTK
WkjM6GEnHKGBDZOmf+Eoa6Hvt47l3KEamFcwhSEeVQ72jNLH3RzewJ0p2UZW
AVJIsD0hZJpkQ+35Q/mcMjxOCTJo4AWUwqrSAZGi+Rr4iTGtZSfkoDnX7QGW
XQFGTYctF935hvrOfAo+ucpS80EwbdEC/lUV7L8X7swfVgntF2XmMp0WxjjJ
qhhFKihc+3qQWELu/wmu0c2dN0j/vJmLxowUXiY5qFvAaYxH8pTdP4xkP0l+
uREm87+Q3GERdlkiIvnRtbVObCHJ+/8wclnKGphvYa9mDNBB2rDBY4TlNbC3
fpyaMUQHHZ9oEp5BObgGYm/ljBhwGyR6LtkqheSO5FoRLwve7tviR/+kgImb
l86mUErRdf212fOzYK4cnicfsxKubYTQTbbRIr0SLDceWFF5uRmKyhMpm2oV
cBI2nJUEN8MLBd1GjHP7ncXr6JPb4PmvA+nfepP+ylMnOrwWZOqRnoLdQ7ul
3D86eLiHP42/qgaMI97O4kt08NuRN42/vgZeru8dK0jXAWXxgs5OTjX6vM4G
a/2oO6ug2rskCBPr4YrXr9pFFzpAr3FZ88FTDheP7/KThHXAh1MB3a085CB1
7veTc7Ma9D5edTS9HnyOygeLb1XDJF6dnKHVwzOfh/2fzI1A/3/jTZtZa0qe
II7sudNcLCH3w6IN1y5JpCRPx5wMZf/sn57MYyexaJK//khM5ohIvn7smiNb
SPLJHCdH9j//v3OAdQZLTLK+TXJJ8s/fD1/Zw1D2k+SnB9U/OC+r0Rz6u5dm
44Sp1WjeWXz55Cr2F/zznizqI3uihyBVegTvZDvM3sKrZ7yUQ/SR+Auia+3Q
zTbqk+CpHLSuQYW0m+1wiVa5mvtEDhVnP5QZUe6h1wvI/DV+J/MB4mWaDZnj
J5PXr/nr70j/y+GIx3InuA2Q3SXPdxMs+7wT3ELsnrK8SdreCq71B25iNAVY
PNu/nikj7+9n4crBwhlN8NmpO5d+VglLlSGBEqcm8JzRGC3yU0LbJv4LAZ38
/ZNeQ89gk0i+OLWnJ51JsvHok1ckc0k+e/jNe453Cxy7Is3nPFLA4Ak1A4VH
W0Az/mAaL0yB9LYq4mMSeZ5VYPmrrYa2shrNI9zuOdRcKGgD8YzAoTL8XNDa
1mJFoZdBUlDvcxSrc2B9xKOlE1+MN2vhCpaE73+rhpy5PrkWRu+4oT2SqIHp
D/NieK8aIHSn8UfBEhXQzVlJnH9407Z33WTPG+DWgyfH6MtUyL9rroGdjrFD
A6syvU9j12vhmtfOM9SdGphb1baeGVoLH3dWXME8NGCf7L+MmdYKYXccX4ts
FcBa8fUZL7MVqn+UBlFtFADD8haz5zSgvq0ky2g6/3gjMHa8qGEUKUEbuFPI
O9kIF244/OQVKqE0urG/uLYW1YGV8xMo4vwOyMj03M9cLQe3YlszYTHZL5iw
x+m8hNUIKT/KpwtrlCDtX+HK5DbAZvsP1YwdKmDllLwSJFTDUdXAffRYPcr3
Kas8ylkH1dB7euMwIX6/d5j4fOPhTOjJaD8u4TBfKNH5fOWs+mLWdi0c3Ohp
x7+EobnBCeOeDuEv74DUpd5K1lE5rCoJHiPbUgG2XzLW5FenQBRjUiNDJAMK
6HyENXlgeDnjB4+mghkrP2ziMipgm9TnrsRXC7q21g4apoSxfxcMEOPrdS/5
wFSevQYq+xqUMrxrUZ9f63rj+VzDWqQD7l+3LkxkVAtT61dqGVINPHinM5F1
w2D9g5oiVoMWTh5+nSDKI/2nc4tkK/mScmjs0y2k2+lEKExzDaYyZMh/evL0
88NlOHsJAiOZBbkwfVTdFvYN0n/64iU69v+YOvO4mP7vj4/0yTrWiMkWYWRf
JllfNNmyTfZ1kKyTJFuTKNtERDS2iCZb1olIMqgkjKSSpkI109zZZ6ppL9Xv
fn6Pb7fPn8/HzXXvnff7fc55v895HZZQg50BJ33Zw+QI9bs0WlzW0n+aUHz5
IDDrMWDUZ1uC5Fv7fWsDnpeD0/vSUbqrHsa7kdEikhNnfe1BkH6059Nz9U3H
zWgylPzhbDVg5/6y6fyjZrQaEhIu227AgEanVkRJFfYlaA4yB5H2MC3Az2ys
wk/x7UaGvZba/11476CRNVUPSWjCVH5yOXzzL7wSkXyTM34jfWwj9gZ3DqaT
9ph4fe+UZEQjCjq6tbY9Qq4/t2KLXh4ww2Ij3Ye5zwD57V2dpSer4Lwn+ydv
nRa0bh4Owv/kR95YsUFk1hVhfMHB57P5T1D2Lowl1RchdPO7yveCJ6h6QtvL
nqfE+NXZfTyZmVjQk9XG1lWJgmHTZtk6ZGLJP1Euwvvkd4lbvVksKsD9XTm5
vGg1XIOSz3BvF+DxOnZP4h89peNg8fHgQ4mVHuvMg7ScTiq43+rAFMqqEd6o
7UiL0WC/x80mj9xqKh6ysGc9Ek014+nERyu4sQYM7/88XjDZjBjvud2Jlwac
3zWrkuFjos53h/3q80ykNCFQt3SE+IsRcy3GtLcNV6Bu2aByoSwFN3d63DST
7FZVwS7PT8Gd1Zm/eDUEtG1sEumEDHVJ/3izawkIcwM0EpUMjTE+TyQrtJRO
xbLe92cKV5Lf8foxG1qMAmvaWgfQyedo1qFofq64eR8TRJ5axMmyrcU29XgX
v/22zIP0qyw7PBCQ/GVWySUzyV+/t14kXKlAfP/SRFpiMoYOvdufeElg7q6G
e+y8HBw9MruMZa3Fmi1JB9jDFPjzU50s8DGgi7UlgyA0cMyc/kzgU4UXsuCZ
wm1aSJfvsBGLarH7UIyjWK9GzEbBI1EnM9zdF6/gqslFtTrqODNAgYFNCe9o
tBQUb5DZ0AIV8Is823lD6xToFrks5/8h0PBbcZfNlwGvfLWcAgLRT+anm/1k
cLlHDJFO0VI6Ftc6Md6IpmoRfHJ7e1s/BSIbBDWMcAOlU1G55c1ZM8kzJjx6
InHU4szMM33Er6tQKtZ3oM3Q4qJYWs6xKsKzW0M2bLZdg+vzOm/j8opxrm/x
xqh1X1EdGeMk/qLCOEPVAeHQX3CrcWtPY+qQYf+ugMdR4sni8l8cgRGCH7Rj
dDq5nofXljYdrcHjLW0IjrsGY647nZT51+DqiSsSkYeG0vN7zR/jzh2pQu6F
pDLlsyZceBn8izdAhXV56pOShCaolHaxkn4qSq/KY9Lw4eI9JjAWb+stLSyl
dE+u/FuGHl6CtfUfXPisEuzxZVyWnKuixglzhlscb0I9agfabuSuVWOxxdg2
0tH1uFt+/BR9Pbm+EA8mCpvIuKhp1yRhkxGaTy/8zN+rMN4rqJExQYuBdYzf
jOd/8btw5Wk6oULU6X2XJWurIN7Ws5GxT4upz4Y68VdXYcoF/SL+fi1Cbwxr
S7Qi19vxu6/LNHq8PXxlJ5cnx+TD8+pcXseh90+nqeIvpL8vsTkpHPoDe0fk
02lMDaxD0gke599zgUOFHHJdlk7peppOV4N/yr6MQ8bVGiZj867t8cgu/Jgs
UipxTz3/FjfsB0ZP3CY0O2sQHKUxcwRFCD7XditbpMcMt+GXzc5qeMSu6mBr
luOmbJ1V58Hv8b593W8eh8CysD5tg5x/guF+/ankKRl31nCGEuvl2P96aiCd
biD9mjCpgKHBqzanoszORei5dy5hJw1Fe/fRU7jsvyhNWdqX+EcNSbm1Jzes
iDrX6rZuHs1RWIToNj4LJgmjoNm6fRvzkBnPto+ZKtxtoPT/zMbE4dJDKrz5
fznmEtx+ND1K8rQEPefHTROXFYN3ffl5R+F3eMbqMgXmYiRPHVokvPIdPlEr
O9M4ZBw/fMw5LvsPVQeZXn81jj7rD9Jqa4o4T3VUH4LmOvsbI84fYW4gwHQL
fy7qaKLyFZvj5iW/Mu2ktuS89uQ/lQ0gv8PsPw4VjOfYmv3EWWwnh/3pwLQY
u+fw/MAIZAYo0U481Y1Gy0Ly8MXWtEAlXgTc5YtbZSGVIXHj/1Fjf8fkK2x+
IfocLyU4BWoM+OOQaPYrxECf9YOkU/SUDkuzXZndd1VrWz8VHh4NBH8Maa/G
8O5LEg0Y1CXxqaymCOPm3OU/txMjYNumQOa/+W5WCZf46zOR985iCf/ffLfN
+C3JKQCr551B0u56XN7o3pXGVFHnuZoGz+s2Oj1uhLdZzW40wzFyyECpnhyf
2b3sxIMr8GnFpGN0ow7dLGNqmgZVoO/7XT0Jkjt1it1O31SLlwf2u/H/Icep
eehaJq8WbXbt9mS30lDnvQ/9b/sw+5P2YbRiK/OTGY9fzhgttjPg2I+w4UJZ
JTqNHJ0gStJibmuhrXhWNUq8HH2Z1Roc8J4fJZpbDZeb3xbzKzXYF277kZdt
Bt/DOk5kbUD8xYnnZT/MuNYhOsRMsvB9/27EeiMe2Z47Rn+rwxlbXi5HQPq1
P+w7E3TSP349JcLsXIyB03ttjuojRUGXP15skQpH/Lv6CoPyMWn7kRnCJnJd
9JxfyKMp0b7MZbzQv4z8jt5XZeFG3HG7dEFG8mubP4kCkrMMPRpYHgoseLAk
2JP5AczlrhfoWxS47Wr/Szr8A0a5vEoXJBPo+vzpGT5dhhOP9e7cDwQkx2xe
MDvLcOr6qkjZAC2lO1HQOmSC2E4La+9FDSwXBZTm2j3MAAOVXz957SgrWqAB
0n4XImUkh1vnR0lWlFDnayX+nSYKV5JxnLubBS3GhBWbDEOJf+T4HN4x+Ssv
Bo+/DJBIrOQ4+Ee8+ZRPDJ7Hh9SyPJTod6LtREdhJtrYJYfQtyghXbZnA3Ep
Ex27jP4qSFYjWB5ymE8vhLvv5g3cD2o4Pq+6y+xcSOneN+vINO9rUOfr7/Z4
MQNMlE5Mr6H3LGiBZNwWF3hNRrIl/W0o/aUCGQ/PDB0m/ojV+8vsCZKZC9b7
Bj3/iI0eXHdudxWyx83Pl3Fy8TLtYhXLWoXA1i8sgpbkIuFN03jxHi2lc9PZ
fsJngY8WB2Ju2BMk9+wu+oeWYaB0bHiHfl6TkTxiQ+EnQZQWswvquPz1RdQ5
+43Zo8s53CIon3GXjBZfgTZsk5xlbYZ00utrsiIDsp+XxQt6mql6iOdTAu9K
coyUHkdz3L89JqINLUYPt+MljtxHjVQecCTrxhjpm2K8KzkxpBPxDVURGSki
STF6Xlhx0FPzDX/PTrOwJeNG15+fVkt5v6k4surumGP8Xb+xQlnwg+ero/qG
PF7QfTubr8PzVms9uOVKOGWfOUR/aaLy+UOmJnYmSPaRv4gVeRrhfTK3p7i8
Fn/zLufy0tQQ3ry3jV5biyklA74KpGqkHbBiSafIMdD8JKyPNBZ2hZO/iKbK
kTnBjZWXEQtm+n0r23AlKvO8eVJeFg47/g43kxz5MC+MvysLxwbPy+XVqLFp
YtUzOlEIWchhT3atGh3bbsiXqApR4K97IFmhp3RfxhP9pgtXkn70OJ8utBgV
/AbKIsw6BY6sWBfqxv2E78Edxkn1CvysHikXb/qEbL7vbvY8FR6diu3kycyD
g+Jxa1tXFVas7jPR1iEPYzJ7zxTe11K6MycnLfrJi9bC/VfGdLFbMYKZb7oR
/xgp/Yui0JJ7EityXAZ3V3A66RCV5rWD212Bz/d7G8WiRNRMuN3Aslag/zz9
tE53E9E4qMsU8R4Ci8d2m2Yr/YmlZ12+C3wI1LU6tEX69SelK9asu/O0mIiU
kfxiNC1HECXHi6wlBZxRBkpXp92UIB/maDIOKXDmMzdoYN/0/pJsQAmlW8Tf
VjFMbFcC14l9NSwXE+xf+YkFPtXoFPUlUlZEro9LS0aI9xgpHaSvbwYlCXyM
MBUe6kmQvPVfudbQEuo+kn/bl5Oc/p35TjCwBPGiyYuF9+XIjfz3QDUB9Pa7
i3nRcgQVh+X6hSSgW+2vAcQ/BKJOzsw2M7KxfVOXlxIrAotWPPwr6pMNL85h
M4v025p1nj7EPxPQt2hQkHdFZCb58/1+KYJkPaU/06/L0lXcD3oIT+W7CINI
/2Nhh3jJimLkPmnYFCWRIuElFghXFmPM4u/PaYlSqo/ZqgknDgpl+ehBl/cl
SLb8x3iLnZcPxt+Fa7nddZSOlLfHsRKWtQ5OYyftZQ9TokbzxIlPr0Li74hF
fHL+f3sR5kUnuXk9GMcPnMSd2IAyyZTZwvcq0BwYVcopDVhjVWRh+04Fu/TJ
MSKPEuzOOO8g/mLCjbpJo4QrK7D2SnoRJ5UcL+MkEsnTImqfreH0+nN0uhKu
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
VEXpkI0yzJwsDDIiaNv3H5yBZiqvfdrHdyaGvRkPQzecNacb4D5gXVfprkr8
PXOhPc1Sh49NwrncJxVon7X6kURArq+S592kjypwxiu6He2UDiP7RollvkVU
XXTQPvZRJvm+mn0nxpUnpKP4q3IJn3zfoiufCiU5vzFtkMBeGqbDfb8h3WlM
gtJtXz9sR5xIqceyMducxfPI9eqey8ElN18gJqitNe3f9w1aoZRFZqF94QOC
Q77vTPOuS3R6EbY6zn8l8tBTdWWJIYZT5mQTVUfmdHb2JYlVNZ7oGw4ybbRo
8zVwP93ODL2NfQ0jywDC6mIvMekvL7x9hc8crYFvhl0ZQ1oKic2QOxJy3keG
Kdex00upfIdeilMH2PMU2LdUtzyXkwwv17ftbV0VSKt4c89xWTL2TXKYK7xP
YEiQ3x6xKAdfRNzfvGgCWSuLr3Fv5yA99Gtv4h8t1UfWvrbpicRKi8g1E0o5
nUg7q/HUszwMVP/LAI4ogL7FgBXtDoaZSZZGLbsv8qrA1oHnI2QvSD/B9kEX
B/Ezar9lrP7fADKV4kV3xFI60aIParnUvEssauk3ltCK1dWNW0jxpNwpa/j0
4hb9wP+d+zZzieBIA0PaoufpWtD/O49ppPh3RFawjNOi1xk873Z5U1OLPqdT
5d51THGLHmdzP1Dq//tffiSlZ1pDXBZJWvQ1Tbfjmr7wWvQ0m/sZNDMv/2K4
xKqFm/c1m7m5byulz/m/Pq/Uv/9fnRjVb+x/fVwpfcf/1Yk1c3Mf12ZurhNr
5uY+rs3cXCdG6a/+rx68mS++f/6Gx2z5Ps32gXr/nstCJIIWPdIbyfZVSlbL
95nnVcmlEy16zKojMQbGonKqD0azzo+yeMGeoOdfKJ0g7vfhTYIl+ZTuj8fl
3IEEUUzpJDFm2aYKonRQp2sd+fRqKm/Tf0H0W17Hasqf8Yk9fEoWVQXF89Kf
vAVaPHYIDDD3qsA5g+CjoEoHHdr70G0qMPltiZFVo8OYiWw7Mb0CwxYlTBc2
6fDId4ofe2wRfm2cd0csOYWY3gEH6BfKsGz/iXReoBHT7nXwk2U04pm79zL+
chXuxXXzk6U1kvP6joazQoXk2GeO3PRGZLazHCElr0c+G2RselIHBzieop9W
Y1SCQdsU8BdvWhkdpOUqjHnFT+NFmxCfM3SkmPRPI1/O7CbVV+CE4P4jyRod
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
3jm3JoWnMeNqhst1Gc2AXbWyz6J9csDJrcBv4St84fDDzVlK+D/q3Sha8AOD
ohme7LHke55YHGV2L6LW+eHjL84S9lfjiGBDPK99HaJSgzvRUtQ4sGjpj5ft
6jAufJkfk+Tmc4buBy9cdOuXirOpfW+akxXo8s/K3i69U6k+lFW90jt7nsqF
uu/73WySKwrHLCVO5lLnEuPeDHskoxXDef/GmULyPZ71+7VASPq0zToNmh2e
i/hvtYhIa9Wd+GPAtm99S1kSLa7c3i2kRxQh6uWV0bujb+NI35SHIn8zpcs/
hDnyjuSyidrXnD3mwBN5ZSnelo/xD1lpQvm5hY1NJOv8Py7lkpy8r6YDkVdK
9U1z6TpnJ/NXKdhrE9N4gSZkffUtZEjryDhL4yIMUKM+tdLQ9KmO8r9WzM2e
KFSbsGZT16uyDCOll5Wz5FSiQGqETreojOMlR9sJrFWnzHGY7VyaLEpTwuvh
xXUE6wcir10Qmh00MLU+6yZcWYS/peO2sk/rced5egXLWo2yui5bufXFmBFd
uirq93cqTjj7rMFHuO0P7j9Y2o4Wr8PhoKTfPG8CrVtV5nN6mjDe0TKQPtJA
+fl3Wq2bw39rxOTdncLoW+RY4RicdWllHC6nij24H5Sw0A99w+z8g/K7nO7k
0BxdirBgv7kNLVAP05Led2Rk3NO1pkOcIKEcQ/uyVnPZeiq/7/7r469ELnoU
+XnNYVf+hdsLiYVtlgqpcZ5z2FV/YVtuO1uYqUL8sJl6Rr8KVP0N+Sgw65DO
XpTBIblIEVjEIdk7bbKCda0MNhle/aX7yfn2/sdrweUy+DWmurP55Hx07jFe
eKUM9pcvpvN8jdjzT+5NCRlvN+sodNvddSr3Qz1uZhG72CPVsPPKui/4XA9z
q8OzhMPV8Bjp9pL3sR5LqyemCUaoUfIpOzn0fT0+PTvp4DpKjdJzRfcFifWo
mMywsCW5uf9Cs73LGOpXyPqP3uOC3mVtCLsWvpmzcCvTtoWb62WbOZ8fUciy
brnfDLc2g8T0luvN/Vib2Sdq/A0Jo4VLwx6m8Kz/oy8p+D+y7jwupu9/HPgk
sg4h20yyZ5AtJlu8aCwh3JItGt52TcgWk623NPakxhZiEhKakC0jRGgUiZpK
0jJrMy1u+6L5zef7eN/7msfj9+fTa24zZs6959xzz3m9+FnE9D+wJDElXWAo
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
NSfUEP5W9gzRVC2p15p5xT+P61AKtWXP2QJvIzmniLXOfRvvUTGqXh3ih679
gBNxbRwlHVXY4sjxFQ3NQX7n+51p27TkHCRz37157lHSx1UxcqtCrDfW7/Xh
7CHrDvrTBkZKHfSIvTBrDedVBZlfqurR6SNfWkHVAz10mS54RbFXh6NljOcU
3/aetJ/ewr5hSo9k/jYqfxb6PneMiE/ly/YvH/hQvI3i/nHOKzmbKV5o17GA
3cLO8P7GkRwuxKTT/sHnvO5gX5rnP7S8EtDS4pFT+BXpA63VXEc1+EnuWyTa
PAw/FPtSfFUHD6t9KwTjlBBmLgs01ZRiQMLzvwyjHllpz+6a5hfhmcu9xfek
cRg7yNWL85BYB8ePZnhEZCLw0B+OqL2G/N1Umdf+UW7Wk8/79OFT1OxkI8YM
LqhhBJbi7saYHDatltRZEN9cFCxtXQvJoBv2kt5amLRWi3gDTejRXdyOlk7E
HTbzg6Vta9FrFyrYvbRkPWD/QUv9Trm8J+v/fMui250KzSbr/byHMIYo6cVk
fd+IH2tThTIiTpz9n7DFU/L37pCOKrfjT8nfL00dfcjFlmKzbjuZb7zfOTe4
J2UPp1WteSNMIa/nOev+9Mr4FKo+LmPtCY8Ais267WY2z+Eiz0skU51ptEzy
erucgzlMRiZp5/Xco5TTKDbryJPnTbM7vGE1U5yw7kiVWEqdTw2i5aik2dR5
lE1KbIDgDcVm3XjyvOl/c8HM7N3l/RWOoIC8Xm40I5B3mTq/ku2rGcH0odis
a08+v2Hn2ngcpDhk3bFbJgZVz5caHd2DxqLq995dvLmVx6TYrFtvZrOegpkr
4gbu5gio8ymz7iB53qT9d7JEQLFZZ9/MZj0G8v3q8mG6SE6dTx1ZV/FKrKDO
ow5ML+hEy6HYrJtvZrOeA3metnGLtZJdSl7vZ9ylM6aZ1PmVeV0jf+//zREg
zzP+pwdhZrP+BXl/O3bRMnjUedTdumPdZK4Um14U7KY7U7wvZdscXgv7pLOz
g6UWVH1iZlyeM4dO1SMuDl/qY7Kg2Pw+m3mA1+QYYQu7amLPJsUz6nzKf/3j
eL6UOo9qcB5UwnhO8eKuR2fwJBSn9+3UW/KsxTzMEvUW+mbqfGp0F7+BIj51
HhXZWLWAs5nihnjnSCGPYr/U3KPyTRTPvPDyG9uGqn/Me7H4rJRB1TuufPgh
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
L5wP8GAlo5vFyDWCk8WY1iq1lc+oZBgS/b4Ki5XoeD8tUHBOjp3rvoyUlSjR
KX/7HFqQHLN79b8rn64l5/J8jNvVxJipxetbtSli4rqhu9/tYd0xkHN3Bnax
SuffNZD6zOY5BObvcypVcOypXST5+YTjH8yzlT0i7WZdUNI/b45/SzzopP3r
t4FqSatk0m7ukyX9qf/lhc1285wDsr4mJCtE8CadtL/hxHc9ZaLsZh1Ss70x
r/g+RyCn/KFZPR2ZPnLSbu7DJeux/pd3NtvNcxTI+L1q1W+pA1UPOUyMFTI+
ZTfrnprt9n3t93MEVD2km/Pi6RIBVf9o7vM12815bfL+/29Og9n+OqKsGy1H
Se2fR9y/Ck2U3ayzSvofn/f3VrKpePIf2sUSrgMVH5r7iM12Mm/+P7t5DoTZ
vsd1/DOxiKpnbD36/h6WhLKbdV3J+P5/8/jIfEXur8MmCyr+M8/HIfNRIzrU
Nnen7B087rRSPqPqF22FUSrGc6pecUuF0omXRNm58hw3VhJlf97Tcwd9MxUP
po07vISzmYrvbG49fyz0ouxNxx5+4npRdvN8LrI+9veil3wbKp57P/dUD4kd
ZY8a7TNOYEfZrXd3m8pLouoRWadt7URJVP2hZ5XrEXk6ZV+dO/+6OJ2yJzKK
w4ReVHyXbV92WupFxWu2d1ma5iOUvYOQ2UZ2hLLvTHlKl9hR8dyxwgSTwo6K
z2QL/nJZYyh73DgD3zSasvsMPB5Mb1WIsQs63PAPGI/JP9ao+LRCLAka+c6y
ZjiaoxlvhcOJ9+DSktmC5Ub4Wae5cYYRfn81TcNeZsRl5+ADnCdFOBk/RBbc
8zWsn83uTYspwpHsJ3If+muURhA7dlclLLt0fcVCFjy6aHRcSyW6fN/TIJ6a
hXm0HIZypwZv7GXN7LxCfNp4Wir20GDq1UNiU24h7rkKDOw0PfaWdLknv6rG
gNfDz5tkelI/Do2bC/nrSxAdf3WEZbvPeLu+5zGWWwmi5vKe0mifcWNZ+6fS
tyokxzuvldXngvHy5VLBGxXeH427w/mbi+pHEcfpfXXofZafIXQk9pmuqwfL
mDpcLeuzlzNZAec285fzDpXim2P0PlatDulb6msYPsQ+cduth7JahwiGt71g
zx/cqMlgS7ZrIK1XrGXt/oM+l/uLTDs0+JTp8kfxX/3qxcQqdh81vjy8MVDy
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
WxtRERkbIbUwIGKf7SzevRr8SWuMFy/U4mBI1/WssBpckc+0lyzQ4kbznovy
oAr4Pbx9Ve5fijVP5hezCX74+6U752gpcm0ajpvOV2B5tN0Z07FS9DEm7KZv
rEbkV/soaScdJtjd3MXaakTwfpcH0q8GnD6d3pq2zUjq6Cf+M7VesbQO6teN
p+gP1ajJznvBX1aHTHF5qDxCjWmifC8T6uGRGOEicFWDe/gAW0bEx2lxvuzJ
IgnClY9SxQ2FGO6YdPCpWIKorF7tmasVsKiy3ynjZ6DVv4tumAh+mnwrWLAz
AxYj43P4RPzs5RwfS1fmY63I6MF5pYbtgIF5UlU+3I+viZQS8bSnvN9h1hgV
2YeYgmXdaGOJ+Na+53LO5GrcH6ot4g7RoWhDfqLesRp3nVw70QbrELkgqaaZ
YEZT94umQTpEr5tcxEj7i3ZjZzuJfqlRfm1HlHD0X7yb5uYg6a1BzuzETrIR
f9HjwWWZkKFBxrxDlsqdZfj20UrNzjOC+3hkjNijDItHvA8w5RphI5tRxB5i
QoTr+2/8NAPmnym+JSV4na/NaMlnAyx6CzkCbRkGLOztwfpOvD+jrRxE6jJM
HHVaJE8vg32pdaiY2F+UBdolAmJ/2R4dy2Ntr0X8o28n6QTL7u1SMnbUkn3V
4yMyQsUNNUg5MCub30cLS0vlxm0HqzDBOCDI67EOsoq9scLx1fDb3PGiabgO
s09/P2GyqcBXnxdWymFGTAq07i3rWoGEzsc2cMYZET9kwwF6twp0n9J7smiM
EQ7O3ms59Aoy72O3ftsYwaJ6yDjD1vOWqnH2YRdD84J6VB/gDJcR7Nijmw9n
XiH6h7ldTBJeIucFesq0z71YImw9/onmsLAQg9y2ev9lXIafMtrLtLoeFe06
PpEuVqNveaW+eVU9LPr3CDERHD/XPVy6ohQD3Ed5s4j3UZTQz1q5rpTUrVU/
6z1KsqqUfJ/D94YkCt+Xou5F8EOpUE/OJxzV8f0A2WU9vhcumiP4UIrv1c9W
8s4Q6/vsI2+Ex8rwdu3We1ILSld1Jr/ch04vg2xstYx/ogyRh2p96B2Jf2f6
jZNNKUHrlcGjLJWpOP5qyi3TzBJSZ1guYb+UTiuB+5IeOlFtKtpe79eGeV2F
nR2562T8XORb/d7FIdYts27wuPby0/RbKtieDHpN984l5456xOoyhKYSTN7m
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
oeBKKUTOOlj3+XPYVFMF/rv3QSYXHWo8eBfkb0xwDqu7Lh9uwPhuFwdKEky4
PruzP30Ywa+HPZLTSjC1T0WdgP6JnDsUqG/k0Px/QrPdY7HgjRaHwmZ8EPuW
YOY7en8ZsxTjlp7Yxpmsw585F6LEByvQzbTgK/9uKcKiLOnMukKsuPNfoYoE
tLYx+fyVxPP35OJn+uYMrF7jHCN9Tjx/lj2tnfPz8fyp6Sj9Hz16OSweKRuh
wra1cfnsFvOzPj1PKeXuKkH1n5yuToLP5Lqh+rlnsZL9i/SDI28cmi9yVcDm
8ApnzqpaaAPfnaSXarDs82GasgU/mCCvVaABs0cFPJFaqNHrPxmFG2X4nS5x
40wug2IfhilnFWL+4tq1YyQXyTnTZL3u/3TvzWzWKSfrFbzn63PTqfrllfEd
c2Wfk0jeP9olxLmJ4pxdd9/Q7lL1yuY5QGY2z7U2s1lHn6yP/p8OOlkvGmW8
x6uk7FcdA2NZblQ9csS+6G4eBynOES2/z0ml2DxnyMzmOdpmNuvym9mss25m
v477dGIPiluntW9ke1D5yo7a3lHygxQPEJR6c8QUm+cYUX/v/+d2m9ms80/+
vf/puJv5QKzvVVOL+uWXPvPvyllUvjPhytolAjbF5jnIZjbPSSLzjf+bE05+
vv/NDTCzWSfezKPcE6aIJBS/vzIpj02j8qVO4e9ihS3ql7m7Hl2VMij+6jbg
Hd+GYk9Ox1k8CZVPNTlf6iN5RnFTb99WylSKfTtXDhO1qF+2Lfv5WMij8q13
G91PyjdRHPVh4Q66gOLhL5IuSVvUL6ddj+whoVP52MUPJxibu1O8ek/f72wW
xTnuonpFi/pln9mHjsilVL62YVlbV1aL+uUOfY1TeHKKhZabN9EzKGaZFmia
+VQ+N5L2I4Hbon75+ae3YUIhxfbx7C9sf4qzbvVxZjGpfO/KqPssQYv65U37
LtAlbIoLN1s48MZQvOtPia65sh5H3If1VfZVY9DIha/4J/6i1ek6AatWjZu1
q+KF8yvwQuX6i5tfiur1x4dJNpSROgLmc8ORHR9pqxn3ITiU9VxqocClt/Ft
Qvukk+eGTczp85XBvzFmeM/VvCQduW8EHn05QmJnJPcBL0NUU3NCORmXBZwY
MY/ztx6aR19+8vuosaHD5LLmI38RtWpjqPyPGjUna71Nfn8hP3fYg/NXTf6+
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
4X+/qj/M
    "], {{
      {RGBColor[1, 1, 0], Opacity[0.5], EdgeForm[None], 
       GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
M9e7thPtOXWpvF82hr5su9fmU0z9yLLJs0yqf+krZ8LOU0p9ZEzKx7yVI30Q
9Isp48l813pgBOUcXgi7/7Lc1wF58GvgOQ28M3Al+KnaE4A3mYs/Qw/tVxt6
ljqgutYrtLcNs2F3vQz+U+BtV4xyWHZ14+fgWT8btnd1LnU99a4XoW+QDTt8
52Rnc25V91G3Uv/J0VarB4Q+oo7gXKee8B5pN82GfV4dTT1IPe1D6Jtlw97+
Nvgm2bDJu15UR9jBOqdObgP+qQ4dwPXlztAvII/zgXu4/4S0m2fDfu6c3zGV
Tf1FXUkd5jN4tsiGjdq517na+de5yLnL+ehreLbKhn3euch50vnI+da5yDl3
LjwjsmHn/xZ8YVXY/zdmfNoIqKVdfQl9y2zY/zeDtilQbBPzjHOXc81d1PvF
2vXysT7oWhX9ZRZph2fDnv8L730HUKUtx74C3Ov3QN5woILM33l+F5CDZ7tC
rPPt+39Cuwco2K655oFPoT+ivQpoQ547A59UxxxWRscrAf1pM09Thu7Q34C+
JzyfVse4vzby1yrEuL+b+yzVMTfsDf5ZdYzjzqf7pjlYW4L2Nm0gi5H5t+Om
9hKedyqF7WEI8tYEfqsKO4C2H+0Ge6kX8C7vA8vRpnbn3e+rivWutkzXyFtS
B1sAZeqhQNm3oc1vDWyG3HfyYS/Y3DYG/Egeb3DdOBt7Rq6D3QNxTe2aVZuu
69l14fma9LvKx+LyOqBTPtam2u9dty6ibH+0xhquJ2UbTdkedHzhfrdsrIPy
0GsGhJ57BbB7NtYyf4H/2RprrMXA362xTroa2CMb6wXX39raXbf+A31Ja6xd
rlMHy8b64nbwvbOhY2fJp2pArBtuAUZmYz11I/he2VhfqKtrK30uE3q1Nk71
7TW1j6pjweOmwb+tsdZZEXwf3usB51rqZC518kdVrGG1lao/r6ENFdhHuxj8
e8F/P8/ugrZvNnTR80jXoRjtswJPmwGhlz0M7J8N/aoIrW5A6Jj9+U79gD+R
8wD3+2VDx1MHWz/pV7XwFgaEvqyOtEHSiwaQrhX4m/vVtEkBS6pCF9ow6Wxl
0pUGhF45iOdruM6vCh1mo6SfXNSbeqc9XYDCdA5lb1uM8Wci18Zi9MdbudZy
/Rj6CfSt4xtj7v1ZWxDX7jW0Da4rA0PBX6ynjPnQQe4l79HZ0I0nI2eZYvTT
8Wlu3gp4Bf6fkf0O0Kj+AWyXj/077TTaqvYj3WjgCeT0I5++wNrk1R7edsCO
+diz0DajHacjtA7a66AfQLoxwFPZ2J/SzqE95TBohwLPQW9FXgswrCb2gLSR
aPsYyzt2K0Z5D+Z6EPAM/L9xXRc4G/xq7WuU/ZNs7Btrj9S2fC30laBPz4YN
c+dE3x36VsBo7mfnw46/i+8Jz8bQX4B/JcamV8Ef51lP8NfBnwVfGfw18KfA
l+HaCdgdvBf0aaYFXx0dezXgG+2LvNPGfpvqsEFq/z2VMrzMN8ipR5PXqz2Z
w9EthwB7FmJfRHvuIaQ7uDG+5fZ9qDegE+PPXoXg2wuew+kjhwFtkXM0+t9R
8H6B3J21yxZiD2RYa6QZ6RxhWbUFw7+Q+vsZeER7K2PPjH7UY4Vv6zgIz/Pw
3Eq6nuBfZ2NfY59U/hZkLqSvrgPvKOnA9sDF1OFmXF+Gf8Yq9CGgPXXT37kC
OS9B3wd9YG/geOhfwv8FsFp1jKN+kx2R34yMLtaFYwfP5+TjW83Ihv3Tevy4
G9XXke/fgTmd8nxKO54OrJJsxGOcf6HPoA7vVG+g/rYGcrWRXjnacK9E5hXA
QY6H8B7Ld8hmYw9RPVAd9VH0/EfU9Snn3/D8BcxpDF1WnVa90XttuIfYpywP
97eD96YsvbRla/PjGzUDg5FzNXlcBRyajX3Fw5KeWSLfydVhu61os8rFvfrm
kWke+QjZR6X7Nxk7au3XwIvk+7F6jO/L93mMOns0gTZZ0yyv/QE4BfxT6rBA
Hd5IHU733av+p+Mek+apH4qxh+f+7Mxs9Cfr7nPS1pL2ZtI+nQ+76vFVof+O
TfPX541B834n7YT54H2Ncn6hzqEuipw65NyKnF21+/H8OeArnp9UFfqu99qL
vd8enie5fyIfuuSJaf6agZwicm5HTpE6rNO+QdkHI6czsIjveh331wIvkeYf
+tJQ8Bre50uuXxRj3TWL+yOzsf7qp92lGPeuq6T9kom9D9dPrm0voH2ebxvN
Rpm0TR+b6ku7jDq8+1dnJXypvUZbyiqUqzewFuPej8Woa/fCl66XbF+O045/
a2ZinTk+jdu2p3GJbjudkNrquDS2S7+oMfYcJqRvcFH6LrZ39zNMd3Fj8Hlv
Wz43teclaV3kvoN7F+ekckmblOi260kp3X2NsVegvnModX9IKdqwbdyr7Vua
+xPnJX7b5ORMtLULU3uz7qak9mea81K/WJMx403qd798tOPJqf0/0Bj8F2cC
d9/gwqV9JfWXhxrDlu/7u/eqDU/7Xgvz876t4eNk27o0tSfhktSu/FaXpe/1
SGPY8n1mOvvFmCTf9n95Jnzm9K1xieo3vzy1g7pEL6brlQlXpvlenYl9funK
OCjdiw8j8W4ghyD05+XRIZZD50dvuLZ/tJur4XuWNnmJfnbAr/D3BqZRV58x
bn0KrEP6L7l+ARxYE/kof2Qm+ujFqY0Mp55LyPqYtGuAv8F1H8d5+ssHZXRJ
5O4L/iH4v+BfI28GcBAyWynL09B6kv4CxuKL0ZGv5X4t5LyFjAOdb+H9BjgY
/gPpkxszHs+HPh3eQl3s3y+D/Jng5/JsHfBnwZ8B5pJuDnAIaQeS1yY876We
keZS12jr6GOAjEOBraqD5h7ti+nqd3ct4hjp8tK1heO0a+dX3WdQL62OtYjj
k+voadrRgeOhvcz1JfXk6liLOLe4jn6f8rxXDH3lLe3KwEk8n+K86D455bsZ
veA43vNY4DnXa5S/t74CzJMPk9EdFGI07/sRdZstRnktv2tR9ytdk7nOcX9M
/de1RCttuBvwfTb261y7uN5YFdpKwI/Z2MtSv3ZdMRBaL+An6J9T/52AbtTV
Jn6LhtAFB/C8O/BDNvavXHO4TqhGN1uQjXn8M3jbA8uR9le+9S/AmrznF9Ca
gOXzoXOpk6l3daKdd9QHpTp0MPeZ1bvW4D3LdTHnv02b7oEOsim0Df+fTncA
dTWmOfSbTZP+4nisjvN4GpO/JM+uwAr50FPUt9RVdnTPrRB6wWZJl/HZ5voP
gD9ZFXOie63O3VeR/ubq+L7tqYN2A2K+WoGyLw/cqp4MrWFAzPMrQuvhnKtN
n2uXxkg/gXY6WJ/LuugT7mk4tk+j0Y2knq7Q/4b3/RboTJ4dkddhQOgsj8Kz
JTwXOFdDazsg5vblkL0scIvjLPK3Qv7KyO5LffUpRv/ZkHa0Nu3oUtrWRHiG
wdMd+ud8n0XqfLzzxbSvG3m+Lnnsnos1qHt5C9PVvcLJ2rlJ27Mu/CLdf3Of
7kLo20HvBf1hyrk5Ms5HRk/eYxfa9c5tY3x9MfW1x91DgWcyPCu7ls3FevJp
6NtCn8L9PrlYk7qP9lu6unem36X7V+6F6cfn3qN7fPvlYr3pHtMf6eoelvs+
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
9mbyfoa2eSP09YCPaV9nc+1hPcIzAJ7rtbM2x567+avPWf4V0rsYn2DpmSWv
6pOugfRvc13k2T7P6XgOyHNXnq05Xb2Cj7x6dfjPPNEceSxNMy6944PZOB9k
etPJ6x7xg+lefCbv9TXwWGPobPoNbZwJO7H73e7bedZIv0J9usYU4hy5956j
8VyLfj7NA8K3cUqi6X84JBO+5Z5n1U+sKzzlYvB5FtazlaPUZ6rjjLr0R5KM
/9aGheibji/6MipT/0TPckxO8j3HqPwNE+6ZrdHg51BXv6SxJE8Z1q6OZ+7b
X57GlnOZ295A/12lEvt6/+VVFfvYVyTcs3eXJPmOMVelccazupekvCzfFWkM
nM2486ntHpgJfJ3KYTrHlsOr4kyy56L13fU9rkt1aL+/NvX9axJ+JPT5jXHe
RT7HP+VYFs9we5Zbn2HPEokzXGSGFsJna1o2fFJdb/+ZiXq9PtWte+VXpfJ4
vvOalNfSvHdKsm9M8r16TnTvTJxZ9ey2Z448c+O7eL7b85G3Jrpnhjw77fno
O9L39hzQbQnXB/imJL8h1cctqU48f3lToq+e0sjvc+XvA97N/ROgS018y8tS
2/fM2J2pbXu+2TM7nkO5Id2vler87tRGb8wEzw2pfd2V2pjnae9P39f2dX9q
wxNTn9KO7Zna+/6fjPtSXm+69weUa8Ov9q70fe9K+Yor74EkX3kPpjJ7Vvrh
9I28PpT63cOpb0iXpt/DpER/LPs/2mOJ55Ik37K/Tz29B/zdNvq9efke+ik/
mvinJPn2a8+k3pG+12OkexTYMRd2CG0ad0D/GNpHQJU2Yt71PaDC+z4J7Qlg
J9f19PehA8JP7R33FoE28Azjfu0B4Zc3Hd5PtE0hZz/mwMGF8Pn6CN4Pgbbw
P6P9BtgZmYNJM2hA+Bt+CO0D4B/eawj3aw4IH7fnoT0H7AL/OM9fNoef0z2M
+atqo3NvA9oUz2eCT+A6HlgBnqaaOO/rGn0U5Vm9EH5qI8FXLYT/mn7g+vjo
K67P53++OeB3Ib8V+b+pk8LfUghfuUuRfQmwqCb8+R5K3855/43U77bOx/u5
59heOxLwGfzL8f7HFEKX/adbJvMlnf7HDrEWcQ6foT0HPW5QU6ztXcM5l86D
3qRNBvgCOWPpj63IuqYQ6x516lnwdNJWA3xeE/uF7hvqBzaBsXEq9boyY+Nt
lPOEhjjn2tW9AuBL+Pclz5J7l+T7OY3lRmCIe9/k8zj5vOfahLK96ZkH6nRz
yn0R5XiPNMdwbYHvKvi2hH4J95/Ux1rTeXtBJnxl9Jn5by+0J+2J/CvAFvBf
DP+H8G4GPgX8bfCpPHsFmEW5ryvEPqgxUW4rxHvrg9PI813hrQUuo/z7w7tf
2/B3+zTltVbaK/VMwBT6yIWNMf8vl2h+95uSPP2q9M/6MrWBG9JeqfdTeb+C
7V0bekv4erlvOp52vTt1shtworYcynF6bfiLKU8fq42T3qlPzfXwXNcl9FH3
X79OPL3Sc+fo12h7JWRsqm6M/B2QWYb/LOpmNei36L9bF3bc81O5Lb91PJm2
uXlqtwb1+Lc5fPrcH56d5K88IPwSbZ+rNYa/8kfgx/fgPbrT/oCPGew/AhrJ
7wzKsCdlaEuaU+E5iOd7AqeBH8x1JHAK+IFcdwe2Sv3SPfLToR8CbR/gXeS9
A9Qj81Ou04F24GfrC4f8evf2a2K/173WU6HvBr0C/QN43wca4K/hvXJdw89u
RD7GJ/fot8nHOOGefo8B4ZMpvfeA8FGU/iVt5Qvg7prYFzIf94buSfu37v0O
z8cYqS+B+13uubrntfyA8AuV7v6PvO4BrQa93rN1+jxQxjeBQbWx1+Q+rvtN
j9fEXrf7k+4puffpvtKDaW92aXwcr+4ZPZT2XeW7vyb2Y5X1SNojdQ/W/a6/
0vx1EnW1M3XVhvI9XBP7tEtj63h9AZ77amL/2fdxP8p9ZfekHqiJ/Wfv3Y9y
79Y9qcdqYp/W/dsn0r6o+5nuQfke7kO5d+TeqvtH7jW5D+p+09Npv3RpvB6v
7hk9WhP7t+bhHpfy3Odyr8l83G96qib2Y5X1ZE3s0/6b5rOH0xx6JH3/iIbY
I3yARcwaaX+oe9pjcd/DPRqv7n0YEGdbeM60X1FXrShuj9EPq6DvAP2stLei
b6P7RNqVtbdqa3U/JZ/2RPrD08+xkzx68c17AvPI9/m0F6HtNYvMneE5uzb2
ELQ/ant8Ke0zeD812ea1ZWpf19apnfOVtG/g/ctpb0EbqvZ+bZraM7XNa7vU
bvl6suVrm3RfQl5trc5pjnGOb6+m/QHTuw8grzbM19JegbK061sWbarTkq3d
9x/eh/4M3F8I27k2Su2TbyWbvbZMbfnaT7Wdvp3s9/K9mWz/PtOWqW1Ue6Z7
GtpVtalq89burM35nWRjkO/dZF/32Q3U5fXAsjVh4zdPbafO687vrsOm8i3r
u4Rt2zWfdidtUOvwLWobwia2PnipIWxla4HXNIQNbSHtYc2GsJdcxLx3FG3q
SAF5p9Gn7ucbr+n+YUPY6N5I+xi+wwvMqZcoG/rh8J8M/33uS4OfAH4v+L+k
GwGcQXs4GvqZ0B+AfhJ5LMc4Phb6ZYWwH6i3XET9TGmNeWbf2rA9qPPslQ8d
2bMiL6W5ynnqn5awLUjfirFnV77XQ8j+Xl/mppjvZ/H8HmjLVmLMdw7fwvEJ
Jf1XYD/yGZ3W9Mp1rnYedQ7dP619vb+8EOts5yvnLuc5568xaQ3tvWtofb1d
X6/C+w5vCP2pFXz7htDDtqRsO1HO6ynTH5TxEHShTRtDZ/Fd1Vv6ueffELra
Ttq4mmI9NBB8p4bQLy8thM3Ptj4cmXsg8+G2se+xBrQzMuG7py/Ff3u8NbHn
rB/EBb0Z84H56Ef/1MResXxLmFfe10cwH76W7iG5fzQC+SOR/0jb8OPTJ8O9
36p87CHLl8vH3q/P9L/TN8MYEfoSmqd77IV87J36zHgh+n3r8/2Xdmx1IvWr
Ypyr0S7QYH9xf4gytuXathTvVktbHUOdNWkfQWd4m7Z0iuVlbuxVjPNDX/Eu
J+fD32xryj+K8j/aNmJr6H99qHMRfMfCU1Rv0Ce9bfgNL6qO9bxnHY1j436B
ewn2s1HVsQd0HXV3DnAZ7Wo+Ou1DLDCnosf9xPMfgWHAvsg8k3zP0JZSiLFT
WfvzPdvTLo8n33rK3BY4STt7MfbJdq2Osxrrcj2M73iKOmMxzlJtkPQg9bMK
6Qql4DNPY75oI5jWhrUR9dIE/1DyGgKMhr4C6drlw5aonqhuqb78F+/YB/oq
+kjwjmWgfT70P/P5z5euEHqZOuXLzDsr8N4bFSNmnfv2+tHNJJ9PKWtDQ+iY
8qp/TU95HgFt/aQvm3edY1Rj1LttxPapH0YD364eeC75tOrHqS/kifnw9fTe
swN+W/0I3+VdOyL3JG1L1PnaTfEd3qfNvNca/t8n8U49oI9zbloZOvfPI/90
8j4NOEYbWiH0XN/nQnTOwa7bCuFftWUqwxbFaKPbpnZse9b/w/5jP9KX4jRk
/Jn62xng/9ZEPzkTPJv6ie/gu+jfeVY+/CC8vxPZdxSjHZ/uWij1z1PBa1L/
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
ejl8nX1mLA7jbhhzY1RKp+5tG3Gf+cdMxAbRZ01/tZnMoRcVYn/WWDimN47H
E3yjO9yrKYc/+ueJPrQccRCM2zGoHHmZ5oxEM16CPt9fJvwF5NyFnLXLEQfF
8qr/jKOtbY9Ocpr7YeUY+5X1HrzXct/Tve5yxGswlkafcvhMW3fTkHkPfOtD
ex/8PvCNy+ETr2+8cSY2LEeMCeOF6M+uD7yxJYy1803CNy1HjAljhxjnxjgg
xpb4DJkPIHNznm9ZjrgSPjPGz9dJvrF5Zqfv+w38D8E/vBz+7/OSnK3LEZ/C
mCLfwfMIPNuWw4deX3pji2xfzvwX28KYIuPT1dgVxuOZn3h+Ie1jpN0R3p3L
EZ/CuCD63C9I/OuWI+6G5ZuQnhv3Qj/9HxL+N3KeQM6u5Ygn8XAaMyemOl4a
q+SnhO9bjtgNxinR/14/fGNRjCxHzAtjtExKz41pcW6iydMOnfM58tqvHPVk
PTsHjilHnAvjneiD/2tKe16iGa+iC2lfIO2B1if4M+D7lOM8wO+J5+ByxNQw
9skq8LwCz5Hl8PvX/9/YG4eXI76GsU+6w/MSPIeW4zyA5wKMsWF9WW/qC8eW
Y76yrOcn2cpxfeaaznXh0eXQEf5Obcs2ph50TDn0C+8vSHkq/7hyzP+2odPL
McbXpu/jd3S+PaEcc29V+ua2Gef8E8sx39rfji/HHJ5J/Uya86rtUtnqHX5D
+4tz8knlmGO9P7kc8+fSb+bV729bU556wSnlmCeXfm+vzre+h+V1TjutHHPm
0nr36nzod/ObOpeentaCrgHPSGt61+eusV1ruxY/tRxzqWnGlkOX8Z03SLFB
jCdyZlq7m8a1vTKMr3FWWov7Pc5Oa27X5NV836f4vnuWYw3sWth187i0hl66
Zvbqunx8Wgu61j0nrcVN47pXmuvdc9P60rWla2PXyK5lXY+6vjbOwycd6Ees
K95nDJ2Q1tbyub40nXE3JqX15VJ7h1fXmurprhO1kZyf1nBL15NeXS9ekNaI
rgnPS2tQ07gulOb6ckV0gHrjxTGensIa8eTG2IubmNbQlvVd6uZy6mZFxtX3
CnEOxrOt16JXjyPtjeVY71qX2jY8B+I5Ec+jXt6P+Ro4uGOkMa1nZr7g3R/h
3T8shC++PvmecfoCvjWAj3g+lXzPKIfP/a6dmCM7xb1xHD2L4BmEJ1jXP94a
5xIGe3YV+AiZv3P9zf/egi9mLXB32/AZv7QuaKb3DLhrMW1fV/MeVzXFOYRJ
pNsQ/BbyOh98c/DbwH9hvlsITCf9QdTRgY3hEzyUdcm+xfArOg/+TeC/Ff4L
PYtZjPMEN1L2c6HdSp0O5b2uqAu/tHPhXw++m3m2KtcB+u4j/6gerPX0vfEs
Z9dMZuWu8a8Jx3T7t//U0ddaO67+0ifR/g+m7AfpZ059z6sP364a8Ln14ds1
Df7Xu4R/9CvUybFN4e/8L/js+vAdOwj8asrVQ38P8lsO+IryjOE9928In2P9
k43ZqR/yeOQv1yf8g88FX6FP+AFnwefUh9/Z+eAr9gn/3QvBe/YJH9z1KMu6
nnNBZl/er0/X8LEdBm1ty6nPGdchwGfaBnnW0jV8V/WfNM6xvpo363tDee+g
rr5F7vzkg7t1JXx/tNs9p+8z8GUh4mro+6nv5Vje9zjgGvj6I7df1/Cl1fdS
fzd9KZdz3we4izx792cNCkwphy+ivmz6Ja7EsxX1qSiEf5++pvr16d+oj5t+
gPq5ufbUV627Z8T155Cf9+vVFH5lt4Gv1BT+ZveA92kK/7H7wfs3hV9ZL9L1
BGbqu90avln6ff1u3Jva8CvbqhI+U+rWTdR35z5hv3iEfn5t8se6im/xHfT1
OobdVJ27Mdk2tJlq3xhRCV8qdfCbW8K3bOOa8CnV10+/0LtK4Xtlem2l8qqr
D6+Ef5ay9iDvSx2368Iu4jfRNnID73S971UX9g9tZ9pAtquEz5S6ubYTbZ3a
T7avhO+VfNtWwm/LZ6OSjq5+vmclfK+0MWoT0n6qXWiHSvhzybdjJfy5fKZ9
VJ1efV67rHm6FtipEn6XPtMGo41YO4z2SNdFrol2qYT/l3q99hhto9pk9k+6
vnr+bpXwCzPN7pXw7dK2qs3GMmq32bkSfmfmsU0lfNNcr2jLkVd7zh6V8BFb
Gt/Qq+sF7c3yuq7RbqrdTZub9kL1ZnXmvSvhG7U09rFXbRd7VcKnTHuqNlTX
D64dDkvrDdca+1TCj8xnd5fC/848RlXCj2xpHG2v2nmOSmsS1yP7VsIvzPuR
lfAvU652I+2t2o5GV8JnzfsxlfBHs9zakLRJaUfavxL+a97vVwl/N9co2oq0
n2ov+i/+U02scQ6qhJ+adlD3EORdLtlgfFftMAdUwq/N9NqZ5NXWdGAlfN+U
tWslfPT8rvt3Jz30B43ZzFgyGpjCs1UZDwYAV5XD1qbNTT+ovp7nAq4oh21R
G6N+PtpBtdnqf7U6z1cDrobn6Er4DWlf6U1/30cfxHLYIrVJ6rOkfUu7lTar
Qyrh6+R9CzL6GzsO/gMo59tNYc/SjqVNSnuUtiXtRNqIDquEb5S2Im1L2n20
+WiTk6bt6IhK+EaZ5shK+EZpK9LGYxm18xxaCV8k89BOo11Gm4w2J3m1KR1V
CV+qpXGNvWoXOrwSflvmfUwlfKxM73rR9eRKyWaj/UXby7GV8L3SxuP6Q9uN
a5CxlfC9ku+4Svhk+UzbjHaZ/+wzlfC90o6iDUabi/YWbS3StKucVAnfK20n
x1fCb8v02lSkaUvR5qFdQ5vGbYyd4xlPp9IGTq2Ev5vl1t6gPUKbwymV8OHy
3nWta13XtqdVwifO+5lpfeja0HW/60PXhq47XXO2JDuZ761d6/RK+HyZ5uRK
+IVZpjMq4a9kmmvaMy61Db/DMyvh/6Xcsyrh/+Wa9ZxK+H8tjcfq1bXe2ZXw
BXMd6XrONZ5rugVpnemacXwlfMR81pd5YUd0mknU+4RK+H8tjbvq1TXdr2m9
53ptYiX8yLwfVwk/NeW6PnMt5xrt3Er4bXlvfO4LuZaysfZyjeT66LxK+KZ5
P6kS/miuvbQDaUcyvszU+vi3lr6olyDn4qb4P+iitE5zjeZ62ndVt/IfEfLq
s1qd7sVnFeJfUt67Rrf+XKf7z0bPvnhuZ1vPDcHzHTC+GP8S01dqU+ibAFeC
r10beo1nVTaDNgd8diH+5ej5Ic+reM5b3mW1P9eG7mMe5xbjn2T6TW1B2s2B
q8G35DoPnrmFOFMubTnSDqsN3Uq5w+HZCrjWPIrxnzZ9qzyPfj3XFeDfhudb
t8b9hcX4V5n+UZ5fN103eG6sCZ/ZFbXZGouiELR3PEuLbnA1vCOQ8S30+YX4
56Tv6jmf24rxHzXTP+B/09vGP1ONnXBjkrlpS8Ra1a9pGWTuTv+6nu+6TO9M
5iHWBNfA24q+tlef2OeZXIqzoe4brQJ9lz6xpzQQfJ8+sSfTD3z3PrEXdE1P
9Ij6aBc/pr0dbfHa6LXVu7ej7VyaezjakrUta7//NMXt8N8N2si1vbu381Pa
//FeG7z2efdztKlrY3dvamHaz/FeG7e2bvd2fkn7P97/nPZkTK993X0B93m0
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
7sX9X6D/FjBelv/ItF6NzXguaZ+2zauTIP9snj1rmqqgG/fJ6zMJ79ol/gEs
z84tcfXZ+ch5zv5Cum5d4h/AfrPn0nczDtXu8I8rBL2pS/w/2Pq9tCr45Ble
iLPEniP2PLH4cel88UsJn0I9XQDfy9x/aiyutoGvVYjz2xunM8jinim+sH88
N720qYk+2Rhk4D2q4jo14TtSzrMKUbaX+M4v1sdz//nzWqrDbYuBG4PaGLae
25qgzzL9elqq6+27xH8dvDc+u/GI52VDBxRXD1xAH1lI//+ybegmxh1WP/m9
F98anb+6Y8TBlz4/G/93/jgf8YSNy2884m+zoWeJq2upWxmDWP3K2Pri37m/
1pMy0e5PaRf/EXonH/8reZJ3eTcf9381RmwgYwG1p+ztusQ/IPaG/lghcPnk
N3bxD9TN98AH3PdmbOkF3Eo+ecp5JPX4CfSRjZHONLPz8U/L45G/NzwjgWbG
yW+5HtES72aMN/9f/XUmZI+tizKNYIwa3jdkGqfZ//L0rw77rP9b8t8xHbqh
X1Kf89tGvF9j724Mz9/N8f9Z+dZpCb1KG9ri5njmf2uPgv5EIeQfBO0D8nip
EPn43HzkN6Zsm2yMN44/xj+9qRz2eGUObIn4oD4bD74aMCMfcmamMhsfbkYa
l7Qxf53kT4B38/qIM6p9Wn6f2za/Se12bEPU4y5VkYd5GVPUOGS+r3GGxxrf
CFjXPQjPmubjH6DrFuJfod6Lz07f4iXy2rA2vs1s8IsL0W770zb6AfPz0R/n
5uP8uPfzUn/sk56Lz030//4nXhX/uzod+lTXm7XxT1Jp/iP6jExcFyTc/5H5
v+V54G1KwSfd/1L7jzT/j3ZVY+AzMnH9IeFef0z4U/CMqI17/+vsP8y+8exh
Y+CzPCNfiDTrp+c/J7rXhQlvLcS9MtYsRFl9p2eRs01t8N3QGOW2zP5bWtwz
8tbB3FQnAwvxXj5/Af7tauMfnWsU4l/T/j9a8P9wnnm/uTHwBZl4vijhL0Pf
oTbuR1RFvBhjxeQZf153/euaAnx1/0ebDxl/pLTSbmuMNJblt1Tm0cXgVd5o
xoYHGBu6NIQcY97rCzEY/I7GiNMzxthgXLeBXoD+hjE+tON1jZj6+j9sVxXx
XIzlIt30phmqL2djPDsIOZlC8K7VNZ55r1zzMbZNLbS3kL8n8neoipgyxpOR
37j++kUMA7+nMZ6t0zXuq8EPLcbVdNqc/A+ZdiftoNpItW9+zRgwuFPca/OU
RxupcvxXgL4Z/qfL/3X5P0HtVeLarPzflv921sarfUs71dJ8apOc/+K4FMJe
Z37++0Wb6iuMKy93ibyVV0zy/deL8eLnZmN+cM5wL8B9l3Kiu6fifOBc4L6C
c4Djv2O8Y717E+5tiDvma3dRvmU/rSX+H2WZHGfNy3nEeUM57qc4zyjffRmf
m697QNoYXQv7Tgcjs0shxqKzWuL/Uf5X5r/YM4WwsWif0Z6jPUUe7S1PZ1Oc
m0LYWMa1hJ3k2Wzg/j/K/7W41+Jc7jz+X/yYQthetPN0TPn4LpbncXjPaIn/
RylX3HyfzIYNR/nKsLxNqczizYX4f6VxR6T7f8wJtUHfoyrW+MawLGbjO/u9
/ceT61z/j3tcms+M4+88uEUh5CrT/ylJ/0B9AZ1zi4ZIM7kx8J1rQw/xHdU3
3D/zW6sb+I/obimvT5jrOjfFGtU1rmvh//5D1xz0IbURk3vp842YQ8+rjX/L
Xus+A9ebqmIsEndMVvbyqd0+jozHgK06xRyij7nziDHoHR//Gxv7xzzqHOrc
Iu6+Us9C/LfxcMrZqxD34qtR/oFA70JAr0Tvw3WVQvyTxT2VPglfqyVi6C+l
iRtL3/9AKv8s8CcbozyLqoJmXmerpxUijfzGZVH+aZn4953fyxho7zfF/7t8
J8db/0v2D/hHTfEfMOPVO86L/wX+TGPci0tbNeHKaEllcDz3f2KLwZ9vjHvx
Y2rjPxX+s29J4nPM31t7WG3I8j36Jzl7Qj+kNuQuLYdzzfSmkK+Mf1O5nR8s
++BU/pcagy6+P3KOqo1nrzTHXPVrVfw/cGjCv2qKe2P1K3v1VObPm0Lu/zF1
3uFVFF0YTwglucktyb2k50ZIJAJJCKCggoIoYkGQjhRBRFCq2EFUFFRUFBsi
VhQEBRQUFWwIiL2h2EVU7L339r0/3+Hx+2OeOXPmzJnZ3dndmTmNfo4Tn5Oy
XQePLqHtT+H/x7+vg55t+4ifK/N3/zCHiYs1NjwL1hesLVhXECOne4BZcwCj
X/pRWH+A6xb48N4fxbxr5vg1szMN4zfp/ohj2Y4MuB4Bj78kYPxS8h4fHt7l
nMAXnh0rHBujW+B9UOCPf5+egc/BzPFm7hPcwQE/qJn94DCvyA9lzmU6P0xp
dabjzgGPFTy/3Pzhw1h6hzEPDXzx6XRY4AM9PnAOCTx7hX6hLQttuabBzTwO
xsBakz0S+6Mxyvs08zqQ+IPETWSNd0U70+Rluh78kLC3OjLg8Qs0oJnjg7OG
xA8+vPsFGmByynwToKUNa79xgS888SkE/md82ASe0IwN42Y+tA0w46ceOr5F
4IYEmtoAtw3P6KjwjFlDDQw8kbkTswTZ+iHhnnAPibExNDzToaEtMO2Hhrkx
OMxP2hBLsFe4z8O5f83s7wjfoEcHeEIzx0ml/A5rnGa+7g/wA93MtLQdoTQr
w/f4mHD/e+HPuZnPpcc1Mx00tAM/PvAfFeDxyo9X2iE4s8I8a8M9HhmeL+/J
MQHmGo4N187Yj2vmWJ/I544N9/OCDOPpl/7HhevsUeG+jslwPj7A8B4T+BMH
9oQwtj4Bz/Vdn2n6SOA9LvA/Mde8GQPtJoS2yH+QJeEfZ5Lyyc0c21S/6n/L
wJEAc6Q3JdBEwr2aEO4/MitkWPgnuqK5z4amhns0PDwv2tF+fobv45TA5+jw
HPE9xvVODPeZ+MvA7Cmaa8+aUpqRa1kWsjB8URXrWRchY1C5TPWlSjNF87He
r0L9m88t8lkSfr7Zx1WJtqXSdJV3U17JHqyZZXHIEPHNlBaPCuR84lOsvAi5
oOAK0ZYrnS6634q1DkMHrdBxC/mP8g9tJXh3pRm8wzVaZ9TYJzhy1n/j0+g9
7aVxddL92Uvpslzb+SG7/zLI66Aj/g6+ZvAzgy4IOiHIeK/OtR0V/sEfJp4I
ulOCvwryXuhyWui6NK600ssxjSnbZ1Lzc32uDF/s0sCdqnu8TTQ12T5PeTvf
/szxb45dGmdNZ4rmVdG0zvbZ0CuC98h23ZW5toGjzfZ8+znH7/k7+R4jfsmx
e4P3GZmOhUiMSGJYtcafntJFzBPlbbGtFHxVrm2/4IU9HH2ezf+dNYbSpSo3
tLdcm5hct4q+XbbPiohLQ87/rgPrBKX5Kr+0h9bzCZ8VEUOAsym+sdvj1l+/
ijmXbx/s+GSfrXnTXqlBafds16PzTtwZ7Pqx81+a6/NjyjcIrs823+16hj/m
eH+OHSF5DeceMetBMG50MdDrQM6filkXgDIydnRB2JsgQ0Y2jax7mebgD7oX
xXqmpycde+xG1b2mto2z3WZBru3euIbCmPUCaE8cI+IZEb/rcr2bh6n9zALH
EmXeYWPaEPhB85fmT+Fu2q+VOpY4sTaJs3R20rGdKM9IOk7Sv/E/tX7+IaV5
EHcsbnDEbiJW2ZLQdic2pnHLqonpTVxPYmPOSjpuKGXik90W8MR0IoYUccyI
bXZL4HlB0vHMljdzvM3lgWZWvWWTqxhbvWW0dwieWW+56YrQB30xByuFS9fZ
N9uDnN0iL9F1LKzSnkVwJ/Geq77OCOMjpuvNYd7+0VbvTWv1q+vJ1H8nA9tG
bEg0V3bT87lZ97hrkWOz0QZ5O9dN3LunW+qbUalnVGqfUci/kX2XxRyzF7k6
PqCQwSN/L4853i90pTHHOqYOH1PIpJFHR5E1F1u36NgC2/NyDlgRc1xf6Cpj
jhcLvnmZzw2JHYt/KvpEjo8fKc7WbhbckHCcTMrowGJHQHyMYbq2+Umfr2PX
i+y0O/vvNvpX1DhO2qdxx954VHVxzbGY0udxx0MjnlU/1jB1Pit8iHHq3SxX
2ppyPKtHQ1+VwqWVXklZhonck3hajTXmLHTUVP5IY/5Q6Utd317o/yj9iPxD
z/1n4UvQCY45lhFn6tj4knOufrtofhNNqWg+wN+L0lzRdYg5rg2ygcr2tpkF
rtZ1VCn9oGtZobb/qG252t4h+E/BZYLLVF+K/p9o5sQd44rzyTeFa6p71EI0
xWWWGTwlfIsyn8U/K3i6+GwXn+d0f08TvE3w04IL1DZf6Svxa648hdw0blkX
Mi/iixQLV6T0jfBlZT67f7qZ5WPI9YjPkS6zbOCZZpatIWsjtgeyN2RwxOc4
Xf2+hm2I+n2+ynGTOAcllg22Np2b+JvBPwu79Gmay5cSu0H3vFLPP11jW6ft
erZvYzstfLSd/4E/IuPQvXwq3zbexM7D3ny3JqZBvkLsjJ7KD1L6OM829dis
YxvPP5yx8B/fmWc89ehWoNeBXf196vNe3us826RjL07ML+LgYFu0t+B3Vb9D
6TN0WZV/iLxV8E3YGrZzDJwWyndT+j7ufxv/OGyeiR2HjXuV4J2ie1/pc+wK
dK86695+KjitdhVK38Ud/wg7o31Ef4bu7Zu6t88m/W/jH4edMP9J/unYQvOf
4X+ELdVPav9Vnst80/m2Y1Ndq+tqq/S16ubp/bhkD9NhS4W9FHZVv+RZH/wb
lV/Ity0VdlPf5Lkd5XboEip9m2ebKWyksJ+ib+y5sPX6Ls/12FC9mO8cGyrs
obDlwgbqB9V/n2e7pq35zrGJwq4KOydsqX7K83uJDdjfujc/59mG5aN820ph
49RBY2lfbl41omml9KPuwUv5boft1c9xt93VBhsrbKawr+JasY0aoPs8Qff5
naTlpeiqE+9jqvAbhH9f+CmCHxL8Hn4oBU9Gt0/wiYI3Cd4peJrgLYI/SFq+
jpwdnfv+wo8XfnvScgZ8OyFrGCT8icK/m7RsHhk9evu/aswXBzn9L8ovDPJ7
/GETLwH5flP0oEutm4rsHRk9uvuDxXO6eHZKWAcfffp/delj1s2njAwf+T56
+ENY/4p+b9EfJfg8wV3xYRWzXgx7s9/V/+VBJ+A35ZcGnYCh6LmJft+Eda3R
oSDW2zL9yx5C9q35dHa99YRWck9rrRv9G3NF/8P+apcTtW4wsm7i6aBjjGyZ
mDvr1f9jOdZpRt8YOfzaoEeNjgn+569RX6t1/w5X3QL06QQfxn9U8COCr8y2
TjK6MMQ3RFcZuT0xetA9zMm2DuFr+OHXd2l7zHrT9Hmj7vNC9gPi01t0EY33
pLjXTxtF91KO9QtZS4HjHBodTHQ00cNEvxL9yXeDHmN2tvUed8SsC0n5WvFf
K/5HZFs/Ed1HdBRfrLXecJbKm/OsvwmvTTHrddLHIrWNakxnZFtXET1CdAjR
q0JPDN2nD0X/QVgT8N9mzYB+3U7h3g9rCNYK1KM7tyVmHcbcoG+H3h06afdr
jP2SLr+In9ik//esFVgzoOv2sdp+FNYQj8Wsg8n1vCf43f9bi5Cjf7UO37BJ
67Gha4YeGrpnO2qta9Vc5Qd435K+nhf0ryhEbwTeMetSoTP1rtYxO9DbEW6r
aEpFUxezvhu80YU7TTxPrbV+2HrxG5B0f8drffJQ0rpH6FXBD90q1jFcH3JD
9E55zq/r3i7G9wXvNzohrCFrraMxGd2DpPU8tmkMrTSGvdTXD6LpWWs9iFvV
9jHRLAhrC9YYyOz3EO3zcZdvEc0m0Vwt+De1PbzWuh4/Cz6k1vojbdDtiXuf
9hL/UJU7qq+XBbcUvKfg72u9161ALlXrvehugv/SOv3sIutK/FrrPW0L4Vur
3ba41zFT8BeT9J7zOK1B5oe9zcl8v+Le3/TXO928zms49oWMBR0GdDEqs72H
Zr8JLfugf9dD2daFQI8LXSx0tNjnsZdELv+p+j0z6T3Bq7Vhjyf45Vrv/dqE
/ST7SvQN3qj1Hq9W5Vp0n+LeZ7KfY3+HfL+lrjem97k+4bUsa1rk1uy72H+h
Q/B2rfd+dSq3Fd2VcY+J/Sr80Ieow+457r7ZG7H/Ye9zTpDns97/LMjh2QOx
/+A62IOwR2EPwz6FPQr7EPYg7cTztLjHxD6APUSR5t4nza07QB/sh+C3I+yD
6Yc9xReiuTBpXp8T7yrpPv6oDWcW2V6Dsz5mbfximeOP4r98d9Z7er+6qny1
xp9X5DOYXO3jWhZ6zZlVZ3sq5BFfNrfsHV6fRb1+wfaauIHk2CRP1zyZpPly
jcqfRr1Wwt6aGIXk2Fw3RCx77sWaOeE1OOtd5PLk/BuJi4etNXbWr2ud8ot4
9oCvxnBq2ENO1fVNUeqe7b0le0z2f4+Lz8HZlnkTKxt4vL7hv2ssM7Jd/jzq
tRt9dIz47PsQwQewB0t6z99NuP0j5rNQ+DlhH7tJ9ydDc+kffWveFZ+00j3Y
8SnPVBqQ7TUz/4p3M72u5r+0Q3CniOUoh2Z7Dc/3/j1kDRrzQ9nGP0X832zL
1DPE7x+Ns5/gv5X/lee6zrruTgWmIYY2OM7zHykwLTJy9gv8A98R/kv02fKN
J3Y3NMgpvhf8Xb7l1o+p7aBsw9+wvsq3LLyxxpAVdR2xvsmRLxCve0i25RQb
C3zd0D9dazuo35s51jd45Cw/Cf4x33LupuLXJOr2TxQ4B18Qs38m5ijnATxn
ziHmay/3c8wxG/cvcKx3ZNNHZzsf0Mg+fkYwBsG54h2Juh7c8ICPCpenNJpn
XeBY8sig19U5vh3yO+rADWxkH0JHB/776f2YmfT+vEuB48fDl7VLdtT94Fto
dGgbFy6mNEblj/MdI5fYuvgcAjeokc9OOJMhPjr2NNgTcf7B/p9+OMP4u8Sx
3InvTrtjQlvOMDjT4PzjII3lwALXLU/4TAVe1ze3HQ99dI94Tg8VfEat9e8n
CN6rzPHXkTN9rfub0Jinci1ljvWOHGt0g3HA2PsAP6kxnFlr3f2J2bapmcb8
Ff4b8cmPuvye3t+/df1HoB9Z5hjwyMyObXA98A0a53nhjObsWuvuTxJ8bq11
8ScLHif6k7Mtx8IeB/jpRravOVXwM4JPaDDMtWCDhNwOmV1zjSUVNY7vxvRs
y4I502DdhDy3Q5nj2cP/O40/GTWvbwUXRN0ftj+nB55HlTmGPX38Xesz3Cqu
H11fpcKovzUzwrfo53y/A+cK/iHf794swXsX+H0+S/BMrYcPTPhb9VW+39uz
hV/aUmPR2rQldkecBUStY32G7tsXrMngpbYHJfzNmCO4Z8LfpOmi+Yr1k2i+
zfe7fY7azhXNwQm/3zNE841ohqB/1FbPTOki0VwumkMS/vbcpjGcrjHsrjGc
Kfrv8Jsv+ihre/3/v9G49tb86hyxvP3SOscsJ07UPPHplfB7f6ravsVaXW0r
c0zLs+B6oGU9P0jt9omY36VaJ8xrZ9sA1vuXBpquBX4Pr1V5aNJ68bvOj8jR
kc/WWG/FFl3l8zS+pXqWa/Cf1eB9LrG8Zwu/TPi7he+lveeybMvazxd+hfBr
hZ8j+HbB9+RYX5r9xMlZ1pdmDXia4L00z/torg5JWveYtdv0LOtCs9abyV6j
wN+vRbxr2BQn/V0brns4TKkRcZP1fzlAdd2UehT4O3Wd6LPQZ1H9WN3HGvEc
k++4kxvV5z2qm5zva70l4vH3LPB34fpsx7LEh9kWjWFffRve0XM4SXSz632m
NlN1DYLbcZak6+hY5vdhS7b9qy3Jto+1x9TXZqVbVW5W6rm7WPAVMfvgh450
S6Bfo+e2up2/r5uxV8z1cy1ANyHHMSO+1v/uTqXV2fbtx/2v5vsm2hY5LtMn
MZxuCd8xfP7tznksNqZKt6u8TPNzuubnHirv0FjKlZZFvN7Ajx36EvxX+L8Q
u+VazckBCf8rbhA8MOH/wx3ic474tBef76v1bJV+0fWdonv/up7XobrPy0Vz
pmjaimax2g5K+Ht/u/BnCV9farpD8h0XDZ8ZXF8M+7gi2yI+qvIjtZ4T93G/
aj2n7xX8j57DCbV+XzfWeh7cL3wj3ctJtf5+PFbrZ7yOuR5zHA766B3zs91l
M0+OL7vPOZ/QPXyAb6j4TGvn9V0T5VNr/X3aXG47KNYi62K2OQbGHpTxYkMa
0xrvdl1Dz0L/VzYE/Gtq92qZ37mEaFaI5mDRTCyyXeUm5liZ/wGP8YxF07vG
668/db3jav3NQ86BvAPbyboy/4c2Z9sedFPAdyrzf+vxbMuukGGxz+6vuVun
57SbntOrwX4d3ZuzdZ1n1bm8Ldi7o3N1rnCz6qx79VnSe+wnBV8o3AV11rd6
M9h5o4vVTfuIXPE/Wc97jupn17nu9WATj+7WRnSo+U+U2J7yyTC2M0U7o859
vx3s1NHjeqbEukTY+Pwg/ksL7cf02RLXYf9zlNrtWWp/lncL7qf79mXS55qc
taJvulb4IcJ/m7Q9N3ZrnHHeou/JofqWHELMiWz3gy3PPaIfKPqvRbtGcB/B
nye9794aaG5V297EDaa97m2VxlUomkc1rpF6ViOY43p2vZSm6D1YKvr+ou2n
1FHXki36ybpXB2HjoHQ8/xzxaUEMXdbxDfZJO6Kx5r76r9Z9O1PlzqI7i7i+
WvcNIHaq7slypR7icYDScapfor764ltB6WD210oThf9e/Fuq7Q/i31ljyEGu
nHDcWmLM7PJ9iz9bfCsWJe3fljr82OLPFv9/xLAlfgz+hn8Xz1bi80vSMXKJ
c4Mf3J+Frya+MfbqSfvYpe4w4XcXvli4LhpDRPA0jeH15rbp4v6WJO0/lz7w
84rvXHwl4hMXH7n4XzxQbfPY8/APFs89BP+mdn0EtxZcnnTsXGLh4C+2ka6/
jfB/JB3zllgy+MqtSNr3LvFqjgo5/nd7iX9U9Kcn7G8Xv7v4bixL2p8vfI9U
X21FkxauqfjXEscenyaC6wX/w7+c/bXg6Qn768WXL/4aK5P250s8HGLzEs8G
n759RR9nny/6mPg0CM5MOVYwtPgM7q1+a5gDnMsk7SOY9gOFbyd8y6R9++Lj
F/+RVUn7/OWa8VuM32N8OuL3F7/B+GLcR32dzX1TX7sn7R+ZGDmDxbO98NXC
HdLgWANTRD+Uf6HwrbjPGnM+e3vmkuCE4LME/8U+WfBR2FCKfwfBWSnHFibm
DT7sa5KOYUC5UDR7iqaJaJ6rtZ+LP5o5vjFjmYw9q/rdi7midiMEdxbcRnDr
pP0IE1NouMZQwJ4/4Ti94PCFnBb/vYXPEf+2SftNJibP0eKzj/C1wpWKppPg
Zin7I8YvMf4pxwda/CXjFxk/yfieHKW+kqKfnfDZ85Zw/txSfPblzEB86pL2
rUwsqXZJ+0cm9s7EkO/yr4zPZPxHjhfP5pxfiOdoja2L4PqkfS3jexlfm59w
lo7MTOU26mt/0cSJWST6/QQ3JB1Lmdg/+Glun7TvZsqtRN9VNFHRT1RfhYIv
SthPMz6c8W15XL7jJxN7kzjMxPvBl3PHpH09U64Xn+5qmy8+I+ocn5U2F2pc
p6p8RI7jdhKzlRjJYzW2bqLvIB4n6Zs2rca+t0bWuT0xm/eq0DWKz9+CF9a7
jvhB+5bZ5/JvrAEaHLMZmnt1v6PikadUqe/eVM25KUoHi7YnvnuE36/Mvn1R
uOml62qc4ziJ3cvs/zdT5Rnqc3q56z5Tv58qFei6RiFTxf6Z72+56ZrkGMa/
7AjxKdJcLUS2qHt4YJl9DTfKse1Nsxzrw7fQ2rJOY83Osb4t40VHroXuycjd
xUdpJ7KUWq+l3q7Sv0l8crk2/dtylWKCM7WOasu3SeWdGt8i8b2WMzJ8Nijl
iOYJjf1xpWvCfeH+TEQPoZ1lRPhJi8NPaSk2m4WeO8yX3pzJKOVjm5mwb9yO
OY4hT/x31smFKfvFoNwPuwOl5oKzlI+N2z/HQM49lAoFT0raJ0eJ4Mm6nxPr
7PP5uLjtgKEfnu8cnx5LNa+OE/2tKq/Q9V6ideO+GusQbAHQT8qxHS82NFN1
D58V7Ydxl5O67vN1D8cJN1b9HIteQo73teyp2E+9qLwi8HhE1zJftG3iXk+z
rmaPsEr9zle/3dXvcwn3QZs+6v8IpZTgY3U/xyjtyfpWYx6fcEyn8diJc37I
+ZPuZR9sioSfIvzxCccFmpKwv+N2gu9V24kJx4a6R/1er377q+0q4U9IOO7W
WuFvFH4Q6xzBiwT3FdxUc2FroefBh5ozA1j/Rb2naRue1+Ay22W1UfnVpPdJ
1M3kP5zyfmmN+pqQCHGcEvbpXJvjOHPkwxs7Th3jZW3wnvpfobaZcftcxvcy
/33i49XleN3yvmhW4ltKNCcm7Gu4fY59KONLmfVDSco+nWkzId++v1vl2Gcz
/rRZk+wUn1WiaxJ3jDt4sA45W+WiqJ8rce2Yp6wThhT6v03sutMS9q3cOcf+
l/HDzP/9lIR9NO+VYzrq+b8Tyw4ca4yP1O9q9Zsbd5y3A3L8LzgjYV/M++TY
hzK+lPkvE7cNHP/3j9V2jdpGeS6C7xKcE7dvX3z88q+fkbC/5i78m0Vzj2jy
4/bBjN9m1iczE/bFvJ/Kn4jmbtHE445th99p/onEqeuW4//y2Qn7PmasxNCD
N2uAIwq9ZuT5lKXsW5k2+CfGJzP/4s/Ef63qknHHyqNP1gmfC3+v8M2F/0bw
A9gqxx2PrmeO/4PnJex/mTLx7g7M8briS9HfL/oS0X8h+D58B8Ttfxk/zMQZ
wD80/qL5RxO/rleO/4NzEva/TPkrtV2HPXzcfpnxz8x/Ez/Q+IXmv3xBwj6d
D81xrDly/pX4WsY/M/+vuQn7XD48x3HtyPnf4ZcZ/8z8K0/Te3pXrv9fzP0+
Yf73LvSanXfia41nvcZTofHMSthvNdfcSO/mNL2TqVKvy/uGtvh0hw8+0vEn
jl9x1qWs8Y8M78sH4nmneDaLe609MMzzIwu9jmadztq8f3gH+xV67Qxd30Kv
5anj3RoU3q/hhV5LMhdYRw8O70j/Qq/ZoRtQ6H0bdYxrSBgb79+A8A4OLPT6
mjrW4EPDO8LcHx7m/+BCr69ZR7NeHhbeKd65o8J7N7TQa2TaHFXodTHvDWvV
o8NcHVTodT199Cn0foW9BWvnEeH9Glbo9TVrZ96nkeGd4jvUL3yLeIdGhfeI
uXbCrvlW6HXurviOY8K7M7LQ61bmPu/EseG94D07Jrxrowu9PqVuRKHX5vRx
TKHXv7viQY4N3wrm9XFhbo8p9LqS8tGFXgvDlzX4uPC+HFvodSvlcYVePzJu
1pvHh3ftuEKvNymPLfR6lvUp68cJ4d3h/ZgY3pETCr2W5J3gXRkf3hf2AaPD
Oz5eNOcn3J415qTw7hxfGNaJOX4/Jod3hHXilPDubGytb1fC+pvr2+s9be81
Gu/c1PDeTSr0OpHym1r3vaG0OO61IjEiWfuxziLWIuurmRH7NTlVcKeo4zXi
P/JB8WgZ93qKPQN7B+JgVaTsnxe6aIHbvYO+hNYCnyidrnJ13HxPy7G/anA7
srw+wjcwa6RmendvFq/bVN9X/8dR7Pt1bQ+xL4qbx7H6R83IsY3ueMHjQhl7
XXCsmfFZf0oY87niU0WsUP5tKe+ZGPd57KtS5sH+jX0ce8S9Ut7DsWfD1zY+
t/GLRswDYh/gU7ar7vls9kH43k7ZnywxyqZq/EXCX6Ix7xM1bpcPWvzN4i+8
LuX9HHs8YpfNCvjbtH4eWqz3WOk74tSIbg90bRL2LQ4d+zDasY+sT/msYtfe
npz4N5wXcG7AWUJDynv9Xft5cs4S2qe8f2Uv3S7lsxPasK8Gx76fvTh7c/b9
HVLe01MuaqV7orHuLNI/P+X9N3vpPVM+3+I+slcGx959pObYXM2BeQnvgbmv
7I85+ySWB+efe6e8/2Ofxn6RvST7v84p7y/ZK7J/o579H3tBcOyh90l5f8a+
jn0R+yP2UvumvA9j39Ul5X0PdTfr37CtROu8HO//aMf+7x/N/7/ZsxTbRx6+
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
e3h2zE/w/N/7B/xZyBo0T/4Iz+jPMJ5z+X9luby0kXn/EvjT7rfA85mAfzq0
+zNcCzR/BP77F/uZsvbIQC4R8TkwPlN3z7Xf1CxkXLk+N4YmM9dyH/YVwNA3
amyaFRrDP1nms7yR2zbOteyDvUTjwCdXeZ7SFQGXFfCNAnyh8PPKTcMZKfzo
e07oMyP021R5k1yfGzfLdRn4PbXNzvX8Yq/SLOD5jubk+rtKzjeUb84NjTym
+ZnuMzf026Sx+V+j+liu/f5zHtsk9LWwkb9d8IH36XHzhSf19Lt/lmMF0Hae
6JsrLySWVYa/x8wJ5gP847k+X4KWMmdQvwYa4svHA54xTMr1GjdfaYHqUsof
zfA/gH/ByY2cqGfNOyn8I+iLPBlg9kLxwLNTB+PhwTjhyfvFN4b5OjPMH2Dm
5LYG00EDrjjg+a4A0+410ZQKHpZhfs3DtTfSv76v1jf3qbx7e9+TzRmmLQn0
5JT5ZmZkunwp5+G5np/4B+b7wbPme7WH+JQJflz43ZRXKg0XfGhjw08IrlCe
VnoqwzjonkTukOu6YYG+ZWjbVjxbCH464z+6JwL/FqHtmw0uDw/j4RvK9y4d
eEKzX6bLwM9mmP8zzCXd8+pc445v72vjuqpyjX8uw9cKvmkjn03U5FqexRlg
63Dtu84EgeFdFcbDfG4T3rXqgKevTwM932R41wT+3O+ycM/xU942177KV6rc
UXA39lzK65X6ZnitX5frfWVtrmHWG8syTLN/hvFtA80G3auG0BY+wEvC8y0P
9x9cu0BTH+BbBcca+1rQc6Of2sCzbYD550LfPrRdoPvZQfBywXsp31PpyAzn
Hf8P3ivQgOsU8NeqbWfe5QzjOgc8dPBfFuj3DDC4DqHfXW24Z5sazJ+2n4f/
Kd/bfYTbW6kfe58Mw92Vd1HeNeDXhDL10O8bxnN9e9NQv6XBeOj3V76fUn/B
t4jmYMHrM4zbP/BZG8oHKO8W8P1D226BJ2PpEng+2WB8/9Cue4B7KD8w1/xu
Ul8HCL43wzjqBmSY9oBAf1CgB/9Mg8vAPXM9TuB7Qxt4bhfNIOZz4HlQ4L8+
tFkXxtAztN1V7qH8EOW9lAZm+H/YL9ffqIeVDhP8UIbrDws0h+a6zcBQf3iA
wR0a7uHS9sbDY1f7AzP8ze3N+JQfkWt4UMAdEfrqE2DwzzeY58BA3yfw3Npg
GJpUpsfMP7ovcyfgl7c3zPdzY6ijf2j7B/qB3I9w37h/AwPMePoGPr3C9a4L
33Pacp8GBHq+Sy9kuHxohufXPmE+UA/fZwVPU35Srs9Fhyo/KtftXs5w+TDl
g5UPCWMYFmhGCl7R3vgXM4wbFuCxyo9VGhV4DA/07zaYBnhbhvEvh3xEwMNn
aIDvbG88tEeDUzo6w/noAI/Kdd3RgWZUoB8Z8PB/PcP0r/E+iucxucaNCeME
/1poc3iGr2FwuA+0Oybwfyu06Z3hdmPCNXKPB4f7A35s4H+68ilKlwker/z4
XPMgpzxa8NtKxwX8CYFmdMCNC/zBUQftRw3mD57vJXsVvpmfNpiGtuxdwPMN
Z+3AGoN909r25gkf1qvgd52zTQow450axnyZypMFZ2Z6XfXvtWT6uk7LdR3/
JOipx0c7vtrxXc+YmFf8dwoC//xwz44L46cOevy6Qzst9z/ctMDnFOUnh3nI
WvaUAC9CZzPo4jOW08OYJ4dyW/Tx8g2DnxJoqJ+eaz4XBn7TQx9nBBj87bX2
V45/0111zI3fMwxDQwxSYpj+1sR8Tg34iZmGGS86eejm4V8+P5mR8UjQyUvi
vyDo4aFbh24efuGJ90zcZ+KKJ4scB/oclZsXOUbyuYKPjDr/VTQJ8Xk46P8R
+5Q4qn82sf4d/eAXnpjKxFYmNnifqPn9LLhAbTcEvUDioxIftlFTx5lFvw89
uL2S9t1LrEtikpLjc3dgnea9UrLGMUmJf4lfXmLAEnO5SVPHHiU2J358Oyft
35dYl/yb+BatzHBsU3D4A+6UtG9geBHPlbiu/zRxjHL0Q/GjvGfS/pgp7520
r2L6QCcUHVH8+6Jvi44uvqv3Sdq/L3VdkvblTd21mj9XJG3Hclut/bbj13a/
pH3f4hv+njZqp7RB937fpPULuS/oyOEnmLP0W2tNi59d7GHgh89pdCp5tsQn
2D9pX7z00S1pH8zMrZ3EmFNaxBxAZ1LpWsHdk/Ydi0/0j4T7UOm6XOsdoP/O
2eanwn2idD3fnqTtYvFV84VwnyvdKLhnjX2741/wa+G+UrqJcaOnpnSz4O3K
31ZaKPhH9A2VFjNX8D2rdEuuY9Rib4Qu4dstNE8qrNOHvQvvH/YuhyTt1xB/
9ocmre9Im9Or9X6g76jxzan1GJHpZJaaFv+IK2t9rfgJ3i7+F1bY78h1za2P
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
U/4Z/1nR9w/wx6KZnue6+6Om/Vz4dYIHCf5C8I+iuTDmsd4bNW/62ix4kuCf
+R+JZkae2zyN7XG4rosEDw58nhI8IPD/WfRnCj5K6VLhxyn/gfkmniMFf8Nc
Fc1ZeS4/I5rhyr8W/hLBRweaP0UzV2MbwTdO+FHKvxX+gah5fyX4YcGjA76x
9kkXxVxuKvhs5cfwn4g6/040D0bNj77mieeYgH8ee2beReaG4PGCfxQcY+8l
+Di+cVHnXMsGwWMDfUo0l6jf41UuFDxL+Ql8B8VnYriHecJfHHObi4UfFsa/
Mep29HWZ8BME/yR4U9Q8gB8XvleYY+XiMy/mZ9OMGFraL18muBX7ReXTlLao
7YnKfxX9fLWdIvgX+ERd/5vgrcJPDTSXCz4p4Hm3eH9Zx9US+0t9ncL3WuWT
lf/Ovy9qHHC9aDqFd7ia+Eox9807B451ejvhu4b3rYPgPmFeMr+Z56zB2wt/
SHhPGgT3CO8Acxda1r/MP+Yha969RDM6fGt4d+HNPvIxjW1yuN6OohkY5i7z
hTnJmnFP4YeFOZoWfG6e23QSPC7MyzHYMUdtK8Vz4JmyRttHNGekXWZOMcdY
C+/LfEub196CT0p73sAXHOs45jq8WfPyHHherKG6iH5O2mXs1Gbn2d7h1nLd
x1LbvzHv4MdacrTG9lTU+IV1tis7X/CNdbZRvEjwdXW2K7tQ8O3YVpT6Wo5R
26ejthNbSZzZUtt9La6z3dcleba1ujTPOr23EX+21PSdNc5JaV/zseLzbNRt
79A8fC5qOy18JJOjIzehjefmHhrz57quC5T6pPSu6h+1pkLfGfwrt9S3Unyn
q49IseMRXsH3pa2+K0oviG8uPjuK7GNiicb4vHDzeb+UL8izr+j9K+0PmnJf
4e/K8/knvieuDjT4p4BH9yb2I41dFjZWX2k8t2s8OzSenGLHYLs8zzZl1/CM
GvnsBdsw9LrxW4H/ionic0KV3o2o61JqW1NkHxbNseMqsn8K/FDgj2KK6AuF
b13kMj4OsU/DNm2scC9HPaZx+NKNug7fFvCY3MR+MeA9SfCbJbavW6Ty1mqN
U6mTxrIcnd08x196Uvf2cd2XubrWomL7a16iuvua228Bfi6wx8Yu+y21y1D7
Wt2L6brukmLPlWWqu1N8rhCfA8XnfPQv8/yvLC72XLxN5Q3i2S5uXsvqbOd2
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
oyODa40cW20HV/qcezlynqL/5Kbk+JlEjoU8C3+Jq0RzXJB1ca7PeTpn6ci9
wOH7cIh49q103VDB/Sp9xo98gH44Sz9K+Ppin/c/LfipasvhOIPnfJyzcWRy
4PDnyBk/tJzzc64Pv/2CrAyZE/ImzuA5T+csvUmVvgMxy2w4I+f8mrPro9XP
uEqfkXNeTs45+SjhJ1WaboTg0ZXmhV8X4sJy5nGnxru0yOVq8X8r6KL9Umyf
WLvi45JzVjNcfEZU+nrQJeccnzP8kcKPqXQZPyjEg+ecA/0ydM+u0rU0Ff+n
YpZRXVXm6/hD+AVllitlis81ZZYlNWbtKvonYpbrLCxz3kz4HW31HKt9bnx1
mfn93cQ6+Zz9EOM4W22fiZlXM8FPx9wHOmjopKHDMrjavi251zeU2Tcz5+XI
i5A3EU81hrzo/+Q65MhG4sJ/kjTdjWX2i8xZdb7wWf+np0uOXttVzX1+TR8J
0WSk/9MzJkdfHr1M9DPR1766uc+p4Yus7Avei6bW4UUfGH3zpPjkBD3a5oLj
QdcWPVx0dNFVR+cUHVT0wdFPRU8Vve9i0Ren/9NpJkf3vED4pmn3USK4LOiM
opNLP+jXFwnfPOi8FgouCHqu15f5veT8vlT4dNBb3a3KcQzQlawQXPN/+p3k
6JiXC18d9DjRzURvE91wdG3RuUU//bR8+6b8W+VK0dcF3Ur0BJmz6EChZwkO
3fC0aNoEHVD0WxkLOvtlwrdImy86o/SJXnmjmHnjF/NL7fe/UFqvd+VuPYvb
465HZ5PrwLc9epfoZKKbhj4mepvoeVWJ/8v/p39Jjr7MU1rLPamUofLwwI++
1moO3lNsv7ctmbdBB7SF4AeC3mdKcF7az3V3wTuDbuUv+CyN2afiHsL//n86
heToMdUI/33QpUMnEf1G9ODQoUSXEj0p9ArROUTnqI3oG1Va37EBGXKQTaKf
CA69p9bCbwq6ksgeqUdu2Ur4z4OOJnp79Il+VlvhI5XuA/1C9AzRRUJHD509
dHnqRFNa6bp2PLtK1+1d5LjTyIxuxR6I+HqCVyMHV9q3yLqQ6EmiJ4VsEhkl
8ZNrmZ+Vrvu1Tt8KfL4zF8vNjzjY6A+iD4n+UXvRf5R0+w+1Dq1Uvl58Hmih
Z6u+HkOvpMbjKA4yUWSjyFoHiGYKe22lDti1BLnp1DLbu9wrmlPLbBu0TvC0
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
EssM+f9fTRy7DZ2C35s4Bhl6BE05X9LcWxezztoF4nls0Ct9WH1+DZ6k5/Ks
yk+TtC8YnXKbR1T+BlqlDYK/BRezTi26tejVIvNHr4BYfdhO8e1Br7y3+lkf
cxw89EaJCYe+yQPoGsUc8+1R8fwO3swBwSOLfI6J7+oHY9YN3si5oODNStm6
rpcqvVc8X9cyJOjdoiPLNeGnAV1acOggo6OKviv6sG9W639U4XMxzs84D8QH
zOyUeR8o+CHVtw16w3PFf3zQl31LbadUuA1nafDAVwrnZ5zL4btlu2hOrPjv
vIwcPyhP1Xn/87zKj9d5z/Yc74vop1X4rG1FmdfuL8R87gYOny53lnmd/aLK
v+o+vsV/Qfi1ZV4Tv6TymjKvrbcK3ooua8LvZMd653PU7upS782eVfkldG4T
fj/3rHd+fjPfA+7zNYK3oSub8HehU73zC/EnU+9vyAWCG9rqOqp9jrCu3P7v
T2Weay98g96T65VeRs824Tad6z3f0FN7WvdgA3sVjSkm/GXadyUT5vFG4POq
2kYSYUziuUj8BonuvWLvZz7leyS4d9L7/xe4x0rvxrw3384zzfK5APV56vdL
9fUc3z3ug2i3Kr3PdReb99sxnx1whhBFNxt9k6TLr4h2m9IHfHeE75P0OcIy
9HOZm9k+UwAXE/y6aF9T+kjl94u9v/qMd0nv2jvYxhR7z80evCjbZxCcRcQF
7yz2P+Bzlfdl3Mof0z3fA92xlPfBb6G3knSbGWUeO3Pkg2Lvbb5QuW+Zadkv
H0Vs4XzzOqHG8bCL0Vcuth4hz4Z1MWtpYl83Lve3+3vGUO/3FJ3ET4qt+8i3
oFm51wE/CN6n3jh0HiPl/hb/qPKoGsdlbxz3fvxn4RbquUTL/e3+KebzJM6p
7sj2u4CeYA+N+dNi6z7SN+8COokHNvGcR6/woCYeA/poH7GOban7iv46MXv0
X96ie50scZlYPn/GPDb0yz5u4v0e+75/Y6HHvL8jljvvF3qOPUWzd72/geh4
MmZ0xz4RfgV6sqHt0TWOv07542LrgNJmZcrXDc9xNY5lXhD2VOytiPdOHPvs
uOPJr0KXNu649GNqHCc+EvaBzQLNXSnjaMs+s0mgP7bGMePzwr6L/Rcx51en
jPs3/nzM+zviwB9T41j19D22xnHiY4LXpJxDc0/K4yWu+92CE/EQKz7mfRn4
42oc3z0R9mzs3YgJv1b0qQDfi+503DHe2R/GA5/Ratu/0Nc8vsYx42lzfI1j
wBeGPVvz0JY5ib7hh7r/96U8f5mrNcK3Uuqr8jrhy+MhrnuN47JTnlDjOPGl
YX/FPos47fenjCPu/STRTEDXMO6Y3q3j1gFkf8U+izjt61Ou/zfGe43jte+m
8gMp59CwPysLY3hWc/LbSq9Jq+KOx54t/GZ9Pze1daz0aYWuA98q7tjp6DRC
Swx3Ym+h59gq4B8X/dmFjs1+So11HxkrcbpaBPpx+vYcV+dYH19UOS57q7Bv
2SNcF/tFeLBnZCzEGqHvyxJuR3yQ2TXWyesU1iKsSdBt5Cwf2QQ6hj9UWsex
VuXpNdaDrI87DnNtoCHeb31oS6zdDnHrG24U3BB3vN1ZNdanpK5O7++jen9/
LLYdWrtAk6X7+V2F4/HiUwofU+gqXqT8V6Xvmzl+LONFV5G4uHsGGmxu9gr4
vyqtM9E57jio5OgbEk9t77jjrEWLHJ+1i8qLaizb25c6jW2DxvZtsc+nOKdC
1vd7pfUa6Y+4N/sGPHvfkjDHYkWO7dpV5USR47nuL/gd9bu9zjYkbyk/gPdA
n5s3Bb+h1E3lAuIDKh0YaKjrLrg58Qex7Yw7VsaAuGMNlBF3T+lglYuJjajU
U3BaeQV2pILf459ZZ1uO53VNx+p7eQxnZsLtrLPdyMf8x+ps+9FG7VorHclc
Vr6b0hHMWeVVSn0EH6n9R1+l3ryf+Y4dQpyQJ8T3caX+PHt9YwfGPdbPxPvT
Osd/fbvY13pRU9NuKXH7tzS22RXmsZm9kvJspXiR4+PuxzwXj8+VBgnuqLF0
wDaK763SUKWdGsMA9gcBR+yRwQH/mHhGxS9P6aR847mHg4sc/wPf4D/p/Tg5
3+MGNyxuORSxQY4K8BPi04YzbqUXNBdWF1pmNTj0SV+0Gx7oR8a9p8QutZPG
tpfSGOa/8lqlUYIblLdTGi34O13ft3WOR4s9LjbjxIkfqXGNFVwi+HuNcxzv
YrZtXkcG/mvivjfvE+tBe83j4m7TscpxgHeVyYn926XUseiIQ/eo/oMb6l3e
WO/y8YK7aVz7E68q4E9Qvl197SPc3koT+HZj+6w0WXBX5V2UJgruyZxVmiL4
R13TNOUV+hb9IPj7OscBeE73s7fu5WFKj4n/ZqWZwt8ddz0xAgZorvVXOknl
OzTm54scT3V8uXNiqi5opznN95LvGHFYlE4V3Bn7CuUP6LuxoNQ+xPEfTj28
oP9ZY/mpznXb9P3J171bhm1QnevOCONn3CfGjZ+ufN8s+yOfEbfP8980hl+V
NukaLhFuntIC7Ac5hwzlEsFnKz+LOaNrGlRrO439EsbxTMmhwZZim74zF6Us
T7qiwnYd1CFXAnewxnAXMYaVZqt8WlPH2yPW3hfKzwu49gnfV8a8SrQvlpju
VfGbw/zX/VmsvWGHhMtlqr9A+fkhAV+BLgfnuqH8ndpcqPxK4ctL/I2ey3zW
M22n8kt6N9oLbi/4ZcHDSvwN30VHfpXa5up+5RRojx739/1i5VcL30FtO6rN
NrWtKPH9475yrVwD1/aD6C9Vfk1Tn+HcwXj0Pf5R+MsFXyt8R/HZS+1fQR4l
3HylhcK3wq5S8FOiHaH630NdjfBXKn8a+0jWXBrbNSq3Fv5q5c8K/xC2uEpH
ai6eXeA4ZBP1PdlDNFcJfkY0bzZ2TJdvMhzXBXhNlvNrA0y+KMDEjiaedRv2
2ny/la5X+XBs/5VuEDwq4Tbw7sO3WelGlas0/htTlp/04/utdJPgm8VrgfK3
Mn2GRD3nSNWibxCvW1Q+qL1tT6aJtjPfXOHvVTld4vvBPbtX8/o88V/C+9LW
38plfMeQG9ZadozNB7YkZyDrUP/r4/4WT9fero3u4/7iOxTdqJTxf+g9+l1p
peC26uuoIj+/B4RboXxptnm3rXW/6AWgb4AuAvGDiSO8IMfxHu+MO0bPJo3z
rrjLJGDk1OTIeJHbfpwyXK71z2Wa8wvxs5Bv3F0Bz7+I7ynf0o7IDkr8TeLa
7g7fpf8xddZxVhbfH2d32YRl98Zzg92Fu8IGe5e7i93dhd2Bfi0QQQUUQewC
AcVEELC7u7AVMEABG7sTERuF3+fNZ3zx+2Ne85kzZ+KZp2bOnDmHftW3+96v
224+5JPrtTuNvHJW0jTKLdC3pUTflmv03Gyo+mrxkc47KRwXfpRnTPlbaKz2
ULpVeDPhgbUec8azmD1Z0bcSfU/Rh+vbPjjtvCcYO75V6v9PSX87Xlb6yZAH
/bMy83SonpP66b7HnLcJe09J87ao/k1U/+6q/6QO0yiLzIZz3chtOIvG2bTn
dY+WqezPCk8r/bf6+RfPRq1pczP2V8Z5Oc7NvRDOvXHe7aUK75G/VOO9+Lfq
zIuPrZc4L813qcxn7DiL92KFx+/FGv+bOFPH2brXmaMiL21wX9iv57rZc2eO
9CbPIGdFxXMOtrs4k6Bn8mfd+/nK61rwvu884cGi/yL6AuHygvduXxEeIvqv
or/B89ffe71zhIeK/qfoC3kmhH+P3N4w4b+F3xIeLvyP8NvCVQXv774qfKLo
K0V/h3dPuIvG/N0az9+ob0y553705dRyz/Fof3S554r0faRwX43LIuHTyz1n
o83x5Z7LUd8lwiP1PI5QeF3pooL3xefybdI9XxzKss6iL5PKPd+jvxcLf6d7
Oa/W9+MDviU1vj8baaxjoj+i9Nbs/SlewruA3TJdyzcKhQqXgX9Z0vmXq84i
5f2cdF6TeD4M9B1VTy5tW8DHiP6x4htFXy7eTwL+Mu9/G/+1TvF8JDyj3LaD
KXe/8FV6bjdt8ZygVG29kTQ+Ut+6LxQvVtlPxPOTxuRH5f+atJzqqxrLroiR
V+U1Tj+K5w49U90L/ld9rbzfkFEpfoZ7oWfygITT2/MeRe7rRpzXDjzYRMY2
8rPCu4knnXaaMWJ8GdMy4cVJX9u/usbPFX6osV1n7Dy/prKDNLbjVfYifCZj
gy3lf9QeqjObXmOjmfh18e8pes+07TvvLdyYtg3lvYTr0rbRPFA4k3Yb2HuG
d77KbtWm509j+HrKdpzhXVBuuyDYJGF9h31l6vu43DaUsaX8SbltKGNL+VP0
c1R/3/Qau8nEn4m+v+j7Jv3c7CvcJ+0yPCPQOGu+QmPwe43Pfx+Q9Xlv0vsI
r5V2e2mN/1UNnpdkhK9u8DyDOQo05ilHsD7Sty6l8GSZ4yv1GvTke9zgf/8q
tbVI9H/4htc6frzY/0DymVN0aTffv0p307N0Tqf5ugufJ7xKeDlyINVTqTo2
qDXtSdWTUPmVXItwsep5K+a8knanu4g3xjWL9qN4qlXnBaqzWPSId0bxUtE3
UVyq8IxwmcqVKpQo3UP8F3U6D9o7MZetEH4vZvrJ/fzdLxe+K+E+rp7P15p3
drF1gnrWWi+ost3ly4KfRfwttpS4XEUom1bfuvK9F67TeE5osGwXv6UR9s+R
94q2grPYSo+ucLxY/FmV7Sa8nurszjVwhrTMtO4B717wnOToMsuLqbsr5+UL
/ocOFn2S6n8kYb7JnAdMOG+Pgr9RJ5S5ze6h3UvE81jCeXsW/P89ieci9Bkd
sChcAxj/q+BxmnedqvE4pd0ybfTFUv+PPx2uF1+rWYULhS/ljGHCbdB+t9CH
U3Uf/km6PP5XKfN+V5fLhPHvrmfpj6Sfo56hTuhj203juUKvqletdauIGwIm
rg/4NLW1Mul8fMZCv7rUPL0VrlE/e+neTWvwHgN+a/FfO1U8jbXG6FYRk54m
/rUChl4f2qUe9LDWCvQxandV0ml0vpprrfeFb1t83F5T6rhJYXqZ476BZ6zK
dolcpp55UdAJQ7cMHTP+e7TfJ/SHsakLY049LaHOBuZLQS8NfTLqqFfZ0ar/
36THlb0Urps1wYbYg9S4/56yHXRsp3dUeJ+EfRPWATnVeW2D9z/6Cl/cYP0/
9kKgsQ5AFxAaa9De4pne4L2ZiYoXJDz/3q3g+IlyrylZp7FGe0dzxaac13aN
imc0uO3fUpb1/7dOI2YPoV08I5U3SOnX9V97TaGm4Gv4Tu/+uqIfFne8jkJ/
8Z+ivCO4NuExwv8TPk7j1E14/Vr7GIcX/+PsI9F31kYF8Y8Wz5G15v096e/l
6HbHfDObwz3lPg7O+jneUOkdc9ZhGi18vOIeom9a6/ivpL9t1cJ/Jv1NQs7B
2ph18ZCs8zautfyB9cS4Cq+VmKtOrbC8gj3eMyssi2Af+IyKIKPgWiosl2CP
92zhs9vdJt/SoVnbAdmG70XWNkS2FZ6v7/3u+tfsLHxi1nYxduB7kbUdkB2F
h2dtg2N74fGd5v1Yz95uindR+IT9Ps3xiiPThmVtj2O7Wq/vmONfw55m3u1R
ZmGFeSm7MO+8XZWO8d1TWJzwGpC1wjTxfqFn5LOk14ijsrZBs6/wyVnb4NhL
eETWNjj2Fu6lb81+vLfoRWRtL2Mfpe/VM7d/rfP4xh9c62/+Znov/uY+Kbys
9g8SfZXaXaX0Lnq2Dql13r8xl19bPAN4vvWejVH9w9PmZR2PPIS1O3Iwntmk
5hKlGpvDam1r7exwHaxzkY/xnEaVlvvx3KUqLU/jmU0LD9d8vFzlj1N6rNra
SmNzdK3XwqyTpqufefEdVWt/Bd9oLA8NbZ0u/u3EfyzPSrufO/6D49CvFH0w
z5PwtsLHC+9Fe7XWJaxUm8MCrhAeWmtdxQ1z1uc7UemByOIDvSoyDR3DQQrj
aq1Dt2nOOoUnK72P0icFnm6RaegP7qcwIuB1c9Y1pO0tc9aVHCncPXKMTmKP
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
SeF9RB8UHnRZWZ9D550+UNd9gMJIpc9QGMczU2z9JOyxbFrlQP4mVeaHvrzI
8SkBUy/too/6fjhnRx2jFZ/KuBT5PRsT3jVo5BWrrUdC3kGKO9Kmw5+Km5/8
25nHRl26jI3Z7zb9bGc9WOy6Li6yHIIx4ftKubGhLXx0nx74r44bT8YneLvH
k/H+Olw/134X817kmErfnrStDXR7HtVz/kiz09toLM5UXK340Ljni+coPb/D
djnI377KNOahc/Wtm1PnNuDHLgdzUWxzgOElPi/Q5/c1Jp82D4673q/U5y/b
fU6mZm29r7ynusaY8HjGWrhOvBcKzy5yzHWMKjLvhQHv22n+0cK9xD9B+Gnh
hOqZyH3iu9fpMvDT/kFxXzPlJoSy97IW0FhdHGgXB/oBna5nbJHjSQE3xo2f
Eb5E8aWMu/ADzOdVz2Slo7WdNw75QNw8z9KHTtPhhzYl4MPjtqHBmR0we4SX
xWxTA/oBGtu1NWYDFKYr/bDquT1yefKvCGU593NFKIc8AtkHMg10QJEV5Est
LwCjR4o+KHKD9lLLA8DogiKvoCwyC/Q+kQ/0L7XuJjKQQqnlBNDRraV/9Hf/
IHuAB91O+rsob5nH9T0dI/fo1LzuDu6r8JROY/xQz1Q8Q+HkIuvHzYpZR+7a
QL9Z7b6pet7oad7Jela76l19W2MxN2YaZaGhUzdCfdhQz+wNwr1KHa4XTpU4
ho4Nk80GuH7aQQ+PsrRP/o2B55nIGBvg7er/TcLnlDi+OWZ/2ZvUGW9Q6viW
QH8uMsYO+cWdLgO9oHpuFT6/xPFtMfu8ntzpNLhHV/erGtuDdebZUPW/gEw7
ZlvZ0G4P/PtU+droM+N6Zxjbo1X2aeEDVc9S1nXCW5Q4/67A81JkjA1z8u8J
PG0NTm8uvG2d6ROE71N8f8z2auao7L0x29C+otN50A8X/2M8G11d7t5Q5851
Lju7xPEDgX9+ZIyt8pG6lgeFtxIequ/qQ8Ib4Ws7brx1mX2EsF5irQTtwcCz
Qs/I3z2dV4WPgzqvRfAvQsxaZHa4hkNK3L9Huf/FjukztlaGdDoN/ljP20cK
c+hTncduI87Oq+wTwk+p7Cfq/1Mx28oe2mk6tl+InwyY+KmAj6xzmjq4N7P5
jhX7Xj0Ts62M1bSAP4tMx+Y2fXw89G1Yp/ngOUj1PEv9qufETmPsvRA/F/AX
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
KXtME+vcR3zKXYn9pLTbwN48tuixSz9G9ewWuQxnQw9PWMcyk/S5U/TAsYWP
zXzs5E/C333C/mOxkXNSwnZy8J11dML+szat1jc6YZ2RmxvsF/bIhO1wHJOw
P9hLVM//EvZVi4+DY4Wf15ripgb7daANbFgNTlj/BxtZxyWsF4R9qiEJ67Rg
S+r4hHVsbmmwv1vqRQ9/aML7+A/zv0g7jf2ekxO24YNdn+EJ2/bBXtGJCdsa
wt7SsIRtLr2GnnbC9uT2xN6F8LXsbwifJjyz3PalTkjYrtTkOl8r/m+3UZlR
gf82hdGB/xeN7akJ25fbG5sY3DvhtfmmB3yc8OnC1wuvK3w27wV7I9ig4F1g
f1D0MwMezLeSdxnbaNivCPz7C58b6NAuSrgvB4h+Pu+R8Hr883huy30W+aqE
zyNvy/c08Pyj785ClRmv9ErhRdikEGZBsxh944TPuk5K+FwAtu6wfYdvBs6i
XiK8SO/4GWmfNUV3rlhl31LZibwbememKH5abR2MDYmA79Z374eQPhB7GqGf
nBG/POFz4pzVvjLh89qc+b4i4XPfD6nsrhrrOxO2MYxtMmyLlXTqOWz3mdV5
ejYOjXzWdK7wIdGas6zTEtbH4/zltQnr4JWp7OB281cKD233eU7Of16XsH4d
ZztnJqx396rqPDzyGVHO4U7lvuidekX0wyKXrUGvst1nRF8TfVC05rzoDQnr
470u+hHRmvOfNyWsOxehD9nu85/zxXNkZBxHf7Ld/JzdvCVhnb0F4vlf5LOa
GfG80G68rN16h9gt5QznbQnr1z2oMdwFnzhKPyC8s/Dtwt1Vdni7r+sNbN0l
Pb5PtfrbNI+xE/3oyOcg3xQ+Klpz/vKehPXoOB95X8L6crtUmJfzkrtW+Dwk
ZyE5d/hQwvpvnI98IGHducWq89jIZxPfFR4S+QzfIuFjIpd/tNX+LB8Wfkz4
/uY1Nt2Iayts0w3bbjHhJ8TzYPMaO27EcdGfFP2hZttce1z4gWaXwf4atIR4
Lqvw2U7OPHKeEp+anKncrcJ95OzkO+rb4Mh8l1e4v5z147zk0wnr+y3hn6s+
v6P0zhUeM86rvif68ZHPNXJe8MWEdfY41/h8wnp9V1b4/CFnDzmjiX9Kzmm+
r7JDI+fdqf/O671DXqv/N68mfD5vTsLn42a3+n/zitJXVLhNzlGur3f2hMhn
DJ9p9f/jNeHhor2esG1ObHJzTo8zetghwy7ZhhU+7/VGwme+OKv3ZsLn9f7W
WL6JvVOlX1Wd9zW7DHMfzsUx/+mpf8pbCdtb4lwAdqrYJ+W85LMJ60/O1nUV
p83HOTnG779zeW8L/47MVu2MC9/VbVI+a8f5tc2TPi/H2ZwvW/1+fqT0F63+
RnyY8Fm39wP/V61+tz9W+sIGn5PbWuP2davf4U+U/jnvc1+c+fq21e/nZ0p/
0+r3+VPh71r9Tn7OWOBnlnui+j9v9fdoScL+cfGT+6zop6j/XwXMebrvE9aF
KxH924TPL/+Y9/lPztmdKvo3wi+zj5n3eTbOLnGO6ceEdec4A7c0YbkQPra/
DvyJfvp24YcFO1+676dFLr+v8JjIZ+mW5h1znm6g6KMjt32A8NjI11+ueg5U
PSuF99b9+y3h9VQf5f+a8NqtUfiXhNd6f+ja90THUek9xb884TVjU2QaazfO
xi1LWJdvhfj3xr4bfRP/Hwmv41oi01j37S/6XwmvB5eLf2DKba8S3hf9QuF+
kWPWff0j95c1Wl74n4TXdweje53w+q5E17V/ynmHir4q4TVXh/i7JL2OGyBc
nPT67kDxrEh4zbhU7e6W8jV3Uz0Hp1ymRvjQlMscLv6ipNeAR3BOL+l13zqR
7wnrvh01ziMjP8d1Kvs//LOw3hM+Aj8p2NGLHLM23CByPmu6o1VnedKyiGOF
K5OeP28inu5Jr+82Eq5Keu3WR3Uem3Lep3rXtols96W36EenzHe86qlOet3X
IvpgfMQovVnkmDVdXvTj8f+i9BaRY9Z0w1U2lvQ67oYmPT/Ccc7kiV6T9Nqw
a2QaNuKwL5FM2p7J5/oXfdbu7+Zg8XdLem24NTKHpNcaa1e7v9ioKRM9lbTd
tv8plCa9/uXsI3Nf5r17IDdgbat4fZXtJTxC+AxkC/QdvQtkBQHfrTlMb+GR
rInQuwt4x6Rtr9DPH3XtM3TP+oYzlH2SPv94JvKEUP+Vkc9YMo8ah1wi9IGz
kpRDF3dwwWs4bN+emfJZSuphHc+6HtnARupzq/A44bvE10/4DOHN1IezVKZN
6fMix9DPRQ4Q+G8Uf174TOHz0RUMeAuVPTvl9MbCpwY5wlbCo4J8YWuehyCT
QtYADTkH/zHmAPz/PxZPR4vnB9vynARZCTIVZCzIYLYX/YQgc0GGQj7ymx1E
Hx7kKdvxLAU5DrIVaMhjvmzwGVHOhyILQX6C3GVH8Z8U5Ck7CY/4fzIjYmQw
yIOoD7nRzuI57f/J8oiRtSC/QI6BLGRX8Yz7f3IQYmQerEeRhyBH2Z1xC7KM
gcLnBjnFw3rOF/e138VdRB8bZCiX67/aoP/B3kH2QTnkIpx5hZdzqcg4qAO5
yG4qe2aQrZyicb0g8vUfIPpNGc+Dt9PzsE3S9rQuVP7WAeNvB1882GzDvyB+
Bl8T/Ue9413TzttH9UxEFy1pOQT/S/6V+MDBJw72wC6KnE/Z31W2LO28etF3
SNpWWFZ4q6TtwvHu7hjeC3ze7YRcSHhkIczb8Vesdm/MeA46ohDmoviJLYS5
aDfrYe2WtC7WFI1bCl/J9FO4Ht/HwvupnhsyLoN/JM76cs730px5Byp0yep/
w3e7u9PQv8RPo3j2VT0n8S2udn3fdrddS+xbVuN/UDxX5mwzbqny9uO7qvg7
5e3Dt1r4yMKa/NX2qfkmC1+tcuviZ1npWcIzc7YBOjXnPOzWLevu/J/x31JY
Q7tG+evhuznp9tdJu+3l3U37RfG0nPmweXcQz0OzbV7/prxD+FYrvlb503O2
hUe8ftp52MVebR+7u22YYsv0b+GVCkcI/6v4qILrps0rVLZX2tc8Q3h00mW4
pi3TLoOfSPxF/iP+b6v9jH/X3TZPuW7qxq4o9kUrlX+jyt6Qs23TYqWPVlyE
7T3RrsvZpio2T//Lx74qtC7CNyl/G/yHJs27Fb6bhW/OOQ/7ql2rnV9SbVur
/9FuUf62+GVOuv2t0267rNq0UsW35syH/dY7FO8tnhNCv49XXKH4dtFvy/l6
iPdKO69btXmrqm07dVig3S2eu3J+trAJOyS0yfXQ91Uanztzbm9YeP6GK+5e
7XL7pJ0+uuD7yX2uqfbz26PaPmOvS9qPLD7n8D2HL4X7RX+0wenVNl6TLveA
6I812IfffcKPNNj/H777oOFL4eEO+4HFnwe+9/DBh0+GB8X/eIPTDwk/IXyq
cFTtGH8L+BGkPvw/HKzn847mNc8NcUr0vMqenrQ/EHzx4pO3TvgQ8V/X4LkC
PmzwZZOuthxrXNKyrE00Dmcm7Xf0rKTtwGKL7GHVeVnwfzNP66Evku5/d9HP
SFqOhX2yswL/YWprnq5xrsK3BbfZVm0fkfgExR/oEyp7CjKOpP05Xsh1lNnX
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
4SFl1pfYSfhk1jV67nq2rNFLIGafdqHodS3WXUAHY0fFw8qsxwCNPVv0F9B5
YC93kfjrW5xGTwQZLvLbxaI3tFhfAd2E3SPLgNFdgMbeNXpGyKyRV7P3zp49
++/sq7PXzt46++Tsi7Mnzh47e0LsB7GXzv46++nse7NHzt43e+PsPbPvzN71
QZFtJb+j/qzV4v3jt4UbW7x/zF49e/Dsv7OnzX7202H/H70BdADYY4aXfeZt
VPbYoKfFvjL1sefM3jB7xOwns8/KPjL7zO+Lv6llzT4xMXvFH4je3OJ94veE
+7a4DHvA0Ng3Zm+YPWL2hJeIp6XF6XeF+7S4vQ+FW1u8T/yRcKHFclv2iaGx
P4yuLnre6GyzZ4scl73cXfWv2aXD8qzPVHbtFu93Yo/2uMj7ouzLsj/LXi77
oOSz//mp+Ae0eE/3c+F1Wryny34S+0rsd30h+rot3gdl75R89gDZn4TGXuiX
4lmvxfud7LtSH3vI7H1CY+/0q37eB2Uvkz3GEZHtb7JveWJke6Fv6H05KfK+
JTZTh0XeI/26n/do2Xdhz3BU5L3Bb0TfI+yBYYuVutmDxabdlMh2AtmnoRz7
k+yzsT/HXhv7e+ztsa+HXdKTI++Rfqs69w57b+jgjI+sh8O+BHsD7AtMZi0c
ee+CvTj25tjTY1+CvQr2Jr5XPQeGPTn2MdhvYK+B/TzqZj+QPYezI+9LsI/B
Hgb7F+wtnBN5/4H9BPYJ2CNgb4/62Itjb4G9BPYR2Ddgz4D9AnSvJkTWv0L2
jNwZmTMyZuTFyIqRUyOvRraNXtLFkXWTWE+yrsS+H2cQL42sL/ZTP8vNKfOd
8H5hPxIdromR9bg4q3pJZNkw81HmpfOCHsRTkXUhfox8X4aXW5/iycg6Feiw
sAfD/kv3PpZp4lsCnxP4nkBmic7OVZF1fLr1sbyePHRzro6sO3Nfp9qLbI+P
fZVrIu+rsM8zNbLOC3tQ0yL7pUcnaLrw0RX2Y0GbyI/Rebk2so7PHapzZmTb
i+/l7F8Zn12/tJuO3QlsG84STpfoeRPPOznnPdFsX1+UuVv13BTZruJv7cbY
o/hJ4/xjwfVX9bEMHZ8c34l2A2OCjpxo7+dcZoLo4wuuB78d8CIjnyTaxIKv
fX3NHR6MbA/kEbV7R2R7fyvU7m2R7VE82GmMzcHLVe6ygnkuVXxJwfRP1eYn
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
Txa+vdL6ieNS1m3so3rWarT/Zux4YefrfvE0ipZrtB9o/OWSj+0v/OtCw/YX
fpux7YVdL2gjAr2J72uj87H7Bc8Dlfa1Ozrw4yMam1zY46LuUaF+bHRBf1C4
hW9to3lbdC1n0J7ob6TsAwOfF0k9n4k2p/lfj1Xct8T6lehHohuJziK6i/iG
7SXex3n3U/b3Oyb0AXtm9P++SutFoieJHmWD+B/j+6ZQL/yo4nMUegs/wbcu
5fXQhSmvidAJRjcYv7joxK3Wnav2umRCymuTQZrbr1pLfPpefNHd82/m3tvi
uzblM0wr9M7+mnMeviTxKXmV1rO/FTz/u0TpFQXPj6cI91N/nm7wmuGXgufu
k1P+v1+uOMaZC9V/hfBnqr+/xvWlBn83H9Q/7irukeLrVO6WlNOEqwO9j8pO
FV5c6e8s5aivRe0+1eA1T1+lpyl+u9LrH2iU+7PgufulSreKf3aD10tNyrtW
8buVXjtND3Wwnrso5TUd658ZgbdNZZ9R2Vkpr5lYT7VUey0Frbna6euEl6jO
VuEbhBdUeL3Eugkaa5abhC/QmDyi+Fa+M1qbX68+vpjy9efV1rMNbgPemwM/
bcwUfl/1n91b362M+Yta3Af6cnfadb5bYXnC7SnbNe3f5jXSnUoX2rwWuku4
o83rkLuFO9u8trmHcWzyOu0O+of+Q8oyB+ZSzKnQCRrQZr2f+8J13BbaXbvN
ej/M59Zps34S8znmdtDQwVkUZLnYYPhE87fOFstn12uzfg9zvgf76lud8Thd
0sMxY8VckHz0ejZos74L78b6bdYBeji8J9DQbVlX/X855Wecd4l3Cj2XDdus
v0J6ozbrrPz3fhKjz8KckvrQFdq4zTox/717xOjyMCd/lmvVOHft8PxmttLl
HZ7TPM096vAc9KmU5+fPKV5X/Et6eH7M3BjdmpfC92ZlwfOzJ3mnND4fpjx/
YQ7/vPB6lO3tZ+ZubCLpnZ2cdl3M+Z9RvDaymj5+17n+dbP2P8FeP/bssGv3
nJ7zKvXr65TTvC/zFPescPr1wMP7/opwXYV1FuaH54L3fQ7vo+jX1Pj7yLcR
vYMFKcsJv1Ef7k87D78Z+NI4X/QNFV5lrPUdKmRNR98AHxr41bgojMNb1Mlz
lbUvDfQW8I/BtUyusQ8N6BfXeJzf5jmr8Pi/y3NU4bnVBynPCTuzrh9dCL5p
c4WzFb537/DNqfB87f2U52/M+95Lee53RLN9JFenPc9akvJcC5lu97TnEqz/
vkh5zch69POU16SsZT9JeT3LuvPLlNeerFM/TXmtylrwq5TXg+zD/5ryXnyr
3se/Mr5PW2Ydj9J9+U7xNynrIbyYtx9Q0qyhP0t5Hf1S3nnfpqyz8F3g31Lv
3LS058L4ZfiRb1uZ458CXk/f6h9SQceB8tzDGsfLUrazt2ObfSguT1m28X3g
R2bwccoyBOxD/xz4uabl4bq65lwvdSK3+Chl2cUubT4/jOwYXXB0wtk3xp73
Xynb916RMsbONzbRf0/ZLjq0vwMPtD8C/Ywml4EfeTR1cwZ6c13jvynrI7Be
+Sfga/RsrKRv+t4Wqf1VwofUWq/hz5R1G7D9CR37n8PTnjuBt1SdpaHPnA3j
jBj6C1uIXhLwNlqzj8m6bnTW0V1nX3dr8VSkPX/mmeoWnqvd2sxLH2j/99AH
zhiXB37OWnPmGt9AzOs538XcvnvB95n1zpHN9tXdA71h3fehHdbfna0QKZyt
f/3reieTwmcJH9Vsv921QccdXfet0WUST1z4DPHUqo4ahbTSGyveSKFNOKU4
UsgKJxTHFTLCWWKFnsL1iusI+NWGT+HMbtZ5R5d+xxrra3M2YSfhJvH2VejD
fp/SOcW7Ku4tWi/W4cG3Nz6+dxG9VbQWyihdUNxfoVl4A8XrK/QLuuPokO8s
/s1E21Qhr3Se61BoEl5X8ToKrcIDFHdSr/BatKmwFt8ExVsotAufp7Bp2nIb
fFp1pi1P2F752ykUlL6uznn4uvpWtM0DH74SOgI/6QEB7yWePTusK7+T4h07
rH8/UPHuHdbLL1N7GykuLbefcvyVH6br2kDxhgpx/XM+E+/GafMhT0Gugo4t
/d0s7bPgL9eZJyH6F/r2bCI8TH34jmtMu6+vtRh/Lvq+PEcdQede8aAO67If
rPigDuuyb0PMPeDsgeL9O6wf/3mH66e9w4QP7bAO/f+a7T++RvhkPf/bK95O
YTd9z97JOD1Q+D3OWTAmacf16vMOPDsKdcKjWEvyPCjsLv53M84jDb1BPD+p
rZdEP4j3U+3/T2E3nnnxv58x384az93T9ge3QPSBaadHtq1p/xTm+T2dd6n4
90jbNv6Jqm94h891HKv4mA7r5Q9RPLjDevwbqA9PquyevCPtWpOm7SP7K9G/
VNhf6XO7u499RG/or2tVeFp5I9p8TVw3vK1Zl79dbR/It0jX2CzaAWnrLTKO
jF9P0Zc2+/oPVvox5Q0OPNjJw35fP30/j6owxo7fPM2lDhW+sLtpRwSeV0Q/
THi86BUZ0ylXlnHd9P1s9fMo7m0od2QoSxr6TPF0aGzvyjj9Krr1ii8WfSFn
MXinutt2K3b82SO7jXFMWxbxpMody/VWOj4u8MB7bMB3KD4+bfkGtnDxjYSd
/xN4xgOmPGWwpT8XvX/h89Vur/7mx0fSfRmXubvctBNCWf4J/A/4F2ylcX2v
yWn049GTn8PaGv96wm93t046evKv614cJfoI4cXdrSOPbv9c8R8t+kjht7pb
Fx7d+Hmij9WzM6bDuunos6MD/6roo0U7tcO66WVt9oPyUrl14dGff4V1rfLH
dVgHnT0KbCWwf4GdiTPTlj2fqfyKDvtZAJ+d9tyD+JyAJ3JPFc5VOupvXuy9
842AxjeM/9j5actckGfzfeTbOEp1juywzv3hjZbDXpC2HRP6/HnYi4SG/HVG
m8/eX8ez0uYz6tcLX8RzF64RfUZ0HcuCXiQ6k//WWFcSnUmMi12usv1bPG9G
/w89wJJaz6GhIaO+jOclbVsxxJcGfKXKXtFm2u5Zt01/+U4jO+ZbjY2ZywI/
MmNky+tXeO/0irTnjFPbbLPgKqWvabMdgauFp7XZ1sBU4enCb7HOFb66zXYN
rkz7f878Dbkl+vfo4S8Puvzo///Sw+N3URgTdPHRyf9V9GvbbBdgVtr6/ej5
/9bD9vi5xibdu1ltPsN/g9I/6Jl7TvFH6C2Ivomu+RbSnHdSXM+ZKdF3QRdL
Ya9G5z+h6z1W+GbhOyp81vzWtGWHB4vvVNVzZ9rny29PW+7IGS1oO4l/d6Uf
TXs+gKzxtvCOH9Li8ncpfUrWMeWQMbIGZh0aS1veCIZGHrLEewKGfpfmRXcW
/M1mDQvfwCDnYc2CbIf96gfT3rPGV+cDafvxRD56R/iGsJf7UNr7uU8ofiTt
eVGbrv3htOUqx+la3hR+WPQb1N7t+nbcmPYc6onAv794nhae1M3X/WS4duZi
T6U9H5uhd+UZ4Y31Xjye9ryNOduDqvPeVucxz3lB8dRuvm/PhnvHfOZ5niPR
96h2eco+1Oby8DG3eZHnsZvnPC/xPHbzfOllnsduniPN5f3r5jnPPN7Nbv6/
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
+DFgzvqMhOflr6s1Zv76TuGzE+YGMCd+VsJz5bfWGjM/fqPwmQnPp+MP4JyE
fQWQ4/sAHwLjal1X6sn8O/rM3TMvdl3C825jal0GffwBoI9PAPwMYAfbzLFT
H3gL+Abg3NFlPfWVCc+HXpTw+n/W/k+o9Tb4goTXui8JnwDosP6fte/I8SnA
3PclCc+Ds00Z/Aww/3xpwnPQ99Rah/nxubWWM0/NPPBlCc81Y5fj4luAdanI
mXdmfvjyhOeImXe9KuF5WNalXpHwvDBzu5zLJTFfjJy544dqrc/c9yPCVyf+
Nwd6bcLzkqxLxT7z1CfWuv7/nm+F9ZmHfVzyaxKeb2WuFcx86/lJ8xge1fY3
zWyTudHVeq4fSXht43rJb0h43pA5RDBzi2sln53wnCbzeDcmPPfHXOL1Cc8n
Pl1rOXOF78jmnITXxj4v+U0Jzwky1wdmvo+5vJsTnmNdVGvMvN66ZrbJ3Chz
dLckPK/3aq0x83f46bg94bkt5sduS3hO7d1aY+bU3hS+NeG5POZi7kh4jubb
evv6xE8mcy93JTz/wrwZ+szxMYfL+TJ/Dd+Xsszj3Bn6lKUM2/gLXdPM9zlz
xOyfEzpnq70fSpi7wtrW+xJeD7tY/fCiOs8tsP6VdbCs91zezjqse2VtLvKF
Ue7+kLNNmR3Vx5+ZNBdnbsJrZNHhOA27WQZ/Z4rOd17CMd+/LPQxmcugLHJ4
OOQPBKa+86PO2bLzYMIcn2n13rd3oc8L7g77Vra1PuteG0n/4YR5OgsSvq/g
2yxva/usq13UwfXnfM9NmsdDGfCC0J9Rb7xvoecxudbMdeZ08/0LT+cYXd/P
E+Z9PcE9q9Qn12NyYMbouOcXJszPybSzHjrIHgs5usin53ttB/NezHndovfp
k9Szodclghs2dP5UyJ8OzP41bW2T9bbPJLwP+VOBz1H9b9J5Ha56PJewDmsb
F+R5fSOYNZCkZ/5f2efjWONV7oWw86zs3KLtF7W9X531scM8GvVnnu6FKIs+
8zboMqeGjH3t8v0tTF34Hqbcoii7VflbSmOzzaOGCw53fWOdeez/csLLjYcU
6X3W2XxyeODIXg4duOTIBxT7WXs9+gR443DK2c/z8lrI+Xd/I+H/d8q9GjZZ
a09Z5kvPKLYO4xB8Y/De5Z27kfX7CXOb2f9m2GHuhXNhvgb+MjpwpMnfSfyP
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
z/My98m8J/OfYOZ8mUNmLplyzP0yRzys+H96g4WHF1vOHO5BxbbPvDPzuszv
/lfulNBhDpi54EOkO7LYmLndIcW2yXGRTUv+b/4XTDnmGqnvxVmeQ2MujTky
5svAzKWR2MdaK8ZTTku6HPlM7uksj9UzF8b8F2PR08MOdT856k/7nBb6tDX6
rJ1b38l2sL1abXqz8OYc758VNlnHiPzXHI/PMU7HOB5j8mcFZryQsb//xvrQ
YRyPMUDkjBsyHse4HOvnLlF+qdJrseaOcbr/1tCdE5ixOuSUY3yOcWbWymGX
47Kej7F95P+tpzs/cHedy0XUn7ld1f8C4ZcbOr8wcCbb24dkWXZRyPeX/sVR
t565rmfXGN/DPnX5d+4jzvfabtY/Nst6nFtVtmWXhB3OH33WMl6rfZcJT5L+
VjjoodNfx71SeDFrlpPG50rnCuWXJ10O2VWhwzrYK0J+dcjXSd60ie1fk20Z
+36T7gG5xujQJteE/WuTxpw7x8EmsSd+z/E+5A1SxpTNSbnO30dbzRZekGXZ
7DgXjnVd0jaQ3xD6f+if+8ak/wf5L+T/kH9ObF8X9i+L86X+A3Ndlnai3E1R
ljJs8z/LNeb6cT25T2+Je5h5y5eTnru8TfntSY+BtG3kbbi4rH29Nel7/I7Q
Yb0hNpDDq2Et4R0hv597Oem5lbuU35n0WjnKocNcz6cFljePHL3iAuvcFnbm
hHy/WG84JzDrAe9Neh3iEpW5W7g08nuUygqc3x06YPSZG/pc++4TbhlrDakn
6w05DvaZY3pA+byk1w9yLveFDrr3B74vcKsC274njvVlgcuWF3i8gX82/tfm
K38o6TUsDyZ9DOyzDvHBwC8UWGe/HO9HzlwVcyfzoyz/+PzzN4zEmABt83DI
+fdnLox/fP7N0ymXZQ04//fI+8f+R0NnZ+IXSm99A/9fUuf8SJzDf+ssF8a5
8E/Ov/l/ayjB/F+TPxGYd9BTSb8TWdvANu+jeXHuFQX+N0cfe7lRH+rIu+vJ
KHtr3Kvce0+HTeyRs824+rPKn0t6nBmOPxie/+74pkl6Xe0Lyp9Pmr+B7NmQ
byix/BmVfUP560mvla5Oucyz2R5XfSHKElOBdyjvCN5L4EyBj/lsHBfZS6Fz
WmB0Fyf9rMGXWBTbxPd5OTDP4DUl3tdR5/uq8leSXpNOzva6XOevKe2V73KL
oizH5twuhCNd7DJrcz1X/VrYeS3sjI31Pk9He/bN87l/J/0PlH+o1CjP/wZv
J70O/Tj8twpvy/Wc95vRVsjQ2Z7rNkTOf9y7yt9Jen06ttn3fa7/Jd4N+fEF
1vkr1znyv4XfV/5e0uvNsf1W1OGkAssb5Pk/4f3Q+Vj5R0mv155Y4HPIzvO3
PufCunLyDwJf0tD6F0dOedZxfKb806TX83Ic7Gfl+ZzeiPP9JPQ5FvPZnwRG
Bmb8/I9s21mhfEnSdrH5aWDWcXyh/POk1/8yV70kdJAtDfnS0GFNyrZsb6/O
tozyjKt/yfVPei0GOdusEf4q5OA12Eh6bSNz1V+Effajx/g5c9VfhT5rU78W
Pi7L+XKeSeEVgdnPPPSKwMjAjKeNynMZ9FlTulL4iGznq5LmieU38TZ4e5zD
WuWrQ4dy5GzD0WKuenXIf1H+s1J1jn2h/hJ4bdLnyTmupz2SXivK/OXakLMf
DA8Lny/rQ6ekkfWLI0c+VPtbanujcAvlG5R/m/R6SXK2R+S6XbELp6uskfeV
Kv8u6bKstcS3y3eBkYEPZUyeZyLp9Y9HxDYYGXhUrvvvH5Puw1s38r5W+AAp
sJz3A754fhJurLyn+q4eKW8PKXD93sr13POmpHVPKHEbHp1tfeSs0cM/y4Y4
xw4pty1+AHgGc1N+xl/tom8l6qT75HF9q/ya9HVAtjnk5Gz/pbpty/f2L3xL
at/vwoco36J8q9LILMvYnin5CVmWo8s3Ht9VfPNMbWg9dKbp/vlDuJNk25LG
8KLx/bEtMHNv25P/W/sFZi0Y+Z+B/wqMLjYoe2VDz9n9FXL6/r+Tfhegi/zf
ubyoM/XcPcc6vCv4TqTefDdeGZj6F+k8CpV2z3a7/hpte7jaLkvy0dJvqDxb
6dWGljUMeXbgBYEbpfyt2Cj0kfNd2Sgw/Wheyn0p35Z8j7K/b4mvI/06ehyj
c5bL5YTNXUpcdlT0r/kp94G7lRjT7+4p3Djl/pV+j7Vw9J+sfQM/EH0p69bo
6+h70eedwvo15MwbskaNdXdrok8D09ddG9f9mujDWG9G/5bXxG3YL9trzpCv
j2PRf2KTNf9F0c7kzVPmu9YpL0mZx8sadfCl2ea8okM5ZKWh87eenWLhc7LN
8UVOOZ7LVMrPZgt85ihdLp2sJsbnZ3tdeouQ16eMe8cxi+O4yFqGHG4wmHJw
ectTXsNOai18pfS7pYz7hKxVyOmrKlLur3h2Eyn3S/iPSqbc9zRqYv2LpH+P
vg06xzniz4qyw6J/Qp9+Cf9U2KE/4Fjl/x03z+dOX0X/0T7lPoTnpjLlZ4f1
vKz7pb9pk/I3KH3Xb42twzNKn4ac712+v6pS/gZjmzJ8AyPjO4znDt98VYF5
HpFTbrP+K9sKn9fAfRjHpR/btZHldVnO2wWmvvRrPHfIalJea9at2PuQ4wMC
+bIsP6foc647KK9NuU/rqLxT3Fc1YR99fDS1ifNdUGB91v9yz3aM+3Z+sfEl
cX92in6B+6Jz3G/IikKnS8r30H/3T13o3l/sfb3jXquPe5HUJe7DB6TTNa7d
rnD0qUOeZd1CPkL58JT39VHqyzXL8v3SNe4Z3iW8U7CBfo9oZ/KegX+LNqJ9
OG/w3/n+Xuwl/IfyuSXGbbJ8vSiLbWQ7hpxvvd4pl+sd8m1xH3aL+x4Z+3gf
PVDielNnviPBf+a6LeviPt8pzov95GzTN/ZTvkvK35OknYX/YX68xDiT5e/A
fqGDLpj+kO/LXYUb5vm7cvfU/2S7KVVl2cYuYefhEu9DzrfuTlGf3UOfsnvE
vxz/ccjYR585jn3CK1SN/sr3VFol/G03b4OR/btP9g9SvhfPWgOX2zPK9m1k
+TfC+yjfW2ltA8v2DvnAlMscLfxdN+uhMzjl/8TRDayLvD/rlJvpPNroPaZ/
1RlValfhUfheUNn9pbMB3zjKByj9IHxA4O+E90tZZy/Z+bmb9dAZmrLesQ2s
i3zvLN+nI+J+o44D49z5jh8YdSYfFHLeSWD292tkmxyX7/KDon0494PiHHn3
DEn5G5s0OM6X8x4c58L77OCUbfDNOjTqST4s6t89nqnaAts+OOw/pnM4jucn
y3UZGvodC6zPefGew87aOP6QOG6POHdsNyrVuSq/WfKufF8KXyU8UvmhXBvh
Q1LeBv9dYp1rGvibCXlWlDs85GxTpoHyR5RGpWx7VOiAydk+iD6Tb1bh61Tk
ioY+LrazSi2/voHzIwNT32OizsiOok1lo3uW990o+aNZlmN7dOizn5ztoaxB
Uz5G6fYG1j0y9Ksauf6c78IoT9m8UpdBv0eUv1W4Dh+71L/I12RMXJfO+A4W
vlbyccqP57rw75Zt/BHfDKxzDjl+efHriy9bZONCjl9efPzi1xa/0viXJj4k
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
POP9H0j/C/pV9Sf3wQkRvlf5XOl8nbFsrtJy4fuVLyAmiHBD9XUPaHul8LwW
tvslbaJ8nsquyLgc3JYlGfNWHpB8VcblFhY6/h+x/xId1XYZx2q5iP9d+kbh
V5XWC7+i/HWlb4Vfw0ed0gbhN5RfLP2NGcteVlpHH6v8nZaOYUzsYvg0P9C2
+JLSvu+F32/hY6wRfqmF+UY/Ci9pbF7RJuEvG5t79JPw58KtwlcCfhIuVv0b
pD02e7l0NmccP+EbpT+4psofknyr8CrhFXw/Cy9XPl/ybRnrPij8e8b719K3
C69R3lny5vre7aQ8pfSX5Oskf5i4GBnrblL6W/gn5b8o/SP8cwsfb4vwSuWb
lRrw3a/8d6Us4d+Un9/KcUGI0fGnthsJb8eeUg7f5cq3KWUL/6H8Suk3Fm4j
/XxdrybClcIdlYrgOnCu0msovEV5V9233YQ/5v2gsgXwGIRrlAqF2ylvq9QU
jgUxRJRyhf9R2S7CxcJ1yut1Hu2FTxPuINxaeJeWTq2Ed6Y+8EmU+gjvqlTO
mKDynZRaCPdVXquyFZXe31WpBM4E9Zc8Kbx7S6cEY5otHb8kXen4JqcoZYSn
KG8v/ZaVtt1ZuLLS+6cpVQlPVf6YzrcD7aB3XxfptBM+taXPoUZ4RktvtxWe
rvxx6dcK/yn9fxizrbSvcnwnd6m0/+Q62amu9HG6K5UKd2tpvY7Cbzd2G9Qp
zW5pf8mdK+0z+dNW5vrA8+mi69JV+CP6klbm8cDh2art3sK/cy8r7cg9o3yj
Uk/hb5Ufq7J9hB/Rsb7T9g7Cy9VvjJG8r/Cjkh8hmwcKX6zjjpV8Z+HHJD9O
eCfhhfh/4/pxX3HvKfUTHsl3nXAv4U3KG8rOrsLHSt5IeDfmmIXbCO8tvL+O
21J4T+E9hJPC/YX3Fc4T3kN4g/TTwvswdix5O9Vhv0rHjBgl+QDhC1XPXOHd
qb/0e0qnh/CntLPk+wofobKHCx8gfL70RwrvT310XbpLv7vwJ9I/UvKBXDvG
roXHCF+tfLLScOH34BcLDxN+V/g59fMHC4+VbIrSCI6rso9IPkR4vGSnKB0i
/Jnk+ZIPEj5asmlKhwq/qbpNFR4pvEQ604UPE35L8lOFD+feED5ZeKjwG3w3
Co8SfoexCNX/KOGLJLtH6TjhpP4BLxMeLZytNrlc+FjhXDi/wscINxA+oL3q
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
K7y+1r4Z8DPxtfDoFo7bSf3nqg5NVXYflT1WZbOEGyodWWPfEiulc1wL+5xY
wbkI52v/nlwb+JLC2UpH1dhfxTLpHC2dXMl2l87RNfZdsVzyYyUfpPp8y/tI
+IFatyNtSP4g7aC22tpD3wYD9e/S3jFY71IaBldK8s6SJ9s7Dir7itQnzAkd
+PbEyaSd72nimKHzuR/gxanNH641r/432ekgOxWy84xkz9EO0mktWRO15/Km
jjVK+Xul/7v0O2pfQvrP1roMvO6fq70Nfjrk2Fkq/aT0C6VfobxINlfKZrlw
M+EV/Murbc5WG91d47rfHedIbNnblIY29/1zT+3/Yq3Oi/b5ptptR7sRixWd
OY19rg/FORKfFlvNmtkemLUGL1e7vWgrjntn4O9U54zqV9Le+ndEHW6P+lC2
lfY3Vv2/Zvyh2vuQt9X995PwFS3M+/gZu8z5y9YvwktamFP2qfCBLewTZYnw
4S3MR/tY+ADh95R/QD+j476n+/99pR1qzPv7RPIBLcxZ+0h4f+G3lL9Du0v/
D9Xn7Vrz5ImF+prS080dE5Xtb5vZPjFQ4dVvkf7L8Tyiiw7ce2y8FXZ4Zl+J
Z3+b9N+PssRQxc7GZs7fizpfrGt6hK7p5fTJtY7BiT+QFVx/pf3UTjt38b4n
9I9wofQPl/5loX9syB+X3iGcr/q31+NcqBuxBLG5m477idpmRj/14Sr7ofAH
Sr141pQXqt/op/oMlP0S2R9b47q/F/Wnb+P9SP+WC29WuGWZZbfU+r25tdrH
5rgrZHO6bLaR7tPCTynVyeZy5VMlT8GTEV6sVA/fnLpJnoYPI/yT+v+P1ae9
InyQ6txVOi8Kb5D8Q3jdwt8LfwRnW/g34c+Em6vuB3b3/8chupe+U31mtvBz
tVm4od4hN6mtNnEf5ukbRfLvax13fprwj8IXSP8cpR+E2+och0m+Ufg0yQYL
bxCe0cLfPnxj8f3zuuqwXXVYWmSfPZ9LfoR0npD8SaXONY6FSwzdDboWj0m2
UKmT5K/qnfOscJpYQzrXZwZ4/urNuK+4V/EVtFR4VAv7+/lS+KgWvs5vxH37
iMo9qtRRNt9Q/rfq87nq85rwVuElwg8L7yp8l+6ZF4TXCX9Q5Pt6cdzbHPPN
uJ+fl85q6bxf5FjE9FkX4mOh1vGzWev0vtpkOveD6nCfnvd7lcZINkf5XUqj
he9RfrfSscLzdZ/sqHx/lX1FspcHet3PYuWLBnq90Vzl9ysdR3+u/A6lY4Rv
V36b0tHCDyifpzRW+EblNygdIfyG8teVThF+WMfqrfwA+nnJblI6Utu3Kr9F
6aj2fvd3V/5iqb8JeggvEv6kp/of6ZzR3t8BPZW/LHlaeUbpU90/b3Gsnr53
ypRK2zsG6cKDdY0P9vfT4LoGDYolb4PPden+sZfaQ23bIsqg/5DsPKg0Ttsf
S+dj4VnCS5XP1jX4pbW/FXaQ7NVS31vVtIfwx2Xug9cXuX+sFL651DFOqQ9x
Tr+Qnc+VztJ2E6WmfIvruG9L9o7SqbSV8vlKxws/onbrq/zAfH9DtBe+r9Tf
QG25JsKjd9T9pj6qtoPvxXZc81K/y2u45qX+buggPBcfetJ/Rvp1HcwZrG1v
XsZJkr8kedcO5kJ2am/exxVKdcIlcH6k85h0OvLdK/yCcH0Hfx90oe6l5iR2
bG9uCM9JFde51N8f9ZxTqb9LugovBMvOU7LTWXae1PnuJPmp8HXVBguUTkBP
+aNKJwq3VXvu3N6xgV6S7MWBXgO3S3vLZ6rs4BF65/XVvwLfCdy3upYThR8X
fkzpJOEBet676LiVKruX6rBAuEMHf891Q1d1e1K6TyiN1/YY6TwhnU7SGaiy
3QZ5vV1X2mCQn78Fqn8fbOebd9m5vfky78nGu0oztP2a8leVWEt3lfqIqxnX
yVK9JTtNaYCe31nc70r70Kb67l6gtELHPYtnpae/DScVuzxl32xu/AbvMulc
pHQw/YF0rxQeLnxwucctKuDdlHvcohweULn/9atamX/N+BNcqqtV7iqlESo7
qNzjGa3hc5V7HKIVPKZyj1G1hfOiY10o/YO4t1t7/Kmd5BtVp+uE31J+UQf/
R/VQ2z6u9+nsGu+7oIP/f7pJXsZ12EX3luy0aO3xgA6yM28H1Uv7XqRNdZzL
lIa2d/tdE+2Qr/33DFVfA2egtcfMauBYlXvsp1q4vM7HfZt/bdk4T2mg7BzX
wbZoy68l+0rpXMmHlHusqBJuks7xQ8lPl3yq8KXCQ9qbh854DLyzoXXuTy5S
//xeS/cv9C3wYVsK57X0txTfyNfrfNfLfpvox+Dn8o7k/Ujf0Cz6h5O495X6
aXsC96PSrsLbdA80V947W+fUxf0b29hLh80uqldRe8fR/rXWdj8SnqH6Xys7
I7X9hfAy4XOEr+jospc3ccLWzw38Dcf3++xSc+35VoJ/B4+e7yD4WZ8o/7TG
foYeK/dYF5y7fcv9L5gRflLP0Tt8UzX3vzT/4t3xO1fuMbaEdB7ScT4T/q2J
vxf53r+21HzkVsL5Lf3dyXf9daXWXVJjH0VddC6HDXQfvVL65coLpD9Ksl49
/Y8Ff7m18saSn6D6PKf6dOngdqFf3qzzfa3YmPafruf9pEFeY3qi8hOUNnAP
SH78IK9PPUdte7bSuXr2J0o+irFL+jLl05Ve1rH23kfP9iDzZk5XPpNv8tZR
Tql/8/iWie+ZBiXGDfWt8pT6ljPiXX+Kyk1RWgTXVPlUpcUtrUt5xpomSDZe
aaPqcLLqc6TwWuGzop4ca7LkRw3yGtyn1A7X9Hb/w/U5YqCvEbpnxXn9U2zc
oJn5xbwHWP/B2C7fqi1LzSmmL2ctyGTZmaT0EnxgHWuIzn+q+r0eknVX+kD1
OUb50UrrhMcpH8uYMs+U8quVmpX7O+dMpT1VnymMDQzyGt8xyo9l7En6p0h+
3CBzyX9TXX5X2lnviAmSHyb5N9I5W/lZjBELH6TvqQOFP22re0n5/kpLJZ+m
40zl30rX/UiV3U/y2bI5Tri36n+78ADJRmv7JuEzhX/WN/MaOFTC5yj9QH8r
3WsHmauEPeyu0rmvLfb2j7J/esLfb9uaepxmcq3H6/7NA18kGx+provUxhcL
v6DjdpWdYcJD+Sdtbxuzon3OCMx9MlS6u0hnB9VzuPCeg7zOe2flOw3y+F+P
lr53ub67StZvkMcIh0l/t0FeL76H8t1pK8nHSz5SeDV9o3Bf4Z7SOUi4J98V
wgMZg1f6Qjr7Ms6htES4D8cf5PHIEdLfe5DXRg8W3lG4h3Av6qv0oXT2Ut5f
6bP2jo3+W1zTrcq3BCZnO0f130P38Dzpt9P99zD9muR/wc9UvrrGfsX2lM6D
vLul0194vnB74aXa/3mNfZLNb+/tP5rYxpc19is2XvqLpd+N+57/pRr76PpB
+fdKrzdSX6Cy3wgXwyto72M3E16m/Ksa+xhb0N7bWZI/Ivw19W/qcmtq7Ptq
o/INjKUR66TG2+BpBbrfhfvoMZzYSfeT8DDJ71C9qlS/+3RvZJTfzrbq+W2N
9Yc38lqWAh1vViuXWxdlOf7yGvstGxH7hiufXew6rNB9dbfszVGqls22da7P
SjjVdT4G/3GzylxX6nkdz41SSvo3Kv9H1/h01e0v5ddre4bwo+3djo3hNnDN
Ve89pX/YcH1DKzXprDaVzh9xrZP76Th61t6ttmxryFn3wPcv69Uatff4BWMX
iyTPpw9v5fVAecKnCb+q43yo483Xs3+fntufa8wBf5XnlftPtt5P+N5a2tB4
cxzrXulvqjEHfGy+5e30/r0fv6M15ryfpXfoT3yTCM/Fj2iN+eDc06fqWatg
XEKy7fz3t/A6pMY8x9L5W7J/GMNjDQ3PkNLenBvvCqV9hRtIN4v3u3T20j3w
I+/ZHB8PfGjkP4V8HX2/0gCV/ZNnQulj1onQdykNlny18lX0g8K50Yb0Pw2V
Z/M+jnGhRiH/kX5O6aAOnmtAfofyjbwblQZK3lDvkKyBPuYLOu/na+0Xgpzt
BWqHZRVqV13nt9TOOyrvpbSD7H9WYfyG5D2RKd2jc+nd2Xro7NLZZXcU7tfZ
2+DdlO+u9KLu50RX3VPCe4SMfb1zXQ79Kfk+DjYn0geGztR8l6HsXrLTP3Br
yZ8p9r6Xsl2OOj0nnc9V5z7Cb6rOfZXvpPS85M30jBws/JiekYHKBymdKTyg
yPjRPO8fHDpDlQ9TulTHGlbnbTD7h4QOdeecXyi0jYPC5j7K91Yqz3d9qfe3
ha4XdZokeaN8H69jrmXs6yX8WJHbeqHy53WOewkvyvZ59A2dVs1cn0tYH1rh
9npb5zsDPrbwRtXhb+X/dPbarj+V/6WUaGlZA51PkjUdyrOU7ih0DLrsOsdM
rClx+TOyrQ9mDSnl/gn8q/LNXIuWxr909hrVb5Vv4Fqqjo3qbJP4ies7e980
3XuT673v2Xzb+DXKbgid6Y1dL+p3u/qzVGdvj1c9t3f2+bCW7Zcoy7q5P5Rv
U6pQfapLrDcz2zL2sU72duW3dbb/cPJbA28NHdbWcd/tGvcnsq1R9nflW7im
Ld2W1IE1tuTbA2dKrH9qtnUpw5rclOS/cT9nO0fO+jzy30Jntb6xNgrvk2Pf
7txn3COPxv2aJGaK8s5K56tv76K8vrPfd+RdA3dT3l1psfAnnbwNfiXPZYgJ
tbXOdu4ucl4XNp+rsQ52WkunVWf/M9bpfddSOL+x10Jj8+Ziy1qF/FJtV3Hu
+gdsyz2i1EPnsh/rdzr/H1NnHudj9f5/6zCWWcyMWQ3Te2aMWUWIIbJmmZG9
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
aSNzO+nc0cz+em8h7NnM5+Jv5f4WqD7y3xLukD0k+BDh71Az8ErCVVAeeAt5
2NHR49I3qQv3aX9ymMedL7Xy2LM7zz6vhf1tfAn/MvnLJ24U+fmV6xU6F4rw
acp/AuWwWPrpC07kX7MIvATKRH4p4X7i1gQfAP8GNQVHo+cg+HP0/NLV9vGy
jd8O3gY1QGYX4U6oIbgyZdWD/LQlPxWI+53SIG5F8G7wUnBl8F7wcvAewu+h
RsT9mXAf1BjcgzK7qZl9F3SR/YPu8T/5g/AIdD0yxwmPQc3Bi8l7RBufU3YS
3p9QC/gxpHUU/AVpVQEfBq+UXQnhaaglMs92p01vxztKp21sy3cIbaWuPk44
ANoCns/YrXd9rw11oY53hoYStx3pxlEmR6kPN8JL5j1NLM03Bn9VF/KfTTtE
eYyhHh5Fz1jCBi18VlkxMsnE/ZO4B3jX33f0f+tr8nlPN58xfB/hvdBI0uoP
v0Y3++K+m/Au6CX43Qm7QcN0xhgyncC9dG4SuCv4QXAeuHQ3n7lblrAM1AX5
XPgluvks21+oI7Mb2laoaiHlXc/r9b+CL1FWBZTtbvK5u6P/u32QHce9eshU
v5ay45t6jWfpDX8MuC78Xuh+AHqZtK6g41+ok+p2U/7bN/g8iPLcLwd1hV+K
sKTKF5xD3i539bm/+eCwbj7rtw3l9gVl+yFlO460ZpGH1qQVwf1I6OYc2xpv
aWJ7483EvbObz3u+mfAmaDgyzQmvh55Q+4NMS3BT9X95589Av6BzIvxm3ezn
/FVwk272Yd6U8DpoAHEnwG/Uzb7TGyqEHlM7DL9BN/tXfxR9j0H3oHMNz12t
vv0S1+f+COQeQb49+a1KfThGGRaBE8AntOcFmULocWQ6wI+Hfxz+EOJd3c1+
3R8Hp6v+gTMJM/TekX8Yfqibz3SbAu7bxs84EJwHP1Vnj4FvAT+kc9TAPcC9
wXcQ3q78oedWwp7Qi+BNyNzWzWdmFxDmC8Nf2JL6282+Dcbq+fimDvFN1YKX
JZ3InG3EO2xofyMD0FNT8uh5ApwNria7AMI6qv+qn4Q5ypvac3TuRGc1nv0r
3u9qqDb8VdTTFS3sB2hsE9s+yu7xLLIHwXW115+wPGl8Sn1oSbuSSP3bRVp/
U59vbuVz4Xcg/x2UjPwrTWz7KLvHZfCWQ1HwH6Ge/8UzvEwf5DHw3+DR4EfB
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
X+UUz5/IL/axBM+naC5FYxTtK9I4RfPUWofXmZZa99I6mdbI1qJnEngG/DH0
A18Fl03w+pD2rGj/lNY8ZA8nW7gy6iOqPkV6LU1rP1r30RqJ9s9o74zWRbR/
RntntOYkGzvZ16WTz/rE3RVpHfUDPQ0Jr9U4BJyvctf703ghwfVGdaZ9nsdQ
ejcJKa5L2+BfSnAcyasOFgT1MDnFerZH+l3WCepkPfWl1ReFXzbRaSvd0om+
J37NFOdnNzgtxfI7wYXqn0M3qs1O9LVwdor534MrwG+scVGk9yRoz4TWl1uG
PNb63zgr5PGVxlY1Qh5balxZuin/dtldxHm9R/vd5fNaa2zafy+fy7KvWktZ
fM07PV3dff2VpNM/5HGvxrwXqnvstDrW+zG0T0zrmO1CHg9rLKz9DNpjI3uG
NXnWuZq2pX3IY2CNfzuEPAbW+Fd7PLQHT+uD2tOi/Ruyr1hS4PiKu0z9Umhd
kD/xcyLct1GfrFplr52sCPo5su3+HFyetu7VPONPqEtfEK7M8321dR8XuF/y
ecCXzNJgP4bsOjTvonZPfUCl9xW4MzprRzgv3So4b+tVh8o6z4sLLKc+4fIC
t6G6vyGQ2RLha+mQbZD44mnPnvb1aR32z5DXLbRmsYkxzyP6vsjbPZHe+/IO
/4JB1Icz4EvEbRzyeFhj4f9sjrW+r/2E2o+idfzrQh4/a+zcJORxssbIzUIe
h2sM/t8eEtk2aG+J9ovIFkL7YbRfRHYU/+17kR3C9SGPzzU2bxPyuF1j9tYh
zxdorqBVyPMImkPQvinZDMq24VXq0pvEnVXJe5+0x0l2DtobqX0zskMoDHlu
RfMqf2u8CW4R6TOYQtD7Yd5zqL2IWhPXnknt/9Qaq2QzA/kqKcZbI70fRvtq
ZHfROs+6pOcx2sbq4DXcbxrynILmE24IeW5C8xI1MryHUPsHtTdMe8Zkq6M9
kbqnNYVFycaSaRvy3IrmVd4mfAf6Hbwy2dfC8o+itTqt02muVvYxso0ZRPl8
ofXF8t53J3uc2eAX4H8O3hnjeV7Z5cgmR3OysgGS/c9OZBaFfA655oVlJyQb
Ic11LoaeLO/9+efBv1OXSqZ6bbUX9e07+J+GfL56i2T7R9F5VgPhLwWPgD+g
un2fy5+1+qK7Qu6j7tAaQcjnln8LXhjyedTawzxHdaK85y8+hDqAvw9Zf6lw
z2UsgNrDf1Zn2oI/kJ6Q51AulPfeWtmzfA9eE7J/l9Xgy9rrBG4d63mQj6Ai
+P9Ge+1TY+H0ZK/jag1XeXk/yM/TxF0Fnl/ee6rnhrzGfT7aa7paz9Wc8gdQ
O/h9aUPngdfyTNXSPE/XrqrP6fgbfCzc53dcAB8HFyf7jEbZWm+M9TPref9B
5gR4HXFvSfY3r+/93mTPX2vuWjZbiit7nmO1fC18hrjHwc3QNwr8CzhZNlfJ
nrfSnNUPIePS8K8Ec+KnwHdR5+/M89kvHZJ9lrrOu/sGXXvVjoc7/CnA1Xje
y+CT4NQ46/qfnmTPfWveW+conQrZb8gs9JwEbwm3fY/mVTXnfFuy8ZJgLvrl
PJ+No7Mz5CtFfkw0t30mkJeOPwM9OhvlH/CJcOflUpCfkumeLz4tm7o4Xws/
gvxFZMZU9T+vtNbFwh2WCvADyY6reebeyeZrLn1TrMtO5dYo2XVPc3frYl0X
VQ+P8L1cj/wi+LeT1q3gPeBe4NvBP4KPJnu9R2s9D6UbT6YNr4hMO/BK+OHg
tuDPwdHg9uAvwLeAe4K/lx7Saq51N40nwK00D6788F94EPw2Oi/Cb615bfil
iXuD5sHBMeAO4FXgkuA2mgcHr493npSfw+SzV7pt+/ume23+Xfi9kb8D/BP8
1cjfpXn5ig7vDPA9WifSOgT4q3hfCz9AeD/0FvjnZMtob8Ip8tkCvAT8U7L1
aI/D2njHkfyGeOdDedgIfhg8BXww2Tq1l+FUsu0DZBtwItl5li2ByqNXUCaK
1y+IK1tF2anJXvEMeWgJfynyyTqLGbwanJfs9kTjvtrJ9iOl8eZR3vs6tTVq
60L2TbUGXDfZWOPQP2LdHqktkuzaQL4ndfyWPPtG154ihZoTa5Jsn1I6369Z
sn0b6JzA4+jZpPjl3abuDNrV70KWLxFueyPZ2W2jz7k+1vfEf55nWa3vibj1
k+3jSnMsx2Kdb+W5Fv+RHpqvJ62bkL8FvBscCb8buDr9mS7wbwbvgt+8uu0b
doDTwB3BX4FztT8cvBOcCL9Ic2TgEPhG8BpwLXAn8NrKfqaN/z0X/NkqH77N
vuSza7rt8Muk2nbnwcrOS9cgPzmyEdcaD/wKqbYNekjjA/j70ROvvYyUca88
n2er/pFC9ZFqM67dy7+5dbTDfQFuAe0GNyespTUn2tZ/tP8OXAZ8CdyC/P2M
zPeyEwNfBl+I8T/llyzbCl4C/wRuRfg94Z4s2xn+kOVrpdMEnVnojIh1mt8H
MrKPlW2+7HuVN+l5F/5jcY6vuL1IN4O4lYlbCD8dXAncG34tcKT2jIPDwVe0
TxOZ8uB/tScRnAIuj8xNyJQFX4Z/K7gyuCT8q5GJApcCF4ArgUuAi4NnLCK8
F/lqGiPA76O9KOBo8P3gNHBF9ZeImwuOAjcE1wBXiPW6YkEtry2+l29/SLV1
He2wJ+PWOgFfPpJuR2c0uHSs098flHMInWfBZ8l/Vpx9yGlPqPw+dcjyPtPM
OPtz0j5W+buTr3vtIc2Os38y7RuVX6buWd7HWifOfpi0f1M+l27K8j7QRnH2
W6b9pNfE2ZeS9oHKt9LtWd6nKd9TN2bZp4P88t2Z5T2e8qF3d5b3tzaOs381
7d+8Ls6+3OTHLTfOPrHkd6l2nP1IaY9tepx9XGkvbTjt3lHwAc1HUSanwGe0
dxWZk+DT4Bt1hgL4HLgz+AL4PDgDmb/Bf4Frgi+B/wb/GpSn3u0T8I+Bf4df
GnwCfCTGvqS0v037f+Wnq3OW9+0O1Hln4MPg/Dj77tJeXfnfkx++Dby7qQGW
P756Sb63XvuAyFuixpu80+7gkuCL2peHngRwGPwvs3yuTMNon226Gly6tK/X
gK8NwrXQArV7Adb9g8E98XXO3SZwY3jPVqG9BT9DWIJ+Wk6WzyP6lnA7NKGc
8XfSFWV96wI9W7KCuGWo34mWXxPl8NtAfkeApUdpbgzSHV2tRInNWd6PuCHg
y1ZzcnX7aZOPtj9C9lWTDR4L/zdwCDwVfEx9dfR3T7aM9giHMTY5rDaf/P8W
6/iK+w26t0HXke7b1e0bT37xdCbygZDP5/892vlQHhoHuJDwMdrLR/Ms9zz1
7Zy+u6ruk96RybdB+m+i82DIfvHk5+3+TPvu2ZrltJWuQl1HMfZpne2yU7nl
5tsvt/y8jKFMlmZ5b+tHhB9m2Z/FOPifZXkv5ivgZVneuymf3osDnWPhL8/y
ftCevN8FKvNARukuCvRJ7znZZiATy7OUoZzu1Jkj4LKar4i33Nko9+13B+2w
1hB3ZnkdUTo+DvRoP+6uLO/PvZdyuI3/yg+VvYdwfpbHb6fROwM8kPy8n+Xz
z/6UT22tdwT1Njvf98QX78ug3i4Kyq0JOD/f5fZ4jOv+l0H9z4E/L8t+exXK
h+7OUtSvKGP50u3E804HPxHj729a8D1Kx6pAT2dk3gMPCvI5W3oo23XRxieQ
P6I9KuDnkVlDWd3H875Z0eG9Af412Vh7S3+O9Tr0RupVcrLHbxq7iTc54GvN
WuO9TeB9sbbR2QAun+yxrsa5P8Xabun1MPeVnwEnhdlmdAi4Wpj7eS+AU8LM
GxzwU5OtX2PJs0m2tZUdwrCQcSoyp5Isr7X4sskeM2u8rHVzjRU3l7PPjBng
itSX/bG+J77mGGR/rfkB2eYVaQ6c68hk2/7K5jYu2eNqjallUyS8rJzPzpBs
/fK2xdLzvoGeE0m2V5ONkHRPDPRrLqKV5vk1Dkx23jSG/SXW5agy3BtrXdKT
kOxxqcak22OdttLV+SnSIZ8jKu+3gzJXO6AzsO8t77J8PijPo0m2QZSdz+d8
axeuQhflsBL8D/gd8Frwv+CJ4Ptoi06DX6TOlEuzjYvsW1Yg8zf4DWT6IXMe
PEq++cBnwS+Be4PPgUfK3zplXpF0X42zzxjZDh4iz1+g5yIy76KnHfyS8J9O
dnt0RTrVb0TPX+CXZW+gM1uQGaRvjriX4E9V/yjV8y+9aD9zUz1H2VtrIMme
K9E8yQ+xtp+bQDn8GGv7tomqb+h8UX3mCNvIDgvqksYYz4GTwT2RGa5+bIR5
zwZ81eWxQX2+kuT5F829FKR6DrRPhM9/fxn8YpjTHBOk2zOFsgGviHG+RgV5
e4i0XlL/OcLxRgZxDyfZ3lF2Wfpung6+HZ1X8hS4bJht9HQmvez06lO/6uV5
r82jIdu2XuB/XRdenTzveckjzM3zHplswlp5jt8rZHvQNyp5n7yuNV96HXm7
T/U7wnuGn9Q3GOY5y/7BvGVtzX3mea/NziSnK5vDmvAy83yOk3x2az+0zu9q
Ud3zzvPQmR9rf6Ly43Y22TrVNsiWWTbM0wL9czPsI0/2+zqHXvb8et75Gfa3
qH6ofGKoL6o2XO231rLL0D94K8Pnpcv2bVqGbef2JdluWDaQGjtqL19RlMtq
Xob9SMoPtnxsyy+k9vbJXlO2mvq3LgBnBPMtMwO+9hnqvPnPYl3OczLsO1K2
/O+DD8f6vQ0K3p32OT8avKP9SeZrjlG2rLJjHUm6KRqvgUdHuF2+M+DHwr9J
dUjz1tS9YrWbmjMHF4FfkE0CMj3AL4NfTfW8/HMRtjeWrfGoMn5v+XlOTzbJ
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
PwF+FtwJ/Ax4MLgbeCD4OXBn8FTSvU9tZSWfKSO/ZOXJ1wBknkHmxkTP+2r+
V2f7Pw3/BbWr8J8CPw/uoj5YnuUk8zj8p+F3hP8Y+ClwUaL90PeFQon26TIQ
XJhoe/n7cmwz35/wUaiW9ifRn5mlf2ui27c1QZt2pKqx2ra76Y99oH6L9otT
5vci967Gv+oj5nitbBB5GKR+C7ytNXy+vM6W31LDfjXkU+Mdwqkq00Tn4WGV
VRmH/YP8PBJg8Q9m+l4W/NtiXYZTSHcW5fkA+FXqwAzw/WoDwYPA3cH1kHkT
ugP8GuFm8tYt3/4oxyNzp74dvtNmXD+oeoXM/Fzj19DzVpRlXidsikwv8HtR
Xg+T/vrgZ3JdrxqAN6C/c759UD6Qa/ym1nBznYdFsnWs5ron35SbwF3z7U+t
f67zNgXcN9f8yTHuV+wI+h4fqj8FfyR5W6h/IPhl8Nsa56vtJZyYa7yEtCaB
7wb/SX3rEWv8juZSdHaB9IMn5/o9nkHmrVzzT4HrxTitT7TmG+OynQ5eof0q
+d6XVj/GefgU3rXKt8pTcxExfi8zwHNyXW4TkV8E7qN/FrhBjPEiZJbmOu5o
+Gn5buu0Lqz+2JYc+39Uf0TXU+Lsc6RUjv2blCEsCw2hfEYl2q/RRZ1dk+B7
UYTPUc6lwRXBo6nn8rOkebVXEu2jqSR4VJp9aWpebXSi/URd1hnO8Kvm2Lbr
efSUA8eAdyZav9Idh0xYjtMck2gfd1eI+3Ka/S9pbjgsyKdkdG6NzozUuTc6
P0Zn2egMGZ3fozMddYbPWMJxUDn1f3jekeCn480bH/DL6dwy8FPxPtf/2Wyf
7a+z/5/J9vn/c6ER4Ifi3ZYl5Pis6218jxPgH4l1OC7A8gH2CngM+bmT/I/J
ti8w2aa9Cn5F51mR7ijwszrnSudpgZ+RPX4t51t5ky7h5fyPnsq2T2adr6i2
NTHHZ12rPY3P8Xntw9Ps21Zz4cMS7fv0uPZcp9nnqub7hyba5+fReJ9ZpfNT
dW7Vi2n2uar59ZGJ9kV2Xs+dZv9jWgd4KdE+dc9JPtH+ck9JZ5p99mrdQOf0
6MwsndUzPNE+Tv+EPyTNflO1zjAi0X50zyifafadq7l8nWmk82h1ftcLifYB
+Bv42TT7G9T6w2vgKJ43jecdQl2qkGN/DiPT7OtM6waD4YfDj4P/Arh8jv0/
vIVMTI5tFSfJhxY4I8FtaFKOz/N+Kc2+1LSO8Xya/VNpfWNwov3IHdQzptmH
odZAdF6RzmPSmUUvpNnXq9ZYhiTaX+sR1cNE+0U8pPqcaL9kF3ROV77fq96p
/Es8l20fE53kFzDb59NuzXUf4iJ9gDn0NTeCXyztf/eGXP+v1+X6Wv9x/d9X
5/q/r3iKr/7GQtnTqH9Z2v0B4dL0Mb4O9Kt/or7E5lz3W5SOrtWvWJVrveoz
bA74/5RzuDHA0vF1kM/50cYjSzsviruYtFoxLvgKnFzafRXhJfB/zHV/Tn25
vQHOg18L+W/Bb5U278eAX6eK8YzS7sfuy7VdvWQU/+vAjkh2PLLz0bPqmdX/
mRXt8hpK3LW5zofy8FWA1XdSflcFed4QlO2Fcg7XBViyiq8+0vZAv8pTvkee
z7b/EfnVi4a/o5TPPZKPcZ19JDvij7K9Nii74w+zvda3ijifZP+fPZGwbJkU
fhpgnXP2cbbPfXo92z4txyM/McDyZfnf9bh4zz8P1besMwH03YJ7Ey4OdCrN
fxMtr7jDsi2v+WqFuu5R2eHwAOvsLp2bpvO7ZLMjf49aHx5IuDTb/gLk025W
tvcmdEw2Pq5nT/NZnzrnU+c8yde6zo/SuU1zsn12k2QVX/7mZMctP5Oal9Va
vvpsW5N83uyMbJ8D2jbNZ5/p3DM906KgrB5M83PqGe9Lc3mpbPROooL3oj2I
87K9D1Hnn8mHrc5Ak125fFpqbVnf6KBsn4fZJ9pY5+Ve4V3XAk/WWp7s2sBX
Efd1cHdwmtpScFdwktY2a3nOQvaol4nTIds2km8gcxM4pPYB3A2crPYW3AWc
CC6tOThwWJznHjQHoflS+c5MhhrSdi1Hvr3aZ/m20DkW4HjildUZcNJD3BHw
O6t81JbSNt4IrgCeQVvUAjyd8m+ZbbwwztQ8234t3iLuLeCMePvSuTXb/nQU
V/4wJCd/C32z7XOht/6Z+t9Vst+Dftn2fSBen4BfMsXPUoV0Z6LjBvhVwhy2
DfAxnqdVtm3iTlW1LaDsANtlW+5MVceVHXAbrhuk+Z74b5LuzeD0eF/rvmyE
lwR505nPoxnX/0oeCmgTvks21rxHKvI/gg9IXn1S8FD4T5PnQ+CwcJ+lJVyW
8CDh79DRSNv8a+4rG51bczxmfhT8jfrvOT4bXGNo8TUeF39rIKNr4XZR1n04
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
vbEuz6rPtU+GvlP6Bm9MNu+FUM4V54PC/5bAxJRWM34RPBDGihKvRV4P733o
O2Rv58G+0Nlnu/xS1fXpJRoPwq6voHuw7eMk17GXwl9W6HpQdeAu7u+GFjbx
/YeCjM4mWRZk3gnlU+Xwa2S/ge5tYh2S+RL7k7FjHZhqK+b4aTyv03xGZFmc
7dT9+tg/q8RrExvqf63Eaybqgi8p8XrNXnH2lcpOpr6rJV4v2EDf0hKvG84B
zynx3PY64JklXqOZBp5e4vWdmg97OMyJVfrrC0/aKPwcdnat5mvhpsS9vsTr
RRqDry3xOokPwnOU/wfh43UVPm9jBf8KV+CHN+u6/1Jr3tTPqbFzzePUvrs6
10RY8zl/4f7PUBn8nwJ+B98eJzwG7da7nGQ5yei+8GJ4d0YdZ1qcy6HKd2Pi
bk0wX3p03uo/oXxqD2ft+6x/Fu3hp738tHZJ+wVq30C1V1s2oM2I/Ofx/gfR
3qkn9k0V1r+8/lGkR/9WauMprtqHidj0Y7BZ9gt3gz860XkZE+sxdo3Bazz+
pV68V7ynNya4r+pP+KfEuu9NfXDqpxNpjDgvIYwVF7pfrnJVXwsr3l9QZpzD
v6ELKrnvRli6ZcvxYNv8qHEjzU+mffhroecDyCZhzSVQ+Fvga01Y9ajXDP4d
0vrP3qpOW+nqvNFq0ZP/GcKaF6H1XvKz1oU93IP3BjqQzf8Q/KOF7qv7bxy2
0OO+OodXaWkt2gPI3g/tQ35lZkxMfNT9N/pfrBT1P+993L8X+g6ZHfB3Qhso
kwvg3Q19C78PYTn0GnhXkKkXa1Kcc7S3IfcnQ5uQmU94F/QN+KlMp6X/1Nvh
3QZ9Bf+Mao6rtHrLLqgJfoiJuvxoX4jpyF4EbdYZ7KXkhf/hnfxHvxy13FTq
2tiAJa9Q19pHQn0A2tNW/QzaA1ZYfRfPYk/lqPswtJ9EbIg7h3RmQ1tJ61rC
a6Dt2f4fl7z6QNTPIx+qH2kW9y+FtiDzGDrjoif7GITV5zOT+zOgz5C5kXAe
tAt8PeF10A7wNuS3Qwdj7QP54lbs+Z3wbuhRsvUU924D1yE8SEX4Lu2Ba3N5
J8AfgOeBq9JOmItMN2TOw4/XgT8FH0ZmHTLXI3MI/J7mkYKvjVqmKzKbYx33
c9IawXO5HrwZHIOe26NOv00l2zABfBw9H6LnRvT8C28ptCrGOq4PejRWc2EH
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
auipCsVQNprCPwz/VfV5go+C3wA3w4b7eRb/qryhp0Gxz2vTvobvlnlvQ/2L
pJf5f0T/4oUhL83RcwQ9r6u/FD2X84wqZbje1zv+UVX/v6v+VN/XJ4Sbop6L
rnF+zRvQv7zavxcXuw2s+TPqd1N/kf4f9d+uf0D19+ie+qDuDlgyU4OeJ0Kf
m/qS1I82OehRPLXf1e5XG17/Yvo3U1+//jn076f/mitCWuofuDnw1f4Ur1Kw
QX2Wv7Rzv6X6Y8RXvF9Duuq/+pnwl6jnfe2u6nviqw/v02L346nfcXOx+x41
D0f93fp3ngp/l/5Jkt0XrnvqM9e8BfWtq19dfbq6/m8OQ9T9AuqvuIC4h3kG
Wxq5v0X9L7OCL2SD+hXlp7+Cz6cFLP8tCjqLw/iA7FH6p6GzP/RhI6cTF9Ka
FdJVX4T6WV9t575W+axm8KfGVYTlS+2fNLOb91C6qtz7YWkvrJvAN0Jxjf1v
rrlQ+u/T2vFruoX140Wee6R+Ca0lnVzm9aT619Q/p/6pNXdJ8fVfr3k7ktfc
nXG0IxdFXBcpXAw10j9vvrHua16z5jPvi/V44WYwr9x/8ZW2/rufDPplW51q
lnkrxn1vei56JppDlNnB84jUtld/gfocD/BMbub9eijD/5rji/2/qW9jSpG/
y/oHOrPY/0H6TtYq8rdSeyYIq12kfyP9++n/SPmuHvKuNezSo++4ZJODvMb9
Kxf5/0J2CKv/U2FC4GsOlXwu/80L/tT/+4qQ966hXSGdsmtzGCNW3peG8qly
q/RTgw367gsrf/fR9h9B/VCfd6EhvFz1EcQ6zAm4AWF2kft2NIaXWeSxxawi
35sf5/vC40h3WAPHHUjcrlHfE1/xMkLcj9QG0buJTFqR23lq4z2JD2/CpsmN
3e4TX21B7f8g+TdirUO6nsOW+kGn5tUXV/K1sGTTg7zsygo26CwAvftqO2+I
2o6Voc35YdQ2XBHve+I/Gm/+rHjXi6oftUZAawU2Bbwn1XqUF6WpuEpX4ccB
30q+SvBzWZrT/zl6sv0urP+UbdQpG8HrSOuxeMeVLUpD/K3cn5DovNwVZ94n
QV72KQ9qM5/JNz2Xcv5Wmm2QTbJPfpd/puGHxoSNoGdVDot8LaxQ14fR3ynw
XwW3JGyhPjhkWhX5WnhsA/OHxPpchyZBj/4pJ/Tyf+VoZJrCPz3We32khWfd
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
zYF/H/y68K9Wnxzf6ZRcr3/KKPMaqE3o3ITOO9QGQ74+6a6r57LXOvz7nEnZ
KAr/XPq3iIb/i2eI+zRxLyZuiuZrUU524Z87sWEkth3Dtsvb+r3SO3Ur/BHw
j8A/l7RWdPS+zWnETdM+s8TdiPwn+vZoHiPhZK5LNJcV+cc7el/lLNoaR2jT
HlQfNTrro3MVOvtpf1fwU+DTwHXBz2gfYOmBzkDPjfCHwz8Ef6f2P4G/RPNg
4deD/5z+SeGvg3+T+jYJm0J5sqGz97/W3tfrsaUV8h8i/x64pfZeBpegpyb4
YfA78FuA3wcPR8cwqC961sLPgP+C/ABvlNq78LupT520u4J7Ud6eQuZafNJR
e9aClyF/vZ4v+AC4HJlnwXORKQM/Db4O/Br608ArkemqdpoInU0IG0OnqN8e
mVOQ+QiZ5Tyfq0n3Xp2ngJ+X8jyaU2Yy4Wdpvlkjnif8xzp6z+eORf731n+3
6qaS8O+sur04/N+qP70klJ+ZqjvVns4xr3Pg3wBvrvIP/1rCa6AR4KsJr4KG
57hOLQ713tBKLnv6/71dZUTteGRuVRsBGgO+nPAy6GzwLMJLobP0/6i2P+95
Cf8FadWsVzrVf1AU8jKcPC7v6L2LG4c86p9ZfUXti9xf9GBb/7vqv/VxdD4G
TdV/AT6rTdw9OusbPY929P7b25Hfonpf/xHaZwufX4/MVvif69sAv4bmiSC/
A341cC3tj13be9q92tb72smOjuH/XWN+7cM7+AIyq6A5OeZ1CPxm2PgGca/J
8ThEx5DH3CCjPL1CvDXQ1Tk+T1XrzbV3pv7digr9f6G9L7U/5i+ED59BnQct
O4U6kXrifvBS6qgPqFcu6EubTXsjd/S8T835/BaZZcjcj8wR0lOnaD/K24/g
OPBp4Hb4o/1g3vkW+JtwPM/oVZ7Rro7eR1t7aB9DPhb5/sh3gDcUmYXILET3
AmgR9pxDWof174nfMsHjyHsf8H3cvxdajMxbg6jnSK+3zh/j/r/aq5nnGEf4
LW3U52lXvo/MfcgMQqYP37eX9L9MO/2JNt4rXPuEP4q+5fIFOh8kfAB6EDyJ
+zWw76WW/Ndgwz1KW+d1FHscUWOIsrH/ENvZBNn9pPsq6TYGr9FeH8RtJD/A
H0J5vwr57si/Q53clbAb9BNpXd/O9bXq6rkay1WZQ2cD4j6CHZ+gJ0s6eS61
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
BbTGG30L7VGDvQf2nSh3s5BXmuW1Ob/Zgm3er8bT6rusPe5F2K6r7aMygTiO
CLP97asSBh/CsEFp5bY9trS/VmN4N7gf/C28MdesJv3HB9t+09prWnMMOzht
nmFYhPWJqz98Je9Lb66J4tlNx8cF2sZVSlC+B9t+cNoLzl/fQI0Vcm0Vrs2t
cTSubZJoZZ/KvVW6J3jBfddEW91F9ZZa+qZpnJJrp3Gvn7mXN/dag36t6g3Y
rHXbfmfa62wyNne09g2b9W7bU0D7CeQiTW5qbIk0aYrsjt4fvTf6Gxp/Qn+P
e/bE534/24Mni8P24VnJ/esT1h6BhIXr5qus1Lih29o/avus47r14BXX5sbn
LfVn4XO32/oU1J/wG9e5HBb+FfCe/BcO76B9JsAB7Jej7w53oPeHf6216uSr
QMLwn8ZMSbcSGgcAW8iHxVWPQO+BviD2e8LM/h15Zxv/lVAbE31X/ITiswGy
C+HJr7ZhopWDKgP7OGyvGe0zk4fw39F4KuGZzvdiBiikeb88l3/AMer8jfG/
Dz9tuTZfrJ0VXaKQnTHVzG3nTOXAzzWNe+HHB35bcx3gzRKtLFY5vFnfW/CG
dMuA7iFxeehj/QSZkq2vQONgnd02FtYo0b43+tao7yFjsvU/aL8iT4ftWdQQ
266ErQD6nNqHSuN5ha2/IXOy9Tn8D4Wf0bc=
          "]], PolygonBox[CompressedData["
1:eJws3Xe8z+X/+PF3ykhGxTlWxwxxjDIPxzgcKzu7PZWQVCJNmWmHQkpTpSLZ
lIZPpYhKEqK0RGmXJv3uz9/1/eN5e1+P1/N57fG6Xtfrel3vGhdd2W9UkUwm
0yQrkznG78LumczzvTOZYXUzmaKnZDJ1+2Qy/xuQyZyam8ksrpjJ7GmfyTTv
lMl8Vy2T6Vcnkzn59EymGD/LT85kcktnMvdyP87/xfz/Qwr570w+4s4rk8kc
pG/fI5MZUTuT+aBsJjMgL5P5lNxUjlsahnAfJFPwEHyAfVv2w9m/z/4R/Izw
LxXeUdL3ifScJj0HpKev9Oyjz2d/Ofv32O+mb0r/Lf0Z9P/Q96AfTf8x/Rc4
Dw/DW3CBtHYk24TfUnq3tslkfmubyTwm71Pqi5duGNlPv5T+Sf6flZ7L8NHS
M5ftK+0ymfMqZTJFlFnd/sqFDOX3tAqZzA7pyZWefdLTS3o+5v6spTCPz2SK
y+/H9PVc+5q+J/1gZbGfTFIeg+kvF/cIckB8y8Rfmf1E9sWru1Yjk9mENxVm
Mnfx/1zNTKaitHTqmsmspesqPZ/St2R/kL6/8BvhrwoymZJVhcF+ZatMZnVT
YQj7jvKZzO/y11X5jFI+HymfEfTPN1Pvx2YyD5Mj9L3or6LfQb9LeI2Fv1/4
fYT/Bvs5g7SfBpnMLGFuof9M+h6lXyG+0+WlB/lYfu6nf0NZTsM/4ozwXsOT
8Pf4CH1X9dGFHKcsS5GZ+ZnMEunpJS2Lj8tkZndTh8JvL/zWtcQrvp/k73j5
O1Z837E/2CKTOUfY55ID9DdIbzHl9z59Q/wp++Lsi+Fb5e8habhA/L+TSvKa
UV838nuaOqsnbblkE10F6ZtyhrYgz1nKrqP62qE9vNQ8k8nRN+ZGexJ+NfHt
lb6uyucO4T8q/Iv4/4v8iU8Xx5XKc7s46utfJV1bqX81FEYzXBqvwqfhV/i9
VfwH+T0s/PV4Cv4B/4fHsZ3j2nn4Z7Jd/HXF/5X4e4j/VOHlsH+D7srsTGYq
+/nsL8R/kAK2vZXpJmUxu7J+wX8t177g/3T+b2T/IPvz2f5KPqSvQf85fTf6
m7XdOn0zmTv1jbvJj+w7yN9I+dsqfx+xr83+S/bd2d+lbt4T30x1t08e5+Ov
1Nkb0rabzf38Pym+SyK/ZA3b1eQG9jeSccJeQZYKv6ryf134k7WH8/l9UB5G
qZsfWrOlu1udV6M/Vvzv0/+oj6zHt7G/EM9jv0b9nYd74Ln0L2hrs+TpPP2x
ojr+n/qeIcyu3CcJs8xgbY2UaCgu7bO/tM/VXttwTyYN2LYVRqMS2pX2+rb4
Fgr/KuE/Lr4V8rKcjJOX68gwcY3hJ0f4twh/vLytIsvkrxquIPyK5EXuL+Tn
d3Ed4ede6btZfG3VbXvyobJqrj205G5FPsBNcWvuNmQrbobn8vuC8ukrvC+1
7/HKupv8nNBI3Qvzgs7yyOYpuj05mcwG6X9I+kdI/6PSP5BtNW1qi7SfJcwp
+tJkUlVb/YzUpSuhDleo2wb4Y+W7gv8J4V/5VmP7rvw8lZ3qfJWyWEnGC+96
0kVau5Htwm4lvS20jyO99B1t5y3XRvLbqovxQVgljLmv8/samcTvZPK6+P5H
GhrPH2JzmN9/yZ91Uhh3C3tvP22U383iv5v7dmGO5s4oz4vl/3j5Xyj/VZTR
pdyj1U8l9XMTXqM8LpKf3vIzQ3lcRn81fRX6m+mbS++58rhU2b3N5h663drD
B8av1+Tn2qhb8qL6zWH/qvBuFN7ZbOcI7y1pH4UH4Ielf528vUxukbcJ5FXu
V8it3BPJS9xryU3cN5OS2vp4aVgtrp7C2Iy3G8/Ol59bpfFl8Y0W/sDoa+Jb
iy/FffFMnIu3Sv9Rxsdj8BXyd6c8dOR3mvQuUFbto06VVX3pq8OdcQ9apLw/
Vd8N+N/B/zH8F+X/GO31aPJBce3LeJAnrMe0vw7C2ma8uFz417tWXfgTXOuP
d8Q1bbE/7s1vB3GsFN9a0l7bOkcb/K6xcOTxsPY2y/i7tpS8Cf92YT0hjdPV
Z6H0XKC+LyL7tJ0l7P8116kvvZ9Jb2Ppb0bXgrxP35C+iLrZr/wGCmsJ+TL6
N/6G7nHpGShte8nN0jcQ1465hDHivHrqWxgLtM3XpflsaS0mjg7SW0A26Q/v
kkbsTyVb2NYQ5mPC/kv93K1+PlMHe8VXS/q289tI+trIz17ldbW45msz54u7
kWubxX+law8K+yl9eGjcD0g/cRcqr9Xif5nsVB8NtYFvhN1b+58acy+yR9yf
ko+0nQ/MB8aqn2rGrAfEP0H4tWM8UoaPyM+DwmwXZU8el94PhDmrcppDfCD+
V1w7Ne7l/HzN/Ytrp0lrU3K2tnXI/OQnedlvzrRPfF+TZ7TVheRMafmBTJWf
M+UnT3/8VH6v4n5f+5gtPRvl77q4/+qzD0nbo+p7v/o+Q3w/q6/Z0pcvbV8p
s5HKdhT5lv1y6buE7UxtZIyyH0sWSU818T+hbVaTh2/ENdT8paz5yyfS8Ia8
3ctmaPQ/Nh+wfZ/Mktb7yUZ1Pa9VijsjPyOEXUl+1wl7oPb2kvRuVf750tJA
nmvGeKxM9tJtZHMxHkq+kb4Xpe8dY0NX4e0UdzthHpGXxvJbjf5u+b1e+OPJ
gAifPCpts+Vpq/wPEuYN8r+GLFfW1ZXZcGU5UXh1hTUJn8N9hTg2q9v3xXGH
9K2Unlrq6yr1O53+Y/r/HZvGjKbaXgvyg/Svk/588f2s/r7n/lR+K3N/Jn9n
0Z9NGmq7C4Vxs/hKuT+1wE8rr+HK6jxpmiu+w8bUL+mqyE9b4V0nP/3l5T3p
z1X+S5X/Vcp/mTSepmyakvfkv4701NY2Jwm/nvCfk5+3lc07ZCx9W9dWyMsm
6W/PXVOedjRLY0D0/cjTj8Jf41ot+lv5nxv1R9rqr/VdW0Q3kn3z0mnO+33r
NAeIe3/MIZZxX0tfNcb/uGc10X9wLp5Lv4L+AF5bPpXp/dKzD0/FX0r/AzF2
4GnRN+L+qy9err3sl/+Fro3hruLaHu3tV9c+Zfu48uiuPCorj/nS+ihpL70N
2O+nn2F8/cL9ZZMyfV3837q2rnwaQ2bGfApPxp/FfED5jcPV8PPSOzvGL+3n
Jny+9rBO2K+SAcLv7NoCunzx/+pZ4q9Sqa9lpHHRyanPrdQ2HhbeQLaDtYdL
lNcr7KdKb3XlN1t8j9JfQP9O3D/pi+nTC4X/LLkIH4MXcD9FZrK/i32nqAt5
Ghp+xdkNlyczo78rn+Pl9R7yHL5PfFXFN8UD7WLhtZHnCeXTnOYd+r+1sXeU
54XCXxTzsRbp3hc2tbStY+Vhhbb7jja0R/ndy6ZL6XSPfk7cj+Nn1WVx10ZK
3xP4en6HatOzhPU1noI/V77fxf1d+V0qrm3q63v8Kb4cf4Rb6ZtF9OlvtJ0C
5dVcepdL/xjp3yyOtvrHn2QP/S/89ObuRb6Xlx/IS+qrKT8/iO9h4+E1+leh
MK/Qt5rgWeKaQ9rwe0rUufGrlfL6Xv4HGO/flZ554ssTX/Ni2gP/OcJfJuwW
0Z+5b1ceudwLpecx+hba1yx1UVt5dxR3k+g/2tZ/wn+S7VOkI/t3jAnP6+uL
yJXKZjX/94k7TxjLuPez7yGsH4wZ37H9hJ9vzMX2kYPS9j3ZJH0PSl/zBsnP
FvwQzsctpPd9/DBuh1vibXiX/F4sv2+orzfx6erkNnE9SnbH/IJ9V/aVlP/e
mA/gXrgK3sr2V9c6xFoA+Zn7C+FdKbyP6dfh+9nXj/IqavyI+y/9SPrt9B8Y
y/6N+6+43lU+76rbt117i3u+a7uivfLfif+K7F/Cs3Bd3Ex424W13LXpbD+M
5wvu/b1SWbylPW/F89l3YJ8nvzWFf0B971Dfx8Tzjvp4jdQqk8Lo0yI908ez
fH3XusfzJdkS4ytZQzdTeCcLr6n4V8X4gWvgJniEsErqjy/K39KYw6jrq1yr
KK6D6vRK7lfZT2d/q/KuTV/g2mHxXce+Roy9+F88DmfhfPw3fl8basbdJz+1
5SvNMWrhxcIbKrznxN+YfQfXjrAfz3817ufpz6dfSF8DL8IX4Wdx7Rif8TC8
RPm2xjdoYxvE9YE6yMHP0Z9D/wz7XeqmsmtflU9jQkXuZ+nPpJ+svP9VfsVc
G68tXEceVNYH1NEYadnKz7fcx7ZOdRV98CPjQQv8E/dR+uzOuNdq7/vw06Sp
/BTSZ+T3BmHU5V4ivhHie1F66+EX8Si8FHfnd4Y+U0baXxH/PPyyPn+lsbmK
Pvcwfg1fVS71wZ+5t5Hr8G1kk/TsxDdw7xfnZvwlvhV/i8fiUuLbYTyvqTzu
cf96n/5a+gfoP8Of4Btx25hjc7f0PP+QseUj6e+obC8TxiBlNZTN79rqb+SS
cumev5RuOT/PqdtR2usSvDSen/Cl+BnlMVwZNTWWVtV++pu7P6yMn9KeRxt/
H5S/1exHCa+C/C3jfwV+nv+r+V/JvYq8WTa1+T/F/UevlJaHxf8i+2X0z7If
zn61snxEmI2E1Y3NWHyCPvSLujpGGf+mvo+K+aXwRsf6JPchdTxdXm8n50Rb
xHO5HyTX4NeV353q63npPyvaOv39dA+QQfhPfBf33aQf/g1P4Z5KuuC1/F/P
/3D1PST6Bv19dDPItXg9/T30i4TfF/9CfyvdRNINv0R/E/0I/q/ApfTXFXQr
yeW4BF7EvZgMVbYnye8/8nuzMr6Avgj9Y3SPk/OibeKHuefH/Sbasvhu4r6Z
dMcvi2+C+EaKrydehyfhK/B4/Aa+H78gvQ/g9/BKfADPwlvwMrwfn6//XSlN
M6SlsvY2if4d+ifp36Sfgjfip/FbeBz+H56BF+M7cBnpXSNta8mt+G36x+hf
op+O38WL8Nt4Gt6En8Ub8A34TTwHr8Y34bfwPLwG34I34Pl4Lb4Xnyi+18W1
nszB79Ovof+WfgbejJfgb/BpzdI9Mu6N10eb4S7P/5vcb5GHcDZ+h3tjlHmM
rXgz9xZyF+5vPvyrsXaJMrobH0+/ju6VemksaSaOusenMSXGylNxtePTmPmQ
9j1We9+jLV+jvTcSVkOyU3i7yOn6Srb+fIn+PI1cqa6vIfWFXZb/zvQn0l9E
N4WMj7ZAGtGfQN9AWLnkY2HtIBfryxPkv6L8b5SGoTHXIXXYl445tr54ZKAy
Nd68G+un/J5CPuJ3O3lN23xHes+K9GujveWljvC+Yn+b9nWjuf0AY8TZjfRF
MkN4xei30vfk52T+T4k1hXgejfW6WNtvndbWFyu/OuKqTT4U1zZSi7sm+YB7
K2nB3Zzs5t5DOsh/Gfm/QN4nkbPl5XxSU36Ok5+29CXpz6O7ldwUc3npqSL/
e6WnO15C/zndF6QDXoh3cO8iTeN+jt/h3kiaxHwMv8m9gdQW/i/mpP24ryXT
YywhLcVfOeb0sf5IWuGTcFfuHqQyLo6b819EeGdF2kgrXAyfw30Lqca2FinJ
/j/tox79IfENoBtH6tE1JGXojxJeOWVzIvmfsnmDNGT/N/tB0TbIafgIHsJ9
Q+Qv0kpO5P9o/s/gHkiq4mOj/Lg7kGxcNObf8n+D8stSfqeeYMwXVzbZIK63
SY66rUEOaxvt1G9x95+WxpDzjd0/eh4vihvjs/H3+N9Y38Xd8Ff4MC6Le+Cv
8d/4KNwJf4GL8X8aPgf/gH+i36kPnYp34F/xN7gl/gT/HO8zcFO8Ex/Lf3v+
L8Y/4yK4Bh6Av8Xvst2mfZ+nbRSN501z4wVkmLzNj3ce7Cux78t+P/ujcDXc
P97v4CPiOwH3xPti/Yy+Hh6CD+L/6CvgPvgbfDR9XTwYf4d/of9cGprhXfh3
/CPOx3vwb/hAzNHxblyK/9P5Hxb3RlwGn4FH4kN4g/75j/wc9Ow333hXkr4D
/SX0v9DfY263sFl69rtHnpfG2rf6PaC/Xu1alrotT96U/7dqpWfV9c2SbTyz
lhXe4LhHCO8P4dVT9w1JUf27QP2Xpu9DPyLWvulL4Fb4AvwT/kd+iuOu+Ev8
B/5D/trjz3AlcVck78TaDfmT/i/6Avq99H/h/3Ah/hwfwj/jNvhTfJz4ugr/
Mvwr7iasruRA5IVsNj7l6W+P6AuPkhbS3pqUkP6O0p+l7VcixbT/w/rfDez/
MT6uVz61jdmzjF8zeyT3S8rjBPFdKr5rxHe2Z4K/ldcC5dlXf+nJ5h3zl53m
99WNdRXFt517T7xDi/UxvF/6z5X+I+a6Z8XzH/ut3dLaVS1+8j27nU1/mP41
6dvhWbm7/HxHX0f46+NdlPCuEF5Z4X0pvE7sf2E/RHgb6DfQj6E/IcY8+o70
P9MPpl8X74rpR9KXpt9Ln0//A/3AOmmtZHmztFYTayaf07el/5F+EP1q/pfy
P4L/4/j/LNZK8FxcGc9RVr3dH7q7N/QgLyvrdWSI8q7j+XKx/C0hXbg3yd/r
PbXr7mktsrHw28XahTZb1PiyXXgHxf+E+E9U3ttqpmebOs3S3DuecYoJuyQ5
yL658P5Vf61ijhf3XmF+H+93+M/i/yP+F8ZaOOks/o3sO4pvkPiK8f+dPNeU
lxqkvPxkkUXG0zeMp80jb2QZv6vJEP4Psb+N+0LPz28J62ptpjUeKL6/lder
8Q6krbrvb95S332ifnoWq9kszaXjmaw6d1Xt53N+y7u/tqNfjcdpT+WiDwpv
Tsvkvlv77KQtdyNPxf0D99Y2epEftY+f4p2d/PYX/1/xbkF+c6T/W+nvzf4q
cpS2XpQc4f6L/0rxvE/fM+YeJAt/gbtzX0EuEfbFJONZ9Sjyh7j/IX/T/RHv
o+jOJ/+K+zC5iPtCcoT7P3K0/DwjP/3l52rl9T2/P5ND/P/O/wni+zTeKeER
5DhpK0uK6I//0PcT1hnkl1ppDnaevldCHT92fHqHUIP/H/jvG2sv0R+E/Q35
hftX/i/ldygpIu1Hxzsv9VFUGa1Tf+uFUZr/Xfx3iXcd5FLl/Ys+ebm0vkFG
4Vn0OaFTRzP11RHKt4j21Ex6jtLeL8QZ3EZ7O537Jf4b8/uK+8sWbXuz9jRe
WyonjK/E3Y3Nb+rnTO39a9wbH8Lvqq9J4quqvp8sm56Jt/K/k/8J0R5j/hB9
h/2v7F/RvroYjzqTBexvZL9ee56tvBs2SGFcw36u9Ffjd5j0D8WX8X+U9L7B
fy1j3WjXKimPN6O9qq+F/A/i/xb+v5G+M9n/K74t0tdYXI3IxbH+VtH9gPtM
/o/lf7Jn/B/Yr2VfU/jbY/xXX1X0r6VZaU3r5ubaQIv07v8B96wnuNuqny+U
5W/xvlne18c7u3JpTr3X8+/XsWaOH+L/NOEfEme5qvq98Jvgf3E2Pi7ur+r+
N/KH/B7ipyl9kQ7yR18q5iN0R6IN0/9J34y+BP1J9KXp2+F2uCWugNvi1rg5
zo7xB3fB+bgSbo7L4Gq4DG6JK+Pa+HjcH8/AF+IG+H78aEfjLB6FW+E69Ln4
RJyHq+NT8Am4NW6AG+FyuAUuj2visjgfN8Gn4fK4H74bn49z8SA8H1+GG8f8
St8qQf6T/7/lvzv9KPo+9LXoR2hrw0lb7a0d+Ux76BHvR8uld1zb8EHP9Pfg
s3DXeN/K/+n8V+e/EPfDHfBJ+OR49iDH6c8Z7bML/Xn0Xemr0XfCg3AhzsHH
x1yVHM3+X3F0oO9O35a+Mn1PPBb3x7VxL3w9HojrRPnx25qU4/8Y8Y2U9rP1
iS9LpXcsfdhPZH8m+1PY98VT8dm4XuyHwcNxL1wTVxbWSaS48I7E8xv3qTFG
4SLCnxjjrfpcz/5s9p9qW3vJj8r3F/ajte0a+vDr2vbZpeWd/SvCH8e+Jftz
8Ep8DW6Oh+Cn8Ah8Gj4TP4uvwE3w2Xgpvgo3w+fj9Xg8zsNz5XW8PnZP5Fd8
w+j30d9B3yH2kBj/WuvfB40FW+gvpN9IfxN969g/gB/EQ3GjmH/Fu3p9dAPb
XvJ7Ff5TfytPf5Xx4kX3toauPeX+3g9fwv92/ifRt+X/YWPDui7yTXcrm8vo
v6CfTl9APxTvwlNwO3wR3oJvwfl4OP4B34MLo33iX/EM3AlPj/flyv8DfBG+
CbfHq/EgPAVfgN/B5+GbcSFeiwfjjuqyE6mgPotF/tRXLfW1Xn2dI8896XqT
KvQl4vmZ/z78v8b/WfzvV9ffkl/V92/xzpf/avy/xv9Z/E9lfwn7TezPZ387
HoM/xBfju/AEvBNfGu2X/5bkU+PhZ2QUd47wXhXemcKbEe922X/JfgT7u/Fk
/Am+LPq7tA4h1aS3ZKyP6q971feXMZ/A98X7U/afsx8e+weEXyXeEQt/iPAf
oH+S/jv6K+lHq9tf1PcJeLQ6/Ebf/zvWI2PtvLh7BvsHzFGHuT/MZ/9a9C98
Hp6LV+KTcW7stcCvRH/FZ+HZeDXuijvi+6I/msudQcppKy+RddHf6YfQP0D/
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
43kZH4znEzwnnpfxD/F8Gvcrff2ieMcmb6W0wYu0xTvz097KEubTv3aVN36+
rpTmqE/E8yv/x8jfjfw/hNfiQ8K7Fs+L53X8W9QffgS/hf+N+sXV1MUo0j72
90f/i+db+mLCu4n+mbgf4jL4VvwCLqY8T8K34Yba7xn649+5aY//0/H8zr4U
/YSI3/zw6pZpr/aP8rOKvg7/DejvpX8OH2JfHk/GY+R9LMmV/+NjjyH93/TZ
9FPoh3g2n648rlAeVbWH4bGXitRlXyb2DGkrJ2mvdeJ5iP4pfLr4CvmfgZ/B
z5Kq2v4svNz96G39YZP+9rQyWBvPEvg9vBB3Fv8Q4XUSXtW439NvpN9M/wx9
t3hepu9OX4O+Rzzf47745Lgf4tOk/0XcP+4fuCF+AfeL+QdujpfhAbg3vpH/
QbguPgPfhs/B9eP+Lu3H4+pRv9I/FmfjWvE8iNuzL8B5uGI8z0nvW9L7jvQ+
Jb0d6XvSt6OvQv8/+q30H9E/T/8afh9/iJ/D6/AW/AF+NuYLyvJGbXyWe0MX
Y8aD4m/vWrt4Xo3yFH5lXAffJfzO+sdF+uuN+msH7aMLvgTfhDviMtznkPG4
HW4jvrJsVp+c9vjcqW99HO+s1O0mdVZIdx7769m3Z19L2/qPfkvsV9Mnbom1
5/gGRVp3xPsH9hewv4F9AfsX9M3F5Cr982rSmd/nja97tP355o/N2Tdqkdai
LtKfW+DGLdLa0zP62zZ+PyYP1Ep73J+W/x7y20l+Z8r/vLx0D417Z6xBXTnA
9bZp7Xmk+fAD4juiz9xjrH9Mml6gezHGXPoH+H9P+f0uvP8J7y3lN0hYX+Sl
Z7tB/OyT1rq4ZlZ6Z3C2ufx0fWy+Z+UXG9PpGz+qn2uEt5bNycaLItI/OcZ+
4b+pr/whvifwYH3mXenbQlrovy/GNwzsz2G/nHsV+1OFdxSehDcKrwk+Gk/D
m/AbwjskvMfxIOHl0v8az6D4ZfqawvsN34gXCa8h/e/4ltgPHvMJ+kN4Al5M
XxsfE/sv8ZIoD2n7gLSUvpWu7eLeTfLxGvwx907SGq/G27i3k1Z4FV7YU57x
afgFXE34P4hvNPezwq+KD+KRYYsfYv8oqaW9N3atH90bMaflPlObfEt+/8RP
4iHyWz2+RWAzBj/H/4na2gmkW7xbIf+wrRXfQ3nWalFUn6SrEO8c6fqQbO4s
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
1grx9/K7NJ4ZuP91/7md3ztJWX6ruDbJ+PpI23T2ySPGt/J0Fcmn0vdzzH/p
coT3U7xLde0CXNH9vJT7eTfl8bx7Q3/j7Ti6Puybs21FDsd5LbEHnruQHBVn
zeCDbH8iW9gfwN9wHyCb8H78Bfc+shF/gytJSxXyGf4F3yysiaSS8E6S/lO5
m5F/xLeNfpj0Vce/4lf5uSTWZvDP+KWYn+Bq+Be8DudyNyZ/4Q9jjyZ3ffJH
nA+Ca3DXJr/HeUHxvML/2/3T3HLBce4Dyve5CFNa/la+k9hOI1WkL8e1Q+am
E5RxWe571N+eyAtpo/zXunYt3b1t09kY05X/mNi70jadhTENX4PvbpvOypiC
x+L72qZv8+/AS8ylXiRrxfdovA8T9rXkKOGXFH5J7fcY7XkzviDme/H8bQ63
hO4n/e8g/tx4XSg/nchxuFR+etceZ9pc2Sp94xzfNscZE9/npT1psRctvon/
EO/G8/A4fFWr9E1vfMsbZ07kx7dN4v9Nf8oxnhzR9/8jy+ume8gl0jqMHBH3
Ufgo41uGrKRfRQbSDSZ/0B9R/j24e5Ff8b+4L/cAciieZXEt7trkS/wbPov7
PPI3/g9fzj2C/IeLiK8Ld3fyC/4nnjm4C8gP+C98PveF5B+cYd8k1jbIt/gP
+obcjck3+BA+hbsB2Yd/j2eOWDsg3+E/cQfuQvIj/hu3VT6/Kp8/lE915dM+
znuK9U9cI+ZY+Hd8GNfEB8yPKrd0P4vvV7Wn/XiLOdm2+HY1nve4K7ZPuke0
x330FdnPYr/PtQL6b7om2/n07WJvQPukexh/Gc9z7O+LsyVc+zqeV/FM/DW+
C99NrhXfQGPqvdz3kRvwUNw29iK2T7YPCe+reL7lf0bs53StDX1W++SeR58f
e6nap7gexF/E8yX7e+NsLNdax17H9sk9l34X/T/mB2Pp97h2On2VWFPmfpz+
4vjeId5h45W4h7D+4efXGukbxrv1n7/jmRn3Mqb+y92Lzatlk58m/Jdtn8K+
g/9lbdOaWqylxRi6l30p9rez3+taK/Ynsv889i6w/5T+sPH6A+XxqWvN6fd0
Te74ZrklPp79Z/gB/BldSeFNK5uufY7L4LvKpjDzYu9R+xTXbPbn4L/Y/Fwj
neESawXxzB/P+rFmEM/68Ywez+bxzB9z8ViTirWomJPHXDueIeLZIebcp3Kf
1jWtbT1oTGnI3ahrWruris9tkdbwYu0uvkkv4O5AXuV+hf7BnumMojibKJ6R
ytDdKY6V8WzkWkl8HOmmrJe5Voq7NDkdL8dlo767pmevdaXSs1o8E8WzUDyz
vSzsteTBGukZrwld065pbW6e+P+me31AWrt6zrVmdM27prW8h+jbcLcl6yKs
MmmtMNYIY20w1gxjLTLWNGMtM9YkYy0y1gxjrTDWJGPtI9Y4Ym0j1kDi2SWe
aeJZJp5hYm0y1iRjLTLWKGMtLNZsYq0m1sTiWTTWCGNtMJ5JY+0s1mxirSbW
0Fpz55OX4/lQ+lpxDzT+fWbsezTOF8Itu6Z7xcNl0lpSrCHF2lGsKcVaUKwh
xdpRrAnFWm2sIcbaYazZXqK91Iw1YLwqzi/AteIdCV6N/2PbP/Yca29/uLZP
eNtc21Uj7em+UHgf4U/wEfbvcZ/t2iT3vu2ubcFn4Yn4I1xT+CXbJ92V7C+i
285mN/4Pb+U+z7Wp7HdGn4q9M+w/5h5N/1Y8r0Z+9J81xpMPuM9lP4X9DjYn
sy/VPrmvYv9+rC/TTz4uhVE79lq0T2FfTb8x3m+5R70srPddezuej6P8hL/W
tU3c1enXRVz07+Ka+BW8Fee2Sd/8xLc+xxiv89qkb2ji25lYY6nTJn3zF9/6
FcH3ud/P6JLWUtrEeRvcD3RJaynt8KlsG8WZQeyLubY+nsej/0rPSnHeyTZL
/C8en2yeb5veMcW7pZhj1JC/Y9unsh4lf2/E83u0T/5X8/O1/lgs9nTRF+qP
m+lOFt6rdB9Gm6RfFPO9GmnOOLVneucQ7xpizvIo+8fIbOHdz8987kfIA3gW
fpz7CTIHP4C3mUvcg8fj68iSaPtkAfcT9Iujb5En8eP4APtvyHux1uDa0hir
or9zP0k/qCCdiRZnob0Qew6jb0Wa6B+hv0D7/AX/EGv5xpCD3HW03+fLpnvA
pfyf3D615TX8H6E/g/71sqnNH8Z98GtlU5+ozvbPSDPb78TRk/+TXDsYaw+u
/Ug3Tvu6q1S6VgIfS7qKe6lry6OtxnjK7wLpeyXGxhg/8HI8l/tBcgsegedx
P0TuxXfGNzzS8nDcw4V9f5RBlB2Zyz2b/jXu1yN9eAWeHWVPbsbD8eoY66KM
8At4JvcsciO+DD8VaSPz8UP45RgLo07wMryW+6UYD6Mu8MoY62N8w8/gZ2Ms
IY/i+fiZuJdEm8AP4/ujbZCb8OX4J89K9bS3k7PSNy73al/Lta/ZNdIzSTG2
xUkX5fei8nvX8/dAc+j5+sJG482D5tYPhZgfPeLaXnPJv/SXKRXSmYvj1M8N
9HfST4r16n7pjLs42y7WHIqdrg01S2uxS2N9l98i9Iu5TyAl1O27zZLuNWm+
srt+RH7wbPYjuYJ7JDnI/T0ZwT2cfMv9HbmKezT5ifvn2B8qrFbxzk14+z1P
/iu+1/Th8+V3arxfwCd6XioZe+OUyXppf5MsrZ/WND+X/73kzeLm/7GGS/cA
eZB+TsxvhX9i3P+4C9wT3mHbz7V5eIPy2hTfduKH8Tt4Y3yriR+KtWM8W1hz
yTzhzXVtgvK5hVwg7ReSdexfV8bX0b3Mvm6XdIZfnN13GL+MD+GJFdIe9u3q
diP7W2JtvFx6d/UKvrZCeof1kvBexWPx2vCPX8Pj8Ev4Fbwej8fr8H3SNjPS
KH2zXZsobbeSi+IsKjKD+z5yNfc1pL/ni8vl72m2X4l/ovq/Rf0+g8sIYxqe
gJ/Fx+OmMXZ63jhH2S3Ai8W1hDxZP+3ZHyS84cJbyL2vXHqXuU76xlRI7zTj
XeTL+JoK6Z3k3crjri5p71NJ10pq32V6prXRNbhQWR0yX8+o71ra4M3ScrEy
OzbePWSrJ34f6pK+lawea+ht0zdZ8S3WEHKrtH7WJe1N6RFzAGl9nMyX3sfY
P8z9CHk43hfgqcpmCrlU2VxG7uW+h4yOthp7gLnnkOu4x5MSPdMe89hbHu8Y
+rRJZ9jF2XXxTuFutneRUWyvJJO5J5FLuIeS27inkWHcl5M7ue8gI6PvkCek
bUGkUfoeF151eTvcQxsX16Ou1W6bzuSLs/jiTNL/uC9W/k9WSGf0Pc3vwv7p
3eQTrt0u7OlkePRFcjfdvWROvG+hP5b/qfj+YFKfO19491RIZ96OMtaMNsZ+
qLzfjmcE955H2yV3hxjj2qUzg+KsoEJ8EfuLY84V43d8U8bvaPxu1Idrl3Jf
RlrF/Zp+GPflpDVehS9iPzzmMOzbuTaN+zZyNXc/9TuFeyq5CneL+uaeSK7E
XfA13GPIMNwi1q+EdzXeLLyLXHuuXfqGM77d7BRjdrv0TWl8S9oV38H2zgiD
ewD/2XTlyWr61yumtfpYY4+19Vizf6t5ekcQ7wamGpMf6ZnOeIyzHeOd9Ztt
05mVcVZlvLN+Lfo7mVcjvdOIs9ZWD0jvKuLMtenCup1cI/7+4n+7eXonEe8i
pgn/XfYn4Dy2LUk77vbklZj/m98+1TOdyRlnccY7iGdi/T/uN3iJ+n8Knxj3
s5jfCW998/ROI95lTMZvNE/vNOJdxpTYw8w9OdqA9HSVnlu4J5BRuDO+lnts
1CHOw9+ZX5wRczL+22qzg7mHkJPob1O/58b8NeZU+DF8dsw/Y46J78ZnxnyY
5ERd4KuV/ZXt0reFleOZmW4QqcI9hf69numbxPgWsUW8c4vzO7pp4+4lu8tL
f6w1a88zKqQ9ifWMDaeQFsaWmdE/tPeSbZO7ZMzv8F1ktrZ/f6w3NEvvCOPd
YJzZdYzy6dVBmVdVTsrzGGkpSjorqyXuxwfkvy9eXyN90/gF7hNzkJi/s7mE
e2jUX8xHpP+GmGuQkbhQ+Y3nvp6MwG3wOO7ryHDcGt8UcxdyBe6EJwi/Y8xh
hP+B8Hsri/8pk1OVRZFo3z3TN5/xrWeua73Y9iZfxrNtvC/mvwt+mf6A/NyB
O8ecBm9k05W7G9nLvZ/96dzdyefxLId7cPckX+Bv8aqe6Rvm+Ha5ofhmKutZ
XdK7yrbxTO7ZrL46qZ2VvhH+HTfDjbPSmRUDzE8GklvU3Qrh7TS2znL/WGwu
OUIYv4trMP2SnHTmZMxl++Jnc9Kc9h62/fCX8v5DUX29bXrHGe82Y4/ZDuHN
iPU1PFx4S9qmM+ribLrY83NnQToTLM4C2xvrvQXpzLc46+2zWD9hP70gueOd
30MF6QyhODtov2t53PuF91ZO+oa8eCdzKvJa0ZTGifr6OPonctIa9zD38zFN
09rLte7nU+jH4ydz0pr24nhfI47Xc9KZf0vwaPy/nHQG4Wr368XsX8O52uyL
9FfRv5GTziTcFXMT/J/ymGeO9AL9lXh9Tjrj7hP5uaMg5TXecbY2N2tFKhUz
v3Xt50JjbNM0l3899hhK3w3xTi4nrdnfgW/CT+WkNfFbmqYz4eIsuJPlOTvu
j3gh/R/u330K0h6c2HsT135Sf70K0l6uOINybEGao8bcNM4k3cl2Gv40J71z
LalvTy1IZxfHN0kd9c8JuE4V/UUdzdd367m2Iyfd45/EDfGunHRPnYfr4o9z
0hz5MZyLd+akOcI+9VENb8fb1ced9Nn4g5w0JszBVfFHOWlOeJO23dQ9pqn8
NpH+0nGeD26Gdyrf+9mfxH5bTpqTzsCV8Yc5ac52D66It+ake/JG8/9j8Xs5
aY/xBlwcb8lJe55/VL6fdU5noa1Xnyvo/3bt7Zz0jcOrbOfGmldl/UabnFOQ
zniLs932sdmtPO9y7fOc9I777oJ0Rl6cjRfXWmtP5wtjN/c3ngdO4vfBWPPE
X8vPbQXpTMQ4CzHq5NN4NilIYcc75/EF6cyBOGsg+sBq6ftX+t7JSd9kvBTf
T+ONOWlP/is4I75NOWkP9xvxfRDenJP2hL+Oj8bv5qQ94bcWpDNP46zTT1y7
Wfk3V97NlXdT5b815tJscrS1G5TPKvl53rVX2dZXvqsL0hlPcbbTIddWFKQz
puJsqd9jDJGf5QXJHXuAFhWkMwnjLMKfo43SL3Xtt5y0p2hZQTqTKs6iimvZ
2ufzBcn2aO3zIPsl+NectIdudRPzAveP+rF/Nc6MKUhnhMXZYAfYvFiQzsyK
s7LCz3f8L3btl5z/2zNYkM7YirO14tq39AtjzMpJe/YeL0hneMXZXd9FGdM/
4tq3OWlP3aMF6QyuOHsrrj0nPR+5drT0nBDfSxSkM77ibK8/6F8uSGeAxdlf
f+LzY79GQTqb9rbj0lrU2wXpbNxYk3qmIJ25FWdt/RDlK/wT5LdG7G8V/n7p
WRBjak7ac/UjXlWQ6iL2RO3DjxWktMeewCcL0hlfcbbXwWgD9E8UJHfs8Xuq
IJ35FWd9RZjPFqQzxOLssCiTA+yfLkhpiT2PV2kvy7WHN3HDWOOQvnrS11D6
qknfSlwBn4xPwsu1n6fYv8y+bnw/pe890jStjSyrntbCzytIY2WsiS+if5R+
LV4efbRt2sMSe1fizPLn6Oc3TWuHS+mfxQ83TWuLL+KF+KGmae19CV4p/mfj
fTuuJ/4V+Bm8Dp+C27VNe5Zir1Kc2R1r9RdKz/KctGa/RHgvkFOKpWvf9kzf
UMa3k53dn78M/wXp3hV7Yr7CDxekthh7Tl5UHn/FOwflUUF5ZNR3c+XTFJc3
X6jn/pCPW+BG7g9dpKUQt8ZvxxyEfQfcKr5nim+EO7rX41Pxm/HNF/uWuBn3
W+xXiS8H18U54nsBfx/vFMJ/fFOKP481PFwOL43vGeOdTeyvxstwUf6r4EpR
f/g4XBVXjjPY8K/xziHmb/FNQJyPiIvhE/Fi/E2skUb+cCltqYnxpYnxZYfx
70bt5zR8Gj5N+R4X57XhU/HH9MU8qxUlBbG/Ot6JKvutndPeldJsfjS/OifW
79ieZz60XH2s7pnmSr8p72P4PZq0i/3UZKb50Yw+yW/MqWNu+a0wSlZKc8wM
2//cr1vH2T/kXWG93zPNhcux+bVF+gY5vj2OM0lKsj+WdGLbmRzPXZZ04e5K
SnAXJx25C2M/tLCW9Uxzx5+kr2N8ryjMSvFfHxXT3PPWFskdc9BC7qx26Vlp
o/bwdbzbi3eCuekdQom4N8QaecW0p7nYQNfIgNw0J83S/sqTAxXTGk0F7mzy
bcW0JrM/3h2SDrnpmeew9PxL8qS1FfmC7ivSPje9E/iO+3vSMTe9c/mB+6d4
h4hfw4XxPBnnE1RM/7FyO3cVaTxd/Wwuk+bCsec99rrHnHg6d2X6y5Tnu/QD
1E1/8mnd9M6hirRWJgcrpjW5v6XtL9JC2lqS/dzfkHrc9WOPsf7Tk6wpkeas
Rc0VjyH3xv64eAbUFu9tmuay8Y3JA57l7ycPak9bKqV3l5vJvGPTO8y6MdfS
ht88SnuJ521lO4zcnpuekStqi82Fd1uldEZZCXwanlopnbF2Cs7Ht1dKZ5Ld
Fn7JA7lpDbY6fSv66ZXSmWjH46Z4WqV0plm8u/uX1C6T3uE9EnvhyWUl0hz0
Jukr4n7+k/QXM0e5sSDNaWIucwz+Qdl8Txoqm0bku1g7jG96uBuQTcq/XTyv
u7/nxRlT2mYbfEh5V4s9xPTt8Vvqr2O8Y8S94nkf94h3qML6ktRhW7d2ejb7
kk2c9R7PaH/QHSLN6JqTi+V9KJmem555d7HtLrwNwusW5wvHWmZ8k8D2VLKb
vkesj9CfTv8p7hnrI7g77sO9vmc6q6qs9tIS1x2szTdMY3Qlbaci+a5iWpM8
WtxFSf/c9Ix1HftxndJZp3mxR0VfrUUGiHsgOZltHXJ5bnpGvkrZTok4KqX/
GKlLV48Mz03P5KdxNyWjctMzeZ04q4wMimf3aKPc9chZ3GeTzbFXQPs6v1L6
RqERv1niOAePxN/HeOzaxtj/ebQ+1iqt6cRazixlcIqw6pIhwjqTNGTbeGDy
G2sA9bkbkBG5aQ1gmrQ3x6PjLIDYg9E1fWMS35bEmVkt6VqRa3LTmlNJ43Ej
+kbc28uns3vvFEbDSukM33Cf4lqDSunaDcbzxrgx96nCay2sNmRMbnpGv49u
8CDl3UAbifcneE67dC/YqD4vxHPbpbn+pjhzmt+OZGxuWtNqy92eXJub1rzO
ZH9/u3SW8Ab25+EH2qW0vh3nA0fYsSde3RaQ8+lnt0v3lnfoZ+Ah0lNceo6O
9xX4TFwSFzs+rXU96drFldKa1/Xc/ej/Ff/n/I/HL7ZLa11ltaEV7dKZuXFW
bk/XaktrWfV5ZqXUhha0S2fCx1nwcSZ4dfqa5LLcdOZTrO3d1DL5jTW+1bFf
m9yuLe/RXm8yNt7YJ7ljjSHDbxHSLzetIfzQJH2TGd9i9nLtpybpG8n4NrI3
/qVJ+qYyvqXsg39rkr65jG8t++LDsReFnJGb1ijiXecGY8qA0umd5x72z7ZL
a33TzWmuiLWWruls9vaunRF9i0zKTWuGF3BfRG7LTWss53KfT6blpjWas7jP
IVNz0xrN6+3SmeNx1niU+WC6M8mU3LRm05l7frsU10nKewAeRCbnpjWzXO5y
yvvsSqnN/+F5+cqW6Sz5eGewTF9/rF1aa82J8Zn9CezPqpT6cKzNPtEufcsX
a7QPcecaTyoYT6oac++lH6T+j9I+DtNvVDabCtK94fES6d3vW7h/6fQO+Fnl
9R7OmP8cH+cfGqvrt0nvbr/HX+PGbdK710Nx5mLLdIZ5nF0eZ75O1Z8WtEzP
+nnqu7P++BT+Ex+Vld7NntYm/ddSvKPdpm18RAo92x0lzLOEX7tNehe8Tvg/
56czteMs7Y+z03/N9OqXvlWN/5zJiv0+uJu5cPfY45af/nMi/mtiB/s2sb9W
/L9lpzPL75C+l/HfuK30jRBfVWH8i7uSKtznNkvfnoXNF7E/LT/9V9su99iv
89MZ8HH2+wb6ffnpTPo4i/5tfIT7W9e2ZKdv4PbnpzPq42z6ja59k5/+AyL+
++EdvF7a3yANpf05/FN+OlM8zhLfjv/Vl7bkp733X6r/pdz74vylBmnOMCbW
n8jj9E+Qz42tb+cnd+zJXRtnE+Mn8a/8nyT/Vch7JZKfY9qbh9HPyE5n2n0l
v4vy039zfHFs+m+c8V3Sf+nEf+T8mJ/OaI+z2T/iZ0SUnTb5prZ4IOLwvH6r
MM7ITmeozeutHeN+2ek/2ObG94C4b3b6z7EL3DvPJ195NviazKa/mb53dvrP
swPCuwX3yU5nJH2Gb8K9stMZWa3E3zcvnUcTZ3I+zP9k+gHZ6T/QzuC+Pj+9
G7pDmm9XHje61pP+BGU+Hd/RL7l7uFY9nm3lN6dGCvM8aTuXfCFtX8aZTtxn
k73cn8d5NOryRuEXZqczGWIv30356V1V7OkrJX3vNU1nt/zgWmlchnzP/XXs
f9UWB6rPI8rvIJ4U78dc+5m+RdzflPW1+NvsdCZ97GUvzv932WlP+wT2Y1qm
sm/G/kt5ez4//TfObvU3VN4uI//pL9lsbuGe1C+96+uMJ3Pf1i+96+uCz5K3
M8mn8vZZvI+Ks1TMNzdpS93oz2yV+kz0lf3y+zn3s/npvxR3iO+z/PQfC/Hf
CuvZbIqzsMmp8e4Qv829kTTGi6JNqLuH+6azklud4J7ZLJ3ZE2f1xJ7+S5ql
My/irIv4D50L2X+Nt3N3Yb+d+1Plt1d/yFK/F9Ev65vOau5NP1BaLnFtbFY6
g+LOM9J/fsV/fcUZzEPoh+JxWenMiPvOSP/5Ff/1FWcyr26W/mMm/lsmzri5
rlX6T6v4L6v4z5WxrdJ/vMV/u8V/yHwe5zvEHvBy6YyrOGvkS3xNVjpz5KWY
++KJWek/mFZyfyT9b0r/Kvalpb1AePlZ6czq8+K/YXDrrHRm9YD4bxucl5XO
YP7L2NkixtSsdIZzA/rm+NSsdObzsDifGbfJSmd4fxfnIZ2ezgY7iI8VXzv6
VlnpDOwWcd5zXvo/0TjzeSn7D6XvVelbIX1HsW9N3zwrnUldEGdX42ZZ6Qzo
w9KTh5tmpTOku9Pn4xZZ6Uzrovy3wS2z0hnWJzdLZ1jF2VUvK5/VUbfie1t8
fxnf38F78B7cUPzf5qX/GI3/Fo0zJPblpf/YjP/WjDMeN8V58WR6ufQfBV/l
pW9241vd+M+EzXF+Pbm9XPpPgZ/y0n9UxX9TxZlMH0TdkTvLpf8oOEdbPY/8
K+3ltNeLuC8hR3AWfpN7A2kUa0PZaezfTl7ITveA3fnpPznivzhexZ/mp/8M
if8KeR3vyU//4RH/3fFajInCupAcFn75GAP07zbKqBr3sTF/Ynu29J6dlc5w
Oov7w9bpW5YfjXFvcn+ivD5WXrkxRtP3C8lK/ylxDvdHbOZw/x57tvAZIVnp
PyM20O3mfxf/Dfj/H96Ft+H6+Pum6QzHOLsx/qNwfZw/1i/9l0Q8872Md7Df
wv4f5fdenK9P7iiX/kOia9/0H2vx32pxBu3uvPQfsvHfsfEfFbvy0n/ExX/D
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
B39XOp3JcBb32WS/8Wtb8dS2O5EO1VIbXxd9QX5ny+8H7mdnxPzXtTPohmi/
T+elb6zi26rLlVdf7ovp++DBJ/8/ls48zqfq/+Nkz5plxlLM3Fk+nxmtDGMd
ZvsYZjE+M6MQ0aIiFJJ9CW22JO0pOykVrdIipc2SEFLKUpRKliRSv+fr9/r+
cR6P9/O+z7333P3cc96LY1PMYllBM8eoeDDL/6T6F1XM6yez/I+of0PFsC7R
/yTcE+6d6Fh3f0cc60gx76rmOGaHYnV8qWdS74Js+2rLxyNd31a2uUvPCuv3
6cw9zfn4tJl9urN17eFP4E85X53gJHg9vFHvPNkKwO/q/uL8dUYfgt+DP0Kf
C+fDm/VtCxw7VT4l8iVRDNU6rJ+I/h09X6z/l/whadPrNbzPjqwfj/4t5A2s
nwEnwOvgD+HraG9LeFMz+wSt4Xp3g7/Q+5HrfbCtbVJli6qYaVms3wL+GP6E
9Z/T3Cn8UTPbdNaiPQH8tp4v2tNG30rOz279m+j80P4J8B64B/fHJxoLh7+B
E+F70nn/cc5P1HfOZo01z4FrxnnM+cUM22DJ9ko5JBVLb5nmZOIcU29hjnPW
K1f9JXGOJTOcZfvrO6bM6bJy5U5RXqntbSqWzXj0h+o7ps1vXZyT52J0x+Id
u+Zu9AfqO4aNYtGMhH+o75g0ii0zAv6+vmPM7M1l33Al1t+mNqNfAtdDHsH3
abDeT+lu2w7O323IT+U4N/Xm2o4FMw/+pb5jwmznW7eQ4/me8/ko75j1yN3k
D1XfOQ4Vq+XOHPvqKWaLYgnmw382c0zBM9S/Hd5azzndOyF3pjze2Dayt9Ce
K9hGDdrzFe0pVP+Mdf7Q+ytwLJy7qP9dfcfEUeyCR+Fj9R3DQLEN5mtOob5j
HCiWx2Pwb/Ud06NU9nfwMngjfJ3s/eCV9Z2zXrFshsH76jumzQn2fRvcsQ7f
MHiWnr8cz6UsoL1LuB/jWacq7R3LOh/JXpzn9Sj8Dud3GMe/nWuwOc45T39G
/iXXvvd7ZEOLXC7i2IZ/VXFuxMNRx55SjkT5JsmHSb5L8lH6UfO18JY450Td
irwt176IWbIxitoHXr7vbdnGrqh94OX73gbeGbXPvHzl0+HdUcccUKyBdvCj
8h3gmL6AD7G/D2W/Tvt+gt9WDDGe9YvgH2VL3MxyecrhOC/bTftjKQfjPGd+
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
YJvX4fB6eH5gm9LJ8Afwk4FtvgP4DXhOYB+EifD78BOBbbRvg9fB8wLbvG5m
f8/DYwL70NyM/m34kcA2r7nwW/DcwDa0j1D/EXhwYJ+kJ+B58B2BfZ72w0vh
iYF9bA7Cy+BJgX1sjsLL4cmBfcbCbP9N+OHAPhIfol8A3xPYJ2Y1/CQ8PLCP
y3vws/CowD40siWVDatsV2VTKltT2cTKFlY2p6fY/jbqbwo8RiXfR9mUy5Zc
PpDyrZSPpHwj5WMpW1PZoMr2VDan8sWUj6R8I+WTKVtk2SjLNlk2ybKtlU2t
bGllYyvbZ9lEyxZaNtDytZFPoHwB5XMjW1rZ6Mo2Vza1smWVzaxsZWXTKlto
2dTKllY20fLNkY28bOPlo/NBa8ewVuzqv9TePPtUypfyNd3zHO9Wjvf1wD6U
D8Efwk8H9jm4T7a98FOBfQ7Wcz6fge8O7CP0Fvw0PDKwD9Ea+Cl4RGCfo5ms
vxF+JrAPwj54SyfvWz6e8gWVz6h8ReUTKl9S+TTKl1E+pfKdlA+kfB/lQynf
SvlIyjdSPpbypZRPq3xZ5VMpX1P5lMqXVD6nsj2Xjbts22WDLl9X+cTKF1Y+
r69n2SdKvlCnaW9ddPXyPDd3Qx3HSpdNjmxxFDO9ZaZjFCs2cQvqz8t0TGXF
Ur4Rfi7TMYsVq/g2OC7LPmbyLVsJb8v8X0xkeDJ8f6ZjGCt28fXwTZmOiaxY
yN3gYZmOYazYxcVw/Sz7dMmXa7H6N1n2+ZOv33PwkUzHwFbs65nwvkzHKFds
8vvgcZmOwazYyz3hjZmOka3Y2GPhVZmOsazYykPhNzMd81uxvkfC8fpecL66
wilwA/Xf4C5wAlxb/S84ork9uJr6U3AufBl8gfOZBmfDsfAOOFk+nPBFcAX1
X+AcuLH6Z1n2eZOv21L4L/X/0Gdp/BY+oe8pnKm5c/XXsuyjJ9+8VfDlWfap
ky/dy/Axfa+p3xmuBf+o7zvcCa4Ofw+nwhlwVflb6fsMd4Qr6f3B/ZsAt9f4
P/fPpVn2kZVv7HL0VbNsQy7b8Wfhp7Pt4yPfnsHU/6K9c0D/f+5n/u9Tu/Fe
gO+FN9G/TobfgSfCH8Fh+F14MvwxvI5tfZ7n3DeKyVmrHduEZybYxlS5pTu1
d+wt5Zgel20fNfmm9WH/H6PflOe+nXx0NupdpO3xPljH/8bUbPsMyVfoBupc
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
rB/NcowhxRb6EM4qdUwzxTI7zvb+y3KMIMUGasT6x7Mcc0exdi6Bb8pyzCLF
KvqC9Q9lOQaRYg9VRz8syzF1FEtnO/qCUsdIU2y0U2x/UKlj2Ch2zX9wRpZj
DCm20FtqT5Zj9Cg2zzq4KMsxfBS75wN4VrZjOCh2w83sb0q2YzgodkM/eEy2
YyIoFkJveH62YyYoVsJtcL1sx+RRLJ4EuHa2Y8wotkw8XCHbMWgUe6YJ3Czb
MakUiyoFTsh2TBHFEmkOP1pqH3X5ptfl/XAqyzGVFEupHvpnSu3jLt/2BuhL
OjpHsnIjfxjLOyvbPuryTb+O+k9mO0aEYkMMgidQdyLl9njHaCnr6Jy5ypX7
EVza0TmNlct4IzyY9aOs3wsuYf2fdD+gP5HgmFa5Oc5ZoFwFp+CxOc4xrdzS
lWX/w7qf6/3K+vNC9K/hL+E58Hz4Mniv7NngJ+BG8A74Yfgx5ffR3Co8F34c
bgBvgWfDj8LfdvUcqeZGH9U7qIBvKd+3uXzf7oE70F9t382xbu6GhyPfzDZG
IZ9MdF/2KbYxNtF92vLoXoanwQ+x/X4dnZNYuYg3cz4uQf8JPFPvB/RV4Lfg
++FZcCX4dfg+eCZcDX4HfgCeDe/KoJ9FG04lOgd9iwzn6FZubuUwujrDOb2V
y1s5mHq159p0c+zqarL/hW/u5tjVVSnXZDgnuHKBK4fNPF27Vj7WkZSrMpwT
XLnAleMpJcM5SJV79Hu4OnXfY50H9X6jfbXhjxQTAJ4LV4DXwNPhGXBNeAP8
EPww3Kujcyorl/KnnJ/etG9gN8eiv5hyrfJJd3Ms7iqU3h2ds1m5mj+j/vUd
nTNbubK/gFdw/d7VPvV8aD6W++lzeG2i/3mm8n67lzJO32o941y/OeiXIY/j
+v0IL25l3Qq4Ivs+yz37eIy3WQFehb5KTd6f8EXwUvhv7p+X9Y6h7g+054lE
x/w41NVzxporfpJlb2hsiPpLdP20P+r/SZ2liY6pt7rUOYCV+zee53Md9R+G
l8MTNAYBz4VXwJP0D6X/K3glPAX+AJ4nGyN4qp4xtn0d9/O9V9FnrsQ7jmdr
Bcum6vvD+T/O/p+DJyQ6BsTv8LPw+ETHjPgNfhoel+gYDn/AC/UOSHRMjj4d
nYNbubc/j7Wt6TL43kTbnMq2dgk8OdE2tmeQa3Thu1PDx/wl+qdp7yo9j+h/
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
nMv3KD/GeNm7+pfW/R/jNn/D9V4G74bfpeyFl8JfI6+n7IGXwLuQ34lxbPUs
tp8Udoz1VeheoHyDLpll+6i/HN4DvxfjWPPZ6dYp5vwGdB9QfpIvqt6ByENk
Q8j9mwNfw7F8zbKlSY7psAe5s/w9eB5y9c5D/0W636U70HeBD6db9zPcCt6d
7m19C89n/bOtnev0MpZdoD94W5H7MorRsFJ9J8reGB/T88gLu9t3aVVtx8bP
Tfe9qRj5ypU1CL4y7JxZb2vsgHJQ4y0sewd5HeVQjOsol9at6dYpp9ZL6F6k
7EMfYtki5OboE5ETws6VNiTd50Y50xagf1b/6HxPAj0zHMvj8DXKvUL7ntbY
Rxf75sShfxJ+qrvlZmpzun0o5DuxLMm5AnLSvW/lDOgCx6V727Xhvepv8I2M
59sYCTt2hmLKKJaMYmgodoRiwCj2i2JIDOP5G0rpneo5sns6cF+U2Bc8mXIX
XLvEts4J8O3UvU32A6meQ6uFbpjyecV62V3o7pRNRqrnyGJKvE1tS8vqw3fD
SbHe5wjkS0psi54om74S71P7ug593RLXka4XPJhtDyq0TnNs2la9EvvCa5s3
wVVKHNtdc5iVkQewrIl831nnOrW90LLmaG9BV7XEsetlQ1IHTmvLuUN/gmv8
WNQ5mpWb+VLKwKhzZCo35n/8D94UdU5J5ZL8F34y6hzPyu18GeVP5Cc0/lqZ
bxM8hH3fUehj0ZzlGPYXW2Jf/BBlCFy9xLb88fCtcLUSx9qXTcLt8MUljq2v
OVud+5oltu3XNaiIfAPLGiOXso8aJd6mttUTvlXzFYWWNWfZP+ock8oteSHF
56pSiX0LdM6mc381UD6DVOcQ+LeF57w01zVH9secqynwlgYeo2wKPwjvbeAx
3XMtPIemubNZ1P+nhefINDc2G25I/ckag2jgMeVYeBL8RQOPIY9HnkB5Q/f3
Jdzr6GfA+xp4DOinHrxnKcNpexWeqWboH0L/TQPbVJRr6Tk4zb09zP5i0E+E
P2/gMdJizWdpjinVc+a9ONYLUdvyx+qehv+JOreC5rz/jbqOdFonhLyH568I
uYLGTOF/4e5wpVhfiwol9sXQNalKe86xjWL082nPeeS/NUcZ62WTOJa/4ELk
FhxTT92rhb6Wshmoxvpn0OfD6zR/qLZrTizVNgB92N9/UfsaNJTPV4mXSVad
i+C+cCO4BC7VfFWhZdkYSFe+xL4UqhMHb+R4CnR/8DzEZ/AO5Rx+yPncSZ1n
os5xrtzmTSl7o/4G6dvTAf5Ac7mUSameo+zHtt9WfP5YL5Pct8S+YFq2VrH2
S+xLFYXf01w2ZWKq5+SuR/em8tvEepnkPiX29dKydZqbpYxP9ZzyOB1riX3B
w5T16N6hTEj1HOrryj1QYt+zEr1zStwG7Vvb6F3iOtJpnZ7wcvqs5/nfGgeX
wa92sDyWskq5CUocO0JzuqUlzqGh3Bmj0dfT2D5lRqrnWO5Bfxr9hFgvGwWf
gsfDD+n9qPchZTB8v+4Pzu0w+D7kFSy7hG3VKXJdzeGM4NiGa34x1TYLk5X/
pMTrvkD9mtStof5KquccbkDXv8Rzl9dqDpp1X+7gtmoOfhPyTSXOTaI5yNqs
W4vyYKrnkEaiO0GdsbHe5t3wSZ2PWNfppf8vSvtU/8O9z/3xLuUF9S9ZdgO6
fpSMVP9DnUZXv4PflXmUvuiup3RM9T/VN1H3edTX0bJ/kH+POpek+qz7ou7D
qO+ibSp34ntR7+s0dT5A3hC1bbHacHvUOZeVa7kcpY/+n7v73tU/xJ6o+1Dq
O+kYnoN3U9ohN1P7os4Rq9yw/2i8NeqcysqlfB4+z7q/RZ0LU33wc/CvUefO
VB/8Anw86tyS6oP8DR+LOpem+tDfRm1zIFuDTrqGXJ8D7S3LhuAT+tLfUacz
vIl1DiEfjPrfKptlp6h7JOpcyuoj7Ud+hPJxjNf5EfknSmPkPVU4R9Q/GnXu
Y/UJz8C/RJ2rWH38f+E/os6NqT5SOa7VyahzdaqPWk33jvpzbO9XuDx8Kurc
m+oz/sf6J6LOJao+7J/wz1HnRlafKl75C3k/f9vAY/jjkMdS6lT2N+AW5IGU
VzRWwrKI7B0o08O2Gesm+wbK/WHbzE2iL9SE+llsr4vmEJHHs+xW9A/pnw3u
An9ex8vOt7FPo3wZ9c+pY+kELw77mDojZ1Duqedl7ZAjrPMp6y+E28Bb21h+
jtIRbk8ZRf1FcA90HYr/J9OmbORMyhj0S1g2Df2lcA66fJbNgC+Dc+FieBbc
TG2Go5oDkW0Ny25j3acomci1WTYAuQN1OsHV4RvUVri+1uX83AffRKmFXJNy
e9g2l3WRL6EMDtsGOKB+d7bxQx3vI4qcVey2RtleR7gK3FfHDreF/9MYGJwG
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
o/22qmxhu9V+4NaVrU00pDx/kf5M4vYk/T3Yl2NvU9muSW3s17C/jT1N/rjk
3wSeDQ+FH5f/Jniq1jLBleS/CZ4GJ8LV4AJ4OtwFrgFfhWfAybBX/kPgWbrW
cDP4OvwO3BsO5twO0p5q1DOfDl9Svi/0zOf5U13/VNCXIE+jl0Se5v7ZTvlz
6Z/2he9z7ZOpj37ozXTNYT/cH46CqxN/J/GPB1nYHew+rx3bFPszGg/HfizI
0tgg/xSEdUdfr/rgeVJIG0rS/yn1afVtgbwIt0PisF/D3kn/h7AnwNfhzvrf
AgeRVkXkaoilmYj9JvYuOjf1B7H9TP4nyH8AYc/q/w7s5foMhIO43oO9psdT
3keUP81rcVvIn572q+CYzaGWx1Xs8drjB3sD7JfhWPgluJ7uP/1/IP2DQRa2
k/L4qP/VlGUVEoJ9i/zJBlkap/UuVJ8TvSVSTXlhP4C9F3y8ma0h1NpB+cxN
8pqPGfmWaVybvib6VuIfJn5vwq5TngSv6Y2Inw+31p5Faouwi/ibiL8/yML+
xN7Wa3mFYc/Vuw5JgJsjJ9TXRTqoPpCT6isgHdGjkVvoIdpDS/WHRJD+NHgk
+gj98+D82+kfnt4HeifqWeW3bzOtsTlBe3idsMHY99MeXNovIcXeVeu0vgu9
MfFfgSORErTnedRnAPoa2vMCv/mEky+4RXqeos9H6nOtqsE5xF2UYvp80pvv
Nx938m23UO8Q9Ll6X4XYO2SR33wCyRfQp4rjNx9z8i33CfIz53M7xuay6pq+
45iPPvnme5Pn8zjHfPzJt98oOJfzG845pcP79HzTuwV7KtwaKYAD4W7obZFL
cAU4Db0Nkq93DexHb4UUqm+VYnUtH1XjHfM5KF+D/ya/hY752JNvvbfglV6b
E6i5gPHU9xjHfA7K1+Dr2Cc65uNQvg3/A2c45hNRvhDfgD90zGeefOWNkf9o
x3zyyRffWHi+Yz705DtvXHXb21d7YGvva+3x+y39m7r0b/Lovw+lf7MPnqv5
Bdx/39a3tU9nk2i3dW0N1Dn008jNYAv7Az0fuQXfUBwf5408gsuFUc6mvGOS
zNa5Gu2+Od9JSTZWK58bfeC8JBsL1prwAs39QwrRCznGo7ljmvOI/gL5Z5De
Pfg+3FVzVtDvSoIt7I7KhtwJtmPkS+1KkqUln2olKFuR0sNepHeM5sMSVoqy
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
tyEcf5/y5cMHQ+2ce1Ef0c3M9+wV3p//A/Avrio=
          "]]}]}, {}, {}, {}, {}}, 
     {GrayLevel[0], Opacity[0.4], LineBox[CompressedData["
1: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
SWFuldTcgXk+JpIjWeL//4/l/wGP0qVQ
       "]], LineBox[CompressedData["
1:eJwd3HXcFtXTx/HLoO38KaWgYoB0dyso3SHdAjYpKYhJl4g0SHcrqdLd3R0i
oiAqPu95/vi8vnti58yZObvX1n0/27h9lXZ3JRKJIQ8lEndoIaRVUT1NIpHq
7kRiUJJEoki5RGLa64nEdIx5LZEYi7Y5E4lc6tvRfDUTiZy2x6mfqU8t5Rn0
DXXdyicSn+lTQN3HtqfokydvIvFv/kRico1E4h+6o3Qi0V6f5Mo/cuAH/KXv
bnqT7qK36Bf6zLT/DFTQNwM7YyomEsO1VWB/BK1I/2azEh2pXIaey5NIDNDv
PL1b3aU3EonfqycSNzCgVCLRHy8WM17ZROKsPo2U79KvThFzMM5FdZW0XaDl
lWurf0n/UsZ5K1cicaaAffLxrZLx1M2gpWl9baljPvz8ooy50TTKzdhujnrm
XR8PsVWX1sGnmJojkcik7oGiicQmuhGN2Bprn958+wRNxKAxnmVzorH682sC
fVuMipRMJIrim8Jibq7f0i50FO1KK+ROJDrKT2F9Prb9P3a60kLKX9vey/5R
dt+1fYzuUz5CW5rnbD4Us+9x5Xa2BxQ0pnFn8u+y9hm0jfJPtIf2nuiO5ViG
NFX4qW0AHWjf/nQQLcC3x+QqP52lvbMxu+CCGHSiHXFAbCZpGyoej/LtkfCV
H1u0FZabmcYtRGeFnxgpJynE5R0xSa28TvtI5fX0I21t2OtAPwpbbLZWboVP
9P+CzS9xyfhf06/Qiu181kFLWtF6qoAHrIWS9m1lny2V9TXH/uiHz1HTnD6j
6/l5gWaQ/42299pvA12lXC7mg37i0IEvn9Fa1ktfWpOONudPbc+l99FU+IOf
c5QH224ld1crJBLX8CuWqb9mvstpLvPtYb7D9OtOcyovVf+r9iU0h3I39fdo
/1MszprHLm11bFexjm/RyvQm3abtPv724HdPfqWy/QDuR3d11fSrjqr4S/8z
1vEP7J6mdxxrPdVNYHuHMcfTKcbfaM1tCsR5A12PX8TgZ4yxPczcnrI9nI5V
ftva2yBWDZR3ycULttfIwyfGf9bcM+CYNXUcX6vvj/3y9bjx99Ezzknn5eEc
7uZ3ftrevjdtPyxXf8bxGsdqxF2OXlH3bZwH2KtpXrWQ1hjpcFE8nlN/gXaj
Hc31Y9qJPmodP2rfR2gl82yrfzukxzO4ZJ/z1ssFfMOH//g2gq8JvjylXNQ+
w5XvqB9G/6VJxewfOs5a7KVfG3HpSccqD5bDInSB9jfj/IhiykVRR929NAme
EudSsdaNP9caakM7VuMzOuA7/t4y95voKcY3xPwPbLPf7/Q6JrA9HpvY22X8
d2zvppuV3+b7RrpTub36HfQGXpXzeeb0SpwDlL81p9S0rBiNVleVPml+VSLe
ypXpKLpXv+xynhM5MI6NC/odj/MybWrePcSwF3qigfYCctAwzj/i3B2z5WwW
usrLa/o303Y29qVllTfE8UWbvJlIZNSvs3X6VJzLaQG6leajW2h++rmYrRWH
n7BRXH6hP2MsO08bOzUy6fex/i/QbvQ79r/i82i6yHqahCzmOJlOxPd4VXkK
rRi/Zxgtjh3EqLU4fhQxi3jb/oa2jPOx7Va0lL6lURLvK/9ujZ+W8+v0DL1B
Vzvvr0FF9p92LFSia+O3gDZkrwG2Ww+7ze1pft5yHLQSr+dsFzKvPNZDQfpy
VTlEJryEF9EZXdDBuvoIvcJH+4+xzyj6i3W1DpnlMguK82mFttv8/RuN+ddf
XTFaHGv0XYtM+r6Iotp+Uv4ZU/k8jM28xhtOf4vfF326YYu1O1Gf5LYfdm7Y
rLwNz4rrVnra3O6W9+/N6R56k939+h1Adn5fdp6aIw632fgV13AV1/EbHhOr
J/A8e4/Hed/+J+VzInun6A02f0cf+e6LQdp/598NXEd+PufDWHMvoa2EuT7J
TnH794wyP3rQB9l/CA/gsDnO1b+U+sL63aV/MnnJaV0NNcYpa/Y0WppbBuuu
BS1hLqO1/an+Jm7hgGNjP7LJ/XZz2YFt2IWdWGGclUhljPfY+Mw4Lxv/81gv
xnsKt6yPy/y4ZPsK7eb8cL/+vfXPptzJ8dkZo8W6h7Y/+d2dFnNsDLcmRiCD
OHWxT8a4duJjHzafs/25ti/wiXJvrGXzlJjtMNZJutrcVmG78o90JVYgnTHO
WpffG2Nq/H44HqfQyfhcPhux1RgfsP0+HjJmE+V32GxKH1H+UP3DdArbkzGA
P0fYvC6Xh2l/5ZZi+ofY/Yl3rK/2GGpu/4jtv7iDPGLwN72Nv5BMn6R4Sa6+
s67G4AX+dWTroPkdNf4h+qk10Q99kULsNpjTehQxdm9+9cJd/Dqg7zbbufkz
ns1c9CE5+8ox31v/r+nDyh/FeSOumeRup+OlE91FZ2mrZozZdCH/FiE1m5XM
KQ0tyq+j+v7Dzmhr8V/6nhiskq936Xr+HBXXY9hqHkfoYfSy74w4H/B9On2Z
zoxzBD0WvyPOwdPiXBHXeOIxRdxqKM/lR3U6h47Trwb7Sa2fgvrlNeZm5eRx
DUwXim1WdQvi/G/eC2k25UXqvxCbL9E4fgvUNaFlxenpOOfT5+jzaGa+w6yJ
BY6DofQf825j7CT4wFx78OFDmtdcF7KTh+4xtyzsvYoGbB1UV9jYmZXvNeZ0
dkva7mCOHVFTW37rshbtJZ57zOVxc34CU837MXH9ns5yzM3GTMzFHGTU9zlk
jjnY/78oOwYTcvKC7edxlI/L7b/fdhNzf4PdN1HJuaSIvhVpUfqz/Yvx4xe6
gV/rMd+852EYv5bHuYiNi3Etgg3KDZSr0hniMTPiwo/7zP+I+vtpUuVBYrBY
jDrbpwuqGasr7YaPUdt46SKH6tPT6jQtXSL2i5GWnbzq9sZ9IN0X1w5xnaB+
D81r/0F0IAZgv/qh9h+G89bwOWTh/wtinl/fA/JRgGZSriwfu/T/y/Ykvt6m
J8To27iWQ2tzasSHxvha/svI/1d0Bp2J6ZiNWTgn5heQi4/n45xr3u2dMxo4
ZlPYfo9vyelbynuNny/uv4z/uTH3K//Gr330M+Xa/L0p7534kjLuJeTvL+V6
6usjt/q6tA5uqX/Gmm/ouGoQ93Dmk19OC6CB9rdwW5+v2UjOVgqk17+G+qH6
zuPPNGNWV66GG/p2ZP+QvO9Rf5Dujvs1bTPwhHmsivsZdspaL2WwOa510Es+
e6OleRSM3xY6i87GzDgfm29BcS2AQiiMxXxewbcUcS5nvw/ysl9KOR+9pf1e
c/lRn+/l8ge6SF1f7X2wmc309lmt/rTt72KNx70ATc3HD+y7Rz5+sQb7m9vu
uI9Svx6d+XfO/IfxeSiGIKe1e5lfl/CzfcaZ+9dyNZYOF69X41o97nGsryqo
iq/kbq5cz0E15ffou8hqO5Xx0zve0iEtsqlbbJzvjF3bGGPoUuUl+Jztr8Up
o3V3MZ474HXrqTzKYRt/usTvMd3D1m7U41td3LRfd7lqxM9udBu2YpLyCH7/
of0xdm/Qx2kfY3+CoWwV4v9iNgrSx/nTTTxbiNPvYlhFzK7T5srV9e0e5106
QvzuobXF+u64t4h7CttDIifyswWbrbNttE5cT9Hpcaya0zRaWN1A24XFYwL7
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
+L2L51Ri8l3Ewj6jad34fiau19htS+sp94zvfGznjfWuPk+s/bifjN8Y7RMc
ozNsT8ePxhjG387quqBTvAOOdxCoLy+P6/8YTllDSfX9V91l/Xezd4XeUf5D
jDPxMZ8xW+rzofF3xjt6Me+EJ/wuPB6/Daik/U3j3mOfe/GuGLYyl/foKOuj
RDxbkJN34twmJ2Ntj0dma2scna/PA2wnE88VyiPlOmFN3IW78Qc/usTvkxyv
ineE+Fef1fQ2/QcZ456FVuRnhXieHL8hxutr38m0tLktZb8UbcDnt7CJ7UXa
XrNvJ+WHnaceQe54z6EuD82Jh9TliucF9EE8gGXW9mti09W825p/F9ounmeI
zSLMwwLMx7X4ZgxfIq9854t7NVziyw/GXR7fysTz7Xg3z0YWfk5k+xO/Jc3V
9aYtaB/6mtyklsfu9MV4Nm7998ZKudykfXH4zPclEVdUYauzObYX9y70qj6/
4hKu4DJOiP23cR9ujFE0Bx1NGxrjG5otvleiWemzbH7tGEhO69Gs7NanKeKe
XTx3xXN9PG/7ORTQ9gItSOvxq6hz0izH9vG490BVbdVQHfnZqhLPPeI9Eh5k
s29842a/PvRdfqY0n/+J0ZPYhwtxzRfPQ3GHf1OU/6MZzbVhnA/Rz7655exT
mof2k7ulxm7O3kmxO4GG8d4Jy+IaxDr6nzEb0mT26RrXu/FsLY5/MckgFiNo
LnrGvlPi3sD6HK6uuX7D4hu8ePYth9mVu2hvqL1ZvC9VN0PbYH2GYHY8R1K+
Gtf/cQ6ObxrjWRMfk1kj9bSfjudy8Q7Wuk6LjtZ0hzgmzHk+zhpjHr3LcfSG
c8mbSOv8VUXf/nE/rjyAVlVOF9/PiMm2uD5Qflde7hhnFP+2x/sv7Ixn7eoP
y9UhbFP+SrmR7a9s12PvS/0fYGeRGA2TzyV0CF1Mh9J98SwZP9rvM7lcEedU
+/ezXS7u4+Iala3lcU0Q76L4N9C811g7g+haessxlV0+HhenL833VdvZcM18
s9Iz5lAnnjOhoDwtN25hupQWosvoT+w3E8vmeDjuJeLbFJx0vDS3Xws003eb
vtuxGVuxBWPtm0y8rlkz1/Ebkiqf0XYWJ3Eap9CFL9XjHQaeifdN8tGe3035
2gSV4psdPheIdw3IF9+MqM9LR5l7kXg/G8cHnWTfpuw0Q7p4rmmN3YsE7sZd
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
ARr6GWiR6v8fl////5L4P3qVzpA=
       "]]}}], GraphicsComplexBox[CompressedData["
1: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
Y5dUPKXjqdH2leqW27pm+JwnVf2Lt5WHIvvUiDcSKyOBDLnPzj+njrfHs+R9
GafqbVesjbt2qXuuGT7S7T+tWhZ0+rSrd6f6Nf/5V73u02rk2D73Ng8elesm
dG944xDnUVW53flHwqFM+Z0jS5fdFnflqEs9D82PeTLUgBnf3mCz5agpX0x/
IBzKl3FnfPAfmR/sTo5LfvivT2wIJPJlXw7wv7vE7d8rv5N60HY+kEiTdVLb
sbl23JUp6wx+G777mpc7nvZ4z6gfaw877Aoa+Y79AkZuCL9PHbbG1nxE8p9e
y6jYz+0vUIHGaVXjrrPCF9VJOv1VzFOozgbev+KInlGPp9VZFkiUqD+PZTYJ
h3LUmN4fv+IMF4t9Yo3f0H8FLH1Csl+t2ce9UeUN+f12m+2UGtf199SE46B6
akuvHI83rt7u8eONydGTanby5T9CkWz1YNKpXyOBbBmXYLv8XrMje9R3t0/8
wBk+rZrbLr8ZjB1TJcMaPue3Z6l9v7Y57nPG1bPbdt0T9f3jL/T+aJw9nity
neehXwKYOLHYGzpPFgwvKvatjtPL++m4scyHzqsFw5OCieNLfErLZ7A1noS9
CUafgLE3wcSrwMQXwNb8M/pjgImXguFfwPDLYOpNZX3p/hiyf7T8k/fT8TNj
f/7//B70nXV+qMtG/8HfnHi+5rA0zw9KbcwOxzxGv5GPCS/0TmrdQkfU6Bvy
YZETVvsBfQtGL4GRk7IftZ6S/aflJhi9BU+EPuU4chVeADku9p7Wc/j1yH14
cas/hX8Lpt5D1qPm12Q9Wvx5q/9JfgF2DfqP4+h7xvPU6mnDEo4rMh/kt+En
kNeH3c68Y0fDH6BP4PGRN/BD5a1TOxQ5Nqn+H/59b9x1Sg0Zk58TCRxUaw+P
PO8KxkXO3N7k1h2BRLbIlTcnrJ4e8+TJ/98aGbNHfeeV7/vnv2we/EtVazTn
C3v8tKrX8KEvvO7joseQU8hB5BJyU/wb7VeKPNF8ARh+QsZb1xe///ue9n57
garu2FLBZjPyeMCl52+Mu8z51nxr8ljA+M1geCUwfq3ID53XIvpM+9Xi/2me
CYzfK7+v+SvZz9rvFvmq+RQwfrHsL82viH9nicPvOdFziDNs9Bn5SmDqZcTf
0vmLYKv/TP2e/J6O74j/qNerrG+d7w+mvk7mQ+cviv+o6+XA1C+B4cPhQ5YM
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
ETjp8eaoWSufqBHNLRb7+ZMXAjFHx3LJ93r/g9+rRnNLBde5nLLTk2beh/oI
MPsKTBwVTB0ReJpq2tG7uUgw+R5g8onAx5rN3eybbzB5eWB4Phl/bZeDiSuB
8VfA2PNg+EAw/dbB1DODu3Vcn+pJM5j8PTD59vg7yGfkivV7G8hrrifPENx5
Rrs+ExLLzHrXefNg+tLI+Og6GxmPhs63xie2Co4cWP9EkcPgn23FL60NGExe
o8zPlhe8cZfB1NWD6YMDpq4H7HrzuwrjE4dM/n2HgVmRgMHre48tDkUMJo8S
nFv32Bxn2GDq+OX9dd8dqU/X9Tri7w+udk/cZTD1W+Bven84M+EwGP8fnD0w
Msw+0OAHX2p8xtHR4Inpox4I9jC46Ju/k8N1z5v7a/8QfDTJ1s1dZvYX/iI4
9OScj2OpRn60Xdv7Ce9mgz9dlrrGN9/gzBa3Xc1YaTD5zGDymcEtvKG7gz0M
Dp7OGmQfaPCV79q94Gx8WfCsmuU1wnUNjldO+TySZPCTX/72l6umwYva3bre
k2bkWZcNf70bSzV46sonSzJWGnyu5aePeDcb3LMw8z7/JOPfX/TNyigfa3Cb
fjd77QMNnpn5YiiQUi7+9tQXPikuH1uqbv/+pZMxz37Jw6BupOZbVeMeb7b4
v+RloK9qzlz1SyDF8DXk7xG3p58nfCz9VIjjkf+GPrN+nwI+A76J9UX/Lng2
+nfBS9O/Cx5trmryqrssR9WpsKhR8DbDl/E8Yl/reib4RvK/4RPh+eEL4fGR
C4NaH62cHD0l+3RjcMxRnzNT9k2tvDt/iQTOqM5V/mwTjJ0RvY1dRL/U6ZXe
bNzdu0jq65Dr9Dsjv5x+Z+RL02/gudwKqb75Rr/1XffmLnvc6MddyWU1unqN
fpzZav0D0VyjH+l3Rv3g47c2z3HVzFej+0e2+rIL1VevD/zAPjBXOatOahyc
VqT2/fjt8tCYfJVx/Ku+7t8LVIuHbp4+uKijWhdpVRJInFDBOq6Ktg0Fqn3t
9PGJXqZ/GfIHPpU8cOaVef+46eU1O30rVN0TLXeEWp1U66K7dvuy81WvokVD
nWcL1OAPJi9Mjpp6ybo/7E7u6jX1ktT1sk7Jx4VXIk+Z68lL5nryQrge3pHr
nUd7nRltX6oW76gTiSSdVB1WLtsQWPaP3syuneXaXyB8F/2L2H/Uh/E8yMtA
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
X+8/tfia5I5GvtLv21HvjR8j7QvV7zWvdPZPylFv+auNsM8tVgPubb8t6tuj
5qa/Oci7+bSqPdy50Bk+pio8cssj4bpZamvmCxdcNePqpS9XVbaNy1Fjvv7u
+1hqrsgFxof+IvDg1Y+/Ncg+1+D1dzmujy66KHWIR+Y92dW7+V/eevusCjaT
j9Wtz+pf3X4zXvDWjNct9pN3xlea8aJPJNdT78v11PNyPXWSXH9xWe/2/mfM
/JE3CK7Xu+Sm+CiTjwbvDRa7Ss8X/gv1Pwf7HLro6JirTt3uWBVYZuwz+qSD
qSuV+Ivu8w6mzlTsY933Xew5rf/B6H8w/cDBh1bc6/Lb/48809/DADersi0p
6jP7kfwlMN/TdK6oNCUx/Yz6tdrWXZ7apaqg2gNr4i6znvoP/P7u5kGzngb3
q74ykmTWU+3qz/X0bjbr6dl/y/jKzkrfeDD9TeGjBhXG23o3m/5o4O+qOv4I
tTqjqnpqFpevL5X8QdYB3zOAn+d7F+Tl8b0L1gl2GXl62GGsA/QD/Tvha+nn
jL0FJq6AviSOgL7kudCXxE3Ql+g5eAHsOL53RHyjRfnpeuG6RVKHQ7yHOh30
FzwmmPxH6uPJfyRuQP4j/B38K3l1Uoej68XIOwDzPNSP8vtg8vJO3dntjmju
ObED72t7vG6wxyWJG8MPUlfw6XM3rwmkFMp+BFPPQ78VePONZ3bcEs1NCK8O
xo7C3wMTX+H7ceRb8P043pM8GngR8mbwx6hDop8EdUp834DrwNwXfcn35+gf
wPfnqHsir4c4B/KIuie+N2f9Hjr1ddSZgcmL6PZurI99oPn+Nuuf/i7Ug8Bb
g/Ffrd8nwN+nfprv3ZGnyDyiX6hfxF5Lm9p/iyfNYPJNWH/W44/dsaBSNNcc
B0u+guaBhL/QPJb4/5qHAsNrib+teSkw+1vyGfT+BlMfCCZ/HvxExRd6Oxsb
+Xz2l/pbPWlGPs988Xwj/yQjnztdt31aqJWRzxeWfGuL5l6Vfph8D496twPr
vr5UPjYh6wJMnSTysnar84/Mjo2TOCB5N2DWD/WbrB8w62fa8I6HHR0NLimZ
XCvY46r4NfQTyOh0fmJiuvn+LnkjYPw+6nhS32o4N5Jk4hrknYDJn8ZvJa9m
yprRPZ1nL0odNvJ/eqPpS2y2XSLnyOMCUxeNfvh95L4f3H7zfSfytsDUKaM/
+G41cpM4EBj/hfpa4mRg5Dd1EfC91HuxP8HwBYHE5DcTRy6K38F3k8D4jfgV
5A2DeQ78Br6zBMbPDLy4Jxr1mfs3npi3yBk296OvOtdj15J3jp8Pn0wfAOqf
ydMDEw8ddfzaA66aZcK3SD869ov+/rbszw8bVt4QmC2Y73GDy1undihymP3P
97nBvu+f/7J50GC+1y3+zJj8nEjAYL7fDa7X8KEvvG6DiR+D6ecPJn4Mpr8/
mO99i32o893A1AcIf6rzL8F8D1z40/XL/vA5DaZeQPxd/b1KMN8LF/701u6T
IgGDiU+A+R6gvK/mU8BPv1HitcevSj46+QHwAANK75wfulwkvCqY9X4onL/X
tf+iyCfqyZFPYPL0ppzfVuToaPx28mDxw8nLx68mL5b8ZeK01D/Qr4n6B3g8
eBv0IDwNerD7ezPmRraa+gPqEah/gHe7a+bKqG/+WZGn6Gvy8em/QN79nJ/q
7/QNPiuYuAjyne+vcD/kN/KYfm/IW3hh4ua20i8f9U8y/VEGeX5q5y67Irjy
zpcrRnOvSF0r/YKI79GXB/t1QqTNBwmH8Zf47p7wKfTJ1zh14Wf3NQj/adb3
2B72Pm6D+Q4HGN4evL9ppyMxj+Gn+9zZZHfCYTDf7QDD8wu/oOt9wNRvgeH1
wcQFZP/r+h/x53Q9l8iL+29v7Z/0f+pzdb2+vL/+HoDwS57Z/Z2NDabeWJ7X
Um/8wIMT305MN/t9zzx3M/8kg48c6pXu6GjspTHP1ZwZamXwhI8bPu0uM/v9
/vKM66K5Bjd/6PJS33yz3w8tXPlGYrrB1OeBqZc+2G12s4Hu7+T7IuSz1hh2
Uyvv5kuCV56JXshYeUns+xrz6o+0x833k2tU7/6Yf9L/kY/arpd4wf/j6tzj
W77+P57NdGZCZx2WTumMBaNuYawcE8MYC3NnwYaxuK2u2cxdmLkvbmWIa13j
Vte4WxG3usa1ekuV3jS9aCn9bb9Hnud8H/7yeMmnbfLJ55zzvrxer7f/uSce
Z14VfdIel3ZP9JheynMfTPxLnEJehv4PngV8R3RO+X06xFj0PtlHLh3ZerR2
kPKPB295/nkH67w0MeCLCmcsQ3JkPkwdFPzoemikq436fMT5YOa+gskjZD/E
7+MEJs8BM1dY7t/+vAOM7xOYvAjMHGIweQqY+r18f/48Stb//PV8cKt6Ly6b
4tTnRW8PfnrvQhPrPPV8498AXj1r1VpHuHq+i8okJenaKwxfG7z14N5vjIUK
P49rHuGLVM93z4Ezoi1RCkfNKXtP11493wGB3ULsPRTu1vih0Viozrs9R6rP
cgUUy+f55O59D3TuFzKeoz/H84YennwLzOvwp4mf0ANR/+/bsf677jSFmU91
IezOGrNR8clZd8RZ+JTBJ4cfxpwb9JzMW+bnrv3QoZIztFCuO+pHlt9urvDE
Kr3Hwjhdf6/hqvimguHt4PbJouiLtZv0zjixefit25aof9f5xcX5hqAUeW7U
iij9srN9vNANrf1G4yCle2s3YVB1e49C2ff6/UnKTYO9QNZTwNR52e/ci/fv
cRRliIMTfLscRZmSN855jq6f/Z2+J5jX8TuGN875jy6f/Z++KJjX4RnAGyde
gMdGXk3fFMzr+IPhi0t8wXnN+QLfAczr6KqpaxI/cM6i7+TcRN/JOYjOBz0S
+17IO9svBnp3SL0gz8/vtuxftNUV3xA+InqtN2fXKufeli/fH/o44gv0aNQl
HEkp032R2WL2kHeXW7WxIjh/3mhjYZLI/WdhnMv2QIzvGPaVvccjsfu9P8tr
pnjF1Q2xFbzRT6R+DJ+UjaMXPXY6TokR7Y+WDm6fKFpU7PRFsPuWOO8w37dE
eUX3w49bOkMTxSeFxTtcAY9FmaGfJZviUsVkk2OydlC6SO5Zb+4exwZxcnW6
wxcZL/VNT8ffum4K8cn1B39/ctKxN/sZL4hKX9gWaAclidpXks/6dPdkn4B1
cfnxuQbO0Cei2tzK9ct6z4o6gV3GGgsTxaRqQf3cljuyLzn2xMVrtogkkXTM
Xskb/VjUHllunD7sidRh09f4dsGBdF37HDnPBEy/slSsfZC2+guJe8/LPm0K
eSHPH/qVYOJqcOteQx4YuuZKnLPy3cm+3rmyHlFjoq+X0eqT+Td8JfJrzmHy
Z/hKLXbVuLLLsUvqpbm/LQ0NG9gr+qS/ZYuxOU907ZW/ORhdzdIK/3xh7Zgr
3rm8Ic+qvSAOR4tv7D2SxKgzPb7UaO7JvgM6wVEDp2UZgp6IsrNrfuZMUPpx
5gvzfjrtL916veuw0JYemWSJUvkd/rL0EdCzfz7gcYXW1rPiypx3G7jTEkWp
ss87ew13ZF+H9zWzaaeblqjH8n3QJ2qW0MI8XH9E/j36uq7/ys4Ls2R/mv2a
Pgevwwfm9b8Ozkm1e9zy7+4/5D6s9d6V9wNdBO+DOg6fh+flYPnP33bXfiHr
80cXH1jiilH1eur36C67X3v8UDfnuawD4mdIvSjldq+XxZMVph7MvOTxm/cl
Groq/1HyFerF+Bnio4X+jXwsveqZ74yFCuMHB4+M+bU8z/B9mUfL/sg8WvZH
6ursj9TR2R+ZJxifm1zaOzZbzl9lv7z46KzDbZsmJmT+0toZGi++yDh3z7Q6
Q2Rv/O0r66VMed7C79x39MlFy5BMUXd+mWO2Bqo/HT2ujsUXqeLt8kWjd1qi
FL4U8IbBfFrhUVMPZydH/48/iN83VOYff08qam2NVvmGfw4jGF4NmD4DmDnf
Mn94s06hVXte1Rv8PDtZf/HrFGR91q+DBxPHgLvrji+2ahWmrwFmrjh4alyw
UaO5KzG8Plnf8dc/ZT3Yr7uX8bE/bpL5jd/fFEw9Uf49f71M1pP8/rBgeITg
9aO+zi+erPI78m/wEU3lE5YohfEvBXf+SNdPH6b69egfwEO3Z+jtPRQu8+lm
r669wszTBhNPgiv2PLbIFaDi5cPXxncyFqrXmY8Nxt8cjF+ZfF78/WWZj1SZ
u8IRrvgABzdcu69rr/BoZ78ftYMUrlDrw6r2HgpTj5D5ur9eIZ+PPvUuGoJU
fI7fK/4yR+ueqm/voeafgvEDGzzvabyhq8JBsX9N8/X2yf1t04I2LczTn0tc
8M36VY6Jz+U5nRL+7QB9Vp7UJfE8Uf/C/4p+I/xt4t8S033bbBGq/wjmdfwi
qbfYZ9QarA9T/vdg+rPNk3p+4K6tcHr1ov22BjliYMmYq5aoNLGp3h/NrR1z
ZFzy6fjD+cUiT/avGp+9/KS4+IX0t7vz5ezNNt8LyWsH43u4KeeLdTaf6r/R
z6APCebz4W+Pv8moP2sdtOiVvz6YfhL1SvpB9Lt5v2DijudtLU3Nxpeyrk+/
hfwCvSX5BZj8Av8o8n3mDwRMmTzfF5km3tp/ZYqvd468H+ih6Qfgp0kdHszr
+GvyOph6PPsN9Xg+B/V4+g/Eo6xX6u1gdHT49zM/ZfDsg7/7dHmyDwDm+6i9
9EALs1F9H2A5B9dfT7ry/4ncGOlHBqYfNeb02V67PKMkjyYiO3mAsVD5YYPp
DwWb3n/Pm6f8Uhr2uvHRMP1VkXjurYcWfbLE6DlvXZ93x6dTfhBr9vf60emI
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
G94W/G/OK/je5PecU1cbbdpkiyiSfR3iuZkXLT2P2s6JOUuWH3QFJImdxiM+
h+uOnAM6z7R2lS8ySbRsfa+P+fRjYSxOFPYeT2Qc9/HI5adu2yLE/x8rgfGy
vp/yVrOa1ktqHij3j3mg3D94bNwneBX488LH4f4QT5S6efGcyfw/8xz8vCsw
Oi4wOnJZL/brtMDoxsHosOTP+3Xi4H05zY5b9P8zT9A/f1vWV/3zscDH8rcX
Jhv+Zz6g3z8DDF8OPLpgvn6lZ6GcN4dfIOcdvJRrbb552q1xVzG41fvDzSXi
RY0yoyc0sR8RlgXRNbzRCfK+/fzfNrwsS867i/++/DVTSI70uWVeiZxf5cfo
+Jhntab7jPe80RmiwZ4vh+pHZkt9xc/tCs5YUn3COHp5yDB9rLD+dmO/KyBZ
OGMrD3I6Hshzruyyq92s87xSR3Hmq6BCXft0GQ/w/8TvwX9sy7d7TokLV0p0
svdIFIWh905qvbfEp59urOKN9oq9ot4MfVii7HsOzYz41J2WKh7cfHTKFpEu
Du9cfqKNdaMI+aSh1xIVL/M5W8yuttZ5GXIfX33YOlZb3SfzST4n65V5TPze
SZXPbHVM9In4qh3X5pgmyX2NeULguVurN7MvyxCtfry93hWTKSbc7NXVXCJT
7jvwAMG5M4MfG/ZliHW9e/U33skU8dW0tcp6L0jf475Zf/ZxW+7JfZM5vvgg
sz8yL+fz8PrHHBMfibuh+g7GO8/FAetY8zrXRVHvQq9e1nlJ4rMFCyyzfBfl
Om+nOzHW7rkn/vz4RS132r/rsnrHIpvvnni8+csRxsIUuY+nWFcV6do/EZ9/
OTTUG50s9wXqYcyzmVGh/m/O0Ksib8yP+11tksXT0ftP+iLjhOniW7O1Gx8J
Z2rlt4JLp4ht1Tb1MpdIE6W2pK/yBKaJg9WjJ/ue54iYqhOb2p9liDJRf8z2
Pc8U4+K/Oec1xIgDz5sMMZ9OFJsvbavV2H5b7sPsY5yj7Fv0jXcujBqpv/Lv
uRa/Zr0rJVMMG1O37BzfTvFsXSm9Ny9e3nfTmAU5up+zxPMXtXY77meKTR8M
aG0drura8NXQaRTMOHjDtFrlP/dH3t78hkbxC3ov+UXX2qr4BQOtv+0yWlU/
TKc/9p3XoPgFsbc0z2w+VR+F/wvm3AVLf3P2D389BIweHXylRYXhWq/av/CP
B+NnCMbPEowfHrjRippWj6lY9gHhK9HXg49Enw6fIHjs8I3oNw38bESkw/U/
fB2/P57sH/nrG9TNpjwo4dO1fyrnS8BHYr9kHwPjl83v23Tn4t1Ar5ovceuv
z3+f5VN8gbUFcQO8BlXP7r45tOQsn+ILlOk+MErvVHwB/K1kf8DvXwXOjlg9
SutVf39NyMg7Brv6Pjq6RSuzUX0f5BeyfxOa8L7Toe4P8zvA6JvZ715EZUz2
3c2R9ZmS2/sdtqQWyP52pOHUdI+pUNZTeR48VVdm2T0xImjKpG2e2ERxO6PL
Ma33tpxjvK76sGn6sCThrnuyk3XeY8lPqGH7oao7LV32p+mHUt963Y99d93T
Qc5Q5b+Orw4YPRH+5nx/xIULmsze7pio1h91VuL1JZN9b3rz8kTtQWucDte/
59y1cRZ9mKonUc+W6/NQbBmnQ9UfQs58/5fDpbDkyVI/CQnusN6l/KDh9cv+
Xnr5dLtH4RrPKxY7XKpege+I3D/8PH9wzPX5Lq1XYfQDYOqXYHj/YOpXsp7h
50vL59fPpwdr+h3VeA0qnsEPEIweRvaf/HoQcN/95msGu9o/KpxM66l3/o8/
st9/CXxmmOukyfw//sf+/RUMfx//Yfpt8Bq+zRyTUTxZ+Q0vWPl7oDstT+YZ
2xOq9tGPLJR+v/SfAyvPC29q3ybCl//m8N1V9486u/w8fp2w7Jf5fetkfcnf
t5b1MX9fBAwvA4yPnayX+fvcYPomYHgcYOrtcr/w98XB1NvlfuHnfch6nr+e
DkaHAH51tfd8j0mdHwfvPwpyWxTe/nvtZ8XF/9P/9fvjyvPOz0cBU/8Fvx6/
n3rY61ujVeH9U/6ub9Wq5wW/Y7k+XzsfQpq8qGr3KIyeC4y/q4zHp5cb5tOp
9Wydv8qXbCgWP6805OueZAjzoJQUQ26mKKXZ3qy99W+xpeyH/6Y5ip/I+6Hf
gL9yy+y/azlPZor2C3VvaPpnyT5A7o/5bYxNXwpn3I7m9mVpoqd3cE9jrxyZ
t+FvnOR9NHK4frfYs2PJTk9ggszjuL/Mka++p9U3xqbPxdywzIRynUeIoJn7
ywaXjhejJm9NNeRmiP0BB5vYn2WKKT8GtZ/tOybiN1xp6E5LEN+MK93La7gp
vigaVTK4vVfmwUu/K++xRKWKxf+NywxKlXE9eVj1qbWO2vZkiU8XPWnSOOiq
aNPgRJCmZbL4K3PkJOu8OOH4Y0CKafUjodn06w/mEimiKP7Ng44iVW9Gdw02
nr30ttegnifm/oLRVYEv7977vLhY1Ztfn6cGb0V+/+jB/RifRjD1Gnn9a/O1
eq5akaFzK0x/bG9t0zNd+wzxw7XUouLj2ZKPwPMl+yV+XQA4IWv7Zke4Wi/o
vWU++Mug6yazwszTAuO/BMbnFExfGkyfF0z/Yc+K6FB37XSx6dGRa6ZjPjGm
ypzrlqgn4vCIaU90c3LF08qdGztDU8XtNidKu2sXilu22l3Wu1R/+mMRGDxM
f03WVeavWjLA6XgoPpr+1GuKeyT5iLJO82T0AGPTTDH6P9pnxX/PgSXv1nEO
yBCzenao7N6WKb4YvL/ysKhY8eenDedrqyeLzae/GOgMjRMpk270M09/JOYs
7N/Neskrvrw1tr4z4YloKdYX6Oaki1V1KpbQtMwUMaMP/WwsTBX7Zt60u9o8
E60iplyyRaSInv2+6aIf+Urc/iDqN+3GTPF4+YrW1o7/7suGEXmtrYdEl+KE
vtZ5CTLfDNy9tJm9h+rf0r848x9NODBLmHfu7Wyervqz+LdOaDP7UBvrFlEv
dpHLFRMvGkwIP+k1uCXPz7ai2qeN7XdF7ze7LvNFpsi8GN7fxPOFlVtbTwt9
t/aLtIMSRa1W07p5DR4xY3vaD+bTXpn3xpWY18gZ+ljmuc361A3QTEkXyzrd
Ha0fmSZCDj44bZmdI3TnUt8Ibv9IpDZ4GOmY+EJs3Li87hTtErFw0ldlg9vH
y7rY4GOlRvnuFsnnE79A4kPmIbQa3u5nY9PH4sRbvrLuC6p/hz8nP4//Af00
fKnmXXmwuLH9knhyM+WhJSpJNPgqd4HZeF+0qTN7tyvgkTBdDU8zxSWLtTNq
TtcOUv0x9KT0O9DrgfG3lOeBvz8Npt8Jbtb5mLBq1fpBH0e/BP9LXkeHBKa/
R90av0owfDruB/wEMH7NYOqzYPx8qbfiN0m9ju+H+lrzTe/+6ol9JY6/3LLO
E/tIdKmY+CI5r1DqVNB5oDtB/0FeRl+IPAx9B7we+g9yP/LrbHi/6KBk/OOf
x8zrDXa8E+A15ErdFf0J5vngr8R8IvoAzCdCRwePlb7A6z7z7L+v83nQWcj4
gXnpfszvA8Mnl/Go/++D0S3IeON286pOR66cR4QunX4JegD6JfR96JfQ56Z/
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
w4eHtw+P0h4ScydPp/jqd6sPyXcFxIqIZf3OOIqSRJvpGeGaKQ/E5UzNUl/v
R6L3qEMnHRO9Qt9m3U/GQ08kv33Gf2FCxUzRLrP9psb2U+KftPl9rB0TxcIb
W1eYT98SVY316ri3ecWrSpWemkISxW+RV1/pSj8W+872/st3N1Xcyo6ItQxJ
FyOMFSZfsmwQlVoe85lWx8t4pPXm4dscH/mkXzLzpPBHRg+EHzL66d/rb2ji
HPBI7Fv7cp6rxguJ+xbXbm6u9kLuByHvBufp5qj94mLHY0s9CxVePrt4n62L
2j+e1rxa0tstVxQc3tttvUvpHba3M+/RaC6I8j3e+9vXO0mcmrpvjbHwrhi2
c88I46EUsTzro9HGpsniXMmuLe0Vn4jDPRd3NScp/QY+R/y+d04ucy/xHBYD
t7Vs5N6WIBbufD7bd1jpRZamhPU+ajsranz2YJo+K1EcMP2d4wi/I6ZNn9TV
2jFFvo/7d6vUcG97LP8uceDkW7s9v2qPyN9/41dNrq5Wlvh/+53F/8YFfVxj
9Fnq+Z94p+56Vw31On0mXn/a/Grtsl63/LsDi4b3daepz5+63XrV1kB9fvoi
fB6+nzKtrsTpar2Q/cwhP1Y9Zjmn9iP0T2D8b/h+6CODqYPiG8V6wSeK9UIf
iPVC34f1Ql2Q9dJ//nd5up8zxV3z2BRDoywxuKHFaO+RKhq8VzxUu7FA5v/M
T6ZuPWXi1G22PYXSbwm/fea3pWycqLcvU9ieWsVtWv1MhM9YGeTNSxMfvbz5
0JDrEwUtjYNn+a7I9Zr6clOhLUKt1611KlT1jlXrtf/9nqdtDdR6nZt0tEpr
q1qvDb4d2N0brdar6daYTvaKar0GzDyQbbih1uu0SokDS2jUeiVunpL4RTfz
9AyxfPTii27LBRnXNVl2ebs+7J5wNyzc7YpJkXE4cR76KPzPovI0qYauyp+0
0so+CR7TDenTRp6NjyK6MPqJ/D9+dMShPHfkYQNKNc0qnqzmJ4Lxe9N9PGKN
q0222HOt49u/ak9Kf6l/2nzWXqO5Jf2ldNd6nnO4EuT3iv6B/uDA6m3Oui2X
Zd8lZJR+q955X/oyxaR0LzAEeWUfBv4/70Pybv39r+/S3oi1RKWL/e07CmtH
NZ8AjK8K/Uh+3/y10aO11XPkfQLPaFB0+IJln8xTyv7c2tDYfk3qVPBt4j7B
l8JnEt9JzlXZb1732yqP6X/4PP7rwR1uOEt5o1U9Ez+HuD/+nvuR+4CcL8Z+
g55Qns+jvZsdH6l6AHF546D7mnWuqzJuX/fLgLZeg5ovRX+evALfKeaVoUd7
XY8Kj5n+YWDizvOmuGdS/4FeFP9rvu/8mV9M62y+IvZEfd/B7lF+2WD8r3ke
fqq6/u1h+geyLo1fNhj/a56XJy2CNntMXukvgk8WGJ4WzxM+OvhuUdcGow8r
XzR6pyWqWPph4ys25rPTN2o7HbIPiH82mDwVvQ96O+omFeoMeL+19bz0D3+W
YzB5DWp+MfeFehWfA18aeFWv841b9xrywNBVYfrJLXdd/b6EJkrOW0PHAv94
zF9ij9Gq5oXHPz1TYPM9kH1sdCz8XeqZcp63v97wse/Nkm5Lkfy+y9XdMF/r
TRK7Fp4r1dp6RRwb1baeOy1Jfr/4HpzZ+Li91/BA8oL4PuGLLZ96oJ29h1fy
wPj+0KV0+s8uIShdxI6rvdEVkCm/n+hbbx512f7Nz3o8y8zTrRMDP9xkts6L
l99v9Lg6Fl+k0gPi/4jPFv0G6mdF4sRBWwOfnPcHP+T7dTVv/Ko9KvdB/KfB
zONi/y4Rs+CFw3VDjKn5fIVP55X+ymB8V9jHqeuxr+IjCKa+yL5GvYp9kHUP
Zg7JD43j+uvD8qWvOhifEfrs+JDwHL/+XDMfi/2z9+yBWf2M0TJPh4cOpp58
/1kPvbVjsZwTSD0me+NvX1kvqbydvieY/vCEv1t/5EzIl/pY+oPoY+kHoo/F
X576Mv1A9K34I8v+1GcP25mnq3wRfx30rvhPo8ehfozeCv47eqN5w2+vdoQr
/x0wes/X9Xzsz2BRJqaa0+GT/Qv6feh9tn1V4bgp7qU87+CfUuc5dqLv296x
ql+H3w4Yvz54tfBNqfNRd+Lv0x+DR1G9U8dUnTtP8hsub/9tmSsmT/J1k8tu
zSoWhVKHcdjj3G1rkC99w+g38vwyv4P1hx8V8waIW1c4mrTI0Z2T3zO6BjDz
BuA3Na3r8Lpsd+Q5iI4BjG6VOBjdLs8NugUw/Gd4A+h4OZfhA4DZn3NWvjvZ
1ztX+vOAbRdSt7pinoh2F9Z1N/bKlbxe+lXo7Xgf6O3ou1C35e/y+zkf2K/G
91jzbrA7Qa5vfGiZByLXU97gm26L0rPVT7vT6bZJYeaDsN5+uP35br1T6d3e
+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
Xbpl/A/OUPX8wpvi+WW+34jOJcdrv8oWAWuLp3c2XxZFU7864IpJEiPrzCw1
LOq+6HknZba2+iMx4quZmz2BXrGn3uze5ulPxCe5Z9tbL6XJc5I5evW/Dlrn
iskS35Xv9mmuTsV7b6zrbdJMUZ8XHT6fFx4Vn5c5g/w8cwX5eXg0/Dx6Ln5+
0/SYEfpv1f0njgVfrmNuZh+v4lN0/OC/am08Z2vw7/meOvgN7818Oe+Y+//N
koiXZqO6X+9FtfjHF6nu14k3E0sGl1b3a9zuT7a4YtT9kvmG32eU5wl+Ov6P
1guP53kW5kgdBTj13SbXLEPSxOXnUwbpFyj8yaou+22Lc4Rn3u/DjIWPxMEt
pVuapxfKujvzgtDjpzSp+Co5ukAceHrW4TEpDH9660dbdlmGqPOk8Y5+1eb4
1Hl/uN33V7wGdb7X2JT4QU2nOs/Pv9GobmO7Or8n7xp31WNS5/VKZ9/DrgDF
980PePWndpA6j9F7g9H3yvpA/xll3LXV/rS8TLexvrvqPG1zsHqcbo46P/E/
Aq8td9ZpSX0leZHNuuevc7XJEl8O7NP5qE35U84t1zDL4VJ+lL83vh/pi1T+
k6xD8hb8LmdM6f48+eZziT97OGOL7dpzsWpc8nD9lUxRcO3oOtdgxVd/cadk
OeeAV6Jtyvy3ymqmiP9vM4fES77vsewxSx1FLyUu57yam5yn+sPMu+T8hK8m
P68/Pgfzd+GZRs0pe0/X/qVcT2BeDwjsFmLvoV4H4+P9/e4aI329X8rnvdkv
IatcNXLE7cr3Bv1qtIqI0i872yvGS7/onT3/amLdkS/5zfjX8/nwn2d9Mm+D
/lalP1cO1mf5JL8HnBbTYr+jKE2c6fPWAs9ThYcdbtDCmqH0oMxrQGcKhldY
lH34ie7nXHF/SMk2t02K73f3vdlDnaGK7wdPGr4f/er7XfIqaDRJYsp7A8fM
8p0VM3ZXi3EUJcr+NHXTOoMPaGZF3JFxPv1o8vKLA1ZX845NEs36Dx5qPPRY
9p/Te97506fLENMCE2JsDVReQX959bAxmx19Fb/3t4UDPrcvy5T9pUfXQyNd
bXIl7wdMHoW+AIy+wFB27jfWS09Eq0d1Buq/zRV7Ouz6zvxjpph2dP0ST70s
yT88Nm9yA+s8xT8Esz9VCOs83bNQ4Z/SdyTo5hSKA2kLWtgrpok9X7ac53mq
+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
DBxe+eCDSUHzkCvXT2/nrKV5R/DegDFPDQy9Q2D4QvN5LOv8NjD8iIDBmwPG
fDefR31qE6Iz0Dzht4y/+6jFND+4uPLJMKWcMPRRgeEXAgz+GjDyNz7vNeiP
2kYVYeP4BU31OsJvn6/5IjHSPB/0SYGh38b59VY9Uj4fG1TwSWIk3P7v2pkW
C+FubSSXVVLi8yvl94fK1YRjJn1yk+oJg0cM3PHsP8TMIK7r7HqmdpDBppTX
/1wqbpktX6he+dhPUFUT0fwadMSBa0+p4bVVID4ddMSBC2tvL9cIxJeDjjiw
Y6+tLc0yis/gbw4cO+rbIvFcis+gjwIM/xzg5LELQzXLKT6D/xLw72fq+Jii
6ffBnx747Ox5jcwywv1uZduYr/1LD6RXSJQqlDD4I7x/ZfWf4/Hj0WHTtwmk
B7LK5XOnYgnhvZ2lf24VaD7pjKh4yh0N4fUPJyjNMup31dIPcBOJCMtWHKqy
VSD+xb1p64t1BsLZreJPS/XEv1hV90GQXE3Yzat+W7OM+jEHpm08JkgIww8Q
GH7o/N83DIiV2VI/A/ruwEPvTBusjKLrlda7aWXqNcKCV7fzmuXUD0C+D3zC
1tJI34rq9UN233wtsyU8NvL1X6Zour4F/bb3UUYRLledSLWsp34r/BTP73zX
0hj2L//CKk0XG7Oj2cF8+xXyvqnMR3n0qnhuAs/Lij8HrpXmm7mOEPKwvPUb
PKSO/5oHsvLSuyw0NTKX5LBG8h4NzKvyON96WesfBZb137ieEeadUQ8xNbM7
pPOl37eyS1RMZ72O1l96vX89Mz1/pVv6b3RTEr/s8rIZc4wqev7mtzxVw1tK
+RHmGXg/zjq/AAw/VWDnNwMva5b/i39q1SPi9680caMp+l/80phL2Zb1/+KT
/md9oJ8a3ch5sDYok13aIHJRtill6+7anDe4ZLM0fw9H7Y0iXofEPGO1iY38
xO1ymOj7k6OGxwLnX15vunSheC59H8xBRZ+wm3lywHP2sE7+DcO8FBbT9dfV
2qafmMPswO3iR2nsxLAXCaoRP6/zrR5TlG2y2ITiehvFv2SzmIbvuug35LKM
Or3fqryyOZ9n5Uif3W4JT1hs4q1jQnky67BxSD1vr4+sV5+pS+ST05gxf/Z5
09IUtmv3j0HaG5nML/jMGHXXLJaVFtzI3DiX900wH43vC99efr3HZY2PVVD+
C19i4PZbfZbpdXR94UMMDL1vYOh9A5vPX91hiqbru2/ClmLLerq+0FcBzv+7
/WNFAl3fY5O/dlMH0PUd9cvTIN0Aur7fLh0UGbMreZ4Sq899I4sp53nTPMWp
YfIy+vfg0WU/HnhdV5HNmu04Mk+aL/D8Fvo00JVC/QD57N2A9U7qADp/oYPO
5/OtOq1cv6FkuVpspvgM+ojAtXs0vaAzFHI9lZOrNkyWRwi8v2G8eyBB4vqd
93kwLws9FZxXuH9GXAuP1ITncv4o9Bql+tfd9DNzWPe3ukeqbaQ3hvl6YfS6
LvrLubxujHkY8LsPjGtkUoVmsJWjFlpSS75yPiXmmW0tt3V2xhfMWf9qlDYo
hZVOnd3ULeET22uztLm5JI05TSvuZgxLZTnTGubLPLJY7ZetRqjH5LLYxqF/
iUPy2Ndd0iOmBjlshjBisvyjwAaxU98k/jns8eZlxwzzBM6zvOov/mZZX8zr
3W9njWqmb1XG63bdq93ykNb/wTZ7/PlKtS2XDSo81kl/n+YrngYWeguHK9mK
gPwfEv9MZhiZ1Unbu5T1OpPkVM/8mEnmFB0T4pKZpnvpdGN2LO/TlT/+/Z3G
KYX2kVV+f0rzM/m+C743zp8JXSR165tvswfdt66WRyTxOl6T4TbT5YdIT+n2
L+Pb6JMEnk+/jmtZy7xKYCmju88d4aZkjX713S/+JZEJxp7BdsZXzLPGznJZ
TAozDzne2C0hnl1Xdn2hcUpnHRWNuhk7m1mD66+OmQKz2JdKjzeqjGzmLV66
RJqfywb/3iu6gTmMZXilPtPFU7wM3xNg+HEDQzcUGPNkwC1tUvaYFPTv4xos
bWZUEe716eJqsZn6v3O+j69jltHr5wuebhYkhKEzBIz5LWDolvL8wepPDYw5
R2DoWgFjzo/rS1j7uMAZPlfHiESUn0AXieubWOcAuZ6Ete8LDP1bYOgoAWNO
EBh9YmDo1XL9Cqs/B/DAhJbhGoFw9/VztAYN5Q852wsleh3hhE6yH6ky2q+g
t87zOau+K8//rPOtfH2s+tZcn2Ln7PFSPeGMrmd7K+UU/4OvDIw+O89HrP4l
PB+0+qHxz7/kM02uJlz1do1UmbaA79+YN+L8C+ucGjB05IGDmJOrMori5/V6
pZ9wmDDmK3j8b9Xt4/GGde4RGPNRPB601tmBVXF7Dxts6PvBb5DXj13vRSsS
CIvHj54oLyN86fUvtsZswq2Fv/fZG0mvADrKPB+YMDXQTUn8OcP7e4OLJBTP
l3xcqjKqKH6HTjJw2LYr9bylxA9zHTE33aCheH5m79LLYjPF79BNBsZ8LI8P
3EuaiESEh2VXvaJZTvE7+PzARQfe2elbUfwO/3Bg+DECbw+PvqUKJfxH3spc
y3qK39HPA/5xaNgEqSPFt+Zay3cabAiHDWtyT5FA8cG+a0NKUq8RnlSY1kEd
QPE8/NAxZ7N3+6xnKq8CPmcjq26vETzp/sV8PN9PrPzbuOtZPtIlP+P8y99t
9VW+s1epga9VGTksrVUHL2l9gQX5zO1WLLnE57uvrmw+S/6R5ptC/UaeSpPd
YjXalxcogpOYv3HLAdOlPDb0Qkg98/h8Nu/xtsdm2RP27MwBpk9KZscjn3V0
tv3I2lb2bigalMZsdne4aXBJYevHf0xWBP88B39fOEVZLYvr0qH+9Mh08ZXK
K5f9+U851z6f3bx/z8644+c67Zk9P0N2nvmnHNNIXyeyyOadDjprjezqG+Nk
9ZgUNtr78F5lVByr39G7szEsjdeVF/qJf0hqZ7ExHUPf7DddZ3saJKaovJJY
q+WTRhdJIvn8oO+ByzkGDc0PlqiP/Cbyo/lB9GExP6jIFLGt4i3s9W75fnG7
RDZwerXxylPEx21kcHAX+b3hfb11v50+KC9LYFO1ed7yiHR+zqNPGZ2VuElr
escuTtjUzZidyhza9jSrQhP5OR/zdtU28dx07nucv8HlsCkwh0WeqDivmyow
UeLxU4Y0mke8pGpwSedL84jCGxvRMPUVZvf90QeNUxLLbLhVo534lq12nx9q
Ckxl45fUfWmK/sLenKvpI81PZzPSnm4Xh6SxrlXOj1KPyWYnjrv5ioflsVcH
dlQRtcxnT0dmDlcvymXJqonpsqs0n3vmR5iXeG4Za9YlYa48IpsdLJ3zRdaL
5m09I18dNNjQvC36T5inVfrVS5TFCKyTf+8l0vo/13FnpY/4l5/70Otl40SR
0SytH5uk7prKanf9ekjeN4EN2pvY0bgjnQ0YNnCp/KOZHc3c8F2SlcWEIr9f
zftzWOmgNi9VI/KY/arnC7YKL9nxisoV8ogUVtZU9V2zPJ59H3dimLZpOrva
71tLc8nPdQgb3NS8KostzOz3UBOezX090Cdakz0yS3K+mM+LutlLpksdv/L5
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
SKhgxxZNb2cvWsqafS3YKq2fyB6nJ/iKS35+fza+WFKex+v1dzfV9xYkFrbO
ybBN2/QNn1vJ2j34tSkwgZ3+fmS68lQ6u/Bnir/4lzQ+x4L8v4rnlmO6CvLf
O3/zymh5GdUD9L+rBqpfCjy/Qr22tCLgkUbIYms1hcvE7Yo5j/bttW0jlW2K
Wau+kfPkfbPZ4cveUaqnRWzFt38GwAN5/xW6RugX4fwe8PxUX2UbOs+ht4Lz
/G69We8VAwv5HLwmKXaQelEh+7Cvz9qtwgPeZ55wttUvW4UPvN8Pngz2AfBe
0O8/5vTHPLma+snph+wFtZjyvxnn9zGRiPK79E11o3QGyt+mxm5aKa2fzWbd
8cuWlBfxuRn0P9DHQH6zZOHvIh8x8RtONzrtIhIRv6HmTe1jnYH4DehbgN/g
c8Tjgp3xMfNupaiQxSSzjmF6e7eEWPZkTeFLjVMaG7X5cA9j5xTWOnrvcVNg
JtfbhA8t9s+CbrUWSHcX8n5fI+XkWubxAsd3uj3ooZ0ocJ09UcObTupFZbw/
lHHl/u/qrkUcazd3mid1LOL1GjyPCZuaq9N13ixyfIvexjqJTNL0Tw9lUS6r
uyTnuepbHovOb5ZuavCGCVU7/q4fnMoGjAnuauefwEZ7GuuJTqQzj/cN++mr
pLHQy6pERWUWry+BLwmeFPJb1K2R3+5s86uvXkf57Te/gw8ECeW34CkgvwUv
AfmtX/qKmzoD1Quq9lh8Yaac6gXo0yA/R98F+Tn6KMjPHYZeiTOqophfqd3/
yDrzuBjX//+PLcTQIdtEx24IZZmIjgtDyDYRWUeWHExE1kl2RiLC2OLEWCNM
IpSRiGSIJA2hdaZ9prpbVFI/5/Pwuq7z+P7+fD5maOae677u6729XlmyFVlk
a33aXaGtjsbZ0NW1vyLdx++VT3V0EXcjjnIub+0hfFdG1Gm3/lKeKqS6ynbO
p6Y/ViSQsZsf2mlDs8nehi4mleNXEvx2bkMr81xSbSsL4lJ/XYdePz7IVhTQ
ONityct7Cu9yur9Oacu/pUiqIjMuDvUQdyoiYZua/ah/x9F+F+h/oN9r5+K5
4YqkCqr/ad2txUGdXQXdH4Ru84I0vctpPfGq3YG/5FPLSEDI/T/8uZvENGWu
RpPDzrc4jy/p1Xug+mkR1X2TJD33Ej4xktqh8auF6SY6x4X8I+rqyP+hjo78
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
G7KxPEFk+fM/8dMLe2ksi6fMp9U4XtKw/hTvvQ0NSh3LBxSXxLbzFLL4/cp5
s0i+gcXrA6/1vK2TsM/vX/dih1DN4uUmd051UXdjnx/9W2D4/YBb32s+R2jL
Pj/qV7R+3SK0rzyAfX7/M747DJLD5IyPxWMnOTuPRnv2sfZcwc6f/bQ3l6kz
2fnzTdszs+S32Plz97MvVYJV7PyJ+6PCfU9f9WL2PL18qfdr2YpisivvYPP9
3snUhwh1GeTlkMeFL9GchAUt+qnvkeTjHfWyiZlkdr1ZgmyOifTLHurH9Ssm
Sx7ENOJlGEmczYa9nHMp9d/Ec2FHyh2dD/8R1fu4OVEazuO9pnofz3bdOy+u
TqXPDejEo68UuvB4LrSpWXpFk2Ok85HJPrxywa/PgTl19KXVvN5or5VlUD9P
6E/AzxP6E/DzHOpbukmoZn6e0NdA3gzzbfBHxXwM6vzQV4B+/cWrZ/LqyU86
DzjfTfVeImX1iTDF8OuqBWUktdeKSo1ZIq2LOO0xOvJ2fqPzJMij0rrL77zp
11Ht/DkBq8fwllUsFXqVE6HTxb/FkQXE9fihkfLVjEOe9WirlZWTiSbnq/bK
Z6RzgPtNnSSLBCbfOCONTSFb9A22C9UGmsfFvBDytgOPj+umlRWRNeL2OxJk
l+m8DPxcx11bHarqzJE1iQlL/LgwmldFPTXsnJBIG9XQ/Or/ZdRf0c/9jzD9
vMaMzQ9Nke0eI+czFk5O1So4Nm+DuS/oLeweUz1LHFlOGfPveF5ATwi+YNvv
ncwWJZeQ8g9dH6h8C0n7JQPniOVlZMe8P5yUOlaf1j+5uVIr+0AuHj4zSanT
k+utOn1SeGfQ+SbU2+f89bVIpCykPkroY4dfKfSQ4VcKPWj4MsGnt2jJpBny
gF/3fW4jY/2TGjKq69UwjYIx6nZbHnq2Uz9l+kbQ04M/wmYz72yBP+OuHheO
aRRVtB8M/XHw3QGjbur+/FKuoB/z8/WLj5EIp9fT+xD99vBpaL2nNF4Wwhh6
GOgPh96s9e8+KTDmtHmSdjqBfz2dv8/aNWEbN6+CskOPTm8l0grqRwr/NprP
nLeyr5fwGmWze+kWi8Ss3+ihX7iNi5TVg9YMq3jLCVi/Uc+cYd5KHasHrXF+
bG7lzOpBr1TSr7IQ9rz7PrvtUmExqwddaah/LQlmz4+Zt+8NlU9lzz+sd7C6
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
T5p5nm9giKgkF7jDtzRO+WTBWfvPonuM72gTwhThbH2ODnu/sBEvhMWPZiOO
ndIxtm5+842F4RbliXfFp335jKGzCS5Na2vTV8343qIw+X7uOWXifNLzoobx
huMkXCxn9+PA4DfD7ZWMA9ME7gYRm/9N+RDwmRMwhq4nWD+l9VedhLFTwMJG
+znGh3Yn+ip1jDNKnlcpOHa/B/1w2SHns3ni2pEXrgrVjMcOatvVXskY811g
4Szno3wPxnM3lvY0RDDGfB8Y82DgvTcLl0hjGUe8OVYpsmTzy5gHBGNfBGMe
kD4fYxY0NWxk8xkW2yM9hF7/mdc4c7+xoYLtX9Djoc9PzwFr+b3YfGZ0X/+3
EmvGruP3r+ZfYeupoV+/1tpQxoKOdZ9EyYw9P84bJk/4z/tL3VJErmx/DBvy
YzM3j3F87Nsx0j2MBbtsLqh8//P+3/cnWJr+OkNgzniT1/kbisGM4/vXNtPa
/Of9E6uvKcLZ/tvy4LlJ4kjGPa3WtlVnMt706c06LvU/7y9/ZaFezPbrKPvV
4bIVjJPiRvvqAhn33PtPqsCf8cPzQXKdBZvv/TvrLytlB8Y7vP8w1BPGibZr
xGKHetKKV9/ZIMqlfkuYbwM3GN5uuLpbLvmwsG2ELI/x7gv3ZwuLfxC/v8uc
lG455ELrl2pZXh2tw4Khi9s7I/exLI/9Xu7O0UaRJdMbdRC6DFKeYs/fjuXx
A5Sn2PpBHh2M+TPUa5eeOLuY7/GT1p3B7fiZXQwROfT6gnF9oWMzwTnmriyk
ls5PgaGnVBJiWsK/wji48GhjbWgtfV6abZ1go17MzmMx+5LvqHwZH4pplygZ
xfpzCsYvaKudXE6aj9zvLbQtItfnVk6WxnIk/ExEN61NEanzC+ihfsqReVXZ
iTIhY7w+42HPH/VPOLI98q2TnG+i/rSJm2yuaMxMhD9vb5RiMOP7D8NXCm1L
yZXle6Nfy8JJ9MYdx/m9Msm1pcvbGERG8mLk5cFKXSmp6hq7VmhrJGuCkjJF
yaVk4/0FLXm8fDo/DT2wpfFb7OVTGcO/CD7VUvHTcWJ5HfXzRn891Rn4zXg9
jGd9SeFdR+fW4Fd2alrqeqFXIdk0V22pPVhG4x4wXtf6ORUJ/MvInOTbvbSF
+WTZosle/CsVVA8aPKPEYYg6M59Y2N07pblaQdeVNlK6VWdRR/WowSk/sk5y
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
kDk4NEDIT4eaI26v5PpS/dDel3uPEf/IgTYOWcdUgnxid1xeJu0rnZIP2dqY
O6yXnyHy5rwJUlUWZCYsvMD/mQpOLKubhqcDbvMNa/idNbB05hUzT2qEtLjH
TTUaE7wJH/5SwuTA3Zn1H8jic+DzWElf6cx8SFTu6OQVk0j6XLRqat9f6Ur7
c3yPHZUiStYSXfMYl09vWEdfgqNzk46aRpnwwWC6yX/1A5aueFjMW62BC1ej
N/EvZkDsm+kfJJ/14O1dztHMtj2/W/E5VbdscGo0xi1g81fofrtmW43NXwxc
Ge8vz0+DkBrXC3g2fxDjV8gzeirzfSFZa4aQpVs+igbkQsjDiS01dXVEf6Tl
MFdP18bfIWjEjt+imhp4M0nAl9vu3eSz7nKFzS8IrDiuFdjurT75sTvYr0xQ
VDfNyllL+5X5xyl48g16uNpvkKNyegnIUkZzlev0sFrz7b3A53/qx6rrURGj
nYIY+1ojRjsFMfatJvnBajuF/Hw1nwLxw4JBL0Rcel75X67PlapofqbhhNSj
Cgk9r5BfSM7P0K3+bA3Nr6B9jXhdyWHuedVRMK9ebuGYzRBwJ3wvszEX2o89
xGJF5BJdXBjglRY46TGsKFW9l63PgF9+48LkihC4s3lwIL93OnTL+3RNcTsH
HEV+fvwfZqh7MOChrGYO5HbtXMgJNsNn69iT4otf4XeHUTu4S9QwaN7nXwrn
PzBwq9ZLHKcjfIYT3/e2U7YzweH0zGD2ISP4+dodVIVZYPLxZ99ENrv47qCI
7tJrFtiRXvunyOa3pLgm3ZKElUFBj40vZG+0wDX2bSTvUAl7j84sjHqrhV4+
XkVhbpUw/WncJ1F2DuyXCH8IPPPh0KFrXsIDuXD/bhxfHGd7r+lyxy65D6A4
6/kzxbAMuD79/gf2hkSYOtj3EPuiGho/8GjoZf4D946zfIXlOoA6wq7KB1qo
a5T1ks82Qdn5V9Gyo0ZYEji5luayBQ73cvskmmiGIQdqWzgdc+FRyoMzqvU5
IPD79lPw1AxNDs9Yzu9tAMk58Ob/KCL62cvCHwi5y4oh9lOLM0wXLcl3CVqc
3Mkeb4LLGzaXbo8sgJejPjbTjDNBzrUrN2U23HD+vDzeGQO01eZtYdyKQFrR
Ok/c/TNs0RTNEsdlwaM5J4exjqaCasiZLsp2Ojg291CszLZPeksHVnCCjTCm
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
NxgaF9bCfceRr4JAE6J7HtjJPFsKS+jhGlaAgfJB9LvTa7rYS4OYEe+6SO1q
0UnbGMBeo0H1JYcp/F61eHkgWc1brYE6PqmLtA/9PpP769R+639+baEjQqMZ
jBTs/Z17kH2gCM/8v9/gCn8hc1zgQuFvNbUvPeak3UD5ZD2OHWs/OetMNA5/
vf1IYVWAa+fXLuL/MuKn4dQOZk8LjG53vgmIuOb7yl1Rdt0tkDwMGT0yXY/c
9Nap1tPLMbwMPwTf9Xha0SlONKMcTVcx/dhEXlR4MzY/bqcFYS20jyVEnpy0
w6TmlJgRfDLqpoN7Eryn/GptIy9EdP/lF/m3M/FWvPeXgK3GKSdfM699EeXL
4Fz8+KxFrqPqlK6ctkiTo56jqL0lQxRJ5Mufpw+TppnwINoqRaA1E3kvT8NJ
MOPxLbsmjBXFyJ37e06m70fcPX1qgMpUiBXNy32ko7PQRDOykjNHjaJo2VKh
RxGWT037KIrU4YpnYx2rE/F9LvhdUViZsC1u/WipTg/Jm3uxEn8T1oqONGEM
KAY7fnJ71dliTLi7v7f9NznOPk+cKl1aBKvo9xmK/GwYOq61ZhDr2ouWA08x
hysxY2OLQl43PfHvDbmlmET7TThIPOv6hK2g/I2Cul88Zvk3Li596ckl8nay
/mRnlNM8/q5Sqk673ZoDDyQHS+EwrfSu7KIJ6syl9Y0HSpFT8JKxvEyDHku3
zS0KqcZ9DdteTvB+LDmsOFkN5xnNYyWpJhwaNzmD507Hc2Td3fy94XJBNLFe
5NbsZtrT9cCUXsDTHf7s7gZcGzw2QlJShsaIZT8F1jpc7BiSyenyBzOrXnPF
g7WUHmD5q4S7sngTFefOnHx/IZ+Y10Ot540Xjy2G9/g/j2QBWszQnjmqcKXX
s7XPUttJJXT9Mnn+Q7LKz7UwgEn3u5F1SdT1Xox8ymDQ/W5xxk5GsYLmQTXd
GyUyur7ceuCcnj5sul8jJ2JZGFdI15cn/TglY6poJvV3SCb7qan387/+X5LJ
/kySF8QaL8lEdLxK6lmQTJ5vUPXr//mHUPXr/+lhkLyhq01JYyPNZH8syd3e
GpawpTS3WT1yMp9L73e+95G95fFpJvMFkkk9jeNFws6qK0aMSpk/QLrQgi4X
2JsFlzVoo+4UyTpUgz5PdiSLQjUoHHPxqWAvze3XRx9UEJxwPGCeME6H01f3
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
NzLv5G351pbB01G/H+kbSJ6DPfjg+5v3iL7+KpH1e5HcQPFK+43xEiXN3cdV
OoobaY49e91VqKI5ZJa1q5BD/z12+NPFfBuaN18bkiZg0Px96uF3IhbNIpeA
azJi/iY54dK9rvJGmrv1Mi3hMun7p0x+k8dh0Jw6OCCP89f9v/FzrjfbhmYn
t1b9pX993i9s7DUZi2a70RGnLRY9fT3/nYOT/E9uiBWDTXNY75yR0s80T9l7
eIpYSvPhbZXxEjHNZH03ycwVOfdlfJr9GsZdU+ymeXjrxH7y8zR/8t44Siqk
OdTG5ZBFRN+fFB+/2sbzNA+xJEwVSmhe1mnVd95f95f9duxSropm+WRTV7mC
5rqTPU8rlDRbj151WiGjedqhk1aqzzTfavVjNv+vz2+Jv/ed91d+Rz5/JC9f
LEnj/eU/avVq1GShpJxi0seKigeFHZvZhKmxfMrTY0wpsd55Dewt9qvHqRCG
lherRurY50OrVxP5oltTLe+xGs2y9l2SeNejaXSHKwonE55tfz6X/66U6pe/
5nj1mSi+FPblYRqeVo1+b0Kby+/V4ceJLQuFGjWm3Uq+LLlfhzcFGTGybDU2
Z7nrGjPqMGmlqILzQI1gXcodIuVCkyFRryX31Hi0I+GY7Cwdv+0NnuXFdTPT
z8Pd5daqlTQXDAlbyBfQfJUzMpsnonnmx24GlgN9P1IybiYKHGkO6MFdy+bS
nHn9WLiER/MWzdAE0V/Ph+PFxqlCIc251s9qGwV//b6rVf7Mv8YHtBy2g+lG
86LFS8wsPs1Pcm6MFv/1+UMn/BJEf40/Kum4gW1DM3leTPLUj0cGSDk0t9u5
JEry13hVWscoCY/mpEDVaDGX5g21N8wsB5pD5ySvZ/81nvxpey3rr/fZe5BN
a0YmzVE2pw4xX9Js/Urtz1bQzGnpv4MdRHNoRMp6roRmsm6O5BLrJnWsMJpd
f2E534Zm6b7Lc4UcmjcGD0wX8GhuoU4p4DnQnHcdBTwRzQG1ajPHh+bXJUs3
cN1oHnD+8TK+QE/5fKyYO7qt3EDvH5C+tSRf7vKv8Qy9P0r61lL7i5r/FeBS
TPrWUucD/61XJJPrE7Wf85//Csnk/jLJpJ8qyWQ8QPLbmCe/WXJ6/3DryqMu
XCG9H0Tqk7SeHOTHHmnEl/tX+0ufEfF+VVGqgG3EPuPUD4I3FkSv6rGOa2/E
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
J2ZkXugei6v8Xbu5owuQPzCCXb4sFjM27Fsp5BRglNMlGRvf8Seuh6v4tBJK
bymPwfuO2697j5SfV+LaddtmPgl5cGM+t1GZNOC9H3eJ+zkP9d3eMGwsGhyu
T72juKzGw7XLTZw5BuRa/97ClaixdIvXdwHPAK8dpaOlV/V4/27eZOGZckzb
t7uH6oMO6WdKjilSKyDYXTFQ/k6Hbj3iKhp/VGBUVMYxy1QzTs1cu4Dfhz43
mzc225NL5B1P+jx4IiHyt6+Hvmk4vmYqf2t/eWk2b4sZyzw2e/DXmxDWa9QE
cawZpc7eHnwBka9b3ZsuJPKut2rhFnlsKu4Zu99XDFPC8kGwRf4iFd6KkHjZ
CCWGOzc+YQ7PBcP5WQD7hAb8/qVPmJxcvB0xMpgZosFXXuI+9g8VVlxdNkeo
02Od04t9bCKOtxWlLuUb9DjS2NxOftqIeEttL/kM4n0vru8rJ+L2Xb+3DZXO
MqP/4E8XhB5peLXX4Mf1UGKOLlyt4KWh7uyOdfyFSpw+MjdH9jUXPdJPOouJ
ODPBZfhwG3kuVVff4LuxI2OAGv5DR3RTdTSg04KsiVI7NeXj2Pvs0LnBY16i
/saHm5bvBXjyT+pS1Yd0LK703sYdrcLpb0N44j4FiJ1rxRWf1mL6/s1lnBwN
mHfvd1GZDJC+He7BP2HC26Rj04UfzNjfbUmyYE4xxu0fWMa6V4znB1RRao84
lMjH7+Z6FFC6GOw0iCWORPzBnlPJcVRDPWsPWzixEZ9i3d9IXNTwavjEFjIb
8W7i8T3j058h6FjUOeb1AlxM1ydf6P4cY8/H7OJKCmA4eqyfPJaIVwz5abxJ
ZbD92fqOLNKM5vz9nlyPYsR+aHpH9siM9zPLfdiLiXxv1ZcMwSod2OncPZb9
lYiLzI6UfdVj+uRVvmziOSDr8sjn4PSPczOFTBPCrTq2UZlKMUnAfyJpZwL7
rucGdnEplQc3KTrQXV5WCqsmU1+JuhVj9/bLPuwTxbj5b3rPKsZEfvsAZkgx
ta/a0LnMURhWhkeudzAx/T5cL+xUiL7mw955LCZ2iUTbQKNSkJoPwc8hYYoe
xHy56Uc6Z1Q15gS4NvdcI8dYzt5azpwixH8MGNb+qBwFUw/lC4g8Xhwa+ckS
mY3TJ3t9EUWqMfNt4gr5i2xMvtj/seyRGo21l1rZdFJCV/TqhsKKiKc63EkT
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
CiY1jV/PrtFRfSXI/GNL1PseNIID3Vb2xQn766//CXbFgkFkSIaQ+Lzen29J
QqWJkDggKF34ohwC7JbT7KoTqb5FfR+bJMWWJ8LM2NTR+MtyuBrTck6fqIOh
IzcdohPrTrIPB7kOzWqzmY590AF3z4WxIoJvyif4JAm+wRGs32DavwpYcI8e
FHz9G3Vf3161PVdy8Ru0T1wfxK6pgLecB7VC599QqIlTcpbKwczepFvw3N9U
Xd27806xTPhN1c319+73QO9TCZPZXonCFyrqupHPwY1a31bW2kp4XRphgb9U
QXpPLxdssBqu3K2/qDeuoq4j2edmYUREmNSCWOdNc1WzTKrAakeDUF6Prsfy
klehUibqC0Oezz74dWyUeH8VZKbvbWV08bfDmoxzef/U0LzhoAGN4CO/xz8S
j66GG9OPBuuvV1N9UMjxxGNWenLHVEPuf8crCCb1YkfdvP6TR7z/36xse1Nc
Als/zpskWVMJEfoYt8J/6H6pE/V5bKmWgGoNFkIn2K9tx1qJpghSBim6WybK
IbmgeJuoBt1Pm1l9hnjoioD9mrWB+0EOyhf8bMFkGVjvPJfHI67DQMakVXwW
ut+2LUyfIJkig4fG0smiIWpwPr7plbDL/z9jhX+yDfG8qXMnjMhjtsLmkuZQ
PVcB2rsze0nGtoLWwLyAN10FWzcNT+alN8D4rYu235imAj1unczOaICNpwYW
/MeRybus/uPBM8aHS4nX57z4ckif1gBun/7beP0KccvWT5Z8qICQWYXrJbxC
MH3SzcCS8KfHfsTkCoj7amtHRD7vvzzNkZr9TJEKvqxwfSIuIOa9qf9tbMaA
+53ubBHh39ZfWV7PIOa5njdCYoVTq6l5cE1rqiufRfiB4kORYsLuVp7gyya4
yYW9OVj/C9I7b6zit1fCs/rhJz06flH+sS3uaCnW+AsW3q9IEHdUgrI9qlkQ
+BdGebPsJGv+6z80sFfAQeQ/1Y6uCfSgv/C49vQ5OsHPxg0ajgfhcCymoJWR
qKb6jJH+1V7id4x5AIdOd1sf7gc1rC9elSqYrIWi/44LWeiovmGk/y0/+MRG
MkULayLS7EVDdHCpMmmYKz8FGF6p1ZylFTD79j0n07PIP19d0XTb41gK3PvX
bym2jJi/lvmtxN8UwP7nfp+FL3C4NDZ3k+QD8t9Tz3UbEPCuABrnvx6Gv8SB
U7BvKTa4ArK6G97QG6uovmqkf88OTH0htagAj4deNSwTFRiefVvDylOCg88T
P/Y2LdUnjfT/wTaGHH6+El421KcItmvhlEWFXw9aJOyM1guYD8tgoWZVlv0E
ND9cKctcOMM8Eqpd5+C88DKwtZtgu7/QBRL3PHMVdSsDr7RtZvgKHXTGMJIF
dtUw9voyN34XDhoeMcqDmwfpw+rixYNwSB90Hyx98uCB5reaQ3BN8g2WRFMG
Iw6ECuhBSrBMNGOLVGXQOPewWLhPCU92FBTyohVw7KfjKm6uBrK3LpdzohSw
/K7VFX2OBo7t7lbMOVYFA87IH4mTdZReOMmVy/tuZJdXQZq+4BtvQQ3s+Ft0
OYD5GVbVCtpZoyqgv+RnKm34Zxj3MWCKZGQFjPgeeJlPL4A4d+YvwSkc9qcE
RLN7F0DwINOelgSnm7dt46aWg2lERri0TAk1ffkH2J/LoXKHqIBH8LHU2XTa
CSVsbd4eyARivk3+wMCPKmHWV060eLYWWsxupAgiiOfmkGyQZJEeYNb5OcmC
eDhmL1uGzS8H2dijBzyPxQM2r2aqhOBulqHL+ANVcHWchZxh3AgBDwrSBYNU
EHPPtBveqxF+dOv3Tlinhrf/Ho3HLOsg9G2vmdjgKkoH2o6V9lkwqAouXF67
k3lRB/jK4xHc1Gzw28Ezp+2WQV/PNhH7czYcCj7YzCLYI95AJXQuheQvJnLO
TwUcFp1sEDiVQl7JkEwBwaVGX2/pfeTAsIp5K3TQwD7BaWt8tRwmOn64L3VA
+9kJy85GiAWovux0x6qxIj5iMv/mWqeuYxko4F1kTjHDvQ1Cft2+qSdY4HX+
mHReG+yq3tLdsrsC2vym9pQsawMam36aHqSG0jS4I06rgyy/jgdSgms8WfGG
X+sg7pvHlAl5Ktg9huVFxN5wwWbZFFG+CviHrS9IE+rh6yWZMY3gFwrXGc1v
6yHoZ+Q1fY4K1rp9tcc+1EP9xj8W+GUVLLbKPqwf3wDft3D70K6qoE+oiZnE
vgGMZyxvYE2XQ4v/UjZ7USfUW7v1oxG8O2iQiLe4k+pLofRtC9a7V8PW+btd
sF5qgF5XPvG21oOqMjlMaqQGL2W7krG5Hrgv7X8IIuQQXLXKTCRsp/ocFPEf
lLLMa+HRoC+ruKc1MJK9eFbzrlrw46aqWV+00PTjLPDH6eHpMuc4cTgR378J
26l/0g695zVOFwnlMO+0l9mEyHaos1Mv5xNccsVuA/1xO0zS/F5ayEkDs/yo
IHZGBRgs1+8QCQshwGHBfGyMHGYUzvTh0ysh7bTKAj9LxL2CY+0MiQpG/Lmg
Zsm00C/SjUYrrIbhFQ0ZPPN/0Dt4qgc3sxoSjS8L9Ix/IN/l4IhJq8GxrYdI
SNjtTw27LU2vAvm9ifkcnxrwOnr/sTitCvZ87TlatKYGNnbsfZvJS4Cr0rlj
cP9yqL/mu8NRdBJ+rowqFIwog8zUmbel76qoc+ZDTrUa09IJP1htPYP/o57a
x3Xa6vODI6mHGWNDKjiEPdzliT32vR5WzO3z702aCiTXCj/a/6qHSn3dXQ/u
ZzB0tHuot6uAkoLOAQHMAth4OXM3+zxO9bUXywLmYgolFC84y+FfVoKFs6k5
Pk8LR2bF5+q3o34VS7gpufqNeXDOeHuK0AKn4n6yf0Xx35F0S10ZyDb0wfT7
ldS6jfyfr1/aHCt+poDZ71/4s/M1MKjpoAntnxL697EqZHk1wobc0TFigm9a
pGBij0aY43CjgEdw1LkiLnN5I4SusYsR65SQV38NZ6xshA4TjhN2vIo6N5yc
zLyoJ/yjVw59OZfgI4M7NaI5SF/OerWlVjTpM1iUtBlbjq4AO9UZZ0sG0pdr
7X3D2bJ/AexjhRXzzuBUX3JSXy5+yqU5oq/l8PMSxIgrlNA955uMI0D6ctsr
fso4p5RgJys7Tp+jhRzXLdb4NjkkyK6HCo8Q6/uX9+LE2+WAGWzsJuF3wOMP
OW7mBCc/oz9KO9wBSXY+M0TE6yN6jNyhP4Z4xJY8U9HRDoiIcj3gGYb6gcyz
6Zjy+2o8dH6bHCNdUA6FwyzmYoNVIL150VTSsxE2j7bsTStUw9LnF/+yXOqo
PimyDYrhojloP8bu0vyD0ix03uX6plcfOBLE5oFON4Rd7F/i/07lShG7RHmt
o2ej8zbn+l35wClB9uFOow5KZYjD7O+FC7rYdcrGjowu4wU2nihglKDxvB6+
vdON9g6d3/lf31Yq39iOL3jUhpiswyP5hct5tW+Pd+h8dP2wn6FSZE8+dupW
N5f3FJ+6WWNdV4TspE42yXnLlx6dlofGGzRuwwBXfgZlX6wUjTedh3j72iY1
dgBx2Z7+TfyXiFPaM2bWHsqgxiN1mkj79/tu/V2HSCiOYXasSJIj+/QBsgWF
sYhXBjv09K1E482ZV/uCzc9F52n+t89PsrY42SLgIOIoxaKH3BuIb74cM8fy
UC413lsfeiJThOxW7f4v2BmITVLnLKXFIvZ8F/+NHop4o77Q1iMGjddYy+Lg
rCJ0/3n8XSexRBxxsZuY3sW+9uaVuTQO4sVrt8vEjkXUeKSOFWnPeR69DD+L
OGXPmRphAGKjLY3bRR6ILYSWGfrtaLxVHmI+m19G2cm8CMnjhkaIpAcRk/3s
qXjgbAFbRLyfHK//2oU0RwzZyfiT5FlXN0mEXexlxkODmcGIFWMmOEpuoPHi
otctwqSVlP2496QcgQQxWW9L1Y83n/8ilCH+W3xgIK2wkhqP1Pmi8vv/W59Q
+X+FwX19F7vTxuRVfBzxnONZvSz1aLwhgk098DfoPOyJdT/cuCLEBgErrUVd
7HExzR95YsTjw3crGQno/Oz+Ps/cuKnIbjbVpQeegfiS7Vt7rIu9pGLABWmX
8dbX3N/ATEXjfZs0NYDuj/Rrx/cOEwm4iOMGjwmW+iFe7yNhYjzExYvmeLD9
Ub/7UW8PiQSByJ5cahZA5yN2yg7GxF3sl67I9J1dxjN9sEPCCUTjBf01yGeZ
o/3r4vidFiI64vWpjdWdAxCbGt67JmYgvtDYL5Fnjva7czYushDZIHvAxfI8
FhOx8siqdlkXu5PTmzVMS8TiBbOn8G3QeCPP58/ipqLzsBfWw0mpGLHprvRV
zC52Mt9H+a9HFSOwVHR+9oSp1UlpFrIzpsXN4koR32SO3UzPRqzEz37hSBBv
rzO9L8xC42VPjYoSBCL94OkmZupOHmIx485nThf79nXOm+h8xPKlry+KA9H5
uvGJWlXncWRPrzgVJRAgds1r/sk6gfjmtZXj+F3GswgvNZAcR+MdL9vfV2SD
8gHyt2WeTMsu+YK0bXb8LnaL3vTvLCZirOV0ncwG9Ssr9k/yZE5A9v1XlvcV
sRDrj0umcbvYXWeNuSnsMl7aotgd+vEdEHOzaaRHch6cqKk8xpyAU7rDZJz4
JfpkIa9QQeV5e2f2umbl/gbOLmjoYHmVo/O8/9MrpL7v/+oTSZ6JxxrQViG+
HEHfxPZAjB85spvpjeoPrq1J8ma/R+f/cypOpvLEiKOCJM78LnZOXpOGkdBF
T2BObCD9PcoHprzyDdjBfI38rW00s84H8ZDlk5Iy7RFHzhocK6+PQ/+P2RXL
vravqfGWOL5p49O/oflq92+fpNGImwytbcf2RTy77WqYY10amu/8F+dJ+nxD
/+fCB0IuOwf5780iDo2DeHJcNsvRFXGew0W92BGxoHwrPXhuDuqP3lTqSqP9
pux3B+prhSaIlevNf0u72C/8+RHKrS2k2Pnq81hmZyHK5z0ZoRSKS9H1/jL1
FjsDcVhf7yP8JMQuF8xm0GIR62frlks+lKL82v/0KKn583/1qSTbl34Poc9C
fOT+WB3HEXH+/tutLGc0/5DrUWr+ueLpgPEQe9nceyzsYu84nuHF9u+i71B1
4g9rK5ovquK4Y7HBXeYLp5GhYgbi7j94ppIu9hf2d5N45ogLb3u4cgcj/36P
O+G6OA3lM4vx2nZZBuLYg84H9F3sPtLto7HULvoJriNeCtJQ/nOhMa1VFtTF
H1/7spnOR8wdRS9j7EdsdHpmiDiwi97BP/1AURDyn41vsjbRbbv4z1mhv1hM
xCZZfxewu9gTxps0yWwQV9xLPSYdhfzd4w3C76w8lC+VK/2nc6WIEw/HvOJ1
sfsVFa+nZ3fRE5iPKTpzUX7Vkx7I4p5G6wcMcxQKBIi3jjnOwLrYzQQvM1gn
EDvX+nGYhD3B89ML8QcVMMoW33Iur4fr3aYnCsUqSPt+3UxSWk/EUa++CQgu
lj+s7yT4qPzYX06UFsasjjuv99RB9HJHP/ZTLUTX05QsLx3Exe9QSMuyYPDy
n+a06TIwCSmuE8uzqL6I1v1rx1n6lMCeZ7vknJsKOKjdMJO2vgT0bsmu2C0F
fJvm7CRS4dS+lz6y9pNQi1N9E53/b/uaeH6mDbKUaIj7xGzQbGytBuxOfIsW
3q+l+rZjGTx/5r1a2P/4xGY2wXXJo7UMwv4m0Xg1d40GPjmO1DLCaqnzu/0n
7Jd3BnXAvlONcWJHOUy9M5Yv5XSCwertu9gecjBSTKyVlXdA/sZ3O5neqB8l
Zn7to2ClDlza5+xgEjztdNQMrLQKJgVZzOEvrAFvO6d+OME3zdMrWARfCIlf
x32rhMblQhb/WyOUNSprWO+U4LjNnol9bYRZv8MOM3srwIgp2kSf3gZDJ/eJ
lBopYDet7TPHqY3qqyoxtyniXNFRfVRJ/dmBXivvSC2qqL5xc4u/4tKsbEg0
neXP3SuD2ZN0InYG0puVh1j54l+zAe+dGMjeI4OYGYscLN1LwXxziaMoWwHP
ruxtEMxF+rOeVcLHTCgF2LDGFfuloPrM7k46bkSbqKH6ypJ6tL6PBzSw1srh
3ru2gfg4tH/o692oq2egfuojd23er3wjRM+/udeSGeaon7rrFHYKjYbqTxyb
rf2S5J8pvr2x6I5Hx2fq9bFX041c+aj/ecTKyGe09YgNPvmWYQdQP3TTxqgn
bD6qPzEswpqEAYjfXQkcEHAQ1aN8eaxyx1mo/kR8TnqPPRbxzllvEugsVI8y
227QAXYz6keRaHn5oV7fpV9FQ+sLaROKH26ffLsA80b1JwP3jt/D9kC8Y8mD
Y0xvVI9C7pdS8w8cHoelIpa8mBwvSEP7H5cDzbrjQaj+ZLFm0U1xYJf+F6t6
DBUFoXqUmdbl2+m2yP+23LTqlNkgHm2Qd1Y6CvljVcarXFYeip+j51ZtoWd3
6Y8hitR15qJ4+lbQKWfuaVR/slKXlMU60aVfxpogb+ZplH+eZ7P8sWAy8o8G
d6/M4E5APLGX2yfOZOQv9d9HmorKUbwXO883QlCCuDhu0Fg+YQ9sqmhhuGrA
cSEWLSTiJbKu29lh9Al9Yi2cvbvpq8BYAzmv2v6yaHWw6NPZaPFwLbRxck/q
v+mBhksNaQRLO91DpOl6uOSjrWYVqqDiou0FaVw9OOrfruFKVbDzTUsRK74e
/riN28DeoAPv8+czeROrYdGMIClvtxJ894cNEW1ogvosFza2SwnDN5iPwTY1
gTtLxWMvUULIzXkvBXFNEP5gKM1yKRGXWi98KYhtgounzSxxwt5SqtpGf9UE
pXFP9KzFSjj0Jv+MNL4JCqpne/H3yKGoOe+QlEvEz+a/PwovyaGvKLtOVt8O
OQtqz9Mvy+HnGPp5sb4dnK/fcsMuyqHnGmUyp6kddiqW2Us+yMFD5XxB7NZO
5UXNNh60xtjtVF60372BfxiEvcq92w9BohycjX5soC9sB7oei5QS7HA7/pZw
fjt8inxxnv5GDvGeTR853HYIW7ZsBfdgFRRvX/3C5lYNjFhX3w8PqgLN2cat
zDs1VN+m1pe2lSzzGkpf+5fLzrXsfjVwRHczXqjVQqVIq2MYI/2TQkFBWT3j
GcWC/2vQ+pziEZ2JyTQa0sMztasulPAQzx8f3j1CjOrXktiJfYP1iNuLKx6z
+UgPbq++LY4pQvz6ou1CnIX02MYKYaWEh3jq0Kn72XxUj0bqz5Df60pjxGnm
cWS/ui9/PiZFzz+pR0N+D/VS1xX8vzg1LqkzTL7ebaSFhoUh/RlSj4bszxLe
Lmhi3EV2sn8RycZ3XffS/RH7fPp5W2yI4kWyPyTJRgEPu+FvkD/ZXIO7clMR
JwzevZ3uj/yH+YOEl4JAxH6pLrkscxSfpSwIHiSyQdx/Vz9nbiryD7vrvI9L
sxB/YlRECgKRP7AOZyo7jyPekRZHF9mg/VfJomYOc0InKJ//+M2zUsC5M/YL
2c2tcObWaQ9+uwJ8Rn1pkwU1E/P7d4mgRQHGW7aECY80U/UjsvU/KlhuNRDU
3VjDuq+FpU5uwPfQA5d7qBftiwYMVYz7YmYtVbexzHO7B7O6A57zUzsY/VUw
e/eHYKlZI6y8128bW6Ui5iMDB+xWPXD29trFPi+HgKkW07k9OqBKzheJJyph
46Sodll9E9iWv2VKpighXtd9LbO6CT6PbRwlWa6GqDsJBnh9HbiusxALXyjB
rCImg1PSCB+Xhsg4UUrYuaXeRKJphBu6Mbf1I4h4qG1vDC+6E9qycnrTdqvh
Su9KJ/6POjAJM9dgWzIgwbD4mdShEva86CumjyuC/tyjR5iEn9CdcT/JzK2E
gDfWS/nE946ccnmUJEQN6SafhknmV8FG3gBbCVsN1kOPDxPR6+HZyT/5vFUq
+Pcncxr/cgPsDe2Vz8tSwbDthfWdH+uhdJnTADxJC85XFFuYU/Rw5fiP63o7
FRx84GolKm+AugkbtK53kqHuLKzlq8ph29MHJ7Fh+cD5WzZOMh+H7af7yXiL
y+HZ1FOdDOJ3Dp/sFUzvrQTDSyOzeQZaiHo7ugZr/Aql4sHvxckV4PLe4iM9
qBBmmr+/QB8qB+8+v04xGysglOezlntYBfTEfqMlr1VQk9I6TvRbC/YfxF7c
zCo4zvaYx8d1ENSeHazfSMT7sj9c9qtqWLY7dA62QQXOb14/Eh5pgNi4ss+C
XlWwVfo0TaOvgcwRFb7KoBgwOXOQg9WWwd4pblWsVRpYeie0uVNYCwdGw01p
oQ5G8/vLWQHEOpUGwfSBRLz43XApe0YzuESYFfIslBB8ftMLweRmiMr3jhY7
aWHmfY8yVowehjNlnwQ3q8AwWLODmamDo2/jQ6yME2DDJF0lb305nG66PQfz
VUFu5ItHwhMN8OlGr160nlrg3+OMnCDTQ0d/3jvhZzW8mtTreOC6OpjHST9J
J+K4PqbSPxxi3LG7DAf5MzXE+uy+TXVRLXVedeK19GSOcQecmVXkgmWqYMi5
sTP43+rBKfkezjFVgkZvXcFwbwbOEC6X660Eh3EXDujvNkEyvYjDX6eEn0/Y
U/mXm6DE21PNMqgCqaK7MV5fA+vK7i3ir9DA2Ru5gfTHtdT5u3n/nAZJnuvh
wETRWu4iFXjNC95Bf9wALh72N/VzFWCX+MhQcrwVRp++P/yedyh0x1v57BVl
8FXWYURTqsEhAxsgsa+D3Xw1zbJIAdeZZaekWc2Q0PpRy4rUQIvv8IGSRbUQ
J/zRxAjUEvMdvo/O14PArNv6iOJMaO1Vu5l7uBJi8LP7sS1/YIUvNl30Ww4h
wrMlvN0yeJXAMqZNV4NL+DslS1sFpd1Y8/j1OnD+4xPnzQ2j9tMHNQwfKknV
gcRhmy97A+G31E+MXIZoYG34Tmd+VS2MFmwcLtFoQVzUdpgepAPDuqk7JLxs
eJFn0cvSRwaBHomv6XgJGDokFvLeKah+ORtPr3kmHqSBhuj0vjQzBYSbd/YX
EevVTt/LPPZJJYQF3w8XOjdBg/FnBn5ICW0mlZUM9yZQXv+9ljuFiFfmh8YK
chqovCm5f1yeEXwpQPkZzL7u/yZ0roC1czMu8XcUUH0ZZcuebOPWlkPa3vfb
2c1KuNuhMqHFKqk+jN0q/H9zmoj5PKxwGffqP3huGxCiN9eAAe2EIa6vhZeG
o/cwG7UAqrPLuYd1kMP+MFqyXAVT8yVWotAGkNCc9wec+wmFk8JLeVmVkLXu
0Ul+UjFMPT/nlXi8Ah6uM/fjWuJwpaziFP2yGlaYePeiFWpAPe2MF1dTBZ+8
P5oER+RAbLCROS1aBrd8Isbi9DIwLn2KcwyVsKQ3/l0gkcNmx0VvhX4aSre+
rdfzE1KzVirPJpl3chl2vBwOFl17K3TWgPwMNp//oApWzBgzrZbxHfKOxeYI
TlXCoBaLCrHgD0ws8IiUlskhxX6ZOe2EjOqrfKnPTDtRsw7OTmvAWUdQ3mmV
buldvVpG5VHi5v3jsRcqId340iMpRwGmD67Nwp5oYLzQZTm/mwLiUkYOxzza
QPansvu1iMUw07Q5Qt+9DIxu24ljN3wAlzX31vLflFN9GmDu6QDmLVS3v3R+
opZjKKPq7J+GrUkW+imouniDhrYQfYoa5ky7aCNha8F3SdgGto2OOldQW21h
SYsug0JmsRltnxzCvD5msrw6YNjm3e2MHBUYDR7vxU6qp/TRSV3zM4MmHRbZ
ZIP731vu2HwZ/Nub8Fl/twSips6wwh8rQKQcamBpLAfapaIqloEG0oYfmYE1
VsG04kee3FYd3N8v28H8pYORvQoDmFuqYVzd6n74jyrIf372N0eug9qjPfrj
O6rAr1fLEu7DGtj03qKWZaIEH8XdPBanGfoYL9rN3FsFny8cWsO+V0Pp5484
OLQPvqIGDkpfsbEJSsjSnpnCb26Co9mDvvPKdBC9tING243qXyL/HReKGf8o
Dny4nCmi/yP8z6kX4hIVZDHsHgujUXx0yeKiH5uP4q1lIW+1DPdamJJjaoUn
KWC5V59RmCWKd8g+HyRn0Tv+criIsTN2m5kTUHym773nqdAZsV2h8yxMitbj
Pk2VWTwmen941Up3Ph3xsF1mq9nNKJ6e1lk5QmSDxiPrWaj89ak8IxoNjb/7
hyhBKEb8JmXERJEQsctLo5ESHuKWt6FPxQLEU1yLZ/Mvo8//rMoYKNEg9vM7
ncMpQfx0dcMibipiw1LnEGkW4s2SWUeYIqS/RLuVMx3zRvXKZL8qkvOTQ1s7
j6P3H5yx7J0gEHHS+JRJmDdiRrxREN0f8fwh0aNENogjw3RbmBMQ+z49rGO4
I+4+ivVc6IyY7ENIcklAYitDgnird7iOhSEm+yiRfMQhII/HRDxtWrMPl42Y
1GWn7pc5gnIOVw1Pq5RmOF0HVletXgqZNdD32rhjl6dVgdWSObbVkhpY3O1H
PeuMHA62dRuKDUb5GJpf/Sbmrjpw+jbK6LH4GciSTDB6Psrfcmw8U3hb0fVN
sSldwqejz+812PObQI/WK+S+JLXeMfnqgkkRq25sKGeZo+t1ydQyTGyIOLvH
lcESDTrfPf58ng+7GfGIfEl3Swm6Hzzr99zUMxTgNsl8KD5WARbLBeP5P1rB
wdL9k3CxHDoweq2sHv3eiH6X6hnu6P6Zd2lenNC5y/108p29yAYxuW6lnp//
9ZMkmYxHSP7JXprFsUZM6inBFksHkaoKVnb45HPm1oBwvEkJZ6UWIqavmoTd
0ENiwrcs3nQtLNgYFCKN1UNJryHhUldiPdHid04a2wAzl6ycjw2Tw+6TiTWy
N52guGW0vsRfASV93GaFmbeCp8eykRK2Brb4nNjIFlYBI2bBZb27FpTb63I4
YXpKN7P37C1ylnM1nGSOXczvqQH7SzwNw7AOMKAX8ZrkVD7ymemMPRFWKYDl
dobp51ZAiszmOBZcQPVpHizMreDRKsD91Ny5WKcSfiwbJKAnKam+zNimuWfp
xPrUIirVl/mrAVwnnp4u5+2D6qn9pkkGlMHkzuQ48Uo5yA2cxvJ/dEDHxq1G
h3Z8gmHJ+DU6vQLUV96702LzgT8weBOXh4PD/ofpQqwc8gOYLFGGEipGVfDY
HkqY8CXDkEb4w9mVynIpLQ9C1J4LsU4ZrBg+DaMnlYFqTh0DJ+JUUp9o3p1Q
LYvwb2T/t4I6T1d+UDUUqIcnZNq/hYBPTiaWgeUQUp+20VEUDM8gLEk8vgwC
eq66LY2ugqB4g6GSXB2sO7X5F49WRemP7tM6Z9JDs6FY+yRV6CeDsoUp/TxM
S2Ga68JQfYoCnuSOdJCw5XD9nnoz20YD5acfBjCDq0G0lxmsT6mGQzeOyw79
eA0Nz4Z3spzLwX3u405hQA54dk/JEtyVQcJDOzccL4UXqzdFSJsUcK3D2w0j
/KLRK4N9TG8N/JgX9VFA3NeP857HCkdVQ0P1rIv6wCp4//TATek7HZTl91ob
YfUTDr1YfV+fUgk+C87vw4KLoaBH6w62jQJwz+C/PBoOE9fcB+y4Gu51k5yg
J2ngUtysfvjfKrgWVfFKuE8HC8TW4eKKf7D58omX7LG5MCR/urMoQwbb67sf
YnsQ6yKHIjqNSazfIucNxf/r33T6cCmHmB+WRB2oYhHx1ilbW39mai2lw07q
vT6w7bQXNVfBZddCOatNR/V95e8y6UbbSswLm4vm1h76SunR776qV4gdCyn9
d13DzMG0wgpgvdy/lssj1rOPjyUKMRWl5072gUi7wOdxNWUQ/DrcVlKrIvyV
+XxucD0IHCz6JghvwZ7+A8fi68oAK7PfzL6sgU6T5BN6v1oYw1iBcxyVwEgL
eChUNsFw55L+drti4WSooZ5jSKxnXTv646VaeP/Gs62T8G/7QznvhFlqmKIM
aOpcWAcVjMDH4pIqmPDx2iOxTgcT56YEW11IhIp8ryG06HJ4t7voNydBB5bq
r0kCH2LeH/P1HW39N4hcWbOFq6kAWo0igj32N3S+vD5DtFAO054k7GN7EP9j
z6l9aNEqqr/Zm7X5xRzDKqqfYXhw70YGcR9E3jOtY4yohmudpRLe1Wo4c2zz
BY9kCYSctD3F9CbWQ/ff9QkoLAJ1Ydpy/hs50Nutn0qZMpg3cautZIAaznGm
uPH9ddDDR1/LmEz4uUnqx+K7VRAy7dwL4ZEa8I3tMwcTqeDZnU4Fo6Ee6vbq
yjkj1VB59/DRwFn1sCqxd5EkMxV6q4a8kB6sgNtOF14zfaXg7/LhKFOKQ/fv
vdpZARVUH+J3h9zDpUwVWFa3D5fc0ML6pMPmrr/TgTd2a66AUQlWzqkcHP8N
aSd6P5YelMOXxZGLMFEl2BQ+288k5ptDrXIdK0ANRyYsXsBnVcF3RcxhT+s4
mBl+4yDbphx6vJxgK5mihoCAcbvptvVQ5mxXwxqlgvwRF32Z1Q1UXzPrd39T
eedq4V7NnRzeRA2wBoQ787NrYW/dy/tHLj+DTTbJLEluGcyM+hwlHl4FX3qo
r0r/1lB+qmCXjMUXNsKlk4VfJJm/4N/nvU+lTZUwOawmmun7FxYPGXiY6U08
J0c/NLICcIjanbCY/0ZN6Q13T/e2lgzQwfBRy48Fe6YAe9AjF9HCCjhSHdMz
OKIAwna49qdF4xA0mjEaJ/xm8xe8kmOoAvv8tRkCiRK8rILfCP20RBw7rdTM
/xHc3J4jFdwtA8WXCQ+kajWMeul/XD+mDkYtSjem4SoI5Bv2cw+rB5PAf3Fi
JzkcD+yHd0InjD4RMV2ULYfhGaENsvo2yC267Mt9roBJhxwm8Ze0UDptZeJf
OSyvFmg/Y2svyZVDoEDvxaxug6gvh7vTbuvA6cOtjs7Mf6AuK7GTtMphr8h3
E92/DU5lSe0knXIYZDdkOObdBhET/X4ITsmBCY+TOdYdwD2TnCx0UMB2s8pL
4jS0X5i485SacQHNt6SeDcnOPd7voc9DdtmqiZfihJEo37v3mkokROejz23t
c5tPR/vFswcvnWkpQfmkuq9XS8QClC9amahyEdmg/d5X/S72p51A+72aK2OP
6YvQ599xapEzLqD91PlyyTL2DLR/Wn/t3jueEuVbHs0KsMFuod9L7ueT/P/H
N9Z9LOsZF9Dvv32uM17giT5/g3T4enYzshcOjD5Mf6yDd2P9udzlSpjcr3Mb
/XET5I61jBN66eCpm3ysaGw17OxxNUjkkQf34pzHSwbgsCPWmMvHy6Chd0kn
I1AJI32XdLOMUIDHhuPZvCwNcB8lTBjb9zPYC37tZxPXhyFaXyKlFYDg7+4F
2HEc5hnuvU5PKofyqf0Z+F8ltMa/YYn4SnC+9FrDctaCydYTWla6BsY9b9Ey
RtVCce6PPna74qH9SmgNxw3l38i+0iQvyhMZ4W/0sM2dEy80r4LaApq96LwO
Lh0xC+UnZUNlllWCeKcMmn6H/hE7lsIsZnIw/YcCXt+j96OtksOd476rufYa
+LSm1Bq3lcOb/eN4+rud1HkEst88+XkmDqULuKfrIJYXfkTkkQXPv9MmSgbI
wCrDNlUv+Qu9RkV0swwk4o4b+QaWEThsOMzO5RHzQusci2gxsQ5MypFFisfr
4EtZ4APpFzUsyIxYyV5dBw6BhbEbUqPAI8iXy39TBtd6c67pu6tBt3DSRuau
ekhe+eSDUKuET0s+8vU+jTB6X0c9a6sc/MY4TuOeRvdDQcOzKSIhir+ttENf
igWI9x2bn8cpQfE1qb9N5VdonVY4S0ExuY/BG296lDlDDuPfxAvEbp0gH/6w
kjNeBRk+wkP6InR9XttzGhnuqD5qZVTveKEzYlLvmWSyHyOVb/lff3CSyf1E
kse17VGyzNH9TOqukzy82/Px2GB0/+9J7nVZaoa4QGDv+UgcRzGpy06tjyal
Du2Lv6JYOvxeNSZNQ89Tn5MVIiFibf3mfAkP8QgwswxgovqmzVNPY3w64hdj
G+jBetQ/qbDKM5mOo/olq8qv0ywliDcWTn/FFCG+cj90g0iI6pNyrhn9EQsQ
WwQf9pLwEEfYBpxiTkD1R/PCbUFkg5jU6yb56he1tWgD2v+oODn/qN4H8RSI
/MPyQkzmQ6j3/++8FMnl6n2u3B6ItZaX/nV+RP5v9m/lUvZ7xGT+lOS739au
Zu5C+yvaM+/f8rYiJvVtSF6wd1wKxxrV99ydeGE4Nhixpkp+TGqGuMG6w47/
A/nXBcU+58VpiO/ceavo/Ij4keTnDeERlI+qC7bXy4IQu807x2Hu6qT6kx9c
nvme59wMEbs+72E+1MJGy4QtzGV6WOnuMEYyQAU58cUebHoj3JhbtYTfUw0r
faZvZPLqYVL3h6Mlm4i49mviI+HBBlBWbyznBKrB/s+Fxs6MOiieMhSwb2rq
/PZuya+5mIj4vPcWdIm0EQwWM1iibCU4bvotkF5thLVVmrP0fCWcG+6IMy40
wsP6nTaS5Vq44q00wkP1wB20GtO7K6n/o429+5b+ghySa/bdFLah3x/emGZG
O4HW46S+u3zLrnrWezmlR/Es1XkD960cYnae/sHyaodQf6MPQjcVxKy6MY3/
koi3EoUumIb4fc9fKBkY4d/a2p+JE9UQyVHdEW+ugyWyxOXcdToox28doOv/
wYXbBx0kA+SA38zryNB0gvUC16ESkQ5m6nee1Yv/QRp49aNNlFPXXzwpzQK/
o4LhL5d/5DEaAKKzPgom6yBd8zqTZ1ENvIHn3PgspNf50XWYtWSKDhae624n
GlINWz23XtT7VEHxp+OvhC90VJ0oqeep0iWoWGurYN26n33xlzr4W7arSH83
C8pCtozAbWVUHzZS77NkCP0W/0EWbHBIOMEcI4OFs+uHO5qXgLPCqI51RkH1
HSP1QN0PXP8rHlQCSae9PflnFVC8JOm1OA2Hm7OffRVUqKk+W6Re6Dp1n/60
dGKd/qdppKRSDdfbOldyT2tBH7roltRFB8nb3v7lCJCe6IA7S98Iz2hh7+S7
9QyCsyOzBuFEHNpfPaWRQfxu8pwu+bvFqet1rHdqyMt7akAjfvclS6+HR+hP
QTA9jYN9K6P69pF6nrcrZ52Js3kKvfLNRdL0MhBvHBFPo0mgu2zZKSZUUudI
yHrKgJKN/V17SyDl59cQ+pxKkFy5Gc7mF8HamTXL+Q/k1LkJUg/00feEZfjR
IrAevWUD96EcLBsu72U3V8K769dtJa0q6pwAqRdqONB6EdZaCQePGk0RtRP3
4RzLobitAvYXft+jL2oFXcjc74LRCjjukPBEUNgKv4NYCg7BxisvNsl+t8L9
QYeDmKfVkNuxIl4QVwcLFJUPpGfU8NcT1IzYOtAfE/WmEbwg/8Qm5qs6SPue
cJo+UE35y/nbelZwBhH24eYGuEc93Ji2aSH/lhb6c1f3xlfooX81z4d7Qw2M
zT2eCO/XwX2nLbOwjxpQvv48iz+uFjj7hn1iQhZ0prS4Y31lIM6ONAx495fS
lQwdHBolvY3Dmz2zdKzvaliUJl3IX6GFvhklHwV2OmC+zfpuPyEKHvFW89mv
0H7fdYNu9UWcKGo/nOy7SnLl53XLrd2jqNdfC/va4xAd9T8k+7xS9ZM/1v6R
9EH9EDuO2j7mspHeENlXlqo/GlhjFjwXxd/xDlsX0Gionx/ZN5aqF/0yJZ7Z
ieLz7X+eaYRiVN9F9qkl2Xzvfm/JBxS/k/kwqr77f31oqfruq2vbWc4ovifz
ZVQ98v/63pI8R9n+U3AXxf8LzHd/5ilRfZfh5ecr2DjiyS0bi1lKFI80fHSx
w26h+q746UeSeRjissdT5nFvofgqktfvhtgN1XdtlC0eg7ERX/EwiBG4ofmT
1K+l6k2vDr0q1iN2bs8bJKpH6w9aapwf/TGq70qeqWuSCRGrox8fl0ai9Qnp
30l7gCJ5A90D8W2v/crO5Wj+WMPwcuT2QPWujBshEhYNsRttvgezB5pPyfiY
tMeZzx8g8e5yPV+F7qETdlI/KO6wlaYztxVOHHFw+m2G+rNONQmpZWUoADuV
MWhCWzPEh9Gtx/ZFertpDpfypbQ/lL4u46vRFfospKebtXfRJFEz0s/1mR+w
uDAW6eMyTn4IEHkgPVz2rvDVfH+kf9s8tLKNMQLp3Qp+pltLcqsgQTw7n+NZ
AzudtqlY56pg2u0j16QXauCrIOOS/roW8k4G5HJ89HDv9Zc4YV0VMIdty+c4
1UDgynfvykPV8KA2r//223VQPXHDKu4HDbyQ5vXCJ9XCTVH1Jna2FtZOedMb
t9FTfdwxjyXXxG7N0HOimyv2RwEx62aUM743Q6LX7QhpkQKcgk0n8380w9X/
jgP3I9ZnsYdduOxmMEu1LuQR78/ZLD0tdUXccbdmCXteMxyzch4tuaeCju8j
7LHBDTDv2I5aVrECKnHncoYEfd7Ovv0n8zOb4f8B9isKyQ==
    "], {{
      {RGBColor[0.6, 0.4, 0.2], Opacity[0.5], EdgeForm[None], 
       GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxMnXV8VcfzsG9ucnMvyU0IIUiBkNBSoKUUKEmpu7vQUnd3d2+pUqNA3d1d
qbu7u7u70b7P0xne7++P+Zw5c2Zn9+xZnZ2ZM2SLXdfapVgoFH7ZulCo5VoF
agBpI4FOYAjQXIjndUBTPve+FSgDFeDCtkLhbOB08NkyTU/gWmjXAD3A50l5
s+cz5ZWAfpm3svvn1fR9gcZ81guoz/xaMp33A1KWtKGZt7Q58zoQmCPl+uxx
Cn8217OyHP3y2ai8l3dyTbz73MAz8J/P9byU1ZJlac/37w0MSpr3w5JP2vC8
tmdd9sl3mjfzsbxvI/9qrlcBY7Lcyhidz70fmzTlXUgFPE/F3QWMpRKuy281
f9av77FQyjLdApmf8obx0eYE/gUfn7w+u70YabuBBZPX9C9Cv5jrRcBr4Jdz
vcxy8EGGATXUUxdluC3zv5yyvUC57gEWzzzMf4m8KvuuYtAXA5ZMmuUdj5x7
C5FubmTPBdQi/wFkrkiaFYBrwV9E9v3AcilXGR/w7GauNwH3FIO+LHASfL9w
3bUQ7a5vfu+FyOuhQsi4gZceTT5ngl/MhzqKD3kkMBXaKcBB0K9E5nNcnwW+
AH+Z60vAT+DvcX0XeI+yHQb/ocDN4C+R90PAm+DbQjsEnm/hf926BJaiQSwJ
nAT+FHxt8OwA/hz8zwI7WPfAU9BOAD7vKhQ+A75qiX5jm7ePlLJNel+bNPvP
KG5O47pRIfqrNPtRY9aDbdG+OT3bsH3U9mtfvgP8FK7rA2eCHwa0IO93BH0E
7cNC9L1emXc52773o8hkHqBU87/+bJ3bp+bi2pHl6JflsNz201ljxmyZxv7Z
nmWzrJ2Z1uf2C/tPAy8/Brnngs9O+WbYvrJMA1Ou+cye379/pps98x6Sclsz
r1n9eND/ST/n/8nPvjIq70fn/exJs/80UZ6xlOfClC1t1jjq1fGkBZ754Lm0
EP3KPjo88xuW+Z2XtFllGv5/no3JvIdlWu8PKUafvi7ztC/al8tU9HSeTQOa
+fBNwLTaKLf9cdYYMD7T9KZs4yjbleCHF6N/27fto/azJYCdkFGhAZaBx7g/
tBBte3TyzZJrP16s8L/+771jhf1/0UKMIwv9n3dYKNNflXl5f0wx2pF91T7r
t10R2IMyNJN/U12MG/b5ZWwb4PPDfyv4G/DcD/2CYowBBxRiHHgQOLgQ/bov
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
msnIWR98ILARPBt2x7rnC3i/dOwohIxPs04O4L33B9aiPJfAczEwxDWg80rm
/U0x7tWV+I3dX1nvX/BtFyzF9/5L+Y6nrom4fg8847oP3h+KoSvx+n0x9kXS
XRNNBK4Hvw7YxrqjDn8FXgJO4l02hNaRZTGd+6yvkP2dYxb49/B9B5xeG2lc
c79dCJ2M85X7r7/h/9r1Hc82pT426Y613UB4Hucd+pGulnVLEbjFub0YezT3
XycjdyPuhwDfIONnxwnHpWKs9TZQfjHWgBsDWyN7q+5YC34H/x+OF4V473ez
PKb9tRj6Jq+/5LO/uP6ZeSvTe3U0QynDHEAzsEgx9k+z1t/f59j7L3n9CDzL
s1Ph2wS+OYFTwDfmOkfKdu3s3lMF0795X1Mb966tneucx5zvxhdjj/h1tgHX
whOS3z3EZsCJ4BvwrL0YtK+S7lxtOufrmZTrW/dEyNqOutm2O9bNCxRj32l+
jv2Oc47/79TEPs/7RYuxL3ROWagYe3HnIMdpaY7VPyD7H559AX51rotdn02g
TZ9WjD2Gc7XrCOdr50BlOA8uWIw97rc53vyUY84rtIt3a2Jv+Jb1Ct8F0PeH
vh/wYeZhXgfkWGH/W8PvSHv6E5gX2pLF2Nv9nmOYOhDHsRWR8Whj7BWXLsY+
zza5bDH2bbafZYqxn3PuWKoYe0f7sv3m7+w7fpO/8rvYHmdmm3Qs/CPHQ9vm
P9k+lyvGXtn7EdXQ/xata8pT5lvW18Ycor7IeeQEPmAdtFpgeG3ond3IzFsN
/WA9eAVaXU3oXJxv1V855xaT1/vG2uD1/UdWQy9sml/It4FnPWpjHFeGc0Sp
NsplOX6Hp4n7KnBRW+hh3QNskutj18ZdPBtXG+P9doO4Z+wcB9zDS8wDbS7b
LOm+KMdaeM8cs12D75Njj2tc9TRe1eXuSV6n1oXcvXM/4h5ixc6Qoz7n/pTh
Gt61tWtsxw31NM253m4rxlpJfdzNyLyyLdbLXtXlzFo3e7VvOif4fs4L6pRa
8nlTNfZXvvPFbVEX6iHUNalnUOfcJ+8dZ9w39M76sey9cy/ifNWaew/HVPnX
Tt5q8r+VspTj2Nw31/8H0Wbnok5GqLimHh51jwNcSDm7a2N95vd1n+oe/yJo
89fG2uIf9luj4Z3X+RDaArWxRqkiZ5L6F+r0L3jm4flI5yKej6+NtUUPeI6A
ZxN4alj4z+eZCVAP/VDoG0J/zn5aF99sOJ37J+baH4EqbeBHFtjnwXMevEuy
F56hjgnoURc6UNu28/nmlPlBeHuQRwWoL4Y+zH2B/cW5UV3W3fDMAMo8vw2Z
tzbGGH0h16WQf6/6RqBaF/rHnpThF/gvoQy7ADtblvxuffPb7Q5tN+B87o+E
/9C22JvZ19QBqO+6BPlLI/8BZO4F757ABTxb0DzqQpd6OTzLwPMw+NE8n1SO
b7Ml8rbwDA/+eeAZ2Rj128f5kLLdAN9c0EY0xjfbkG/xE33oI/DRjmeN8c2m
AEsUQ3/6cTn2++rZXuP5q40x5t6EzBu7Yz/XXIw9jfr9ajH2Xp7T3Ir8m4A7
yGOCfQ05xwKtpPmd8lwFXuX9G0uxV7uadc5MvuffwElD+QYDGXsHwM/zXqXY
M/Xk2lyKMbu1GHsgdfQtxdhvqdPfljK+zTucx30feNtKsefoz7VfKfYuc9Cu
Zu+MvcUBlGN/4FrS9i/Gul7d9Ch45ynFPD8nvEM7Y+3s2tw1rWvYuaCN6Iz1
/nCuwzpj3XQw8g4CroPvMK6HAjeAXz9rbWsbgHYEcCP4QPIZUIp9yebU2a/U
2ee8w4BcM6qz7sy1kvri4fAOK8VaaSjXOUqxBryGNFsDp7umgdZZinXksFwv
qC/+lPr9BPBAeVCuJdV9D4a3vRTr2aG5plDvPHuuj9Rlz83zuUqxVpqfdtsN
DAAG5xpBnfUYdQ2lmLcfro33dh/hPKNe2TnDuUhdsnOA84M6UeeL021Txeg7
u9FmVudbnsz9udD3KEZfeJ9+eybwsDovntc0Rj8/S51AMfpXBVq5MfpMI9eG
xmjTzjPqd52rDqkJPZQ6L89p3S+6x+xbjP2i5w0P1cY3dF/2YG20Efk8O5Xm
HmqpCmsOnm1bG2eevusDzheUf2HkDC+GHlp92WHO0bWxP1E3tgxpL3dOq41z
SPdS7vceqY124f3StbFPM/26mU592nKkvZZn29eGzm3tlL8S9Oug7VgbtHWS
PiHTm3YA9TEbcDP3r2TZ5XsPOc8C0xujfibmfPER9x+qRwZe6ctc20JfA17N
siv3SNrtEcD53D9Du37a81TgH9rydN5tGrAR7e7cJsrdg3ZG+kW4rkp5P4Hv
XWBj5yG+7ZvAs7WR/yZZhhbaWU/PsoGB1O2AthhPnmAsOYV8TwbepOz3A4/R
Nl6rC32f6UfNS18GmnpSXp4vzHss5PoMeBpYsDH0aZvm2sA8vkyd2xnkMxbo
qAv97YSsw+vJ98y6OA+5Ffz8ujjTeLAQe2rXEjdBP6cuzj2+okzX8057+s14
5x2Q/4ZnTeCX2R+AO+C/qC7OOpbpDH2qZ9LfkfYG1ynAapR1VWAe2tUqjnXI
2R6eJeBfHGgh7WJc34K+HfQhvEtnNfa3k6GdUI426d7YPbK605LrNeD4Yuhc
d87y71Ub61z14+9StrHk9zFl2aM29LjyHUS/u5mxe1XqfxzvcgXPlk8d4S4p
fwnq7w+eX0fZFgL/BfwK8JNpS818k+nNzFXQf4J+KfS7kDl3bZxbLAr9N+hX
Q+/Lt+sDLMA7LAjPtZRnjcY4g3Bf4Z7iJdrOi8C5NfEd9sl3ce3jOk+d82Wk
vRQ4wnUoZa8BJoLvn9/B/rbsWOqId34UWKoxzlEOh/56fkPlep6gPlhd8Xu0
7c66aCedtO1b4D/YfXB+t1k6032zTuzP5mN7OZC6/50xc13gWOrwa65LI2cy
+Lfgy9fFOHVwln9/+H+BPqEU7cN2ot6ji7oaB7zQO84uPfNRt3BAfpODcg14
cPYpxxJptgXPnk3jWlG9wKGZ9uAcK+U/MvNSD6adgGeO2gqo/z8y+8WvybdK
Xo9Kuu98XJZzelvop12P2/88Q7XvLdcZbdeznlW4rtwZ/cBnk7Jv9lAHqH7T
+aItZJn+8XLQTeseznx/zbW2+a6W+R+f+AmJWy5tbXwX9zXSfPZbLIH/e0/t
GXZJuvzyTk5+7V08O9086Sdlnaj7cr53rvfMURuVbQpxVWfnPvTUpM/S3UlX
1/dJjr+r5HP51Kd5rnJq8lu3p+X3mJL4USl/auY1B3JmB9aqjbPwaf+nDNOz
HM90xLh6Bngt/XAP8JkN8WxalucS1mFfQfuyIWjTU84ZnrfSP/ZsifOPqVlO
z3J9f/V+i5WiHrzfn73bfsB60NYm37U6Yr2yL3n+4Xm2Z92l2Od7DjMjr/Yv
2+iUfEfPo10juF7fi7S/kmbxUtS16yv3+p7nul5wbe3Zq+sC9y2d1EcHsCb5
tnMd5BhSG2fKnikdQdqTeKcTgUubIn/Loz5gmGePwNrq8uljezB/zSjHeZ1n
h+oKNoB+NeNVC3W1VF3oEny2NGWYg2d/QD+YMv9LeTdwXev4BRzQ+L9vaR85
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
3l0Feg/oZei7t4Vtim1zDegN0HvkGvm8bCcToDdCb3TtDt4E3rMca8Grsz69
XpW4duhXJF5LO/q8Meb72auB6+elPbl25k8VYj2tLbpnJdqzX55pL00e6e4t
1F1+mWuPi/Jdn8o0fgu/7WWZ1nSmV//gnH1x8ki/OGXqP3t5ynBuvybnd6/O
708U4p2uTJnnJ64t+pX5vtq3n98dNu7WgfaHztHadWsrd13i1pV14vpH+/1r
Uv7uqbv13V7JdYVl2SZluTY4j/bSxvh+onb41P9c9IOLesQ64vrk1cdU/8Vl
3H9B36Ex1iTaudyY86Zz1C05j7zdEfPXBjXhu61vLNPQf/Rtc855l3xGliP9
Pjk3mdfd3dHuHSfn5fve3RF2FM51t2Y+2svcnOlebI3yeK9/rXlpr6tvpT6W
+pjo8yy+VSFiMPhM21r9vfWb3DL79Izk1wfb9926EH7/vv+yhfDJvjfr4fbM
z6WG1zsTN4bEHVmGJTLNfz4fxcCV829j+JNpM6svlr5P+j3pv6UflscKa7WF
n7N+bTuP5TnvuVo5xob7s73ZHh9I3H78QI5BN6gnbIu0vWvDr0yZxjMR1/fq
CcfScnyDtdsiv4fzW96Q7UQ+fcz0L1OOcUYeyXq6K+tw9rrIZ8NCyH4s82qr
DX8z9Xten0787Lz3vZXn+56d/MYlsS703dMeWJthaeoJz8968t6x2RgX5nV6
lvHxlPlE4pbBWApPp/xnM61l6FMbcUCeK/7PP02ZD1DHw1vCbkh/LP2alszn
+rONyLTPJ64MfdMuLoT/mX5i+ojpl6aPmXb1+u29lPz9ayOuh3KNq/BC5n9x
plFG39rA50vcGCUvZ1lfTJ6XElemsRdezTLor6Yfmn4Qxj0Qvxy8X208k67v
2usp//JMc1kh/ND0R/O99Q97J/mN5SLuc9O9lmm9vl78n3/caylH3rcz7RuJ
K/OyvF8o68G8lipE7BH9cV4uROyC94v/K8v7yaP/2QeJz1YbafTb0cfuw6SP
rI14GfqNGTNB/7Sbk66f2vKFkPFh0gXp+q0JplsuaZ8k/7uZr8+NcWCermcc
l/UdejbLI65/gT5GXyZunAT9lOSV9kXS5f088U+Trg3RgNqIpTLL18irazxt
wbXFHFgTsQ6+ybqSX1+kCYW4fpP4y3n/Un53699610/o2+T5KnFt3gfWRsyX
Wf5IXrV1n+WnJE1/GX3OPytEHAZ9ll5PXtPqszOoNmKp6MOjn5/+QRNTxo+J
yytdf5+fM61005tu/SzPD0mf5Rc0S764Ph0fZpn0EWivjbJ5r7/RH8mjPMsj
7x+JS9fn6bush48K4VskjzEofiv+L8/fkv+ffPeNk/fvxI01If5RluGvpMtr
mln++foWGYPCfYy+Hdru/uf3k/zun9zL6xsymKv+R5sV4lqT+Od5rzz9T+Qf
Vwjfg9rEpYlrM/xtfm+/kfsf90H6j+ifoG1x/5rwb5G+SMqsy7RbMwZuBSxd
irgZlsH89UOoT37foyHfRT8E8QE14c/gs6ULsQ/znfVjkVZJunkqR3tm/Vjc
K61QCL8FbZ1ny7KV/w+P7V87ZHmrievzUM207rV8pk+N3/mP/C5XMwlcBvSs
jXMVz1Ia83v6zaz/Tp53tEUsIK/6mMmvD7gxTPQ3cT5x/mvLMd85wLH30aQ7
//h9/H5+78NhfLs+ZDrnOLcNznnEtI7lTyXdOU2fc/PapBDXXok7DzgHvJz9
1T4/IfuU/cT+93XS7dOOmY6t7+a44tjkOONcqh/OKdmGffc/s0/YrzbI8dy8
5ssx37Fj4ZwfxN/I/mq+E7OPmPaXHCPN13FY/3vzOhX83u7wO9I+9YZcz8wq
S2fy+L5Dsp5tf8OyLzgeO55r67cmadcAPugddoPaIG6e39fvpT+gPsDy/zfO
9w76p+C3tYU/iusT5ZpWW0T98M13atKGpUyvwxM3vsvw7BfuZX2PNXPcdj5w
/Jc2V9K9jkh8vqSrN7NcI7Nszi/ivt/tbVE+faHs28ascUzTvli92441EYdA
+qYpf56U+Vl+X8vi83mzDnslLr+xecZkOd3jia+ec9nYpK/LnrfTfV855M+X
7yDvuORXt9Od44zpuvL52OS3POOSLm6sr3GJr8tYsg7wUCmej51VJyx4hwAP
l0L/M3+OLZ4ves74n36asg2gbN8hbzXw/uDflEM/s0D2/RHIGK7tcfah0dl/
PC/0nFC9sjqf8Tn+zAnvUOCRUpzpeYaobtuzRs8c1ZFPIK/B5PUTea0FPgj8
h3KcHXrup267ng59YDl8YraCZ173vOodwGd3rw19ZjnspPVL2AD6UOh/QutB
2kPK4fvi2aTnkOrOL01e7Z03gn8Y/P+Uw/ZZW+utsz2Mzm+tPbK2ytpK6xuh
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
BUq829/Qn4d+Wn3kuVrmq0zXHcasvjnXF97/2TvWHcaFvjXXL+smXZ92/RJv
ye/meua33nE1xnX/tvCL1u/uX/J9CZ4z64NHv3r9IWdCfwH6NOj+JOZl8LPB
Z/aONYvxpW/LtYz30o0doG/kP6R9UT13fdSb6xfjPN+daw3XBrVtsWYxjrq4
/vD61N2R87zPbs81o+nr22J9YdzdOsrzGvQLkV8Cfx38YvAebbE2MT6w/PrM
62MpXf92/RvvzPWRsu7KNZFpapHzqrpv5FTbwgdeP0xx10TGv21tC193/SrF
XXcY+7RM2jfV55C2Z1u8nzFpxfVd14ezBp5X4DkXnntynWL6euhvqF+CPiPX
WeZ3b66DXO/1aQtf920Tl2YM3gpp37L/+e7gb4NfXR/f17WVMWNXpa+tAixT
Dv2Q+iJtmj+gzR3bGnNkK8+fYy4+RNtY2ulXQHsl/O9dv3lW9jzfdi/gufpY
17q+1Qbh1EqcZ7pWno3nJ7TGPDelEmeMrrOND+HVM8xTKnHmafrTKnEm6drX
2AxePbecWonzW9fNxkVwreu54umVOGdzbTqtEmeSrnGnV+IcUj5jMEjzbNM4
E5bLM1hjGJjOs8GzKnEe6LudWYlzTteyZ1Ti3M/1sXEUvHrWZwwJy+L5qjEV
5PXM8L5cz1rXZ1fibNA16zmVOPdzXXtuJc4DXbMaF8HnnkMaq8DnngcuhpzB
lfD3Mw6BvJ4ZvsB3eH5Q7EsXd79eCd/CFTzXYCwdzvdaCvxW8CGudVgDncd3
PBm+xaHfDH0w9CVI21kJ/8llod8OfWhjxP7SJ0Z/mA3gubAS+9aLK2Evoy/d
TPcglOFuvu0N7GevB9p6RKwR16OuRd+i/TwELEnaJcoRo8tnP7jvqg+fwAbk
3NM77BHvAy6txDppOcbmZYGbPJ8gnyOAA90/wr+x++Cm8Mu0LJ6RGr/LMw39
xFyPuZ4z9taCHeHnc6zzAXvnBurhGN5vfvaYY4BHkX8pc9pu7REHUX71yvrj
HMZc8w78R/lO4O+aFvwz0n1P/vsg53HqrJm2vaL6u474j4Jx7R6EXvH81fma
Ndj98K/MXHAhZfgOfG/SfoKcb8D3BH8E/kb99z0vJ6+3yetw1zikfQCeVdXD
038fqo9/l4xsi/in4nu1xdU4qDu0xX9N/K+EtgnSXMfe1RHlM+6edrXa5eqz
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
OT7P/gr4zZzAvlkX++jgM8Nchj0y5jO91YcNCfsZvafncHWtfVOwv8bvZKzK
zsZ2KWn/k65qs0tX2wtiK4e/y+78iyXzftK+Lvgu4KPTT2WvQp8fs48J9nfY
6eH/skzjW8p6R+dujdqfg3fglqh9X4h7jF8IOb4kD+qb/EA3+7jgc8b9x+/s
BbX7YdJ2tf3TtjVjHwUbc+zLsS3vJpmd4rbJ7Sq6KW7b2F00jl5d7f/wovgf
Je2HcXTMvhT4Q+ym87272k+jX8w27NTbQ7zuSpfi7xazHwb+FvhDUA6fiE+D
DwY+FztJdseu9gPZQXlTV/uHbKdvWjul21T++Jjt9/EnwM4fX4CL8uwrAA9/
gW+CPwP+C8fF7KOAXwJ28djfYxs/LG77fdbZ2O+Ts9bGpwLfCvw4jonZrwJf
CvwqyPGn6Ct+u6jbPlTP8iHl9u85Nma/Cto+MWa7ftrDJhq7Z2yeT4rZXh5b
e+zfybGB/yvY6GMb3z9mG3bsx0+J2Y4e+/pTY7aRxy7+9Jht2LFbPy1mG3Zs
3rHZRxY7fGze4WH3ju085bCfx4adctixnxyzHwBtY7dOm1tt1wtsp44N+Rkx
26dzPDBmu2/Gc2bMtufYpGMzjh05duPYqsPDRn1AzPbmnJuj5+fjpO2gP62x
7Tj2zJ3F3z5um/G5oj9L2jZ576TtoFl3ztQz/WnSts7YRMNjHYp/CfcWH5M9
9Lzs3tW2yy9I/oukbYL/F7V9LrFqsSsmfnWnAtvYwsO+l/UZ+oOtugP14buk
bWCf1TxtutKomNcH6D9YI1RpLlXZ3TapCyT/bdL2uUWaZxU22ra0E/sLXWyn
e0xH23SmVH6+5L9O2rb31LTtOqkXXQr7kuxJnpG2LSd6FXQv7F2yb8naFB7r
U3QmvMfshZ6eth0oOpYhaucs1f0C9vRp24FSnrUs51nPnpa2nSntDUzbhpG9
0gFp24qib0FnAo+9U9a18FjbnpW2DSnX6+y0bUXZN0WHwD4pe6ToWOCxj8o6
Hh0Ja/lBaducooNC38JeJ/uc7BnAY99gIfbvSetn0LGwx8r+6pC0bVSpax7+
N0nbkrMPin6FvdBF4v+UtN5mseifk9bDnJO27erW/VqwbuL2Sxictr0q/UBH
wR4u+7esodGjsI4ekbZ9K8fnpm33yjiHiz4xaX0O+8Hk7AkPFb9v0n1C38K+
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
d6odRyFX9K+6ficoNde1GxO3/WgL8X+sdly3nKDfpR2wJPLL7JfP+MtS/pYU
FNsHjBw/MnxgqQN/2N+rHY8hX8d76T7dil+b0hq9Xx8qHSHe4zr/mNI05sHq
y3ncX3SiGssS/vFgXeCnpjRC8mv0j21U20+wplG5J5SeUtlxceMUEzeDeHfk
YBIP0LN0Jv5pusal/HuLjQf3WMI5fiUZtVWu71NCaX/VFyuz7DiVG6u0kfVC
lfUQPCtfaW24m9aGZ2suPVjnB2F7zHpac7ZIe10upWdVz3SlZ9Cx00d8N0V3
lsz22A2rrrXsSSsdrXEdovF9UWE99jrxPlXqK/4nrOeUjhM9W3XMUnoWHb7y
52hD9A4618TaQ3RFyni4leCBFDtn7jeyyjHjqsDkVH2fKZ2EjYbyL5ROFb1e
+VdK/UWfp+dwhNLMqOel6ItOZX6uczsqzRJ/F+W96JfoI9T/TRXW1V/IfqfS
86IPStqnuT7Y1WWDz/Jh2KFVGNf8D+XXx32uZcpztQYwQoudM9d6S/e9KuU5
+AR0XXHrm3ZTalXsOVihnpVoylgj8Mh512Ot1M+WboP5POVOkvzNOt4t7rHd
pLx33LqzG5XvGrdui7UA+cmST/+nbtYLyJ4i/nCNdRhYdaxb9QwVpz13b5Hy
XJv7cJ3Gey12hHHPx9uH+9K83ngty/QcPo/Ne9y+m5erv9Uq/5OOO9Qa26Wj
+GsjPo/PTpGev0KlbjrOU56r1EX0Qbona3WvHxG9h+7n7kp/65mblXAb24OF
xNoVrGS+CZLfqPQIuh/xIkrd8R3Tf/rDRvst9dQzv059PVvP3FGqr0HveR+9
I1n2csTbgXvBHDZgvH3U6Byct5+KXQd+TxejI1WawzOsepoxb8cGqNox78HQ
e0fXaZVSV/Q2us7pJp+jTvrUKLqqyefAvblV16hP3Lok+ORf5tm+EDtD5uwl
Kc/feaaYv+8anivs+7D9Yy7fnlhGxBnk+657WJny87VS96Iu5XnfH6qjZdy+
sr/pmkzVd+D6Gq8DdgvP4SrJZ1OeY74tuibluWdXPedTEi5blfZagbYn6tr/
GXfd70i+jeQflNxUpY/5rknmoXC8j+iHE+adgg+mZKfGHFt0QJl1z+C0zNQ3
6D59157Ue78aDEnJPapyo3XtRym9LLm43ovWrN941jWGNsRkVNmonpXtxH9I
dbYSr4GYj+K/q3raptyXi3TfL+zqtjukjJNOrM5K1dlbcveozvlRx+YEZ71z
ytjoHBPv5ODAnxd1OXDZV+ieL+9hvPhfmDvU+rt1mdIPlY7ZOBpfyUrHilyU
0X1SvY+xv6xyByrdo2u5p9IeXRyzc4zkN1Q61uKuul+X1jtG6FjxN1Y6HmNK
12mcjt9OG/caTGzihNwddyyQo3RcrnHtqnHdGXeMxyOKHTv180rH8OCYuDEH
hrEQm/GoUA+45IcH+Yv0vMzi/6U+T4w7vsgxOpdR/bup/nvjxoAH6574IVnx
+4g/Ke74jccE/sWqZ7bqmaZ6xoqeJ3qO6PaS30PyD8SNEQ9WPPFJiMF4fKBb
SWZ3yUyWzLS4Y4Gchh5Wz8xkXYtnqhyrhHgo4MR3k/xe7Avz7Yo7xgl1gSUP
zjzxTB6KO2ZJP/6pYCmpP0/HHOOxX5CZq/ofUP3PgV0tmRclM10yj8Udu+Xk
YsddJCe2yU5qdx+1+3jcOOknBX4P8fdmz1r8jqL3FP2g6AWq/yHVP7vKOPLg
yRPPZHfJ7CeZpyQzSu3OUbszYo6PQpwUsO2Jr0LsFbDwe0l+X8k/ETc+ODjh
4PQTd/G0UOdo1fOS6pmJHkXyB0j+WckvVh8eVR9eqnJMFeKtgJE/Pe5YLGfo
eE/J7y/5p+PGswcPn1grxG88I9C9U47/MVDHm/U+rpX8buKNUbtzlc+KOf4K
cVjA0V+mdp9Qu/OrjJUPZj6xWYiFQiwVMOyJwTgw8A9UHw5UnTPUh8tU58uq
84WYY6sQYwUs/Jlxx2s5W8evq/6nVf+rVY7fCI94L4ernoNUz/OSPV70IaJf
FP02cyDJLwejPO74LkNU5kjJHCyZWXFj8YPJT3wYMPLPCnUS43FI4O8o2Ssl
e4XSqSp7mI5fjjumEDGJiE27Tm29rLY+VFtz447LMqzYGPzg8xNDhtgwxIgB
g/901XM49nOS/UBlZ6vsStYi4h8h/iusKXVNFuqaLIw5JuSwUM+CuGPJjCh2
/EZy4syA3X9uoMep7Hz8ASmr+meq/jdU/+XiLxB/XszxZIg7A2b/SLV7jNpd
zjgl8wr4OzFj/IP/TyyatapnjupZXeWYMcSOAZufWIsjix27ZlnccWg4JpYM
MWWIGzBI9R+p+heyJhB9FHaBokeIPlr0krhjA1wU6lkcd5ybC/iPqt35avej
KmPmgeNHXD1i1BDjhhgUV6nPi9TnxerzetX5VdrxFC9Xmd8qjf2zQnVu4D1S
ei3u41Giy2KOqTia/wF2bnGf/0b1fJ12/EXOIftMvhN1PJ3v2EGjA/9rya9P
O+5jpxrHRx+jc5t6OHYJsQ6JYTg20MvU7iMxYw6O03qrGzgvOs6X/Adar1WI
3qA6N6QdX3Gpjh+OefzLlT8aM0Yh2ITUQdzBSmwM4p5zEMubOIJg6jercby9
qxh7zNj/nAPfkDqI40hszwvCvU7UOA7ceB3vk7LNPXHk3owZ15/YccSvJBYd
uP7EuIQH3j+xi4mJxb5FyxrHb7uB+UaNY57dWOwY1sQVw365vsax024udixL
1slg9tfUOI7aTTo+PuMYbxNEr47Z7pvyb8XCmlqpQM9J2+3Uz3aOf0lcsi3N
Ha+LuF3Eik5ofjIp5uM4+2gxv8Nlou+L/RtXjJzY1W/EHJeAcRIDjFhgxIom
fjUx0Ihb9l7MNtocfxDz/grjfz/m/R7iqhH/mZw9oXK1NTnmuj6MeW+GWGFr
Yt67IlbYIZo7HKzULea40JxnX2cSfj9Km7B1T1k3xvqF+Jzk6M2I+UwdW2OD
aV04UfQdmhMulvxa1fdRSHdoHj+p2PHDubf4UnSvcfySKbyHrEVT3iO8Rc9j
lxrHdb9R9M61jufTV8/noXpn5vC+gh9T6zp3BBtQ6UHRX6itT2P/2jSTEw9g
P82Fbqp3rJ4R6ufH5cZqv131717jeOxNSo1KD/AdUB3rwv3oDUag0kOieynf
WWmq6PXs4YRn4iv2pv7zvG7NW/hebr2nor/Tf+3Nlp5nb9RYvk87pv03Kvd1
eE8OTxmzEkzlfdXOPkpPhfeH88SreF11JFLeX3gnbkx31vnk2JtiazpeMjsm
HasPDGbqA+dyA3tcMdvBbyuD/AmSf091vRv3PgHnwI2/Ut+0KwIGNHbuW8uJ
v5Pqbht3e/ey34NNSa3xt7fhcHysOg9h7qE+nKVvaqcq43f/oevwjHhPJ2y3
OCf07RPJH8ocQ/y+ugYviN+k9dE14u+cNMY6NqbYmoIJ/p369HbMx3d1c7nn
8MfRO7lbrctPTxjvm/4cnTKOJ9jS31Z4PgKmLTZ62GGCDwpu9EuBfj9uPDlw
nMEUBluYOeD8YuM7g+eMfeX8QIN9vDVeUQvjIoOxzNz2g7jroswhaWM2U6Yv
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
iR6Lbkjpj64+j/xO+d6zvyXiffuhZea3pC3VObDc38Ql5W6LfvzM8xuxvRl1
sbd/QHPvyUNT3xvENSjzGF+r8/yDuQfjHhiOr9f1/FPlv0zrfdfxnciAid3d
tmm3hXZuC20hg//oeboXrRI+Rv6ziGn4q/Jdz4iAb1/U3Nj1r+fbvp2YKYPa
amxZ+0sx18PGkfkeNvD3RYxbFS/3MfbwrJsnRYw9TtxpYnyzLmbtOyVizPPJ
QQY+MVqpc5b4l2qsHWKuF1nKsBbODzT46FeorcvLXQfrc9oDF31SoKnzgVCe
so9EvOZlDVscaDDCr1cd15U7FjhrbNbaYJMTpxoe62K+N+B58s25iXta7hjh
xLV+NNRJvOsHQltTQz2UHY+Or9znaJN+gDH+aKApiyxlwD8HM5S2+C7O0n/q
eaWZof0nQh/wcYJGlnnKkxHPVXL0r5wu+iLRTymfpnRWrnOOb8kzfvYzgQ+O
NsfgfZKQ2y3IPx1kdilzWWh8pShLuQnq1/zQNntVtHtNM+fPhj7MCDTnD6vw
OFrlmce5S3M9vhf4DvC+NZqPPHLw+jYL14HnUPwnRd+mdKiel2b4Gon/Pu+u
eLnizeb+sa+pfFP4X8Dj38G/FD5zkpSe4wdV/sbmvs9Tw/2iTfpDvB5ilBFD
kj3b+1X/9frWz4n430LO/6VQbc4VfZ3kI6Jf5h3N93Xh+lya528wfL7DJ+p6
vhjGwv/kpYj/KaUqO0/0DaIXhLIHhW8vfOZUfO9pi29+84TLHir5l7q4DPKv
6Xgx8qyFlb8acbzgKXWmOcc3aWHE38wDwRWK2J6fdeKyyL8Y4Yydb3L7hOui
noskf2G529tb+SsR+wjwfYXuGdqnLeJHkFO2Tb7H/UIYO+2wx82arkr3YZXo
Nc0cu3NZ4LPGWhHxOos1IPL08cQ6r4NYd5C/Eeg3I14PMM9nbcS5O3PdJm23
Uh+6VbhO1nEvlrsM8qwtoFlf7BHqpA7WjKz9tvXltVD24NAW5YiZ9K7yoerD
JxHTnSTzBbZ6vFOiU0orI44RwFjhfyR6U8TH0KuVvxfKXh43DXYr79/b4f1F
dmW4Vl3KzcefnTZXh7J19abp11MVfj8m5/p9+SDi2NA/6p7msacr+cZ6x1pd
r7RF7X4YcQw7ZD8M8jyrzIGYJ31UbhtT/t20y5hvzPdcAD7zAWIjU+eyZi6z
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
L9vqeyV6F9FfiO4vmbsl84hkmundOUNtjFf5TtgTK7+EfU3RV4u+UPRLKttL
ZT9X2VdE9xb9leiBquce1fOY6ilGNyz5kZKPhPqgi0VfFer5W+PqH47z1e56
9J88h6K/EX2T6NKQj5H89qrzxkC3kMyZ4X0uEX9CeK9LRd/KM4/Pkc7fEugS
yQ8IxyWhHca1GAyeEvsfNZfMtaU+joi+TvTNopdEneOrVSb+BvFv13GF8knK
r8P/Rfwfw/F5ug4P6jrM1HXogm2reFdLprPo23h/qSfUAR1X2et1/D8dL4s6
x09qBd/cEvtPtZTMDaU+/kvX7ZDwby7Dbl/5lc39n4bH/zMl+e/BKdFxIuT0
YbD6NlF9m6a+xcW/I5RNS/5sHd+r41rRg0XfLzoZ8hsk87r6M7nE/lZd1e7E
MPYayU8o9bmE6IGh3gbRG8NeYXfJP1DiPcPy0M41+CyIf1+gL1LfHlbfXsB/
TfRjoufiq85eQ+jDm1F/1/HJaq36z1FdD+l4ftYxG4jP3FP0LaJnip9S2YeV
38w1DLJbafaRRd8quoPkf9W5x3nmRZ8r+knRPSXzmPLbJbM66vrwb2ormeGS
eUTHHUXfBI6I6JVR5/h2VYb6KHuZxjJNY1mosaRDOdqtCu3cwfMjerroe0SP
l/wMya+QfHfVPyKc6yp6k+inRb+jtp4psd/ZjuKfJ/7zOq5R/pzy+8TfQfzf
w/EVqvMZ1blEde6ocT0l3l30k/lH6ENG9LOhDzuJnhHqyYQ2ka8N7UwSvQtz
StGP8gyInhX416ut59XWm2prZ/Fni3+/+FmVfVn0VNG7qm+36vhF/gGizxc9
R3Qvyc8NMjepnhdUzyrVU6fzL4R66oPsA6Lfj7oO/LDqmHME/i6q889QZg/R
f4W29xR9m+h5oj+MOsdHbD/x/xF/Ic+t8vnKHxb/NvXhJfXhPfVhL8lcEM5l
sbcPMvuLf7v4i3TcKtTBNdmrjZ5rvaeXa+7WWvxXxX9S/Kf47gT6IJVtFvO5
j6KuA7+zbuLfXOp7fLDoa0QvEb026hy/sPbqw3KefdFtdH5ZoIlZQuySBaJH
q/1OpbYLBp8fe01sNT9ra7vVN3T8OzFNSm2H2UVzkUb9R94U3Va810I92GbC
QzfUGb+xUtf1aii3C/YX6mdOzGWwwXy7xDqdrpJvSvoYW8h3S6y76U6siqSP
/1QfOpTaJrOb+DuIv6rE9pXk6BcOVf0jwzhnltpOc5XmG38Qw6XU9pBLQr4r
e+lh3NhCY0dJnDbsIQdprt+nysdbVLZjqAu7SHDFsI2cVWpbyB9Vfx7vYalt
/H5W36alLYfNI1iA2DdiCwnuDHaSG3VtF9T7uJnKbh/quly8zqW2ncSe8ZMS
69Av1L/7F3BklA7RGA9QWlpi20Nw+LA/fK3Udo57ayw5qrNrON4enKsS1wVu
NfjV+Gq8HtrBPnNVqe0WR4vepDaeSBtL8N1S26Fclm+7QnjYFr4TxjpG/N8k
+3ja2HS/Kn8s7T7lqw89QnnsFjmP7WKu+N1Ce81FN5baJnAzeJtpYxuuDryx
+bYxhIed4dJw/3uL/5Hene0a9OzjCyV+ZdRY6T/q+fqzxHEJOmvsVXHH+MAO
kRxbxC7iZ+KOIdLEs1Rq+8AdeN5KbXMYiZl3qJ7t47OOMbBFx8Ux2z8ewj9O
9VTHHXulJBZsFZvb9hAe9ofYJ9IONoqNPOelLr+2yn53P/P+6PvxeZV9CA7T
eA6t8T27D/vwUvu7fVJl/71fRZ+uOfhvJfbJ+ynmfhF74bisYzMw/ue1VlsB
9gR4NHVuB9++U0X/UmL/3Y+r7AfIMfb+v5fY5r9B87Xj9C2Yi791ndvEj/CE
rGM5/KXjM7OOZ1Aomb5Zx3X4W/yNMZ8nhsPPMfOI27AJ386o4yqcmHXsh2Y6
PinrOA05onfUWPOijqUANmVuoH9R2X9KHAvit5hlifPwa8x1EAvi1KzjMVC+
X9bxJChzWtZxHWj79KzjPTQXvTnmHOz/P2MeB7EafgfLIep4EWdkHaehgHVd
1nEjOPdHzDxiQWwRXRR1zIcBWce94PhwrekOU/pWfein+9m3xpiwxyg/usa4
qMcrP67G+KdHKj+ixjitn1bZT5J7fJqejSodV4L5JLpGebXSANHbKW+ntL/e
hZv17ZhQbf+JWNS+GGDrg7FPTKcD9RzsVGq70iFZx+ZMiM7JON5AMurYAsQd
IFYncSmRvU7v3c5BFn55j2BjGjW2JhibxCXYSf/BgepTe/WnV6nrgz886xif
KR0XZBwnICO6d6lzYgUQb6oq0M0zjpfA+wwuZzq813vpmewPhlDUcUSJK0rs
AmIjEFuBeKG7hHag+4iuDWPfTXRNkL8k6zianBuZdRwCzhELk5iYYOTvrvPZ
QMczjk/QVcdFGcdI4BzxE4itQHzOy7OOtdBKx3uUOifGAvFLGwK9p/itgzyx
EIiJ8CPjEr9toPvr+tUzl6kynih4qsSd2Fsy7aP24SNWRIdAX5O1nx7n2Pth
Dc/6/cqsY3zS3j7KO4V6bs7aZ6+bjvcvdY4f4X6lHh8xH8Aq7RL9N/4DcRnw
I4xmHK+CuojD0D2U3Vdltw8yN2TtH8jx7Vn7+DWJTmYcy6FR9AGlzonnALZp
j0Afqnt7iNKvjKXU5fhPgUkCjsjxzR1vgVgP+PndlbU/4U46PkjyO0YdF6Im
4zgQu/CNyNqvclfR2YxjQvQRfUipzxP/AdxS8EuJ53BwqevDZ5H4D8SPwDcR
/E1wOIkLcWip64MPBmuv6L9xJHYOZQ8rdTs5IXYEsSfwRwQPFQxVYkocKZm9
Ax9sVjBaiUExNWufRs5tn3F8i4NEHy35/cPYH83aB5Lj+7P2mdw96vgVxLbA
b/LwUvOg22ccA2M/HR9V6pw+tMk4HsZefJdK3Q7XgXgVxK3A9/FY8Q+O2m/y
yax9JjkmvsUhgd9XMkdH7Td5nOjDoo6Jcbzow6P2wztB9FFRx7sAH/bIQHfL
OGYGZYiDcUSQfyZrH0XKN2UcP4PyYM4eGup/Lmu/za1tF4XYGQXGmQVvljgb
YL+CAUtckX7qw3GBPztrH8vjdbxTxrE3OHdiqXmM/STR/ULZXTOO58HxoJS+
n3HjDx6LvW3U2AyHpdl4tn/bbhljFnCOOMLw8HU7otTXm3vdJ2MchJN5vuuc
g2dwcq33ivEx3SNjH1GOhzZqPdtoe3xigID/d6fmnyerzv5Rx/o4QP+CqfoX
3K5/wT4Zx0I7S6k1ezn6v3wlem7W8UIos3fGcc7OVNqob/i7HTXnV9m6dvZF
HBh17OXTQ/0L8eEIde6bcczLs6PGFwNnDGyxU3V9VsWM+39KWHPD31d9OFNj
G6zjZarnW66lUl+N/ZSo8RiIA0A5YjPvl3GsNWRelfw3oS0w+sHqJ64zsQKI
I0Bc59PV7rsxnztN9DsxnyN+BZiFd+U5bg/4jveIfqHa8diIRUYMH3AQ7xa/
sdax5h4rNJYeuHxg1p6RMm46Prf9U8ap5RxYDGAyEItuadb471zTVd2NjfA4
8Qoyxq1gnMuztvXj2i3LGp+d+/RGd+dgt3M/qANs9cqMY8/wjcPXl/bBg1+R
NX461+ia7o4nh0/8QPyCSx3nbf+Mfew591HaceDwRQbvEOxE4sm92d19AT9+
fa3LbcV6Vz1D45Z7q7vbARsejE8wP4kDN727MefAQTxb8pfEfe6slDEQOQee
dc/wfQavk/eGmHPf1BgvEZ/l62ocewYs2P51jgMHXsIBGWMocPxuuePhETNt
dbljwhED7f1yx10j1tnQlGOgcQ6cTrDkX1K7Q1LWr4Dv916548YRD214yjHQ
KD8s5RhonDsn5fhytDetu8uhrzhX/HPjPrd7neNLgdl5Ycr+/+B/XZAyHijn
zhN9Xtz10gZtEY8NnPk7o8aEvyhl/FfGz1767crvzXPbtEN8OMbDuIj3NkLy
I+I+3lzrNsEhQM+ADoKYTIyBNon3NjJlbLm7osalfiBqvwnwR8F6f03X5yGN
ZWqd8e4vThnn9R6l0Slj801m/I3Gb783avxmcNbBcB6VMmbfJB1fmjI+4ESe
35SxZZHPo56Yyzyrb9TrWWPNgtWPLPjeJzUao552wQanPjDAwfemfbDBx6SM
G3i/jmeonrezxql9M2s82ilR43yTg48L1jeyYHq/lTUmION/J2v/+1H6Jj/X
xsdg9w7W+VFxY9GOE/16zNdibMr4uw+JPr3R+LTQ4BSDVwzW8fmSOT/ue/xq
o8u9L/7lYJXEfA+eV1sfZI3VCrYr2LDgvl6RMo7qY1Hj94Bl+LTmPEMDhjE4
qbNVdm3WOKngmoJRWqNv5ovir8sarxRc1a2YqrqnL4j/Sdb4qbNEr8kaV3WO
6M+zxkMFJ5Y2wWp9Sfwvs8ZPnSt6fda4p+B2gA86u4WxT8D73E10WvPVL9LW
3y6Q/I9ZY47OF/191rinM0W/lzV+LbhxYHAO0bjmib8hazzUl0V/kzXuKbga
4GiuaGHMOfA1hzc3Vhy4myOaG08OXM+hzY05BEbmM82NdQQu5izRy1VnboNx
dMAxAgtzuviLxP8ta/zFV0RvZH9N9MZOen/aGfMRXBAwNT9UHxZK5pes8R1f
Ff1H1hiNi0VvzhoDkveKe4vv1FUp4yG+FDU244tR4yWCDwHmYits+VPGauQc
eMc8a8S/fFfv1jvdjR+5RPVvyRqLCCwH8AJ7g2cgfosG4wKuEJ3fYAyhZW0w
3DDO0AkZr92/03jBd6Qv4DS+LpnCBmMNbm5tObCFlor/d9Z4ReACghsINiBY
euADgqf3JjhMKR+/IfniBuM1YsOOXTo26m9JpkvK5U9K6J1mbqv148q0sdPA
P2tKGZsQfD5w/sjB6Hs1Y6xE9C09U8bPAzNvx5Rx78CxA0sPHhh6YJWBgwZe
GVh9YPOBy7ckY/w8dDJg41EO7Duw9OChowFPjnbQ6eyQ+hfbD/w59CvoVpZn
jCGHTgN8OLDhwIUDTw4eOg6w69DBoH/ZOWV8OzDq+qSMx0b/wIFj3GC+rcgY
Hw4dxdKMcfhob6eUMfbA3gNjjxycvV4pY9rRNjhzlNuKNZcxxh5tgxWHXgGd
wtsZY7CxTwyuGzhuYLi9ljFuHHK7p4wPxzmwzcC9AvMKnDZw1sBYA6cNfQa6
DDDM2ENn/xx8NTDXwFh7PWNsOfQMb2SMr0aZPVLGh6OuPVPGcqMMGHjIoo94
M2O8N+rdK2UsNPoBHht77uy3g23GXjb72OCigbMGNtreKeO0cfxWxnhslAGP
jXGzNw4mGZhmYJatzBg7jbrQ06KjRT/7tp7hsgZjPoFPBjYZuGSPbK/3Jm3c
sbckU9pgPLOvRQ8SfW6NcQ25z+AQrhK/osGYT9i5oD9Gd/ye+DUNxkxaLTrT
YEyRD8GiTxkDaY3oY1LG+AF35cuosVbA/oEH5s+7KptuMOZTXYNxjj6NGmfm
C+U99I5drTr2Tbo8OD7g+YDtA44R7YBlBJYS5cBX+rLG2CCsBbCjQbeNXvsJ
ff8mBV3346JX19v2B4wW5t77FVgnDw+9/FOSeaDKY54m+oN62/6geydH/z4+
Zdyc9VHjwbB22LfAuDHwwJBBn4/9Dzr9J1XP+/U+XqmxJxqMg8UeGLY2c9mf
0Tqij1Jeqe19sP8BJ4W9E/YP5rXwPhm2PC+LLu5iXTY2KiVdrI/GHgYbFuy+
2DOLdLHuGxubd9RuqsHYWmC8/BY1rgv7bdiYvMFeTcZ7XZQHS2BL1HuoRV2s
+8Y+hz05bH+WtbDtxD/824PtAHp9dPrPaLw/1Pv4adHf1tuWAQyV3FJjs2Cn
AA9bBTBDGDc2EdMl/3O97SmwIyDHloC1JutQMFY2pm2TQV1gouSU2hYD2wRs
EbBDmKI1X3o7Hz8gunI7vyfPqv7f621TMCxj3QB7+vPFb5O1vnSG6H/qrbdH
/0+O7n5mO2OZoEt/XnRB1vY1s0VHs9a9o5OHh14eXSu6T/Se2AVgE4A9wKx2
xiZBz4/ennLo69Hzw0PXjw0C7aCvf07yOVmXR5eOHh0d+tx2xj5BJ4+uGL01
+mJ01PDQU6OHRxeOHvwlyVdmrYteILpd1v1DV8y40RHPa2csFvxdXmhnzBXa
e1F0edb6c3Tv5OjQXxa/Luu20XVTDn33nHbGd6Ft9MnohtELv9bOGDDoDNHB
og9GD/tKO2O6ILdQ9PZZn0O3ie4T/SZ6WnTG6GrR06L3RVeLrhVdKXpS9LHo
a9HJLmpn/Bh0ua+2MzYMZRaL7pF1XUtE75R1GfTDyKLzXdrOODTUu0z0bln3
Az0tOt2pQZ+JjhOdJnpRdKjoRldIfu+sj5e3M/YMZdAbM270pOgw0V+iu3y9
nTFpqAsbGZ5NbF3QNaJzBGsG3Sa6SfSSb0r+mKyP3xB9WNZ1YVPAvcWuYEDG
ek10nGDOkKPPBAcGnSM6xrMy1jtyfHbGukn0guBUoDNC54MuEV0qukTwUtDr
oTMEy6RLqfWB6NzQ8aEPbNVgXSNl9tzOekHODc5Yj0j5Ng3W/VEe/BnaREc6
JGPdHno+cE7I0RkOz1iXhl4NzA1ydGj4lfPuoscDkwR9JXq5oRnr8DgGNwY9
KbrZ39PWn6GvAtsEnR36xnMy1vNx/GfaOjDG/0faejV0aWBukKP7AjOEOtC/
rdV3tUODdVzvtTNuBDofdBTs17NXj84HHnof9A/oLMCy+ERlOzdYf/Kp6K4N
1p98LLpTg/Un53JNqlzmY9V/Tta6C3Qa5OgvBmasb2acn0rm3Kz1Bp+Izs1Y
d4E+AR56BPQb8NBlgGHGntX++n+tU7vdG6zbWaeyLTLWQ6JDQH+A7uBL8Ysz
Pv5C9KVZj/Nz0RdnrZdAj0GObgJdB3Wg70BvgC4B3cFnki/MWGeCnoR8q94k
av0BugN0EegY0C+sl/xVWR9/JfqKrOsCX21D1Da86BDQK6BH+Foy12Z9vFl0
h4z3ib8VPSHrPX70AOTs838n/i1Z6xC+F53KeF//R9FVGe/Hs68Pj719/MvA
VgNXBN0C+gb0Cz9I/n9Z7/ezP0Q59ojQUcNj/x89A+2ga9gg+UTG5dlrZ7+e
/fZfxZ+S9Z43++jssbK/yl44PPbA2ctn7559+18k35DxPj36BPbW2Vdnb55x
sze+STIPZb1P/5Pou7Nub6Po2ox1COz9k7P//5v4bTNum/1+yrG3/7P4E7Nu
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
gYgZhE8M8YSIK4SvzGHV9v/g+J22jnFEGfxsGDexifBNwc+FuD2HV9t/iLrO
1LN9qa5LImafEnxMiPNDTCFiDOGPckS1fV84Xt3WMYioq07P06iYr/t7bR0j
iPLE/CFGEr4gxOchjg8+H++3dfwf/GqOqrYvCOeIv0IcFmzwibdDHB/8PIiZ
QzwdfDuIb0NMHPwb8MPAv4PYOx+0dWwf/FKOrrZPBmUu1jVeUOW6PmzrWD2U
wXcFWWIBHVNt/wnqxR8CXwzi/xxXbV8H4tbgb4DfAfFhiF0DD98IfDDwxSBO
zrHV9u0gjg7+QoyPWEZr2zp2DeWJh8N5fDLWtHXsKdr7uK1j1+DPcHy1fSOI
JYNvAzzi3hDnBB7+ECdU23eB6/VJW8fbwc8B/R42zdgz468Aj7g3j+ub9ljG
uGOftnXMGfwTsOnHth+fA3wV4BGj5h/2q2OWf0DPbL7ymfyL9c4d09Hnjqy2
Tw/3OFpnnLKCmPFwiKu2j/rwtb7/D8Z8jM6ZWDHoC7DFxCaTmAnr1J/Ds+5H
aZ3rKhSdaK06Kx0H+Ge1Wd/e8+sc9aFZD68V0Iti8429N/pV7Lyx8S6KuS/g
zP2CH20H+0ZkVdfUlM+PqnaOzLFZx9RBB/WR+txacg06jteFeV7Mc67SmOdd
H7V1nCLu/e7qSx74j/q/7Kx28vVf/J+u9X36V96r1Bb7g5Rj44xT/dur7k9i
tkt4GHsblWuJnQFxqkSnw3VgD+CxHP+nOA9W26fq23Yxz3s2V9q+gXofVX6Z
ylbG/M8iB3uNfyv1ge02W9drVhfHDMbOArsL4hD/qet8ufo7TmmJzr+qVK9z
y5UvU8qKXqR8oVKd6HOUapTO1zxwgXjzlWq5r9gAlLlvdzMfVmoj+g5shJRa
x4xZl4l5rdSCZzzt9RO86sBfqzGu6ebrf5vK3arUSvRSMJcSbhsdINehv57J
N/QM9Yg57vcE9WWU2hiq48kqNwmMY9HrVO7ThDHUilOOu36V5As09jxdx/vU
jyLRzUVPgk45TvuVkilMOTb7FS38PHTiGcs13hp84ggXqmy+yk5MG9+MssTk
/byznruE2wdXjXaJRwxmGjHhiVMcSZm+uoXXWKzR8Atg3cX6C5+I0XquqrAh
4NsQd4wd4lR2EH+L2r6K/WjRf4keL/oy0RnJF1RbF8p3fabei87i/y2ZazNe
O7GGwuZ/nPjV2BnwzcOuLuZ46V+21DOQ8LV/S/yeMcdUZx3FegofAdZRrKew
839bMjvFHF/9KtVZi82B6nxf/H1ijmfOvJ/5P/b/jZLJkcxN6s8OonNF35Lx
OpD1IP4CK1W2V8yx2VeJ3jXmeOnjJV8n+Yjqv1Z0vegS0d1FNxM9QfW8g61h
zPHYrxc/K3602mtC1ob4EdwkfivxY8TPkPweMcd7nyB+A7rkaq9ZWc/iB9FV
/H90Da9X/buIbi6ZO0W/q7J9Yo7HvqP4eeLfxv6v6Bai7854ncpaGD+FW8Rv
jT6bb7nK7hVzfHjW3qzB8VPoI5kCydybsX8AsaXxEbhN/Dbix6u9HmV9ii8D
a2bWzvhE/E8ybdHFEpMZu8yYY8t/iH1ezHHp95JMkWQmq/47RbcTXS75K0TX
iC4Cy1Pf3HGaG0zhmyl6jOj7RS/Ud6+F0r565teozoNijru+pNHftpXYNaue
QtUzUfWPUdkrVfaBmP0M8F/Ad+EW8H+qfMz6ibUfa6gpKrMw7TFji0Rs6uXi
L1KbxUr7pe1vgN8B/gT4OBBfCLzExaJLlfZP208AfwH8KvBdwJeBeEG3qd0j
Uz6+VXRe8GEg5iSxKsGmrdTadlTwN4hXOtYl57Anxq4Ym2vWiCfEvDaskvzV
wa8A23x8ELDHx3YeW3ps8LFhx9Yd2/M71W4s+Co8ILpXsFc+QN+xvjH7HGA/
ih0pfmB3S6ZlsCu9S3R5sNG/Q3TkP7b+5Pgc3CN+JtjWY6uNzTY24JPF7xJs
uCeJ7hhs1u8T3SrYl2NXDg/7/c3omjvavniKZHr+x/aaHDtubOex1ccGH1tp
6sC2/V7J1wU7fmzBsQnHZvx+8XsEG3Fs27F1x+5+rJ6TCn1n7+VY13yKrvmF
tKHn6ImM5zKv6t4mlXau8vebNcpEXasZup+tsRvW8dyk/1X8p27S9bxRaSfV
9axkWmGHrXPTRTeIHh7zt5911WTVs0RpmOhX+W5V+X/SmO/1DrJgG/K9Z002
qdBrEOoD55B1De2DW8i86TylTwq9BmYc7HWwJ3J+zPskBarnfvXrAq6d6Mlp
n2PfBR57L6yVL4p5vVwkmQfSPj5W12RxveNms+dxccz7HqxBWcN+rXaLJT81
7XMHSv5pyd8j+YnK2wUfg4hkHpLMJaLHN+kZbvJ6tKqH5/YVui9RlX1G8k8r
zcjYXnw074vOXav8TLW1r+7bmJjtu/cTfVnMdt/7K40TfTTfIe6x6CNFP5ex
zTdlniAGdNL7OzMztgunfES8hQmX2afObWJvXiL+ooTrPQB7Ta6H6iwDB0P8
q/hPY6en/BTxDy4y7yS+VUVef/cTXcoeAnvIOq7WuDNN3oOJs2ZPuPyBRT5/
vOSj7C0k3N6G7t5HAjMjwZpd/PE6fj5jPA7OHVpk3mkqWyHeGwlfr1kZY5Sw
TmZe8L+Y5wZ9dW9q0543oAOZELMOrq/quT7mZ7MHcZnKffxHd9cBdsg3xCSI
WXamnvfnuth+9zPNp/I7SV7f3+d0XXvpmb9U/BeYK2Rs77tOMjfHbBvLvJs9
6aWiZyOT8jl8pPi24Uc1tMH9oL2o5Oepz7fFPJe5I+a5zXE9HO9+ueopk8wr
aZ+LiV6Q9piZK90e83zp20b35R3JX6N/7PlVjm1fKvn5acsx56Id5l3H6Jlc
VO9Y8cSc/z9T5x2eZdF08YQEkhAg5elpkDxICElIIAHsDbtiQTqiIIg0RaWp
qFhQ7FIUFOwFRRSliaLYFcXGa29gRbFh7+07P89y8f2x156de3Z29y57b5md
WUg/3drxooCRwZ5DvvA14h0Y99xjkPKu72Cf8H/oPv3e4LMH+OBdXmDdwzeh
Ndjn4muKX22wz0V0VPkffq9/xJfoKsc9z2E/Av/PqzOt48m/7oeWniczX0ZX
8R3JeLvBPh0fUL4FRTt8URMzb3opaR/VyEQ/lP/td6K/r3zvNdgX4weKNzfY
vya+ke8t8L+LOT9zf/Qlz6jyf4tr+CrDZ9nhwa7PPYH/wlrrNa5U+oLaoItZ
4DWD+8N9+FjlfNRg35/99E9vp3v3NDr+on3aYL+e59VaH/S+AvtYvi/UAV/T
S0O5+C5eGe4DPl2fKLCu4qxa60euLvDaAWsI6Gnic3h1wFfVWn9xXYF9CK8p
sF7nZbXW0XyowP54Hy6wfiXz/LUBX1Jr3VDy4AcYXnQzWQN4MOAraq1zSX7m
7g8E+czPmaejC4m/6HUBM/djDojeJXN05u/oQuLD9rFAZ87/eGjjnFrrXHJt
Xq31KWk/fmufCnmvqbV+JOnBusfP6f18qMzzcubs6FcuqLXO6DMF9rVLjB7l
f3YOAh6gZ1TAv0F819Van3J9gf3Nrg9y3hTtyXCWifNOnHvCTyvnmaDhn/Wz
UttsYo/nKz3nLxtsY2h0e/tkxZ/k+6X2W8mex3ul9nnJfsZ/Z2YK7Kt1m/J9
02C9/HdK7auS/J90Ny/+Ld+i3eG8zZbulocPzE2l9pHJfswnjBfi3ksb394x
53j+luy/GnyO6FfFvzT4LNNPin9ssB7/G9zvUrdzryr7QMX/6fe6/l2DfUB+
3t3l4Jt1U3fvc2Fn673u3iPDztaWUtu64tqnpba3xbUPuvs+YU/ro+7ed8P2
1Q/i+T60+fNS28ziWlaj+pFG+xnF3jn+TbF/Trw54A8KnMY/aYZ4/23w2kGe
cG6jfYW2Utyy0X5Gt+r65w22e7WNMsPz+EbxF6U7zuQQ49O0jfLlN9r/KDr1
jLmeU7k317psyv1W+b4Kz7hYvEWN9v35E/pOpT6nxLOkffgWLdD1do32Rcq9
5Nnh25TnTF3wY8q5JvLhB/Q7ZIRnzDOnHPye4iPu2wLbvuKsDOd08NHJ+sA2
7o/6/1/Es7nU19AhGtfRZ5z3FD4NrP/Uq9X2EcSZe2x3YQcMnYXXqu0viLPv
zIOJmQu/UW3fSpxff7Pa/oI4s/5Otf0CcSae+Ss05rC311ofIqvQc2LOzzMv
fqva/oI4+87ckXzMH5nXQmNuy7yZcpg7v15tv0bkZ27KWXfmp5ur7WuIM+v4
8Pm7wD59mPNBY97HfJHz7cwZN1Xb1xDn4/HTkhXaW6FnUt5oe22liksabYvt
3Wr7PqK896rt74jz9MxTiZmrxsQbbbRduaTiRKNtvb1fbT9FlH1HuX1SZkvm
EI1N2hXaB+zicl9rqfTgJl/PFX0ofgSKTP9S+AuFkfpu1qZ8Fi4HOwsJjYHF
kyu8Vdc/Vxguns+wh6cwjL0ive+Teec5x6NyJnMmX3lOF22awvOiny7aNIWj
Rb+z3HVqhe8LxWfiw0b0cxSfrfCE6F9jY09htOQ/ydhDoSCc5+RcJ//Sozv4
H0g6qr72X+F/Ss2LP912wU4E9iLwzdxVPIfp/hyiUKT/+6HiaQ62IbARgX9n
bDpg2wH/zgMk/9FSp/sLryu1rI66JznKOz3Xc32eM/N97A5gfwAfzTsxHtNY
pDL4ncX/7GB0gZhLKW+Ufbpi+/jBv89uGvPuqpBU+jx067F3UGTaLj3MN133
8kyFDZy90DjyRoVXVM5LSp/H2mOh5RBjd72n7t8V6D6qn56mMFXhBuU5UN9l
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
b8AV4h+bdLpSeBL6msqTTjimDthI5d+Ovk9aPNPQlQtrnax5rmAOJfoZoucr
/YjKaq34bPF3SpgGvlbXi/TOpJSuFr0t66/wKO/ZulagdI3oRYrPpV9lfSTg
ncQzPek8nRPmnSH6o+JpF3C1eGYknX8d+9lB/jC9Az0VipW+pLVjvqeo4rjC
NXo3FijfPzGn53N2XGXEmCuWOYY3EmL4d9Iz79hom8XZeleTihOsbbU239Xi
OaFsR773mtzua0U/RPlylGdZzPR3m5x/n9aWsUA8PTWGPDutd1EyOou/utF2
kLspbmz0PHYkuveKy4tsG69C8QNq11Wap3wf95ygor2vr6If5r7TpizrubD+
yNpjL/1He9ZbJ2Y3xbvWW1fm8ZhlMKfYqPq+0uA1glWqZyfFH9P3qi71jfYj
8p36uW8V+ipcn+Oy7mHNTfXMUH0OVP+Rr2fUWqFG196OuU7UB9peEadvUnyj
Qi1rah31fqY8rqml3Y224/x+ma+fq/HhSmxx63l1Ze1a/cgzlba5iJy6Ittd
JK4PGD7SRarjPjGnwXup3XvWW5foVuW9Bd1N4e4KjQrF4tkNew6VtlMIjRhb
hfvGzAfPzhrf7lPkszMfq55NvG+q5x2S11xku4WrORegOvdUenfJXF9pu4bw
3B5xHnh7BP6eIR2R/N4xp8Gr0OlKuOy7lO9OhV7CW8ocX4C+pe5ZU6P1P3op
7qmwO++K8nZT3l2F91Adnqu0zcWdixxjd5H70BjauKvy7aKwRyhr58Cza8gT
zfG5JtqO7sre4t2LoHRvxfsq7E1ZlK+wp/AHZb7H57Vyvn3DfevW5LVcdHnq
2Qcos28bfODgH6dXnv3cQGN8x7kl8j6k8fBpKesPsdY8KWWdIdayp6Ss98Ma
9+SUdXpYy16o9/o6hQzdi5om86K7VN1kGegu1TaZF52jrqrLr8p7AO9Uk+Wh
KzQ15XM+7PF0b/IaMnpAZ6asA8Qa8Rkp6wxx7fSU9Y1oZ2OT1xLRVyrVv7VE
obfSTU3Oh77VtJT1nOBraHI56DQdpb7iET3LW1SvHk1eZ8afzOfdNO7oZh2g
6Sn7lOHaXmrnDUW2xcV3yb7ZePFnxr1XNoF/S9z7YyehC5Ryuo+eeV+VtU5l
3c6ejep4bdxrZGfoO+2rscJRCtOF+6PbyfxDeKjiIcw/hAcpHqhwRIn3ms7O
My97MjPyLIO9mnPyzMta13m0vaPzHF5iH6GDi+zXckiR8U/Cu6s9w4TvE3+W
+s42qtuxSt/dRd+76r1vmW2AYgsUm4hH6r501ft6sN79YZy/CW3pkXA+5BwR
cRn/6n3eVGRMWayDjijyWugE9V1rsN2udM+E4/uVd0/0KgJuFv2YUG6V7tt1
ca/9XaB2naCyRynsJPrCuNfmjtD3cbjCCcIzGZcq/gL7seLbGnhK1LePL7Kd
zt5q26IS813E3priMbyfavf+urafQl/JO6rRfoUuStkG6DjhZHvH2AqFD1nk
nZWy/VzKuDhle4sThB9M+V05RPfmUuELU7ahWdbe17GT11/l9Gu0j7SZauMY
6lZiO5vwbhXPsZxzCvfhQvGMZy9f4VjlG9Zo253N2B2R/FOEB4k2sNF2Tn/O
M42x8EXKe7L4TlIYqutDFE7VtRGKhzfa/uYoxSMbbd/zRO5Bo+0/dmjyXjM2
VquavE+K/7GTdH1Co/2TzU3ZVxnXjtO78mEH+yu7RvR54R98CvVqtE3VSdS9
0XaHxykeq3A6fah4L0/tsLVK3LK1/8/IyECHLWV7teylHd3dMXZti+PeN88T
Xl9mv8j4RH5FdX65yen+etZPqW5LdT0iOecX2bde67T96pGeSrsbbTdzY5Pz
zyzyPiFtYq/wBvWF1ys8UqpxQCf1k8p/e7n5LyzyXiR1Oa/I+/g16HIV2Xfc
nJRt0XJPP0cHS/E8jR8OU1vOVLn5+r9+JDmXcZ85T6f5wqVF5oP+YZPTe6Cb
VWTfay/o23q1yHkqlb68yDaMb2ZNIGUbprfxjqRsb/RWxRNTtoV6C+9maofN
U+JOrW3HlHw7tba9UnirhfeL+X/GvwxbpMjrLPrtknFqyvYiz+B5NlqH7xVd
u7bI9hGxAcmax+aWXrudX+Q1WOw1ssbwVUvfv7nhHkbTtrF4ndJPKv/1oU/e
U33FwiKfNdwj4evIj6d9VpBr2ImkLru1tl3GRYG/LG07ifTvFWmfJ7xReGd9
G10496q+62DJXF5kW4lP0f4i22vEriL2FTkHuS++Dot81vBp2l9kG437ib64
yOcRse94W+A5IO1zfSuU7pi2XchbhHuL/46Qt2va5w/JX5e2vUiudUr7HCPl
7ZNwPuqDPcg7Q1kHin5vke357Zn2ObRlSu+etj1HrvVM+7zi3cLPiu+ewH9I
wvXiPOJ+adtqpP3rlb4/3Idn0D0qsk3H/cW/JODmtG0+kj4o4TI544hNwfsC
PiDhMjk3if3HlaGso0R/osi2GA9L29bkaqWfV3pVke1iHpowDXxM2jYZ1xXZ
HiV2KTkH2S9tW5APFdkWJDYhORM5IO1zjGuVPkxyHgj8fRLmxa7kBoUHAz48
YV7yHp72mUnyvIDOZZHtSh6RcPngY9M+3/io0qPTPhv5ZJHtRWI3knONL6If
Gdp4ZMK80EelbVOS9mNTEtuSnKHsm7AM8NZmrwOs17d2ctpnIJ+lrmnbmnyG
9z7hGPuXL/EuBozdzaXhnvdLOB9nJbFNuT7gqWmfmdzAd8WaW5HtUw5ImMbZ
03+76vtUeLfINihfVHwWz1HxS4GGL1J8kmJ7EluVrwT6n8r3Ysp5/hb+S+Hl
IsdcI/8M/S8GJpwHO5gvhHIHsQ4WZNKv0b/NE/5V+d7iHissVN4hCaffCDRs
Qv7S1Rgaa+GcDeNc2OS0bW4+H3jfDvxvqo49FF5T+obWjs/Ms93Jd4qsKzRY
/fxZaetJcT/Q8eHaItWhQ5VlvV/k+0Q+7Fa+H/Dnij9TOFn/o4wG39P3lP5R
8YeKP1DYu8LjJ8ZO92ObMOH0TZI/NGFZQ/T/egP9pzLnIW8H9Z9Do063F35Z
5T0XnuMDCh8LP6L3Z7nGcvcrfKR0purwSZGv/dTVNGTtnXBfSP82Q/33OY22
C9BC/J8WOc9i4Tsa3Kbz1V9u5V6pXT9HTaONW0J7X8hUffOdBn8cZKxTfVa3
cF70lP4tMg/+fFerjqvqXN4XCl/yPWY5Jj1d+X6JOj09yPgiyNkp4XUX1tg/
0pj26yJ/PxF9R8UKXfSP7aAx2V+ileperRWtUiFL97OLZH7D96S6Xa5/7CfK
/73SPxfZXzi+uWuUP6b/309KX9bk67W6V+/lW2aZZI6X/G1FnrOT78ci7zV3
7u58pPH3/UOgs/bHGmCX1s73bcj7hO7B43XOw7lV9pXZUz5KctLdnT6C9nT3
Hvg1qtcvije29NlWaOyJU6+/Q91u1nO7SSGtb6CV4pbs++hadXe3860sx78E
vCTiNG0fJPxHkddgyMeaDmnO4LLfz17/PbqX/4TyruG8c7FtX7cTb9sGX7uX
5xAz7o9eVo3tbbys61nF1rvgXfg3vEvEGcXGXG8ReI7X93iJvscmfd8DJadb
jW1RlEp+q4jzvB5xft4r0plBzgDWk2tsk+OhfMt8SfdtbsRlYBucODtg2pET
2gJuWWz9h3X5xt8q7+66h4fGnaeh0XzwDFJZzTW2JbCXeA6LWxbvJe8ndt0/
VTqv2OenHpXMXMYhLR1Dx8YscW7g6SM55d1936G3Djz7iTY07vRWhTbFPnuV
HzA2b4nbBpzkXir0F35c5bYTfpRzGYoLin1W6wZdKxL+SbfwEMkfJvmF4Xq7
wAOGhi3BduEauCnivMg/UHmPibtsaMVBZiTgAeLpo2+qVnwJpd9Cn4vzRgpz
dC3GGSLFp2mcdiq2T5U+T8//sJjxY/lu5zrsneqeP1JnOcimjIj6hPOSxpTV
rZvmh6H9S7J8L67Uu3FPg2mk61SXuTHLgVYS8tKPlArX6706SHKiyvMY61vC
82Lmm6eyKhQ/L9kL8K0mPDfH+cpC3uaI07Tvhibzlyu8Uu/+p31IVwQenl1+
eKYdFFcqTJKc99o7vbd4jiszhr5ve8ugj6FfGhdxH3d4juU+3cIyqgL/gbp3
nYQv1XNZojbdXuJ0NXqbxT4zuBdn1oWPaml6p2an7yu1rH0k++4G568u9vWd
FNIhD/GgTOuE1BR77XRpg/N0DuNv6H+oDvXllkG9oHUJ/B3E+4TuaW2x1wKr
1Xffpnhf8e8i2iHiKWdtU/g41blLtnFS5dYr7hroPVi/FB4u3Ki4W8D12aan
xP8S8x3ejVaWUR/y9ix3HnifjTnvlFbO1xjkPBVzWZNFbyp3XurSqNCd90ny
dxe9p3CTaBuwPyo8Tfw9ik0/XnKeE71ZeKrou0V8DTptpW7Yz9m52Gnw8m5O
/0ePuKwR8KPjUryj/KZAp5xeQeYhQdbKTF9vDjwXib6bcB/0fiVnf+EerUzb
vdg2eaL5ToP3LzedfPso3rfYdnK6oesvfGSW472KbaunqZX5jhL9f2rv3sLL
WlnGHkHmUeXmR8bKbs5PXmh7B/xKzPyzxbO6m2VSbr9y14FyXhNPb95ZzjWw
Til8fyu3Zz/hvqzJdzPG3g75egc50PYP9J6cMRA+Osu0AwL9PfTbhPOE32IN
VXh54D2o2LZ6hpQbI+Ohbr4GvSv2EyL23ck7wbMu1bO4t8F90yFKD1YYUmzb
Vnv30PhH/dFhSq9odrwQvTLhI+hLxDNXPOcoHMn719467ldnmXZ2D/Mta3AZ
hxZbZp9i2/gi71HF1undO9t50Y1fw5nEEsuE9/DAv0r0y0pMg/foUNYAxQMV
RmLTTGEQ5aiem2Omb9Z9eEr3rT/vla6/WeY80H7kXIRwP9E/jLntFepntpb5
XiDvnTKXRR2J+4Vy348ZF4r/3m4u9/VQ/uCAeQ4Hh/s/TPExxfbtPkrxCcW2
vQZtaKAndZ8SDeYdGvjXt7SfiOMUtojnU5U7XLgjdjv5tortp/6rMvOMV1lX
F/t58v/5KGZ5yP9F7R0hPCjL+UaEvOQbHuTHK1weGFlg/FOMCGU939L7BCcK
12EnNt+4PsdtGh3adV83txO8NWZ6tXi2lZmvt+SMUTy22PbNsHkGRnap7kFJ
g9sHH3KOkJwtMdOoM2WOCeWODZi8d3bzN4KNsu/RqS72dxPRGOEa4RT/O3xX
0Xdk+fqEwP9lzLiZdqF3Lfx+S8cTi23r7FfRTxXexHgmZnqPHMs7M8gkz0nC
bfgHqT6nFNteGfGpAZOfdEG2eU8O8pd0cxq8TfJP41tmnKY6TxXeJ8vxtIA3
h/QyfTuT+IYU9sKGm/JOEf5NeS9qdN0+yHKgrveL/wfxnC78Z47rdVqoW6sK
y0LOpizje8V/QaPLpUzi00Mdzm10ufBSzvRwHy5UfJFCf74vhbN41tgIipnn
L5VbUGH6/lmeczH3Y/51tuJzAv1l3asZwtdQFt9TsW3NQTs34EsanYdy2uX7
GvRfYpbzL7Z/S82PPMo8O8i/KcvlMt8kviDUYWidMdcPbHRb1ijvH5I5UziJ
TkKF20kb4Z0Z8sIHfXKG880KPH/FjHfL9Xs6Prx7Fyu+hLaJfkO+0/iLuVXf
waXh2ssRxxeH5zwlPKPNquemOvPdLv7bWAtgT1195uW0RzJ37a5nLvoVSn8k
3g/rjK9TWFhsO4T5kn8V17Mczy72vG+O4rnFXgMnJo3dD3iuDPwfS15c85GY
wt1BDnnvzjc/Z9Cy2pifed/MEstCDvG8IP805ZnPu5XheIHCAMkvqXAa/JnK
2lLn75l4Y537PHQQLyu23ubocudFHt881+kPX+RfF3d5E1q6/VMyzHttkH9q
henck9K46depbxlW7ntFPuJFgWew2nsH75LqXxE3/Unx36D4xmLbTjxZea4X
nprh+IZAn1zhNLhD3PxPscci/pv4zsU/rcIYG5IJPdP7Gvxcb1a4JdBHljtN
vqq46U/nOd/Ngae4wv9B/pXDy10H6oXe9K3F1qOmHYv5FvSMquPGB7T2mtId
gd6Rs/LFXmO/rdh439bGtwb6feiB8kwCjWvM8W8PGB6uLwnyiUlzlv/OgLmf
u+U7PTzTdR8Q6t857jzwP8jcgO9O9+r+iMvGjvBShXsUClv7OmnOSA7WfVhW
bL9yxPcpPMq5Nt3XFQrLlV4W8TXoj+rbX9doexNNccuEPlQ89xd7PYx8rH+R
fjtpmc9J/rkaF91b7Doi895ISJNH8fucc1GffyS6nUrXd7f+yhraVmzaJsal
ilcprFG+vyt8DRnYSqat3KcG5e2q8JDSZ+n7ehB5rZ13RZBDvDLUeVXA0OGj
TPRokEE9yN8nbj54uLcPh3t+j+7H0kbbBKnrajp1ObSz7TJgIxraI4F/CX7K
IrY7vZ/a21vhL81F10Z8Bg+buXt11HNKmRdbldh2YR2AfMsV1in9bL3zbT9v
Scy5QcJjxT4/eGXc5ZyP7cTuztc73/Y3KYezgJwHwL4Z5/CWxm1zC9pjEZ/T
49oSte+uRttDWaF4eaNtl9yneFmj7ZI8qHhNo22grFa8qtH2RpfV224uZRJj
Z+XsLLf3yYC/6OLyKPvLLk5vCM9qdbjnD0ve2kbbRnlC8eONtmnC+SDOwfXM
9jk60pwV+u+8XbFpL0n2iwqb6Qv0Tr2m+Ossx68r9M+wPVbssp6s+7BevM8q
vKH0M3pvX+X90P1MJM3/jfI+GXF+8pIH3pPyTX8i4jzIQSZrd8RvBTyg2Tby
sD37gng2KLxXbHu00FlX5BrpU/Md3uY7VfxzN7eR9k7Od75Jip/nWUXMd3Sz
y6JNg5ttm+/JUBZ2ZVnnJN4UMNdII++MfN+nhOIfu/jeYZ/2i2LbO2Vt5KIK
0+DFxhw2YyYwN4z437zd5h0x//CfulgWtm7h+Tjw99c72bu71+ewb0TM+hu2
WXnvZ+Xbxiu2Xs/Ld9gifG6IPyvesaa3JeBxzf5ekNHc1WVRl1HNtqOEPNrx
VWjLic3G2HHdFK7NzHegzRfke+3ri8BPmZ+HsrC39HX4NgeqHQd097ogNpm2
Bv5vit0WeFgD/CbgWQFfhC6J8h3c3bKqcj1HZX76MeNX0Vbpfd7Y6P8d5wp+
Eu1HhYms7Sv+R6Em07zfF3sc8nnKfPB8KfwL74/wSTnOezvjcOGfhe/Mtgxk
NWR7fPJdkFOb72tds50PmXdkW97PQWb/iMulvlX6Rn4QPqilaT8EOZ0l50/h
Wv6ten9uV/hb6b+KTe9M/VXPP7h/wr8XGy/LZhHTdaON34jnN96XTOcjf122
60Kd7hJON1o2MuH9NfBvLw/6pBzT7852DN9S4Rp0S+nfWR+OGN+g+j+uccJj
5V77vlN1X1zhenVqdEzdshS3UOhCP6/rd1WYlq3QUmEV8htNg4d/IP9i/snk
ywz0y3KcZ6X4f0o57w+ZjrMDzgxldWdNI9/pbsJlep+fbXQ9q9VvtlY8kbWy
Ro9reRY99HxzIl6353pu4HkjYNr7lNr6ZLmvPye5bRV/KP4PK4xzW5g3J+Td
IN7ny10G4wLaxdiAMQ/nwRjncCYMzDiLZ/t7eNZTc4zvDeW0C/JZY6ygD0Vn
gPm2cFmm7U9hhwod0v7qnyMRX99VeC89v6jSMXxtRWzr7A3V6/Vy8yG7IMif
3t4ysbF2tO5hTPjcFs4XC3mLI5YHD/mLIzvqUhzo8JLnFvF3wS+W8LeM1SPG
r7d0XBLoCcVJhbuFx+Sb/r5w+9Be1j9ZC6X9b7QyrTzQT8h3/tnC6RLLwfYa
cSJg1kvKIl4z6Zs07qB7/JCe3YMVLmc976Li3STnYdHWKnRWulKhSmFXXe+o
OE17ha9tdD7qsLTZ+3zwdMsxZr+vQ8gPvU78O4W8W/ElXu50Y3s/A96p31tb
/j16pr2Sfi6ntTJfx5A3HfCIlj5PRf/H/GZg0vXEp2E136HC9Cy3qYvC+cr7
Nf5QFWojDtA/Y50t4rbCD60m0PercP1pU13E64ScI2ib7/Qo4fE5LuvtVpZR
HeR0Cvgd1lkbXR4ykUFe+vPHsHlf4f69UaEh4vPy7KO9Eb67Z9X/7xHxWvFu
eeaD59V887/Y0vs2nIXgHAT7JuwDsQfUM+I1d9bGO5WZ51LR38C+eYXlbgll
c6aJfQ/2SOaEfRPw3LAfhUz2YppTPvO0vS7dQl7W4SnrGPE8w7w64nXs/6mc
jRVOE3YJ9JdEe1GhV8Rr5tCHBx3tPSPW06Z+u29ve8Ajc1wObRsm/HSuZdDG
XoEOhne3kJc13f9wjsvZOdRhRKnLelLP6BXsA0Z8Zhmdb3S/t9dlr8DzQ57f
FZ7vU7r/+/NMW/psG2fcuD5MMvfl/VNZHfV/XqT3cj+lr1PcW/EVuZYB/1e5
XreAzvoG64jkZS2ReSz5WKOY0d154D8g4nI5Z/1yntPgLyLG6M1+FXFb0Js9
K2U995dD+w4KbYT3wMD/dL7pW0U/O2U9yu3345Ag5yTiiO2HfIOMiHVxn8EG
kPCXyrsxz3TOZRMfGjB7H9zz43LC9ZD3nJQx+dBjRbcV3dnDI8bouB6l+EiF
NSq3n8o6JuK+uW/E16B/hj/TCtOOVuinsKGlY9LYsjsy8J+msp7IN/0s9j7y
nA85k0qcB/5IvvM8zBy6wmMaxjOMYcCMZ5iLs8bBfPyOgJmz39jg/Xvm/gMU
D1T4U/w/VBgf03JHO9EZ5t+IrSLm4FwfEHg+yjeeHf4ptJ1/EHNT5tjMVf+o
M2b+e3CZ5TCv57woflC4ZwMUjuVd0js/WvGJCrdnWd6wIHO7n5WB4k3qPhwX
sc1P8oFvzXJ8bKDDNzxi2YMVjhe+qIVpIwLPXtVuI8+R66MitjtaKvkjA4YO
vi3L8fGBznNYGp4jZQ4PMjnXir+WISpzmMIY7ku+z6zizwMabfyPLv6KErcX
TDw6YPJTn8FBxthAPybkv6SFr58Q6vNps/d02c+lX2BvF70R4vEBfxPonDVh
LYd3gLUdnuOE8Exv5dy/8Et67quEp0fsoxx9V+zjYKOHbw2M7uvEiH3J8B8f
y9wv4jHCZMWT4Mv2eAE6YwnGUWdFPE7m/z8x5OX6aYHn7Hznrcm2fxfoyObs
LmWNzncgL+OLTiUuj7KmRWxbn2+Esf8ZEY//sRsJ/cl8+w7Bh8g5+U6Th29u
TZnrhh92xte0nTH2ctHPjNgnO/WirI9aOv+UyI76Tgl1WFbmcvEFzxifvIzz
uT418DA2PjviMfZtyj+Ld5j1b+oVsX2hXg3mwef7x/mmL28R7KwL3xz4z41Y
1/0m5pw801aOL4jY/mcf3Z/zA/4+4jzwQzsv0P9OWQ5nIQ+I+tqj+i4eD/zU
h/KQeVOIZ4a81PtC+pNWtlOKbXfadCRnnyO2WXpw1PixXMcXBjrxrIDvUJ5L
hHu3Mu3iQN/+ztG3c/2yiG3AHi35lwZ8WNT48VzHl2znifj58j4szndeysGW
LLbmoQ2QnCsjtsVKfEXAR0SdfiLXY7pFEY/rsN2KbfolQVdoTsT6Qoyp50U8
roaG/hD6QvBdxTugeEmZr0GHNjuUhX4R/Mij/KsC/aYyy1zXyrpFV0esX7Sr
3o0Fwu+JvlHf87XCeZket0NnDM8Ym2+ZcTv6R+hgIYN6UMZ+yjulh/79EedH
NjzoNTU3OA3GzvhC4QktzAf/U60cQ386XL8u8Hxa7nu1u+r1CPYVhPcSrtH9
7KywOOJxLHTGvZwt4+wZ59NuRveFdyzHac61QUsrX1XU16DBz9m0xbp2M8+U
M4a63jHqNM/58vAOcB6Lc1mcm4KHc2qczyK+NWCukUbetxG/b/RvlHtjKOue
HOuVLM3xWTHOjq0I7QJztos07Vue4/NnnE/jbBp6KWDOpqGf0inoqJDvrpAX
+u2BZ3seykTvjr0Z9mXYhyHNXgy6eEsCnfNkyKFe/6Z8nuXNlt7PIS/50JdB
RwadGdZuWdNkPZN1beb2zOvHaQxwT8Q2gRk/sCbPOjDx/QF36Oa13c8yvYbN
Ndb6WR9F5hNhPo3MRwM/Pty2rwUTH5TvdWZkIoM1+//W2UO+ZSEvfg9XhHz8
f9dE/C8+pMIYH+gHCj8Qsf/01YpXRWzHj/EAdMYGjyh+OGI7ctSP9mM7Djtw
D4X70Ed1Whmx77aVQQ4YWaTHZvof/WDE45M+Fcb4ZMd24OpQ7sZ8l3VBttdZ
WZu9XLR1EdeDOjwc8Mxs12NdoLNGy5os67GsZbOmjb031ppZc4bGNdZsx4X+
nz6afhvbcPDfmOU80Om3oT0W6BvaOy/rwP9ozPB3s8uG9mSgP833HbEdrbdz
jO/Ptg0l2sKa8DMR88GDnatnAn4q0JdnO4bOmS/Wk1lf3n4/1gc5WyOeGzDO
Z/2YdWHWhLHvxPowa8vEzwfMNdJX5vv5cM+xBcG6MuvSs/NtfwnMWjFrw6yl
4586E/s/NRkZ5SGwVrwfe7jqr96J+Nwca8CsCbNXy1os67/QXlX8P94BtfFI
5ozCr7TyPi/8rA8zLoDO2ADaK4H+QY7znpvpdWjKpV5921suMpujxudl+t/7
ZsT/3xnlxpz7Y/2KeTdrWCXNnoczBycNZn2MdXHWzbkf/Gffivifezr7CPBn
upzXQln832j7E+G/+XbE/9ALy405Y3h+ueVwxrCKvQDhYZmO34t4vfcs7IVF
PNfekuNr0DfR1oj3qXrpvr0v/HKW84GZs7wf5EDfnO887Gdh8+aDiO3efBDk
gHm2L4Tn2xFdGeF0lv8/H0b8b2rON+bfRD7y3xXmL/RvzHegbwoyP6EuCp9l
eN2AdQfWLz6HxveY4fZtCW3kGmnWN2a0cn7yIuOjgOfnOG9fxXvqWe/R3nxH
Rc2HLtakcn8DvP+fhfLQOWcODZ35+/VlplOHEys878BO+wHh24H3O9b7JPcl
fAMJ/8b3nOk5MvNt5s9fBjwhzIOZJzMHnqrxz7aI/3cf6Pl+F/H4kDkBdOYF
yPs9yCTP1xHPqflP8r+El/EpeRmjbgt0ZH4dymJOfUa502B4vw9lvc+aOO9h
puNfAv49pG9W239Q/CPvZ6bjnwLun+26/ZHpQF1vz7CMX4OcGaEs6vhutmWR
97dM4+vFf3S281Bmv2znhXZUtsuDd4DwHxGX+ZlCNnZsWNsn8I5lhLqEe/Vh
tulPsZ7POrj4V4lnkOh/iz5Q8V+i/8N7KfoQ9g/EMzjbtH95hzMDX8TlfByu
QYf2d5BPHvj/CnX5K9ChIRP+T7Ndh2dCXVoETDtahrYcw56K8NBsX88KPNvT
tOPfkOdFiT6W+ZXwsGwH5HB9+zvHuk2OaLkKz4k+pIfTG5V3a7YxdPK1CnXo
m+3ny70/Ltt5M5i/C+dFTWutOB9bQ+wZhTR4RLbpmeIfJ5wUHkvdlW6LHfIM
x+0UNrAPInqh8IeijxJfgfDIIKNNkEkafmR8ne385IVWEPDx2ean/G3Zlvli
puOigE8UPSqcLTljWDeJmsa3Gw3fL9dIf5rhfMUhL+2hjW9kmDcW+Ednm+eE
bAfy0CbanOC5Cv8gHBd+OdNxImCukf4iw7RkoM9Rn5PiGWV53M04mDEw/RZ0
+q5SxWVRr+tuViiJ+r9AXBrwxYE+J8M6+/BfHPrF8qj7NOx3gOkvec554X2g
b28fdV/6TpP+3VHzXhc1vSDL+SqCnKnlft/o38pCHShrJfrwwoVZnhswR1gk
ntElxoz/GeOnw/xiZInbTHtJgxfmucwOoT7k2ynk7ai6VQqf08rXKwMPY3zG
9IznGeuTvl5yxpYYLwxzkJ3CnAWfZthfx68ZcwjmSjfkOWaOwRyB/wBnk/hH
MHeoCfOpDs2mj8nzvmevqPdMaxXXRb0P9YHqWR/1+eKuihvC/SQmjR7RKyEP
/OSDn/2j+iCHvJ/mm5/nNS/wz1XcGGQih320xoD3EX9T1OMN4uaAGRORZlzE
GmX3qPWFXhR/N+GLhHtG3RbWcBi3kJd88HYL/JRJWaxlwdsztJ3QQ/i2EENH
Z2xCvtNgZCCLs3ITRd85al2v3or3jXpPE9ougc6+7a5R70Gfhn571LpeuwYe
6Hsr3ivq/UH2a+FZongPxbtHd+zh7hEw+cjPGtHTjBWi1qMjP/ieIGP3UNae
QT487EPuHco6QfFohStauN77CK/INi88rLk9kWP65AzvzfaO7uDdN9DvDG1e
nG0aPKxTMS5lbYg1I8L+Ua813cZZo6htyxBDZ+xKvF/gAR8Q6LSDtrO2dpDi
A6NeOyImvX2NiDUj1oegHRzohyo+JOo1ov6KBygcmuP1nkMDnXEs60HQWOc4
POq1jtWcKYraxgsy4Gesy/U+gQfaYYEOjWuMje/LcR7s0kA7ItAZP4Mppy/f
ZdR9Xb+AOVPTIcvX5oTxIeM/xohHRo3pS7e3k/vA/la/kHdeD/O9krUjD2Pd
gaHt6Jouyve9KM82rX+gUz5y6AOX5Pj+YjcGHvIfJtpwxSOi1hUfonhw1HqY
xIMCHhToR+Z4H2hgkM93MzR8O8MUHxO1Lh/7BMcGDI1rL/Gva3YZyHwgx9de
zPZZVeTsH/INC3kpE/6jckzj2lreE9X1OOEzxPOZrh0vfEum45EB3xPStZle
/6KN7EETDw94bb7bVqU6jAp5yXdc4EH+7FDWj6LntPQ3dnkL85KHsx58c9An
ZXh9cFSQc3lC73nMNi/HhG8Tnn6q84lRny+DNiZgzjOMCTzEYwN9suIpUfex
GxTGRX0ma4Li8VHvv8wQ30nC57QwjWuck5od+K/K9pxnQnQHbXyQ0yLLefV7
yFjV5HL7BdrJgY6eAZhyTlV8WtTnPjhfAUYf4Maor0G/UXynUG4L02+IOj1N
YarC8xlu16So1y054zExuqOciaFc5nJTAg+85JmTbdrkQH85x9easlwP6kD5
97RwWcXiOZd3P+oxwNRQjwG6Plfx6VH3IR9xHkB4gej7aczQu72vnc19jfoM
FNfPDDyMYaZHPb+DBua/3DfImd/Cec9SWJHp/byzA54e5MB7cygD+Zy3oqyz
wnvFe0J/Tt1pQ1fxLOthPEMhs6Xjq9GhbW8+eGYEfsZITze7vdzzlqz7C+8u
nEu/I9xb+ALFMwOd6xcEzJ4c+PwWIXAfOSOWZX6uX9jCcmaG+KIgk/02MNd7
iX9W1LSLCcKzWngf65KoaflZph8Uvv1rou5zuH5poGeL57Koz+51zjbOCvku
CTzsG10e9XXiKwL/zlmWc0k4Awgd3t6sgwhnKK7OMm6f6Xs2J7wnt7YwHqh4
Nu911PmISVe3sG7K7ECnXpeHculv54Z3jDZdHdpFmCfcJ8fvGTz0yX26mT43
w3W5KtRnXsgLnfs6K9znq8O9op/8nz6a+eQR/Vre06jHUQToF4Z4QeDhHbku
vCeMha4N/AsCpm9vH3j4dk4J3/IR6jsXKb4eWRmOSasLz1gY8PwMxwsDfVwP
84H5t/FPfErxkfmWSb/x37cbdTnkvSXIebaFMWXxPd3Es8j0d3NzdAft5vAd
3RDkIPNd3Zdb+ZaU9zbFt4dnSkya/oEAT1GIbwv8qXzLRebUkBfexYrvCN9d
ZZZxYabv4+JAbxS+k3qprLuixkeIXpLtNHiN4lUK7bKcfwnPIsR3KzzZ4r+j
6hn3RP9T2/tvTrQ0PC+uwzc0w2UuDXK4p3cHel7IixnUFVGXe3ML0+4NMpcF
DC91XB7q/EQL45vDGOb+8Lze0T25L7qjHfcFnssa9X2hbx9krAh0ZC8Lz3Fh
wJR1R2j79navDHVeFTD0u4KcO8P9uD/cE3hWh/ZercY9LfyznvMDUd9T6Mh4
4P/JXBPkLg55Kf9BhYcUZmc4Xhvwcdh1Ed7G2EP4YeGvhT/OcJ7BGa7H2vC8
COQ/hjGD6vOI8Dc5pj0Y6HOwvyn8regjJPMx4e/oE0R/VvhX4fN1/85DX533
D1suin/hjB52jIV/os8Q/5PCP+Z4LPhAaO9Y8Twn/DtnDLGlI/yD8Fz2cYW/
Rx9M9BeF/xa+UOXMVNig9MWKZ6EDz3MS//OK/xDP4cIvCf8jfBJ2WaIZ/71M
3WK28YH9hInYZhFuIfqp2EMWzhaehE1j4VbCCxReFc7CbnAXyYpnZGxR+jql
31Sco3gh13g3FE/DXrFwa+ygKrwu3FLxGdhtFm4jfL3C+8JtFU/B7gvvufB0
bKVwTziTpbCZZ5Rre17Y9cI+zZAOGRm/BR91+KPDf1/fNvZRh6+6I9vYdx3X
jxIeLP5fgx+7RZL1ruJ8xUNF/z34/ztCfe/ZCbfrkraaJyvu18Z+7PBnd7Tw
MeL/I/i3m95JY4C06zRM9EtSznOE5G5UnKm4RnI+i9reVb3w51HboOomvDVq
W1OXSU5J2nxXCFelzTdHuLvwF8JXCXdJO0+PtqZhw2kX4S+jtv+0P/7joraB
tA++56K2vbSH8FdR23+6RnL2TTs9T3jXtPMvED4k7Tx98LGQsF2W60Tvm7bc
RcJDhLcJ95fM76O2T3OL6Kelnb5B+Hjhb+mDhMcJf8czaOsYm0YHt7UM7DAN
Fv4harti7+q9Okjv1U9KH6f7eXWwQ3eb5BSnzYdNOmgD9Sz6tHU52GQ6Ss/u
nITzbsn3/4T/y+8xt4Ozgc9JztEp+7PBVjg2w6/Osz1u7HJfKPyB6jBWdfg1
apvQ2IjGBhs2yLFPfmme7Z1j//xy4aWS2S5tvgeF76u03LuEJ1ZaLvazsVt+
mfjvE/2qSqeXCV9WablLhCdV7rA5TjxL/PeLPq/S5WFfHHvjc0RfLfptlU6v
Ev61yvbNVwgvqrRddWydQ8MGNja/sTF+jfAa8Syt3GFbnHhenm20Y/v9ijzb
ZEfGlcLLxb+g0tewV47d8rmiPyD6nZVOY3ce+/NXYT9T9JWVLg+7n9j/xDfw
WtHXVO6wM048P892xLFbvkB4lJ77/cFuKWd38JXM3u4I0e8Ndk5HCt8X7Jke
L7ws2Dz9urP6HsWj2timKTT8JmPTlHz4VsamKfnwa/yw6vNwpcvGpill4v8Y
O6PYNcV38omSvzzYOR0nvCrYMx0jvCLYJ8WeKXZN8aGMrVJo+GAeK56Vwebp
eOG3/5+/ZOIT2/g/tjj0/9jpicdsq2eC+FcHO6p/x2ynCDq2UaHhW3ml6n9T
pe87dk6xdzpWMrt3V/+icGHCfqTwJ4Ud7sfEv0/KfqceF+6d8rVjFVfHbGsW
X1P4nMIWOP6l8DOFLW18ROErCjvc+JjC5xT2uZ+QnP1T9l/1lPDBKed5UvjA
lGU9LXxoynnwcQUvNsufEb1PynLxPYVfKmyBPy96/5R9R+FHCn9S2LfGjxQ0
7G3jj4rvGD8M68V/VMq+u/CnRfuwd75B9IEp58cXFtexEf6s6EekXN6LwkNT
9lH0gvDglH1T4a8IGja58U8FDdvbx+l655ht8V6s7/6ihO0fXa1/7zyFnjH7
eMJ/E2emZuo5fl6ivj9m/9X4wj5ZeaeI/nrwjb2o0TLQY29sZ94PxXOpeIar
vK5K92jn+BtsTamPmqo+KklZ4jlePI3IFx4h3CDcq51p34u/ZzvTvhU+Wv3k
eQn3b3c22P5Xna51qbI/iKM1X79M7eqruu0cs/0jYvSdFqie8xV60Qcpnq3Q
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
59lCt7WL+N8XbivcK9c+5wsT9jv/oXCB8C7Cm/l/CO9M3yI5X1c5/Zzw1irn
3yD8XZXzvCD8U5VlDVS/0aPG+5HDhHvWeD9yLH5Varzv+Hmh99jYX9sqnBDu
K/ypcEy4T6591OMnHh/xGyU/XWa+/wn/obKSwj+if8IaKd+s3pmH6iz3NeFn
6ry39nOh98/YO/u20PnG8kzFs77O134ptJ97fNyfoTq+1tnpv9DDUTxV9LPo
Gzs7fabw68LlwtOF3xCuEP6j0PEU8f9U6PLZ1/sHfRvhacIz6APFX6X0OfRv
wpXCZ9PHdjZfRpFpp4v/t0KXM1m4RZHznSE8UvezV433Vs9V/G5n36/zhN8T
7ih8vvD7ne3brVWRadOVN7fINHy94ce+OmFf9q2FO1EX4Qvotzs7PVN4c2fz
4a8e//X4nr9I9A9Fr1H6QuEPhDuzHllk2rmS067ItBnC7zLfTDr/Fd39D0zS
R+m7v1b02oR9v9cl7P8dv+P4H8cmzW419mWOX/NdauyLHb/su9bYbzp8+FqH
ho2czeorNikc0mh/5uTDxgz+mfGXjK9kfGF3p03Cu9fYT/l2n+XE2IlhT6Y+
YTuC+BTEtyDrx/iCxpczfpxbpO3/mTQ+mfHTjF9mfNvunLAPXGzM9EoE38dF
Xm9lrRU/k/j4xNfkp6rvJ032ZYt/WtZeWXfF/yp+W/HBij9Y/Lbis3V4tf3X
7qp0oqv67TrnwYct67OszX6jZxJLO09cPFvrXPY20RNpy8U3LH678Q/7A885
bR+t+GXFxyr+VfHFCg1/rPh0xZcqflS/45tI2/8h/ifxf4kPyh9Fr087P35f
uY5vxG/5btIu72fhHmn7RP1JuCFtH7D4SoWGj1R8tELDT+v3vMtpl/2LcK+0
7x0+QvGHip/Q30TfK21/qvhQJcaPKr5Y8U2LP1Z8t+LzFf+tf4j/wLT9uP4p
3Cdtv6l/C/dP29/pX8JHpO0HFf+r8OKDFR+q0PCLis9V8uFrFZ+o5MMv6u/K
u3/aZeNbFT+p+Ej9R/SBaafxX4rvUvyWttB7eGLa6UzhE9JuWwZjwrT9oOIf
lRhfqL9Kzh5ptwf/pfg0xYfpv6IPS9vnKv5XifG7in9L/JXi4xJfpvg3xZ9p
tuRPTDudJXxS2rJaCk9JO08r4WlpP2N0Q9BTQT8E/6P4IcUnKb5GByfsbxTf
ovgYxV8oPk7xS4pPUnTb0QdCF2hfydynxn463+jgNT7W99DD4iwBulh719hX
KLLQt+K8ATpXnA9Apwp9Knx8IgMfouhVcWYA3Sp0+dE/Q/cMvS10/dHd4gwB
ulDoQaHHxHkAdJnQq+L8ALpV6EBxrgA9KM5MoGuFnhXnFdAbQ2cM3X90p9Cb
QqcJ/X70mtCH4gwAOlHoiXCWAF0RzgegR4UOFecS0G1CrwkddnSn0JvaS+3d
s8b3FB0ozgmgB4XeE+cE0H1Cpwk9fvSa0PdHdwq9Kc4HoP+E7hN69+gzocvE
WQF0ntB3QmeKMwPoTaHfxDkBdJyOV99wfsL7bJxXmJGwX1J0mjgngF4T5wPQ
VUJPifME6EWhE4XeN3rs6Dehr4R+ErpJI/Evk/B+zvRa68nujP58jXUNt69H
E6OTiF/KWQnrNrJmzdo1epH71VhXkjR6MTMT1uE9oMa6g6wRs1bLmi36eqwd
s4aMLh7rtlz/z9djjXUBuYYeKDql+NM8qMY6fOTfWOjxWkOu9aHQkfpPP6re
+2ovJ6yzgJ4GOiPoQKHzhL4TelLoQqEHhY4SOkzoKaGjhB4SOkjo/qDrg54P
OkroLaGn1L/e+hnocKAnha4VulL4RbwpYT0jdHluTljPCF0kdJjQR0I3Ct0p
9KPQpUL/DH0q9I/QPULv6AU9i6UJ68X0rbduCjor6Nqgu4O+zR1h/5u9b3Rt
0NFB3wadEuqFTkq/euuv0H70ftD/QecFnSP0kNA7QkcJ/T/0lNBRQvcIvSN8
PlIm+jVH11uHhvzoFqF7hH7RgHrrr9yv9Mh66xmguzCw3noq6Lugz8J1dFXQ
T4GGPsuweutboJMxuN66NeiUDKm37gh6JMfUW0cBfY6h9dY1QS8EXRX0WNBz
Qa8EXvRK0EdBBnor6I7Ai47JoHrru5AHvRDkoVeCLgjlo0vyuu75gwnrhqB7
8V87hN8W/aGE9USOr7cuCHoex9VbP4Nr6HxAQ2cE/Qz0NNDpGFVv/Q/SsxR/
1dljDnQo0K/Af9joeutzbNe9IEZHA70N9Dfwl4ZuF7pc6HGNqbeOxXZ9C2J0
NNB7QP8BfYpx9daTID2+3voQ6DqwH8geK3uw6ECgC4G+A3oK6DCg44B+AfoG
6COgZ4a+GToL/WusJ0GegTXWgeDagBrrPZB/UI33usiPvgNlokPxvu7hcwnr
GuCv6vmE9RTY02bf/D9faHHvSbMfjU8kvl32w9kDZO88J+yrsy/Onjh6IeiH
oFcypMb71uxJ4/fphYT3/9Fx2JCwHsQxNd5vpv1Da7w/vX1Pmpj9bfaukcE+
+bAa70Oz9zxR9/CsWu8rY/OetUXWFdlP5jr70uwDs9fLPi97y28mvMfL/jH7
yOwhs7eMDPal2R9mP5i9YPZy3094v5c9ZPaD2QseW2/dF9rJXt2HCe8BshfK
Piv7oezXfZDwXh97quyhsn+KDil6peiRsj/MvjV7xOwNsufHfh9247YmvC+H
TuoXfHO6t6fVe/+Ma6y/sjaLrT7W3bck7M+GvUT2INlPRIf1S97VPO8TsofH
/h37h+xNsoeIruK2hHVL0Wf9mm8oz3to3wiPbWfd06+Ej82zjuR3CeuQsrf5
fcJ6muyVsY82TfyvdVHfynkopd9LO87VP+E4zReOVYjq2uYu3pfKZv1IeJZo
P4vvTeGL8cmRsP7v7wnr1b4l+kjRf1X6eMkYoRBTeoziExUSwicoHqUQT1mH
FF1V9EhfV96L8PmRsH7rHwnr5KIv8GfCepHjlW+cQpJ1tC7eb8tU3d4Rnita
RtI6rf+Kf1KedT3+4TtrYx3hlknr/J4sGScppFLWjf074X11dA3+Slj/dLKu
T1IoFc+pik9RKBHe1MX7f1nor3Xx/l8LcNrlRwutF9wqab3mb8VzBuduktYZ
yU1azwU/3ujDoQu3SXnbCNcVWj8I3aSRqsPXyjuV8z5KbxE+LWW+z4QncV5J
+APlbae4a6F1rvOT1rv+UPQC4QbRt4p/SsrpzWnnqxf9o7RlNwt/LFws3EO4
scr6gugKblPe05U3ovQ3wtNS5vskbVpP8W9hL0N4Z+FP025rr0Lr1OSgV48/
FuU9M2W+lyt1L5L2Q3Rbhf6jFfZN9L14posnnvT1ROD5LG3aPpK5QN/XA+E6
OsUpxbu3tu5wifCerb0/yd7lM+2sq1uetJ5ve32z7XlfRD9QbaxMel8F/z/o
Y6GLVYMuivCrqnM6aX8w2E5/Jek0mH0y9svaFbj+HdDTEH2Y5rWvC++UtI+V
ToqXi/4MeqyNljVcPG8kfQ0fK9WKV4hnpOhvJp1+utz+S2rRzUw6xhdKl6T9
u+Db5Zuk0+ANkv18o6/hm4by76fOor2sUKf0Os2Lx+FPXXiE7kNXnkMb722y
BxpRW77tpHel1Oknyu0zprNw53bOt7GNdQbLktbLflQyx9f5fj0mPAE/68KP
C58k3J06tjPtdeWtbWfam8IZ+if8zrun8EK5/a808bzTpm0TzzbhHsLfCX8v
/B1rDUkH/G3ga+Nb0XoK/yCeFqzTJp3OFP4j6fyX6p25pN55Ptc7Njnlb+b3
NpaFnOIq6+mio/sO75HC3er/D1FbDu5qvyzxKusZo2P8Zrn9ssCXrLIOMfrD
15ZlZOwiPFH3s7TK+sHoBnetsp4uOrrlVdYVRk/4Y95rhT9UlyzV+YeQjlZZ
Hxpd6Loq6wGjA8x/ZgXvV57/GyuF7xLOrvU+5YFKt6z1nuhB3IeU48NVnxbC
BwsfIfxFuf2aDOP77O4zGoVtrSODLgt6LJ9VWu8Wnduo3pnDeS9YT2AtQfgr
lftuZdDHRZdP9+m0Ust6v9I6vuj3tqr1vixlH520Txf8ueDXBbw8175Q8Iny
EvMplfW3+AclHaDjJ2VrpfWS0UnerLifwlPMR9i/SLotW9o6D/z4i4EnLfxd
KJtym3QfjuHbUX+yrdI6tejTfldpfVN0Tb+utE4t+rRfVlofF13cf1WvY5Pe
k+GcEOeGOuXZB81xvDfi+abcvluGK/2r+EYkfe7qXNXzo6T5OLPE2aUOeT6b
xVmtZJ7PR3FOqkT4T+U9IelzVGco77NJy/xb9BOTPqfFmSHOT1UI/y76yKTP
bP3LvkvS56gymd8mfeYpI+V3pE+Bz0JxNqpjns9Lca6qSjhL/Cclff6J8zen
Jn3+ifM6E5M+F5Kq9f4T94KzUJy96pznc0ecP+qa53NOnOeqy/PZJ85AdRHO
kfwpSZ9/aslcOunzUnnC05I+/5QvfEbSZ5s4w8S5p0bWG5ljJ30uqkD47KTP
MBUJz0j6fBLnVM5L+qwKZ284g9Ms+pVq8zV873pntuj+nJ/0eaNDSjSOSdp3
GeeEZiZ9loizSpyB6pnn8zoXJX2Oh3M2s5I+f4NPHPKOVllfSObFSZ+h+Ubf
wto6pznvcgnvX57PglyZ9PmP3gqzkZPrMyuXJX2uhXMnVyR9HoWzZZcnfRaB
s0cXJn0maX+FOcKHMHdWfHXS51+WJ51+Xv/No3dSH61x+OIy7/+xD/hloc/o
XMr3k2cfOvNCXs6EcUase57Xr1nHjuu+LkzaHwy+YPDxgo8Yzquyls2aNvqG
+ISBhzO/+NC5UfimXPvNuUH4RvrSKmN84BxaZR5875zOf1T4c+GpwrfwHQsf
Jp6bkvYpNEX0m4U/zbU/IOg3C09Dr0P4M9bSq3yegbMMI9XO22mv6NPFs1h4
m3Arzc1bKixVOk9xLnN1vlv0NJL2E5QlWguFu5Wequ9uieJTRT8THQzhb9hT
0PV8hXuVXqp7vH+J7/0J6rvuT3odvUDX2yksQ26VdXzR743ont8pHGEtIs/5
eF4TSmzbEbuOjOVXib4kz3ux7MmerDoOl9w1SetcMwZiLMQ4iX3jBxWP0PVY
R933pHVVdqmy/i66uwcIP5K0D5mr0UMQ/iTPch9N2odOryrrv6L7Ol70dUn7
4sFnDXmfFz5V9MeS9oPTo8q6zug5X4MOA89IeD46DDxH4ecVr1e4uJXj55Ie
R+GXZn3AZ7JPkXIftxS9UsU/02fWWo+H9szuYFnI6YsOQ9L/oAXoOfAO5Fln
GZ1m9JbZM2Dv4DLdkxHVeg/STqMXvCFp3eBjRc/s6HLRU0a/GV3lS9P+x/B/
Qe94Y9L6wi9o/DBc46SuFda3RUcXHVt0kP+XtF7zGW09hmD88H9MnXd4lUXT
xgmQQkJIAyXJyTknh0CAEJIQsCv23is2rIgNBUV8URRE7AURsIFYwF5RKfYK
KoIFu4ioqAiogAJig+/+eQ+X3x977b2zM7PlaftsmemvcV2q3OPCk4TT5R7/
TVa7lncyfl38CxUfyjhW9BWdPBYc3NbjP8Z+k0T/sZP1XKY6/9TJeROFf+3k
8mYxd6eQX+59oF929F5U9rF+0dF7Wdmvuqij97TeI51/Rzv5Di/u6G8x1+e9
uC58e5d09Hd5S/XTwdgqUfqBWowP+Xt2v/DGTv4GX6br2LXc9EuFa8tNP7Ob
xzqMc/g+ogMfEKtUj++Ed1ZZh1Qa7yCez1S3k/Uf/T3vFMnWCS/jvSPcg/9r
4fvU1mkKPwg3a2z5O/dAW4+tyWfszXh6eUePsc+RbKNkV3T0GBl9jJPL1Y7j
VPbKjv42E/MdHyT++q6WZ0z+U0ePt4l/Dsw48BfejbpGs5o9fmPfcb3Cb8Jf
qD7nSk+z9Kzhnqj33lz4GINBwy8G4xTqxVhlpO7z+VWWv1L4XeH1wlcILxBe
J9wg/Wu5NtLf1M60b9u6LquiPr3aWe67tu7X76Ofr+LMRZX762rh94U3dPS4
mzE5tgF6tzPtR8k+Um/bAeQ9Vm8bAYyzH623jYDN42xibAMw/iYfmwFDunkM
yvhzqPp4k+gXiz5Z8T8KU9o53qjwoXBCfH8Hz+BuHq8wVjkVm7rlfi7O6+ax
LONYvietyv19eVr1uUEhR+mHix3z3eA707rc3yO+G9nl/nZcID1jujp9vvDo
rtb1jHTcqJDL/kL2RZT7G/UoexvK/c15pNj5fK9miHdsvfOGSs/lXV3eTNFu
qrf8bF3zgnLvY2T+Zgb3gt5XG3qbzjeK92vbcr9jh0nPtV2dflE6JsXevrEZ
z1tUFnvPIHsgee+yl419fbx3h9T6/VQS+/nY18c78iXpmBz7Jl9RPCX2/L2s
+M7YF/hYkeV4J7GPkDL5Vvyta1fKnAN7ywuM2zGPoTHGdarTxVWOmdcpUN2u
zXjuJ1/4moznk9oI/9zZ6Qu4v4VvEr5KeLXw9cKXCj+pdhcwv1DucsqirF87
u/1jeG6EbxS+rMoxc0IVxdbBPFNbxvadXY//Vbkc5m8SxbYDURf3yLiM53iq
Ym8Xe7QYC7CPiv1UjCNeVd9MrHfem/X2Xd253P/9yXL/+7M3ir1SfDPfYN97
vb/ZrykeV29dc9jvWv/fHilivqWvi3ZbveW7lFt3deyt6xJ4tvLH1/te+aDR
/nS7sbe+3O9bfO11LzcNP5PYwOhR7vt0ZlfnQV/b2W2+tsq2SOvLfV+3rLGv
RMY/M9gvJXxise1fYAcDn4HYvWjk+Si2zYye8Xxc2M3/VPxPPaeyZpZb14fs
H1C8VPRS9gyUe//LYOFtyr1HZnvF25V7fwv7XLYP3EX12TZ4sLOCPRb2d/xP
ZS1UGTuUe0y9Y7n3oXQV/06B31c/vVdvvd1E37nce2Sw44K9GvbCMGZHB+P2
7uLZNejYr8GODXtS6kTfPTA2aLBFwz6XnqLvG7iH8J7l3hdTL7x3uffUYKdm
r8CMtftGHf61WVPu/S9NfE/LvQ+oUfjAcu9/aRDeP3iwZXNA0LFzs0eUha2Z
g0K2s/i3jr7tJXxo9FWz8OHl3gvTW/jIcu9/wc7NYUHH/s0RQccmDfZq2M+C
jRts3bB3po9k+wXeSviY4MF+DPZkKko89sfuD+P/rfmelnuPDGd6ji/39cf+
zbFB5x8C2zf8R3A/MWZhfI1dGWzOVIrnB567cs8ps4+YfcU1op+p+PS4Jznf
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
Yp0luY4XBz5Ber7meqvMb8T/Dc9FG7fp62gXeaQvy7HcVyFLe2jj69nm/Sb4
l1Sb53fpOa7RMrTp5EZfp3fYm636fBvXi3hpYPJIj1ZZS6t9Tf+QnvnY8BK+
XPR1orfS/d2Qb9oPCu0l+73oy4T/FH9n7MdxjRg/N5oHHb8q/i1hO29Hl5oH
e3eni2d5wnLLpGeF8MY2llsW+qskv1L4LF2vE0qNa6Kc5aEH2k9BP6vRGLnl
0vmz8CbpnCb6KuEThVeKvlo4K9/pX4R3y3YMDzboBpQ6DaacFVEW+auD/nO1
29WSPTkJt5M2Ppvn9CLpPKvUGDr1+jnqeU6j+eHdusR9SnufU3qt8JfZjtcl
bDdvlcpaL9xKZZ1T6jzoQxrNg9wQ0X9P2LYetPXB83ye6YuzHW8Inq76p/5L
+HjuJdXhT+G0+nmNyvpDuHW+ef8I/qGNTqOvdy/LItOyyvfGvFZOQ/9aOv9R
/LfCKYznuQ4KbwkvbzA+Nc/58P0jemnKfPCQB67VO21TvvluUd1+U91aqKwr
RfugwWWfmu2QhV2TFtYND3reaTKdunXr6rJOCd6WQf8s6XEbY7Z3xd9a9HdE
r1fcU+FwzhmpvDLuf/XDRyo3W/i0bPNmB//pnAnEpqeK/1Q8eVWmnamQLzyn
hfOhz2cfbJV1Nkrn72pXDjjf+W2C56Mmyy4Q/qPa9Cba3mRd8FB+TtQB3oLg
X6uxWbHwfnp/1qeMv1Jd2ikuUtg637hQYVErx6R/UHuburp+1K1EcWnI/lNt
fLVkv2hwWbSPuG2U+1e1ca98l1kSsj81GH+uZ+7EApd3dpb7gLJKOZ+iOKXw
q/hv13XpILxS+Isc494tHW8R9FHiqcRWTbZpWwb9EtE7ctYR21OKKwKva3A6
qWu9qdr8N+Sbtzx4yCPdTWVlZSw7VjyrGlwGdUnludzuLR0nog4bGozJ/6vB
bUnnmVYVPKRpZ51kW2VMv0n6L0+aTtv/lQucnTEel++xBuMKxh6LpT8j+hvi
eUH3Q7XwgdmOM4HfiPRWrXzN28W1zpXOTsJ75Zu3U/B/LZ2duVeFa6qMD+LM
pvi7CO8t/mvU/mbazpwDc5/CBzMekGxX4bnC92ArR7i5pWndgoc8+LdRHQoy
pu+Tb1rX4LkoadmZ2S6/S9QBWl3Qf2gwphye0YZ4TpeoPo28E/jWJ533kHjm
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
RJO/1zvmuY3oZJwzWfrbh54tWaNsdrp96ISOf5SS1H91KQnZ+3q7LOrJvrCK
lPehEbP/jL1ntGPL4GnRw3jbXO93o71fxD43+gFaIuU9YewHO6WX0+C7elsX
7Tuxl8tAP2tojDFYR2N/GuVSl+Ghi/1srN/mpf5bz20TmH1nlAVvz5TPP3AG
gT1o6dR/+9DYq8deNPaOZVLeP0bM/gn2TtSkvD+MfV9n93Ie9GTKsux/O6OX
dbI/jf1cyLCn69xexsiyFwOdlMP+Nfa3ba5LdciyL4yy0FGnuLvCBLX90FLj
LYt9hhL7Avx/sWeMPWrsLeO/DDr/d5y5oL3HCG+ta76VQg+lxzU4RicyXVLe
q0aMHvaendfLaTBlUo+OxZarC9mGlPuU/tyf66Zwle6BrQOfpfunl+KmlP2U
EZPGznx9yB7Lv2qJdaFnN9Vx12ankWnk/mzt/RT8G/BfwD4Q9oiwP4RrxjVg
nyH+0HqF3Gm9TOe6wMd+kqxSx8iyh4Q9QrwD+V9ujHqel+N/B8rin6JlrfeN
sO7PPggwvlCK1Yfb0ueq23u5bjPtpd3bBm5XZr3oxI8QYwjGD3+ofRuanaac
raKszX13ZuwhgT4nytw+6sAeBDB14b3OmXfmHjn3DuZ93wnbV+jOcn32j3qy
b4Fz8pt5+4Zso/pqF66Z+i3FvvqU/zM4A89Z+P+1978CdP4X0HdA6ORfh30b
/IvBtxt1yHeMLOvv30UazP8TZfFvxf4NZPn/gneP4HlO6X2EF0j/8+zhSJk2
VfG9KecxJt8r5fH57xp/7p2yXcp7e7tuu+uaTO3jutKvXXW99ktZH3sDKIv2
rWFffco2KhkfgvkvoCzK/bOF4/0Cr210udixpJwDox9YT2BdgbWEgxUfpDBN
/V/fYJ49WBstMH1WrvfEHJHyWhLjvkNSHjcuFP3QlO1d9JXs4cJHZ5t2WNDR
QRmzWe9o5bwzVLdfGq0Hu5rzms1PfmOD+akPtMNDD+tj1IH1ROIjoz6sMxyd
8loD7Tkq5fWRTxqNWTdhLQz+XpHfL+jIsf7BGsTnjU6DS9Sui4Unqw+OTXnt
hPUL1kZIs27yZaMxdNYy0ENd+Nfg+vKPw9oHssj1V3y8wpAWxico3KFn55ve
TkPfq8H0YeqHs1Kes+Y/nTHLSSmPZxh3nJzyeIZ1mFNTXpfhe35KymODJarb
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
XjGgsHeAO2J/x7lrr3cDcCL2z+Ev4T6k00JtJmX+KZyithSuiE8f+BN8qsF9
4U/1zg3uCneHA+AucDfVW7izvonCvUgnWXWDdL6AU9UGwp/DLdW2wyXgSHg2
HM65uEj5NOV4S8Lndd/0sn5JQfqz63lWGog9CN6ssU9wAXiTxorAReCtftb/
Kyy7t/XDguG/vK0fkx9e6W19kUB4LTyAbf3k42d9Mn94tbf9S/Ag3OJ7HKL8
7+sZ0cv0A4dvamwQst/L5vPRPECa02cQaRbSODvS/AYOgDf62frMSGXNTRBu
cdIPs21/1WfsG/Dppzqp44W/0v1L+fSz99He8FLy87Xug/A67NcLWT6UhwJ6
/gm3+bvm0Idao7E5bhYPQj576FONLW7vvDU3nd5l+8DLWf+kqD3HK+bDaNLM
BnfF/xbpZC9j8Y52lzXO5hxHFudYPEvYdz+N4dc7nbwa0+Rt/3/q2+B67P6F
7fjlr/L72ylDla/K9Gc3+6dC5aIYLIrhp3FhiuNXlrLNCLexc9/H2FiwT93N
lu7wEMqkGOlv87P5STRPkuYokW+G43O1kPlrHoHUcEtf48c0xktjuD53tzE0
GiP2hbuN8dIYtM/gs4VsG/krT+I0jiUF3RLJ6m37XIQ0zm02rVOMgkfBxquy
2dxbiqOjd93yeeJs+yjc4tof9bK4LQ/hWeRzH/u949QT6bsOq4y0/JOb/bui
eqjzfKyQbat0FHvlHXzZzdbfduqJxoCqbhTLab6PHH/Nv/Y63OYF81BfEp5b
0GLKvIDLeFuMhpdw4VKWrvxX4P8m3GKNaFvZ3jj8zmH56v8Z7UvHp/2vdvIg
XuvUVb3fXA/3pwyPoY/rGvS0GJWal0KxLjsVsnWyb+W8b9RzMG1pN/gO+e5D
edeBb8M94HXwBnwy+1tMeqWpuPSHwy3WvOLMy3bCSVM2rdO7qeL69gB3giuV
snf5+UvZdXbQudYCFOcZvkH7HMe+brLfLsG2D+Vzubu9KzzipNkLn7v4jKEc
PofvwYvh4fB9OAv1Kwg+BdcmHX/4hJ4R4ED4JFwNLsp+n8BD4OLYz8EN4SLw
Gd2z2Fc0fEXPLNhLwRfUh4S/L2THmEY5F8J+Ws8j2CvA1+A2cBDpP4A/VZrw
Y3ggXBmfG3BHuDD2R/AAOBj+G/4CLovPVf1zA1eEr8Pt4EL4PIS/hl3YL8Mp
wTa/zslwe9+btbBdS7qONJfcEqRJbptTTsuaby57YWPZ9U+4rjv9L9CB49oD
e3naf+baVv9ZaP1iJ826xS0GyfgCFldU79gUV0H/Tug9WZfc9m5dc2FqHsxX
6pvA10tanH2lf4fzvrKQ1eFj1PP36u/oflDS5rLTnHaaI+8ty1vgm+jXyCbV
E/TycJujKzG35XGpcyz651br9B/BpXAbD6JxIIo5ciXc5lW8Fm5jQPQt5orj
I3sBb1u3MLPNwXQu3P4r+biQ2eWv98VXkfZe9s5UMVGiQ20uvwtOWWmOv4tO
HnIWtmNRPqWXO6wy2OuUs+YfEKtspPc5ds0Vdd45L7kK2/G8c7P8XnLyXIQ+
QBnK42fuL8XgCHgWnBsOgedQN0qoX0Q9mcd+K8Ffw6vhCPVh4N/h6urzwxvg
ynA/eK3ONfytnkfghvBA9evgUPgzeCEcCX8BL4XLwV/BK+D+6v/Dhcn/V3oe
0TMy3E/PC3AhOAkeoudl/JvBg+F9cA09d8Ab4bLwl/AfcFN4ELwXToGHwgf0
bRT+Bt4CZ1PfCZ4fZHNFF/s/ps47vKqi6+J0QkgHEpKbBEJLQhKSe2/oJRB6
7yJFQBAUUWyogFIsIIgVREVQUARFUFAsiA1s2HvvDbuo2FHx+y3X+LzfH/PM
Ovvs2VPOzJw5c2bvre+4NPvkbgkelWZ/0q20fk7zWTT5e+yaZn/2qWqTVPv+
lN+OfuAauT7feiTi82c5+mZMs8/p1uAxafZ1XaA1GLgOY2S02jzXvsbzwEPS
bNsxV9+eaT4fFtGck2Zf1/maW8ANtJ4Eb8u1z+zm+vZMsy/zZuBh4MX6ztL+
Bm14tr7vwLngM/VNp30D8GHWqzPBF2g8aj0PXg/O0RobfAO4kdb2+o7WOIV/
Bvh88K/g48BLwI31XQBeC07RN4W+wcHJ+qYArwIn6DsCfDk4qr0m+t6VjJHL
Iva90TXVvsbl26MKXEtrYH0La97QGhi8HPyz1tjgxeD6Wttrnte/NujHg5eB
F2ttr75Be3wGfSL4DOhnMh+OV79Vm2m9Dd4EvRB8pvoD+BTwcnBj2mcO+CJw
BngKeJneHeDTkXMUeCdyztC3G7ip6OAV4Ezw+oj9uAzQWoMyTNWcjPwfwMeC
zwWfgZxx4F3ImQs+GnyvnqG+C8A3wvM5/JPAZ4G/AU8Gzwd/C54CXgD+Uj4H
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
891X1E/U518PYyEHmU+Ar2vitlFbDyPtY8q/1PVT/KjGKXNXBP794OubuM33
BbrSvRbS3gjP4+C18NwEfhK8HjyX/M8k5Ca6j6o8d9X1GV7psOocb/sS+9ue
kGBbabqeTz+5gdBR551YS5eX2Kf1UQk+76lrnfmsme9vW9Hr61+6/q+zZuub
YzttV9FmXUvs5/t4eLaRpofOcdW27E6EGdCTSdsFvI60TfKNxa+4a8AzA762
gfMsD/k2yrcsycnKt/ybEhxXBVw732U7OsFnVGMlPqcqm3ozg8yRpbb/p70m
2Y87LrSDbKTOAY9M9f6p9lR31vX1yRrL9XxfPsh/auB91tPDvusfoY5qS/HO
CTyryq3PKtuklaHN1f7RUDaVs26+74kuWjzQE6Omx2irgnzLlUzVtWeo7+FQ
d7W3xpnG//fpLkvn0FatSXtG6Bs3EG9QAHfID9eJpm0M+EfG2k0lPgNSWmo9
6dppjjeX+PvsN3g2lfg8iHT/LivxXpr62iUl3oeT/SP1S9kw19w5L4yR+7S2
Vnsl2t+59KRbZ/ochugtGb8LiM8JPPJto/9eOqf3U6nv/ce7IPBcH3NdjqG/
3VJifv0ja1Du6xl1rVt4dYn3jKVXeV2J99I0v+qe5tjCUt/br3O8pdZZfCLV
eoxXlXifVW05N7Sn7l9b4r1b1VP37qzr8/hqF53J1/l66UrqjH3NZi6Pyrap
zPrrbzB2biqz/vrr4BvLrO/7WlPr+q4q8Z66ZFxR4r1Jnd/XPZ3h1/tN5dM7
7ofQBzT/j6BNhhNykJdFaEo4UNf9vXOp+6LO3XQv9RpW46VTaeiDikutU6nz
O11KvWbR+Z2upV7L65xOt1KvXzRXdCz1WNU+VYdS71XJ5mM8yJmr9RD4OOar
+dRtI3hGE39vyt7nz+Fbf3qpv/f1jS+/19pnKM91eYrSHEvmS/SZuylDe/AA
6BWltmEpW5Sr8n0trH5dVGqbkGWltsUrPeWexFWlPjOvM+/COvc+KO5772Xa
lsrYUq+pt+Q5vdLKf5Le93rXyw7LUaVea59FHTepPtTrLq3Dwc10rq+py3Ny
betgy6bp36nWEVWfU3+TLq76nPrbMtYwbYQzPW/1KPWcKB1vjUmNR9ldUnnq
gpfDXyI5md5H1xyn+e10yrMOPE16u5RhPXg6eAR94RTwm/ThqbTtHPAb4Cg8
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
A6V4xv/D04P8jGw/6+REn1lQefR8mmtvQGM70T7ezgN/k+B4ScCKdf0xc8hC
4nMJL0Dfy1xxTsz/PTXHqF89CS6tME9r5rr95LFMdOKlMeNH6trXqXTJpO+l
d77e/VqXqowXhnJuLjNWP/27rdMr7X+y/mrrf6Aqg/6Tbk22HK0fdK5M8uUD
VOWaH/q8yqU6HNPUPi0WhbrojIXOWvw3LkeGcap4VMA68yIs3qX0sTHgnmke
i8PD2GxRYfoDyT4nIrrG6+J0t3M8zbQRgT+/mZ9jnnhCm09p6nItDGXr2cj3
ihqZpnsfNTXv4vCMIuFcyL9n/7LdP9Q3vo0b692kOWBCmAf25nteEJYujuja
o5VdR9l07Me8eorsk0tvR2cHtF6L+p7sN8p24wCtx0j7Dfg38qzSejBqe4+y
/ah4IDydoXWK2sZjN62zov+z/Shaf3j6Q+tHOMh1jUKnV9ojIT/lJb8sshup
62rm0+9kj4U2fDjP/p3kA0W0bwN9f56xdMfkf0W2KCX3Hr43vxSdNrwDnk/B
0+G/oID20z51qm2rNQV/gcy38+zHSf6b5sOTLd1ReI4Hp2uNRjvPBKeBN4Ab
FZr/KdLmEkcKvS7V3rb2y7W/LdlZQX7tQuvZXgr+vqmvhQfDOyhq26rNZA+Z
uLN0Wouch+RXc79X1D5l3s+z7yn5R5NdVqXTN6N8zMjGptr7r9DuavN//dOU
+Jknxa3vKl1X2RuTLpz04G5oY5066dMlxK2nKh3Vm9pYF056cOobsq2pM7cb
21hfTrpyshcoHTzp38mW/OngDqm2GT8X3AU8m3pNLLINW9kmmFRk/63SsZdv
txdSbJ9e+nvS3ZN9eunvSXdP9u9PA1em2j79GeBOqbY9fya4G/h38Czw2hTr
6MonpHzOyi6t/MnIp+3DlOEhrYOkEyQbOLRbIjy/8O12l3So9B8hz7Ikp51s
vqu9k3x+SWeXMvQ92MZtqbGzQ7r84DLymUjfqK9nqnVK3Pxan6Q0s169dOql
6yt/d/KfK119+aOT/1/ZJpDvO/n8lb35U8GxVPunUdqEVPu8OT6UYXypz1Pp
epzsnxOnQZ8ETqAMl1OGCeB64JXgo2XrD3wRuAL8nsYyeXUAv6/6yE4g+AP1
G+nA5ro/pzCXXiM9pDb+57JeenbgZvr3Bf0l8MfQW5D2HfAh0laDP9R4BrcF
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
w9w7DvxHnu2UzAr0acTTCY2ybB9FWDZSHs03v/Bj4BMD//FB5rwmput6SgPv
j2ifRGVZFTfW/DMjatsrklNc6Ov/yjIj0G9v6rqovSX7+JCXyqO0SpehMhIu
oe7pUV9Lp79RwLmsCWsR147a/tgQ7v1dQTvk2GZdzUC/ran5PkkyrVagi+8v
+Bvl/O9eOe3/j877gFtAH5jj6y8p25EKY9Fj6heEabVd9yvjfh5NtXdC+Lim
n5v6xFU6Y5Xv9AXgw/D+EXfewiqz/BxJ9pGQ13nQ/wSvbuiziL9W+Jvrd507
qLDfnz/bOa/noH+W5H4vO2/bmrrfi6Z2Sg9tNQj+NPBA4muQexg5q4gHlJvn
TurSptw8j1KG33hmk8G/5jnfPyr8vbwo4muVYWHc5VPZ+jfzmcnFmrsipuv8
pPTl64QxOKCZy78k1fVTGQbRZz5v6mvhxXHLV17Kf0rUdnv25ftaWLZ8jgn4
WvivIQyM+lycdDZKpZsoe3bgR5p4H1Z06U/soT7dwffnef9P+4GiaY9Ke1Xb
6/qsheS9m+d0fYJM7Vdpv0v3pZfRF/xknvfxhLWnp31g8StP0foFuvYNhZXu
Kv3DjbscjctdztYZvt8/8Gs8dQtjSu92YY051VdleK2e90XHRb1HOpb4KMKZ
TRyPjf5vH1V4UgPbjNFZVp1jHRf4xaMzr9pr/SnPNN1Lp/0mEU8M7ZxPOYeA
88qd/+BQBtVFbaj1htYdWn+oXa+Ou03VnrpfFXi0Dyj6Q/JPFGTG6vu6J/jB
PKddE/d1ufp11H5y1QdUnmMa2Gbk6VHvQ82O2h6T5hC9W3XOW2e8NYfNDnTZ
21sQ9XpI577Fo/WCYqXRe1U28+ZHvY5R/5oU6q658Vjl1cDz57FhHtN98WXQ
Vn/nOb+/iIsK3W81htRXZX9KNM2100LahSFflfPYQD+7idNNDfnq/b8w8Ej/
QWdZs/Ntk29e1OuqtoWuo/KfQ3wK4enatqV6atT7lbLVNzfq/bvNDcxzAvJv
oI2v1z/jqO2Gnhb1nqZsjp4R9b7exNAOZzXxe0TtrDyVdk7IS2VapL6d6zqp
zFq36Pztxrjvyabg2VGvC2Uv8Kyo13xrQ/46g70yZpk6Ly2bhWdGvR+6vdzz
bTZjpF3oE+oPomkuzoG+KWYbADrnI5sAwvLr8WJoI9nd2hyzbQCdXYkW2p7j
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
6f89vCm0Rn2uCpZXlE+mqmxq3sLf+uK9Eq0/rn5zj0TrO38qa21ltZNLEvfv
G9n9titjbBxHYziNed8EWo39n+EPcbMRPIN81Rs349GfBd6tcki85oHnQ10K
WX5smWh58h7vfwK3x6/74Hcxhn9E1gxai83+8GyEeYS/zaWHRNt8uubSI6Jt
Pn0933kn7hugv5a0cqmMk1ZdeP+JMvAnOn/xPhl50gU+rf4f1BX9A+pDIS+h
/1pZW4+ltViHeX9EfUV0zpe1vRPaN5GBbxWKH3sJ/03c3YDGg4MIT33iVl55
VeMnPJ/QuDRh2AGuE2BjP88a2fiP9nhNKGf7vAKR70U+HPmHaJuj0vzUu2ib
x9IcVkiMzVVoniIIvA88QnmD9PkV+otwHsRmSvUV/W1+eGaSzRG7eF8Cmq16
gzgdh9qBP2N/j8owdoryvgg0U/U5ccyudh3x+oDsI/QG+QXc/Q11V75C9k7/
Eq0LQtcP2ob+pbK2b0R7Rj7rvw29RWdDPWufqW22n/fehDMSnQPID0Jt0Dmn
fjbUDZyZMOTA5j5spoangtaBh2stDdSgMOmP7g2ot9qi8KtQL63DhN+C+ijM
ZW2fjPbIpMJmCHb+wI4vOBt4D/gE/7u8lKOt+keTbpf4D96j3riCjX+gnti5
CL8E9Sho638/1LE1wBn5Fn+ShgNIwzTgP8A/BVj/eFWi9ZF/QT8N9cZZ9AeA
M4Av6H8BTgU+7W995ZWJ1l/ugzw58uP+NucZH23znn3hKZCf9LexkBWJNh7S
G/ky8FHkrcrbvXe6805tsTWJ1h7TXJD6ZuqXLdS/FzqpvipuvxCXffqX6R/F
8xx/GxuYn2jjAz2R+eDvEX8b81iaaOMeGqdZnWhjNf3RSYfOeX+bF42LtrnR
FYQnEn9LaF4S3enQAfwdCR8B7VD/HTv50PkVO3+Xs36X+lzjlSfV/kPndDlr
p6qNOhP5LOig8kw5a4+qLdq8GPEsTv1RzMb+Dzey8f+yGhsGrwRPxN0kaL++
aTlrm6pdqnUr30Xb2pV49E/z/Bv64fAulOtG6MzBXVt0juB2DLigyg94GHg4
tB1cFHvZictJtYXK2byy5pRzg7OCD4FT4S4l9IvyA+4GQlsL2rqt1NG2dmsw
siHQNuQdcNudb5Qui929Od9t9292Qt4TeXrlYdrUJ6ELOWzd1pNoW7tVBZ0K
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
If9bws7z0lle/wPRVrfA
          "]], PolygonBox[CompressedData["
1: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
f54/isecSYU0hj/e+7Iu/C58AC4hb57X/nXS9h11fPL1APEtL5d8/idfz5X/
S+X/PvX1fvx66Cq8LWXTXF0pNj6Tlebs6pBfpz6uVh/L8+kKeXOD9/k+79sB
tdK7szT5Z7PSO/Rk8VdF5UolH13CH6OEnxjrkWQO82fl9qmvV61+GsuWEf65
rDSmbex9Nl1/7iDd11ZO79rj8Z/OSu/c+eIv0B7/pT2eGn0I6f+b///i2wXK
y8P4Q/B341+Ff0v076J8GV8sCj79G3qmtYnPoz8tLUP0V9t5N7RHC6PsCb9X
+GnCL4KHwvvhq+H74v3KnpOlf4n2cl74E64GL4ULaV8bed+/KL7D9Lfk6yPy
Zzn790SdFN8I+o46VX2Gj1VWC/jnXP65jn0PiG8Mmc/p6xnrI8rnv95f33t/
/YB+wRsp/DHCrwid+BU6prLaSnnfBZfrmMpqC/h38qPIlyD/uP/G4LUyfn1S
XVqFfsM/C78Y/kr8I+rjCR3TXHKMcS+OuWF5+IS0b5dfy6T3MbRb2trhF1PW
iqIF2oOFqCtb68qTF2IugL319VdO5ZMO3v9lpOcv8Y0RXynxPUFmFN1ju6Sx
1wH8YvzxKR0fCPsTOkn4hjEnKfzx+H9K3y18ulj5bS59f8EDeqd3U3dlvg68
UvgXI25lomHMh/hvXAnvc/XhSbx68Hnwn8roa57nyZ+2bDkh5vCk7Sm0V/p+
l59r8R/Cb4dfHv8W+dOX/T8qD7fp03bgq/boe+//j9X/yZH36lNd9W2EPFwj
/IPCny58WeFvFL4HH6zBu1X4S5T1DtI/onLqo78u7h/I30b+dPF/Ij/egwdE
exz5o215n84fxdcb3qc+7cxOffeK8mc2/X3Y9wP75tDfhe9y+asPf53qfd81
5m/hvnAz+GW6bo41f7p2os/Vj5PoaBbzLXSey9Z26kc9daMBmoJXzH/T2F9C
fpzj/VuL/d3Yvgu+HP84/KvxS8KX8M3t8nQxXy+kbw/Zf1El+VlP/HdEfxJ1
VF9aGs+1JXsDe6qzJZe/ltA3hb5t9PWK9ZoYf0rfTum7W/rmxvgT/g2+Hf41
5vKk6Tv+KS3Om/jvZjRSWV0dYxLtZ331rbb6Nod/3yK7QHzZsb9BfI/SN1l8
W8WXL76v5Odj8rOY/Pxd+VpP/lHyHclXJv8ifx4S58mev5aeDdEXxO+Mf5L/
5tDXj33b2TeXfZPgS/ulteBW4qitfDehI5s/SouvOnwKfDpcqlZaS5mfnfZy
xJpKJb4q3zqtjd8U6538exmfTYu1cvwJ0ldN+qpLXzPt+6aYL/PfpXjVY/wT
cx3RxsjfIf7L45teqHm0BbHmLa3Nlamb6qU5sg3Cv4cqCjuC/Hq2DVdGLpa2
32LM7f02lf6xMZ5U3z4iexV8NlwlwrDvnI6p7Z+kjDworofQRPH9wge/81dX
9fdE9bebOH+DV0lzDvlm4ugovRul523pOVka28PvwWvhqvAv5J8k3418U/If
iP9K8Y+J/BH/F+y7Ah4NX8a+yzzP977Y4Lkz//Tn20f9d2tWekeuo78Q/5bT
FjeLPhfeWvKbyZdXXnJibc5/t5BfRP56/ioffRyy73p/dsZfhH8z/kL8v+m7
Q31bpr4dFN9v7PsV1Wdbg5gTiPU08jOz0hp9TfhheFZWWsPPgufDN2SlNf9J
4sqnc5W82h7vZ7bdjD8J/x42bqT7cnhUlBX6p8vrPOXvc+XvUv7/Bv8W/Mn4
NfBb0r8Qvgm+n/6m9N0KXxbrNaFP/S4be0aUx7/U/7bkH8Gfjf8g+b38X7Fj
6ou14f8u8uJY5eeiaIvlTwVhR6pDO9Xve2L/ULx/1K+Vyv4rysCD7Dsf3gzn
Ke8PRv+STHV4GX/vo794x9RXO53+5tL/bqxBiHt2jIliPYQ95+JXlZ6NyuYx
4psqvj/E9z5cFJ4G/xXtj/JwDflzyF8rffeLf6T4PxVfd/G3V5dOChui7ZOG
lux/Rvix2vZ5/rs7+hfk3yPfjfwmZXkLmiUtt0f76flrNBOeG2P6WJ8lv4F8
V/Lz4FHwZ3AP+DB7ZrDnvMhf9vTiv2L8d7G46/NfHtl89Cb5yTE+ZdvjaA9b
OoqjOftWsW80++7zX6uYu0bt+efWGDPzz9X0j4/2iH/60P8A+yYIm8Mn/eBL
tAkni++saPOFvZH8hKy0B2Qi/BQbh7Lte+ODCsrHLPxL8OdGfxr/BvjirLTH
owr+TfBE+A78lvjvoWy8W9hzAv5M/Ivw5+A/Ki1LY08R21uzqUXM50vPGOm5
338thN0QayIxdhb+N7ZME35c1Bfh35O/RchfIS2/x3x9jEeVl7r89YHy80Ws
N5A/n/zJ0v9VrI/FmBeuBhdlz3XwBfDsRmltvkt2qruxRr9TXtwJ/1Uu9Zlv
pPtHZaSF+L6M+UNt13btfzFl82Jt2CfwL3Bx+BL45qhvaFfMVdP/ofRNY/M1
+K/6bzh7v9Ke/aQ9Wy6/h4jvUn2Um9lWkfwH9P1M37HkL6JvGPkvyW8lv4x8
ZX255mx6n/3llKfX1NdnvF/fVlaOr53GCs9FG1UujRnOEP4L4b8TfmnMF4pv
gvhuEl+FaL/Zd030wcX3Gvs2if8H8f8X6wXiPzv2Own/t/CfCH+wF//20BfQ
n361jvTx52L+Klo+zZF8BD8KFyuf5jg+hpfAx5VPY5pP4KVw8fJpDDSe/m/p
30P/p/R/L/4fxX8Ue2aJf522NFv6hsVcfayRkt9M/g/yH5AfBW+Cd8Ab4a+E
/0r43bE+EWPmPG26+lTKu7g0+gZ/K/4R/JkxZ4b/EP6xeEUrpbW7v1vq05dL
a3j/4i/EL4Z3HHo/9ivw1zT2vcxf26XlBfE/I/5V6ssj6lqlEdqYZtpRZXIh
PKBD2nu4WXoXw5XxR+OXizYPPgk+B64QYwy4Cnw2XD76C/piXcT/kueO8vtL
8c8V/43R14/1PPIj6M/EfAX97dTtsvht8Y9Vx0cb+6yWZ2fIq6UnaSfwy+G3
wy+Kf1OUd+VhsfLQSHk4Rnt1dMzh8uU6ebSVv37ir6OjL8tfF/LP99L7n/R+
QeYD9kyl72r8V/hjIzwFvgp+Cd7Pf0vZX5Lvjkc9Yu445hDFd2LMR0bbB8+C
y8V6Scz1wtfBZaK+0zc55qTpW01fB/xz8Wfgl8Lfy54Tve9u9r77wPt4A/lL
yV8ZfTXyzyk7E+Ar4FL8VUd+bWmR5uLmxPoX+YvxL8ffgb+PvYvZW5ytJdB2
delq6V3aJJWJ88X3HXwA/jzGE/hvaKPOaZTa2G30Ha1+vBf+5fNzxfdbi7TX
6GXhf8Y/Ef8T/OL44/F/bpHm9lbjf4O/gz2vxVoJ/tfwt/AL8GH2/QSXFP5D
+Dj8X2J9Dv4CLglvhY+CN0T+w5vhn4R/Gc7AP8D/we/Ax8DniP+XFmlvzEsx
hxPrdcJ/gF8MfxO8jfxL8BHxvxNrP6gl30xQHl9UVjbAreCT9Bk+VR6/6ZD6
jkeUx3n88wAapm2ugNZpr4rGng2y9ekbFHPLqGbdtEfza2E3oTOFP02Z3062
HHs+FX8J9jwk/2tr/9ZlpTXS89j/e4s0l/EK+99myzrUIsZa7BuL/32LNJf8
PP7Z8NYWaW71hVhvh39skeYGX4TfEHYtaib8xcJ/J/5/pP9N8RcR/xZ4N7wW
Pgr+Ft4Jvw4Xhr+HD8Lr4KPhqeydobzer7zWVUaOlrZyyuvtymsL8X1C/jry
15Jfo7xerr5+qr6OFva0k8VBviz5OeSbxx4OuDx8F9wS/pzvflc/Swk/nf9e
5v/LO6S9INv4/znvosKxZhD+Y8PxeDW9/06NtXxtUjG4An330tcq9qso31uU
73+V78+U7y30b6O/kPA30D9eeq6QntvpOll6VoivqvbqfO1VlvwYjT8F/7YY
y8d8v/TNEP8M4V+Xvs9jPwY8E34TnkB+Gvm7ydeM/gPfr1BejiuX+owl2H8k
9tAoLxVjf4z4ruyQ1pZ/lL7LhL8m9lAJX1v4C+Cp8J1wdfgL8d0svhvE95b4
Rkrf19L3i/Stl75P8WfiX4f/Bv7J3q+5yteWrLTm8Bn+rFiTxF8b+1nYU9t/
LdizI97n4pssvlvFV1l8Wd4de5Xxf/Sdryyk78bek/nnIv6pKD0vRl+sQ9r7
9T39h5S9Stlp78Vf8uNHbckvg9PcYb9yaS9z6+y0lyj2NJdgW8mOae70bP23
Y70fn1I/atHVWJk5om+U3y3txb7Kf3/QtWtwmgsdQMcX9NWm79ZyaQ9pKe+D
49HiummNeBPZLYPT2nUfMjv5q5TycY3ysUUf7Wzls0i79Bx7yGLscnJ22ksQ
Y5iG4u5I5gJx92fPKXBPeAI8EG4At4fPh/vBY/mrfHbaO/BVvC/pPsB///Hf
B+L4tkVqs6Otjj2iTYUfKPxlwhcIfyo8FL4CHgI3hnvDl8KD4Iy0FULzpO1L
+prEXAj+JPzB+PXhtvC5cF+4HtwcHgf3gR9hz0H2ZJSXzWXS2KxsdtrrH2O0
RuS7kr+I/ADyH/HdZ4PTXoJeZA4oK6Pkz37l52T892IvP5+eKS8/jz1E0l89
O+1F2ST95YNPvgt92eQrwH/BXeH2cFn4R7h97LWGS8Ib4FPh5vAa/hpO35Pl
0p70Evhv4TfGPw2/GlyWvYPhXHg9+VHknymX9hhXxD9Avgd+R/x1+GfFHshy
aY/9Bng0/Gy5tOe5OvlK9J1Bvjv5GnBVeBjcAy4Or6GvEdwMXiv8COGfKpf2
9BfFfxa/Dn4T/BPgLfDpcBu4NPwZ3BJuBdeCa9E/As6rk/Zul8pOZyViD3cd
/Mb4Y/B74Z8Ify98O7gtXAr+CG4Ot4TLwb/BnaLvBB8HvwY3hE+Fa8MN6BsF
58PHwx/gnwa3gN8S/0jxryqXzjSUwd+E3wa/NX5duKnwY+He8EHt6QHtaVXl
4V5lclrsj9YenaB+7dAevd427cGPvfd/wLvI7yZfLtayyE8mv438MeS34vfw
/u0e72B9z5+lf4f+9Z8Fae9pRf23p2O9Gf4Z3o6uE/434SsLnzGmmQL/CBeD
t9G3R3x7xFdBfHeIb4zwH7ZIcx3PSeOl5LeSP4r8D+RztGW1tA/Pwe+x4S/h
dwl/ovBzhX9C/blSm/mbtnJs7FcSfofwVckXij396seD2tc7yf8T++m0j9W1
l5O0l5XVhxfgizukvbDf8WFnzzXE96Tw68T3Ev5lHdLesq34q+FJHdJeyR/g
J+Fq9E2gr1LsGYcv7JD29m6J9yN8foe01/PbKPMxF0n/Svrfpr9rvC/hp+F3
4EtifwL7V2gP6sHXwkvhJ+A8+CH4bf7e0iitYbYXvprwy4V/K/wT+3Hga0Nf
2VSX3muR1nKjTsXax8YWiRdrILE28xG8oWxao7km9seJr5zwh0uluvRmi7R3
JupUlMW3W6S9GFEmoy14o0XaGxVtwtQ4HyV8KeF/jf67/FnqHfZ+vbRHv7W2
8gT50TL6L/7bLz/3y88q8D1109mN5tlpr3yc4VijvA4ZnObeaxyb9gq+2Cqd
lYo9g7HX89lWaa9D7PmcEfvBxZ8l/iPi30v/P/RXjL1G9B/iu8yQtDepQ+wP
Iv8T+RLkfyTfnb7a/PcivJE//xD+b+HLCH9b3fRu+7JFWnuOd9wu4cuQn9k0
+TDWrj7Df69sWsOKtaivWqSxQ6xJ7SF/AvkbmyaZtvxxIn+0jv5yvdRWvtsi
rbVHmzkh5u/ZlyH/Pfvy2VdX+NdiPMK+3nA9+A34Q3gHe39Dt7D11rqpbX2n
RVr7iza2J/k65F+O/Qfka2o/qmk/zlQ2e2o/VvP1xUPSWZK9whyl/jT1zn9V
Xeoa6xF0X4a60r0n6qvnSagLvCvs9TwRda6b5jiq6LuchPrHWhNcyXNl1A/+
Md657DlJ+qoo3z/D90Z5kkebGqU50k7ano790lm69fL3XOPVop2VM/3nt9k8
RVyXo24x1ibTi79OZ39D9jdCy1oLm532Un3D/93xe7ZPe99+MF6oypaT0QD2
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
/nLy0+Fm8BVhD3sHsvcs9t7B3mHwIHgMfGf0yeFxyvS56s6vaDh9NwrfUvjn
6HuUL5agQg1TmZ6M37VNKvubjV8vFP4UY9pNnufT91LsN81Oc09x5vI68r/Q
N5a+D+ibCf8Oj4M/gq+Hf4PPhj+ECysLJbRBi/R1inqfvRjzU8ZIx9JVgf5x
bBmPvo27R5SHq8U9Q/8kn/wx/DFZ/PvapbPAZSqkvP8tO51djjLwbpxVMQZ6
Sd9wmDQUxxtF/zGxdifMB3CVGJMJ2zjme9j3B/vGs+9j9i3UduwUZ2ft3bf4
Y9lyNvqGPVewZwJ/nB5jfO/yJfi3kF8FfwV30ObcTN965WFD7P3XvmXLrwOn
p7MqQ8T5BPunZ6e5o9hzH3OFX2Wns/ExZzhaXGPQ5tiLJL6V5K/OTnN7cSa4
S6wdoRPqpj38q8T3DCqp/f+a/fWMpxuhZcL+Tn6F8NOy09xhnKl+HL4mO81F
xR7+h/nyBzhH3MXjjg7PdTqktaRv+PsZaftVfDeLa7l3yA3Ss5+/LuSvWcrf
CnGfqbzUVbaGRX8o9oupT1Px5+Bvo2u8+vB13FdQKd19UVUcN5VLd2Cc4PlE
+bHf83Xl0t0e9f03t1y64+Mkz2XxD1RIYeJutxLZKS/jjre4+/HE7BQ27oBs
l5329MRenrjja6v4zxb/l+LvJP4b2VeIfRPYdxP7boHLwFfAt8LHkp2s/sxT
fzJhk/b/bPhq+GM+Wkd/JfYcxGsAHwWPhI/my6nim0l+PPnrYz8t/vXwOHhG
7N+Fp/L/4XbpLpmydEyBD7RLd3WdAF8BH2qXzsafCN8Q5zmEnxX7wYS/I+Y+
2DuTvXey9xxl5Vy0JfZGyfMl8mMZKqY8fKk83B7zI+SvI38H+btifgS+Cb47
cLwfUKHY31sr3cVTJDulJe7k+Uz+3xRnQGK+QP9rp7x+Rf3tGv0J9Bx9O+gr
qex/VDvdbfGt8O3LpzsunvXckX8Oey7rv1mxn0Oa3uWvud7Zy2L/nfCr2LM8
9tNK/1XZaS48zvTU9dxJ+CPC3+a/5fhTs9NcdZwJWgxflp3mquPM1xL48uy0
FhNnjEbwzUj0dYO0R7dedppTjrnkKGMn6U8OYMOdVdIZtwLvq33K+11105xD
c/U7v206G/2ZOrzM85f41+Ivw5/H9lF8Mkb5n6aNfCv6q2TGaz9+kt5X2XNb
dlrbjTPDteI8qjJ2WuyPRC/j35yd5r7jDPF/2peJ8vtu+X1Q+Ffwb81Oa8Fx
5vc1eG52WouNM8v5bMlDlWM+Bq3Aa9U6reU0ZMMlPYTX/jQrk86QXwzfAjcu
k87grqbvxuw0Vx9nrifgz8FvWSad6Z4I3wa3LZPOGP8uf99Rp/qSHS7NZdh7
IsqOuzuUn+rt0xxozH0+gWq0T3O6MZf7FCoUd8Xx95VV0pnouIvgw+zUFsed
BHG3y+fwqeXTHS/3xPwbH9+qfNyrfLTRl72Mf+bzzyuV090572Snuhh36Dwn
rp38MSd8IX+ujbUP7dUY4d+P/if/d5dfu0qkM+pxl977wp9SPt2p1xc/F/+v
EunM+Gi+vDH2oEjvh9HHwM/B/6NEOrP+rLTfJ84Vnl+g4xBcj79W8f0B+L6Y
v2X/7eK/n/2P8veU7LQ2GGcca7ZPc9IxF/10+Ef4o1ALadvJ3pVRNoVfLfzj
wndrn9ZUYy21HppN11sd0tnEstrvx8jfTP458ivIF6OrOGpD35/0rY72Txmt
rr5uqp3uWvkzO90FGneuxF0S/8ADy6c7JWq1T3PwMff+7PHpbPt/+EPKpzPu
cRfLv9nprte4k2WB9E3KTmtFccbzHr5oKr8aya+vvJNflzeb2be/elrTfQP+
Bj5YPa2ZlxH+xIJ0VmUoHX/I77uy096JONPVHK91QbqLYIz/LpK/beTHZvnx
YqwPkD3T+/dK79/dZBqQbVyQ7qoYRX4He8+BVzVKZ+SfILsKvdQwnVH9Tv3/
YXA6W9c39Ev7Pu1HB/wDaI3wpTqkvbs36V/+xb57stPeirjjonz0n7SPxyl7
y2N/qLiKFaSzLkPI3BPzjXSOVD7qw+eRbx53Coj7HfZv9HyM8A/F/gE6drPl
n8Hp7NRA8i+IKzvmjPhztfr3vLbkTjY8R7at/sZ/ZI8MTmebBpP/1fOOwens
Tn+4u7RuRV82TGu+F4q/VdzhIP7nxX8+3CLO6MPr4YrKzlXsqUV/SW3oUmFX
oOeFP4fMBeRbxh0Vnt8lX0JaSxekux3OiPVKz1kF6ezSmfAz7D895izZ/2zJ
tBd6abt0V1vsiT6T7FkF6e6i8+Fn4+wV+VbGX+20QZeKr6P4tovvC/FNgjvB
v8Jfwsd4vzyhzaopb04xvn1WfX0xzgx7/9dT/ovhv4RfH78p/tMxP0x/c/pP
p3+w+rGEzHPysnfsd8bfh98FvyP+85F/cFs4Gx5E/tHYQ0m+F/kX8ffiZ+O3
xy/AX4r/PH4f/Hv580zjycyp6Y6eiXzbM86cs38J+yfE/Uzy6xD/Ho41Q89f
Dk5nKXvzR3u+6VyQ7vI4G+7veXBBurvt3HLpbNjWdukukDgj1lj9akD/BPp/
R99He0vfxEbpzr9F0fZ1SHtryiuv72krS2qju7L1Om30uBj/tk13Rcac+FjP
a9WHcmz7Fz3F/q/apLH5HdLTnS35Bemu5vFs+K5dagOi7ufCfyqrd2envVHL
+eRC+nbT15qu/ehUbcEw+urQ15U/utDfZIT2obm2yX8V5PcDyt8ysvnK+yzh
e8MTYj9P7LmM+TT4Cbg3fiV4YdTxOIvXON1tNDQ73R0SdxzFWnG3yN8mac04
i/z8KOPke5H/juztrdNacZw5LyxtxxSku1oKwv98ORCVhJfw0TvsbQbvFr6n
OnMXXfeiJQ3TndPZ7G2njDzGl9dpk/dFXg9Od5EMoq+yspLpKW2x11L5rAQf
Vl7z4E7wTy3SmZU4qxJ3elfFP578APxu+GeJay/79tBXO96p2vrm0vi69uYI
fDD275E5I+7Gkv9VhC8ifG/huwj/XMxn8sF/8vIc9WUH2U/apLuy5/svi/we
9uSQ7xDnWVqkMx1xliPuIP6uRTrzEWc94s7gbS3SGY842xF3ip8k/HHi6yd8
V+H3yvvvh3jHsuUu+TGUL9a2TXcFLKucxmpds9NdhTFmayb8BcLPEH6Y8C/E
eLtzutvrvJhfhp9EZeBrhO8h7cPUgbra043yoxc8HK4PfwDnxV3FcL26aQ9m
Sc/D5WEFzxPl141xdxgfTIr9YHx6E9wfnhL7z+Aq/Fvcf0uPT3faVeP7WgXp
rqWRbB7Bdy9L4wkN0x0LZwi7G39Xo7Rn5fnY2xBrDMrfiyXT2eSS2enu6jij
vF79eVb44nG/Qpl0V27f7HSXS9yZG2eje2anu1bjjHTlfnzVPp29PVV9/kj6
fo09U3xXMuan8Be0T2c3m+C/RH8m9jNHf5P+pnTdyr43GqU7ViqRX9g+ne1t
Wj+dtW6fne42jjPXcTdvx+x0t3Lc0Rtjo4HZ6e6cGCPNjLpSkO5qvD36mOwZ
EW0Sf3/Ix43IzsZ/tVG6w3E5/m3aiKfxfqmXzor3zk53+8aZ8QK2fM7eb9i7
gL8/ZP+yvikv487KuGt9S6vkq7hz/Wjl5THltbq0N1JeRolrTEG6O+wCOh8n
W4u+mvRVL8oX5O8iX558XfJHwQvgKnADeF/sj2ufzlJdJHwh/Hn4FfHr4Y+n
+5d2iXcte7eRPU57f2ncj8KmI94Hc8mXJV+H/Hb8EvhX4N+Lfxh/Dv6J+LXx
x0T70T6NJa5RBgroP6Mg3SV2XozpPXcrSHevjYPbeD69IN09NhZexNdfalP/
rp7uSIyx9LHZ6dsHMaaOsfeRdunbCzEG/0lcxdlzWdzHwp6Fwn8h/J/V0x2F
cZfd0dnprta40+7SmP9TB+7Wn2whzvfpWtI31bX4BkRh/nlIeipLT33p6cW2
PgXp7rNz6PiZ/ADhzxN+dhHlTFnfiS4ul+5sn0D2UvQ8+Uv89wP7irHvEvZN
Zd/D7PucfTurpzsKd6n7u9Fw9X+69qCUtuHCoeqItjwPzYn9YOS/rZ7ubPuO
vqL0XUjfFXEGGv8T/O3V051T3+Ifi38e/uX49+B/jP9T9XQn1Kf4hfGH4U/A
3wwfA4+HJ8Nfw0fDY+FJ8JdwEXhU3A8A30XfR/Rtq57urJoLfwB/Vz3d+XQH
/CH8Q/V0B9znwh8l/AjhJwp/C/5G/M3V052KH+MXwh+CfzH++bHXDjXDOy3m
cPj2MXSUsnRN3KnKV8+pc+PIVuDfG2P/HH1fV093OHaMvVqosOejos7Sn6F/
EP0XCvMA3qfkf62e7qzaG2u9aCT/X8v/ezz/g0bAM+BryK8n/0X1dGfke/Qd
Vv/6N002vAv/B/eBz4Y/0B85Nk/5jfMc8b6m68R8vqQrl856yuPCDmnv2bRj
0lzMn+3SXckxJ/Ow8rlcn+vlyulO0Tz1qSeaWSa1iecrm9dLfx24Tbn0bYmG
4m/Q5H/fmND3+Fac3cX1pz7ISuV5Vvv0bZRX9V9WwDe0T98KeAX+lW211OHm
VdIZtVfVhW8HprsfekQbB383MN0t2BNeDX89MJ2Nz4VfhjcPTHeHdIffgH8Y
mO4ezINfgL8cmM7W58QeUXFPbJX6VvHNj7hL41T2N2mS7tT4YJi42dOYLW1i
vppvNsccfuk0BnlS+F3kT+XvBnzwUrRvcEe4Azww5r+l8Rlpy9cnnKA+tfdO
2+bd+Jl33iy+u7tjWns/F31E9/K+qW2PO+eLxHwsH1eVfw3V/wvY/mys0cdd
RvJnjPyZp/7fof43kZ535ffp9G+h/wP6LxFfNvwD/D5cNtZP2qe52cb1090J
P7ZLd/3FHQrPifvzgeluim709SD7kfR8xB+1pefxOGsxMN3V0Sn8z/ZXUUe2
1+ef+8nvJF9b+itF+Y53H1wPrgzvUNaaKY/HkH1AfE20TacWpLs7RrNhfuxH
Id+QfBXyxWNvBJpOf1thTuPPy/njqHgf8edm9nQblO5u6tcozVXvbpfuoo45
60PkryF/HPka/Ncw9uahh+lrT18dzw3QfDgb/o/8DT3S3Ze1yF8V/Rv8jyum
PVMT+bMDf/7En5/zZ3/yV8uj2+RvLntqS0vdgnS3yVlseJev1qOcGFuoL6ti
//TAdNdMFzLfsvUDeXhxo3Tn9ZOR9wPTXTCdY4wNfzow3YXRNfoU8LaB6W7Q
fPjt2M8wMN292Quey7/F43xMkxTncv7sr7ycTnc2qsy2kwrSXRcj8BfHfh/y
jfm7On8vgfuSb0W2DXqH/u0D092fvYVZiT8QvwNeJ3R8+7THKPYWxRz+M+pP
Lfl7mP+WaJ+G6tvtHeAdbOw7Xhm9U/2+Iz/dBbE27oz1PDc/3e3wBjyM7Eg0
kPxb8G14c/JTX2UNfLfnu/LT3RNvRpvEdz3QsWz7xfupkfi25P3vLiT5M075
LhVrDnE3WpxXhI+FW8GPwCPV71HoWWHbxR0U0lIEv6Xnw+wvDZeA28IZdbKC
5/eUhzZxV1XMnwl7Jnpa+Nbwo7HfFP4J/jn2I7D1lvz0bZTX8ed5vj//f3c9
wAuCl5/ujvgu7mvzfG9+Otv7Wdw/5PmB/HRXxCb4LL4Ziwbzzzr4Jrwb89Nd
uq/CJ7dMe9Bi71ncwfII3sL8dBb6e//d7Hl2frpr9zV4Wfg+P539+QV+ytjg
yZ7prqFV8BK8R/PTXQlb4cWeF+WnuwN+gE/gn7Lia++5MP+MlfZx6EVp7xpz
6Orm+Px019aHytA09p1CPq9yuqPqSMyV5KW7ZmbJr4Z4C70fKxrf/1BIvcXf
o841jvvW5Ece3b3Qyshr/42Rn//iNwlfys/D5D/JS3c930Dfu8Yi61Ee2/Lj
DAj5/jFHTP4tOjLKy2d56W6cG8kfYV9v/HMrpz0pRWK+Oi/dtTMP/7+Ya8pL
d0fPhPuypT96IvbqCTOa/j/Z09Dzw+wpEWN7uBl8qO7/9pbkp7tNY4/JIGEL
0FPCN6/8v28V5ae7ReObRV/z31foY777pOH/1iLz092hsSY5Snzb6a8r7EPi
y6GrO3qMvnqx/zDuXsOv43lvrBnGWDT2NMTYOc5vCf8dXBOeH3uuhO2Clglf
y39FyH+DX8PzHvJjyR+BT4MXkn8oyl5+ultli//68t1lwq8V/jVl6OHYT6M8
TdcebPNfN/68oks6Gxp3fNeka5z8Li+/z9dfGEzXIHSW9vV+dayv5z5oOHwP
3N9zPzQCvhce6HkAGgnfBx/TX5lBa73bVsMvaY+axZyG55XsH0K2AI0mP89/
7djaHi1hWzX2b/F+3IqeFn4Bfm3pbyT83SXTnXxDhW3YJo3l4xtBp+Ddrn98
lvCj0GPRNuWns6W/0leILUejNbFWG2fKyL6LLif7UtzXIq4M/mv4z8Gf4X2B
puG/Dv8b+7vQK/jPwvPxFqJzIi74ec8vognwM/Aaz2vRZPgF+EPPn6KrIj9i
vcTz62gS/Dy8wfNGdAX8MlyOLRXRevGtgYt7LoXegl+BK3muijbAb8ClPZdF
6+BX4abapuaoo/bpQelv4bkN6gw/BDf03AS1h+dVTmvj3+Wlu/JijfwiZWOf
+jo2zjbx4bWd0pxEzEXsVh+vyU9zQDH3E3duxlryL3npbs9YU74af1p+uvtz
OpnW+PlD093uJf03KfazK281lLeftS+H2V6YPY3YcyP5KfjL8Wvjz4SPwjsW
NcafDRf1XAI1hW+BS3oug5rBc6I99Fw+fADPhSt4roxawnfAJdhzvziGlkrf
KKiOVxu1xb8H/wa2n09mZcjqT1TBq4Za49/lvzqeG6B28H1w2/Al6goviDaQ
7heU562Nk47xbdMd7XE3+7mojff1BbG+FO+/2B+F9xz5LTFXF+8r5fk+/z1S
Oc1hPcP3A/ivFV6NSuku+HX4/1ROd8Jfx96z26a5prjTfj9//ocasOeGiEPY
xehc4VcIf1bHdMde3K13SP/sGGG/zkt3hz7IH0u1v9vwB8jr9fpfS+Dv4H7w
O/Cj8Ga4D7wOXgx/CfeC3479WPD22HMHvwsvhN+LNSl4bcyXie88/Z1b9Y/O
0n+vq22th4bGeIJ918fYBj0IP6J/8yv5XT3TXtjW5NvRdYrysT7mI4yXbiA7
C80nv4h8Z/wm+BtjPIC/w1i/m/82ZaUzYwvY8w7cjT1vsOcR+EO4B/wmPIMv
puelvu/oKO/6nwOGpL5bTf99H2sl5IdXTHsOmualOzzj7s6j+XBF9H/xh8Eb
6VsO74AL4A3wLPI35CVd4/x3tbD9hqS+Xg3/LSL/Kfk8vLfI30T2RlQLb7z/
HovxIf4Znt/Dn4l3fV4Ke7b/rvN8bV7qS46FP8tOZ+ji7FysSW7MTmfC4ixY
rBl20HceRr587PWhr73nbPShsddrZHI956Bt8Bq4k+eO6CP49axUVmvEmnBW
KrN98fqgn/HfjPXvGFuhGeyZjnpF3xD9hL8Wf5DnduxZH+t/8U7V1p7XMX3b
YoI2rSd+D/Qj+TfIjJXXZ6PpDdMdZl9LT0PyG7LSGanz4n7AjulbFxOFb0F3
9Y5pL03sAS1/hjYULeDvt4V51Hh+CRrh3TSuflobLZSX9sLFGmmspRbOS3vl
Yk11T3Y6Mxdn5WKN8Vq2XIceYM9COvfF+j/+p1npTNah7HRGOc4mx5rj7WTn
ou9irZzOWz3PQQsbpjtj3s5Odz7HXc9xpq9+x7SGG2u3/+8jbXO5Pqlvfw57
y8dcL1oKnwtPVVeu7Jnuno84rmH71Xlp7Dcqymjs9clLdwk+oL6fmpe+MRnf
lowx4cPK15vi7AKvUR7e1Ja8g07UnvSRv121N13y01xvAdzEc2P0ONwXzvJc
Ac2De8FvCNtMGenteY3+ykH686NPUjntgbs4P92pH3fp7xN/9y7pDt64e/ds
/02IvnPsTwh5/PExV9Al8WINv3OkHz+nRJLJJZ+DXhf/mRFGfD1jD1nltCe5
k+dLtLcvxfsWbeP7H9HXMX4l00HY9ugZ4QfDl3mejF5jz+VwqdhLlpfunlzp
vyvxrkBvxTP+8DgPpf2p4v11rfJ2Od4U9Ab+FfhD+Lau8rdEWfmZPYWkp48w
51VOe+7KkS0bYxDx5/uvmedT0RNw/3gnSE8v8udUTnu+2+Gdjp6Ovqz/2nhu
jVbBA+GWnlugp+ABcBW+7Sz8WZXTNzN/8H651Hg7oyxOlqbGfHEKOos/RsUc
DvseYHOjiulOxdhLWzsv3c0Ve2pz8efhN6yY7thcaLz6CHqpXvrGxp3x7pDe
d6T3XXRzzO/RUadiOvPdQ/gHo02vmO587K0u9kKnws8Zr14W7St6WlxN/FfN
88l56d0RMj2Fnx97fCumOyzPgB+ONb+K6Zs2D7LlMHwe/AKb7vN8mvz5uGk6
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
QI9FLgbN2RZEb4j8Gfwfp5vmmzra9zKW+69MfzeDMqSAx2pPLHgmuI2uB/5I
/uqas6Z+K1O+58WPz7H2EebYWUN59mHvAL4/0ns16nE/9Zp4z0ZF2l4FJLq0
06RQN2uRHZqbo0wLSN+Q/KpEeA90MnoFzq/B+fNLMjbmW/NalrkJhtWmXhUf
QXty4hxD/GVsL2WZC2Ew+E3aXiXyHCN/Gdr3RGwvZnmv2P0cewV9Upa5GYaA
X0efmuW9Yw/Ix1J7QbWHjfxHyZ+SvnMf8hhlnUj72669u8iPcY5xPo9z52Z5
r+Vruj7v1vQs711L49g09DeyzMXwIPZX0SdnmYthKPgtyluN8o5Dj9D+aGzv
ZXmv5EscO8y1v0NGcP1JXP8g+iHNKYBfBv/Nt/zXzuaqnR7yXos06rBRhPdc
LKfv7MEzT+bbHM+x/Zx7AHmC81/i/Jlc6+0s7418gevNRp+V5b2YL4I/QJ+T
5b2fL4M/Qf84y3tFXwF/hP5hlveKTgK/i/5OlveWTtT9ob+Z5b2R48GXtLaP
fBB0jOP12NZlORbUIvBF+QIgc4KOuXxZvgTIh+B9tf3u3NHhf77M3E9Cb8eo
V2x6cYjF0Naj1d7BsXzDXtXaYQfHTp0Anqy1ww6OtfoC+ChjlXOZjq3XpJLX
Vm6l/d3SxGss99K+W3ONxeT9H3luJ/2JTMdmLU363uQVwD6nkX38mmC/p4N9
vYtVdGz73lmOvasY90OxdSH9F3qXGzk2+73yzwo4RvsR8NlMx65qTP4/gn/N
dGyqFuDXKf+oDo6d+DLl34P9ZKZjuVbDPg370x0cu+qVaHMHFcsy96I4hN7A
/mQHxxachP07zj+T6dhWjTj/NeyPd3As2RexTweP7eDYWpOjHdv4t0zHzlKM
4ynYh3dwLNqJ2E9j/z3TsRZbYT8JvpDp2JItwYfBpzMdOysR/DTvS2Ev722T
z/OELO/R1N7MJI3xeZalkW95/j9y7Kp8JZBVQccEP47+PfIU+BXa80/oPyPj
wK+Cf0D/UXOU4MlaA0E/rzkm8Fecfwb9rOakwVvBR9CPag4OvBb8i3w1NGcV
dIzuGylrL97Z/SoL4+VM3t0rjH//5v3awLG7OzpGoWITisPtN869gLwQdEzw
AR0dw0+x+8QxdwLbSc1hY3+N8p1CP42MB0+Rvy/3XhM5B35T/r6cP6qjfUkz
+Ue9TtobsG/H/jr2EuglkV3g6drjorrneie41mrqvAy2sshu7D9xrOntfCtT
zU2bxFi0GLbiyE79y3P+jeg3ITvAb4Cj0OsgFzQW5fy55P9LS+8V+Zz862Nr
gPyOXZynT3Z0mVXWk6QZRv/0If8n9Zq5TL9T/j80v0n6qeS/lue/Jsux0xZi
X4G+PMux0OaDV6J/keVYawvAqehdsjxXvIZvSpMc73HW3uY8xkebKFvlNPsy
XaV//I57rA7+F9wN2cj7XjHNvnef8T3cjb0G+Bo4B/k+nzZIn/MUehTn/6D9
OeBnNB8ofwfNlXC9F+qbg+ZH7JWxjwfXxf4zuDr4OXB98E/yrQY/C64HHsW5
o5GxvAtDef9PYK+J/XnNT2L/lfLUS7MvzN3U0ZeUt3aafV2WUN7t4Jw0++6s
Bpfifq+l2jfwcdJf5PzcNPvuDATvJH3vNPtOrdX/A/aiNPtKDcK+CXudNPum
LMW+Hlwszb6Ni8G1yf+XVPtGPq3xD+eXSbNv5GC9M6T/J9W+i4tI/yXpS6TZ
9/Ey9xMJvpRq38QxpF9D+oup9k1cSPoW9I2R3P8E8Fz6hJbgeuCJ4PngW8F1
wC+C54Gvam8a5z9c35zL/2h9VPM34BTwFfBt4Ic0Pwlu2skxih4Hz6R9duH7
uRL8qOZzxWFJW10PfgL8M+1rHOc2o4/LpG/7kjHMN5p749gC7K0o7w7NbYI/
BSeBn9F8D+mzSL+J9NVoH1VzfK7GtDXQq+fYpjxqodfM8Vys8viI9+lD5Eox
lzmpk2PMDEd/l/IeaWufGfnKiLNwPfUxGTxYa5vUxxzFMgAPUXvmfeyVas4E
cSUM49hNXGug5pg1X019bOD8qS1t+4fzO1Mfk8D3a36e+riHtCHNr3E/3/KO
rSb9c9jvle8J6d9GL0r13JvKPB38ah/vzdM/yVrSv8ix+0h/hfTrwC+BB+l9
BK8BvwAeqPYB/p321DnNvlL3qs+kfXRMs2/USup3Czg+zb5Xy8C/kT4hzb5W
9wTtm6uYqYqVKh/dlaTfDT6k9kP6FeAd4ANqX5rvBCdSPzN51pngezQ24Zv5
H/l9xfmf07cszTLXyRzStOV5fMP5++vbR2oV5+8FHwYv4Px4rUWCt4OH8b1d
iH1bqn2B95TlPaA9xiiN2o/aY445GsTNkA/eSN+ZzTktyzpNG/GR8o86V98K
/ueWUZYB4E/A7fk+HsXenPJ/CB7DN+Er7FuzHDtwKce2oG/OcmzBJeBujAfz
kN0hx4hfjW1VlmNjfgreiL4hy7ESF4M3qe/NcmzBz8BL0D/LMtfKNPBi9EVZ
5op5Azw1yTGlFEvqIOWJAjcEzwCnUT9PKt4Tz7wa7eNNji3k3E+zzI3yOngB
+vwsc5tMAeeIb4n6+YG62EmZj6c7xrlimy+nTXYh/2PYv9f/G/lni/sWfAy8
g/RdGL+lk+YrtYd4+7Kuxr61vn1aU7Hn6hmBi7CHwQXgb/T/pv1B4Dzw1/pf
Aa/h3N555rafWtm+hF/on7C+fQrle7gKvKW+fRAv0D5bpdmXb0DQvogrsW+u
b5/ErzTeTLPv4ArKv1bf6lT7cu8h/QbwmVT7fu8N2vdxmeao69sH8rz8FfRP
pf5A6xf8n9VO8t6bsbSXyvybLgYfoD0d59gNnH892+/yBvAF9N8031zOdZgl
Ll/yO4q+Xd8fbFHJPrcF17uo9QP9I4M7cr3y4CWpzusPyhcrf6we5h6cyzWa
c71bkJllXMZm6PNT/a0uIL9apE/uYS41pVmE7cdu5lrWmmcr0rfMcV66ZqZi
62j+H/2bkLn8S2U7dpM4/eMzHLNHsXqO0j4aZDjGj2L7HAIfY/w5iza0j77z
lkr2ldWYWGNh+cyKS/lytmMriVP5Ang99uOk7w1O6eIYiIp9qDka+SpfJM2c
aPssy7dWY3SNzeVjK99mjaE1dpaP86PgbdRnHfDBWPvyasyusbp8erdjeyzH
XJc/c/9r1F6RSlX5Fmm/AfVdjPQxpH+SOphF/V0L8/0Gv8XzKE19lM1xLI7R
lexrrRggiv0hn+sDnPsn5f0g2j7JtWjLNZHN1O+H0f/zpW5tXT7Vs8QXxPmf
gM9QB5s5f0u611IeJv8KKY5pqFiGGsOIS/bfbMeaEqdsceylcxxrZHgl+zor
pohiicjnuUo7+3DLd1sxZ+R7rRgtis0iH+yS6GVyHJtkZCX7YivGi2K7yCe7
DfVVhusHwXX4J3+B8WV38isCT+X/d5TG16RpDP6e9A+A14GrgfeCh4HXgKvo
Xwr8kL7V4Frg/eAh4BWaE9X3D/wgeAO4Bngf+D7wInBJ8HbwbzyLWMbUC5vz
H8w796T+L7Dfgv1H7MXArSlfGNwOPFT9hea4wbtjrTfhfjKifexljaU41iLa
a86TSP9yjrlUlWYg+qfYi6N/ozrX+wW+Cfy1+kj0wTnmOj5Oe3qQ/qATx87y
vseRZji2Y8nWj5LmMb374IbRHtOO1v+I5njBP+gZ6P8KnAg+rmeqvhkcL/9c
0o/Q/xY4pHcN+yPgreBI8AHwIPBn4NLgHao/zl8GLhftMcn92JeCy4J3Yv8r
bM4kcSVFqE2Cg9TvYur3w7L2vdc/qP495YM/irY3EqlC/aRH21df/7T6l5XP
fhbtbRj1PwS8iPZWoG8935v+AfusNed9+lf7zQL2Se2O/Tr4roB92Fpgv5H8
7wnYR7QQ+w3guwP2+X0He3HNZwfsM6u8riH9As5zV5b/GfWv2BH8Pfi+rp6L
fJ8x4K/6V8/y3Hgv5Aj6UeSI/oUq0K47eo1Na2viyPmWe9mZ5bwUkzWba58C
54NfQwr7mCNR3IiaA+ql+QDS3BuwD/DzKf7n1r+29sxtU1659oVuQxvZy7/9
bqRJwHuUd6HvQBoHvIf6IPp+pGnAe8JVNzchAwKuo+0ae2T5X1p7Nt+nLN/k
eG71Zs2BgnfkeC61onxUwV/neO60DPhD8PYcz82Wl78ieFuO5w5LgZskuc5U
V/IpztL6EjgP/CqSCT4B7oY+WWXW2iA4F/0VHaO/6EUd3kV7eJv+4k70PNpL
arQ5AyZh78mxfupfI+3Lk4t9YLR9el7C3gP7HWpr8qEG99YcEHgWuCvpb0/3
3osG1OkizaWDh4IXYN9I2y4EDwa3oPyNubfRnP8guFus934MAt8f7T0gvUjb
G3kryhyOPTUe4pr1K7tNTyb9K0heRZdxamdzAokL6B2udzv6jB6OhaM08Vx/
WKa/LTc2NPf54HTvJREH+qPyHcZ+qqa/QT9Sd9tyze3yDNdP19osx7pSl5OQ
N1TWdMeyFMf0QPT7lF+ExxiD0s1BLe7px7jGGNW97oe0b1b03hnN0WluTnto
FGvhpXTvhVHMhRc5t5Bz+oLf4H4Wg19v7bw2RXpvjeb8NNenPTZbaZubkcSA
OQAaYWusOa1I+wSM5Pwczu9K+uc49rvWgrjfe1Qf8pehfYXBD4BHUz9/au0F
PEzfYuzplC8B3B/8tv63tZYJHqK1Eo0fsUeC+4Dfwp4JTgEPAs8CjyP/VuCB
4FFaj+D8GoxZ9lKejfIHAd+K/V7sN8mfB1wX+0H9j2I/Cp4Mro79F/BzWm8F
78P+APU1Dlxaa2bgwdofzvVqkl8v0o/Q/xPnNwD3BV/n/H66F/2D1uGbxvf2
otbiaQOjNX9HfT7H+T2xPwF+UvMHnJ8HfhRcgvL9pfk88OPgkvLZBlcH9wT/
R/5fMbZ7RMcqO8+7Mx1jTrHltGdyjP4XOHYn+siG9l0fAh4bYx/2C1ofBN8B
voH8s6nPLPBD4Heoz1+wV5bPFfga1xvP/VfSGhv3P5T7b4u9AngXeIPGC9jr
Z3hs+BD2ztjbgU+Dt2KvQn/zKcduIr+xtJ9k9F9pP+uwr8HeGvwX+EvwWq0J
kN8F8HrwAPJLwf6f9mCB12Gv2sF7brTXZnktc9Un5phrWZz1A+SfyPUrYJ/L
/czH/ii4GO/LbfIJIW37HP97VIrxv+pzGdb1z9qV818EV9HaJ+ePpDynuf5q
rn+3nj/4CniTxg7gJPI/CV4FXk35XsLelPN/AD+m/fPYG4O/l78Y9g5ajwQf
0fsGnkT6JPAJ8BPan4+9Jfhn8BbsL2KPy/BY/BHsbbCXBH8DXo99MvYO4DPg
EdjrYd9HeS5xv3Nof2Ow36A1VOyDtF6J/VC6177EETwc+/fgFdj7Y2+F/Vi6
/w1Xkf9S6mqJxj/U14gYj+US0j020JjuCun7ZjrWidKU03xGptOO1BoJ50bQ
P3TR3HasfZUbcH6naPssP6u52hzHDujAsYnoL+aYe75ztH2XY9Kty4d5DLa/
OJYMPkF+EzQ3nGMufeUp3+c66c5LPtCnKd8J7r895bkSZ1/qetg7RtunWnsr
FYNQsQe1x/J5zW3nOHaB0tTEtof0r1d2DMQneL9OkV8Hrc3yfj1N2j/Js5Xm
9jm/K/9XNUjfFryL/6sx9I/duP/uGt/RP44GdwV30/gQPE57p8A9wJPA48H5
4F76FoGfAxeA+4BfA4/lele4Xgr4JNd7Cnsu9nzwi9if0nww9lvBP2G/qbVj
iiqW6BvyMUh3jDXFVtM/yzjS/5vsWDan9D+JrTYyiP6rKuPDXO6nJridxu/c
zynq4wfuvy33f5n6PKn2Bm4F/gv8mP6VwUnaD0P9PALeAm4qf0zwT6RfD26k
tXvS/wzeBG4C/hPcXP7D4Ajwi7SfH/QvA44F/479GHgquCb4V3Ar0q8Eh8CT
SP+QfCvBcfL35HrXSH8n7bE37XM3z/BH8FLsDbWew/nLuP/Pc2wbybEu5Hcz
6fPRp5NfKvndnmlbP/Ibpv1hnF9L/nngZNJ/Db4FPJn0t4LngqPBL4FHk74U
53cDDyf9Oa5/IzgH/A/XPw8uAc4F/wtO4fzvOL+1fB20ng4+B+4Engo+Q/rf
wangq6Q/C74EDoP/Bo/gepfB6eAn5N+M/R1wHfBv2L8HzwHXA18AP0D6D8H1
5U9A+hPYvwXfCr6EvRPX/wecCX6D6y/X/AdpRoF7gxflmHNaXNMx4G/on7ch
jQLmMPoZ/UekecAcSVNaeo5Vc6tDNefTyj6+8u29he/TNPT3kEXgj/QM0N9F
FqJ/rHeY898BfxrjNZSumj+Wj0KMYxTfhn0yeHaMY0r1kf85eGaMYyz1S3WM
b8X21hx3EfZXsM+Kccyn3TmO+aBYD/3Jvzn/9qOwv6i2wfdyOHg0eCL4efDj
+pYjzevRNzIeGizfZ/ASre9Rnl/5/tXln2lZjPeoZWv+G/u8GMfcVtle0z3G
uIyrKc8b4A9iHHM6P9UxaBV79k7w0pauI9WN1qzmZZpDRdwpukZfzR9z7J0Y
xwiS/joyJ8bHotp5zUlrTZNr+N6nqM5jXAc58p0Fz49xTG/V5VTk/RjXaZZ8
acFzYxwTfHdv/qfBb2t8xf9RA+1VBr8cYw7aEdTXU+BJ4Beor0c4fzd4F7g2
/08h2t8+8J4YcwbfjP0Q+ECMY6J+l+kYtIo9e5BjAeyHM61Pwn5Ma73Im3y7
XuL/L17zyeDdMeaELiv/FvD+GMdo1bX3IN/GuAwJpN8P3htjDuPzWo9DKulb
SX9fRvtvwftiHPP1J63NKn19+6AOxX4EfEjjO81ng4+CD4NfJ49H5b8MXg5u
jX0X9TUR/JbGX9TXKOpnDHiy+jvq5wz2CeDp4Juxj8T+NPgV8AStT2p8ovuN
8Rz0t1oPAM8A30j6f7UeAJ4W4zniTgW0U/Ab4HTSz9ezLzJ3mnx4byH9eLUB
7J80osy9qHfwq3o/wR3ku6k2AE7j/I7g59SmwGHwmpZ+R/Vuak30YfkGg3eC
b+P+p2F/E/xJjGOuX0L/S+XV2I3nNaE94y7wOewhjl3PdExQxQLVser8G9XM
cmzLs6RvjN4ky3WrMXAtrf1nOVbtL9jPtDfHmLjF1CZe5fneAD6v50//9qLm
J7jGmRhzplXEVjnLsUBPcv5EzQdiPxtjjrTnyO+q/t9iHBPob/SWlC+6lo9N
0Hodx07HmNOqCnlVy3Lsz1Pkd4D3/2fyKB6wD1UjbOf4poZIW1VrVpwfzbF/
Y8xpFSlf1CzHMvwV+xL5I4JvCJizKp/2EJNlLqy7aA/byLsB+B9wAWWqrPUY
cLGAOeJiKOva9o59Ks6xeGwJyE3YU+gzzmv9Q/nV8jNprf8H8I0Bc3xlMX5o
CS4T8J6HTPCt4NIBr9FlgFuASwW8xlcOvUKWYwGfoPxl0G/Ocqzfn8Hvcr0H
+pibvX0tc6N1QsoHzJF2A+XtnOW9uR/XMrdae6RcwBxr4kJ6CBwImBNJXGvp
umbAnGsPog/sYV9c+dCKCy0LqRgwJ1r3LHOsiVutasDca3lqAwFzsLVNMsea
uNUUsyyZ+ysAVwl4Da8Hes8s+55/Wt7cbF2RSgFztIl76e1u5k4SB5O4h0bo
mgFzEH3CtT9CYgPmNErClox8V5drc35r9DaqM+w7wK2y/M7oXSnLsZLg4siF
GHOkv0l5S4P/0PhA66mUdyA4MmCf6X5ca0CWfW/0jKcy1rsTXCtgDq9Psc9H
ggFzMvXXXB2ynvFfHOnvRr8H+RrcvJbbYj+kdsBtUm3lDr2jAbeZlR3MsS1u
bXEqHUE/jDQLmAOxNf3DIu5nRYxjPqtvXo6sjXEf3VdrEbne63ykHO9GvmOi
Khaq9sjele+Y1oplrT2bWdzPHdneWy0OltvzHdNasay1B1N7fR/JNdeC9vwW
YMtD5gfMmfA6bbEd+M2AOZtO8n51AM8IeM+7uFtzOb9inDlcf8DeAvsbAXOu
Jiab80FcD4qRO5v82mN/K2DO0xT0Vsi0gPfYP5nvmK+K9ao92cPzHZNWsWi1
h7shuBd4YcB7WBPzHYNUsUe1h/gk+fcGLwp4j2zLfMf4VGxP7eE+gr0HeEHA
HBG98x2DVbFXtaf1AvbbwEsC3pOdm+8YsIr9qj3Dw/IdQ1exc7XnuVm+Y5Iq
Fqn2fD+S7xjAiv2rPdwV+JbcA14d8B7f7vmOCatYsNrT2xy9CfJ6wJy2dbQ/
GTwvYE5WcecWUr9V48yh26ijOc/Fda41Za3das1Wa7Vaw13e0TFgFPtFPnpf
0rY2IAkBc/DFdTRHurjRtWZ6necV5nrvBcxZWx1bVaRNwD6D5zn3LHJrwJyT
f6L/gbQKmJOyMmkrIikB+0R+j+0YckvAHJ+n0U8iLQLm8LyA/ivSMmDOyb+5
fhrXfzfwP05c6j8V/E7AHAprwOng9wPmuP0E3Ak8M2BOhQuc3xk8K2BOiHPg
juC3A+ZwEJdwPvVXOc6cwuIK7pVr32xxBlelvnNI/3HAnLcVwNngjwLmyN3N
9bqCPwmYc7c49gzwnIA5gMuAM8EfBMxRvFV9N/jDgDmBa2HPBc8NmIP3EuXr
Ap4dMIfE36S/A7wsYE4BvfurkPUx7gMy8x2jWLGJtYe9OO2pP/iLgPdYf97B
Mb0Uy0ucbuvQ1yChgDnaLjC+2ER+W2Ls4yV9M7I1xsfWo2/I9N6R8ozXhomf
Abw9xj7Rz+c7ZrViVYtz4Sl9z6jDFwLmaF9D/90I/GzAewrFFdg629wp4gwU
92GHbHOriANR3IJts82NIo5BcQm2yjbXhzgFV2u+Cjw+4D2JSyjLOpUZfRWy
lPJ9A/5a/xsRLusuZEeMy9wG+2fgleglEzw2XYasifEYdTH6at0z+hcxHkuv
0DViPKaeyvh/R6bnzrQmm9LK5yitYjL/3NI+b/J1a0CabMaD28HfgFswHuyb
5DKrrOIULUnd5ZLnJv1vRrhsa5CNMS6jxsZrkS9jPEYW92XTbHNriANTXI3N
s83NIc7GSUleg9Hai3zE66LXQ0aBR6qPTfEx6drT9SG4Pnh0wHvA3gdHgB8P
eI+VbA2QJwNOo70y4gwRV4j2zChtJPJEwOdEoddBRqAPRzrkO6azYjmLQ2BO
itPIpj1eqfmOua1Y2+IUqIv+ZB9ztUyMMBd4Nu9j+ThzgseAA9nmOpHPvbg/
a2ebO0QcoPL17t3VvuXy+V5De8zh2JSAOYwHJ3lNRmsx8rG/P8lrMlqLkc/8
kCSv4WjtRj75XbPNySMuHuUxKMlrDlprkA95cWwds/3stMZQCtwJ/LLqO8Lc
mjWyzXUpjs3y2fZply/7Q/reUx8hjo0LeM/iKnAC+JmA9yiIW3RwH3MLiWM0
Jd8xsRUL+/85Qri/pzMY75B2YZxjkSbkOBafYpIqlmkox7H2FNP0Z/4/zvC/
GwN+hf+P4+DT4Gjwy+Az4LPgAPhV8BXwL+CG4GngzeCfwHVivefsV/A5cCx4
Cvgw+BS4AXgieBf4BLie5gbBdyV7D7P2Lq9rwHuK/WfsdWO9x61Hqn2U5Js0
gPrdh/0k9vqaqwx5b5TWBLQWcI98WJK9p1t7uQdrDy3pz5M+CH6d9KvAP4Aj
Y73nLI3zO3XhHdJco/IHdwHfEmsfqp3gjuAmsfbRygSngpuD8+p774r2yGhv
jPawrCf/H8k/KtZ78vaQvjPpm8Xa50t7Kfdne++a9lQuI/33pI+I9Z64w+gb
irx3rXiU91LuyfbeNu2p1F7J7dnem6c9k9pLuSvbe/O0p3J6kvesa6+6/qk/
SfUantbuVso/I8U+qfJFFefqQM49XOjYAveqPXZ2zFPFOlXMi9LoJZFfA46Z
Ub2zY9YqVq1iPlRCr4BcCDjGRi5t7xL3G8G34wLj+xKdHZNVsVgVU+MCbfVX
5HTAMRL2JJtjV9y60aS/hO135EzAMR+uoV9FzgUcQ+EK+l/I2YBjPtxA3v+B
zwcck2ALeX2V7b2I6/lf2MX7sC3bez21B7Yk914qx74qh8rZ90Q+mvLNlA/K
PUn2SZQvonzmfmttn035aipG1yX0v7I919aB/K+h/6c1R/ADWk9MtU+FfClG
c6xEjvf4am9vez2jdOqe+kmL9RprN/QKOfZVEIfEoAzHlFEsmWvR9nUpnuNz
5fNSKcc+uvLNVR4jUs3xIG6Hl9V+5e9OeW6NdUwgcQd/m+u9x+IQzkm1D5V8
p7qTviLXuhkJgWO0/zENG/1R+YaO+fsTuDm4HLg/+LYOjmmlWFa/8T2L1voM
+ArPO6Yk9nSv4WrtdhjXP8f5rbTm1dAx7U+Bb9WemoaOeX8G3BJcsaFj3B8A
N9EaIfg28E5wArg4uBf4ELgpuAy4r/Zkgm8B36y97ODvwM3AZcG3g78FJ4JL
gHtrzz1tfQmyhvZ+lTKvQl+NfAm+Dr6Le/lXfGdN+X5W571Q7A0kyPkxGlNj
79fV3LcXef4jqNvhSNtSvIOkWYO+rC/nN+NdAX/OucuQdeT/D/k/jf0ppAbf
qvryseDf9r1u9rWIkT8oab9ANpD+GunvzzTngLgGFLPxF+4nSd8L8L3czxPk
9biuWdox7dth60j57tN6GM9jD+kbaX8Xtj6k3wduDC4FLmrg2NfJWkNt6BjY
/Xh+IzmW3tBr/qO6eg+v9u7qWCPSPtnVvpRbOfZkL/scy9e4J+OZxzPswyrf
VcVoGt3LPsryTe6BfV3YPpjyvfyW6/ck/WXaXxT3+ifXK4leHImP9R7o3tiv
gOtgv4S9aXfHgFLsJ+3BzMP+FzgS++/R3jupPY/a66g9lCO4/iaufyvXK+D6
o3p5T5/28hWCG1OWsV3Njbpf/n7oFXh+I3n+1eUzAM7q4dioS+kfPxVXXA/H
rlwGbsr547uam/YA58+Xv2wPx7r8HHvFPPuEyhc0Xv+nvexjId+KfK4/qZd9
JuUreRc4kGfOCXFNJJM+mGdOBHEhpIAn97LPo3wdB5A+Ns+cDuJyaK3/3Txz
KohLoU28915qj6b2ZmoPZmpXx2xTrLZqpBmivizbsXqGU972POuHi8xNfjvH
1ibbJ02+aFWp3/HJ5jgSt5Fi7r2UbM4ecfWcA89MNseSuJUugycnmwNI3D+K
gTgp2Rw+4u5RzMFxyebsEVePYvS9mGzOInEVKSbeF8n2eZOvW0Wu/1yyOZvE
1aQYgu8mm5NJXEyKgf1CsjmGxC2kGISzk83pJC4nxcx+P9mcTeJqugaekWyO
J3E7XQJPSzankbiMLqp/SrbPmXzNtOf7YrLXBLUW2BL8H+15Oe3vUKx9Hpeh
P5xj37COdfheJ9vHUr6VdbXmmGxOI3EZKaZkZGuv6WotVz4+V5O9Jqm1yDZa
k062j6B8A6vr+5PsNVKtjSaBNybbB1C+fzXBl5O9pqu13NbqA5LtQyjfwdrg
1cn28ZNvX2Xw58n2cZNv283gJcn2iZMvXBndA23lD+6pZtBr4u3Bv4NrBO2T
UFu+CeDyQft4VAaf1DclaB+HmuBT4HJB+5D8Rv9yFHxT0D4LYewXwbXA5zX/
Cf4TXFu+E+Am4F/AVYJe86+ntXl9M4P2OWkG/hVcNWgfgWTwBXD1oH0AWoF/
A1cL2gfgd65/DFwsaJ+IM+Aj4BuD9kn4AXwYfD3Wa/jzqI8B1Mc28I3gBcn2
aZQvYzHwh8n20Zdv/nWe5+Jk+2DK97IU9oXJ9omUL2QJcCnK8xP5lw7a5+BG
8I/gUkH7FJSRrwK4TNA+Mqcoz3fgG4L2ibgMPq4+Mmgfj+vgH8Alg/bpqCjf
B3DZoH1KrmL/HlwiaB+Lr5LtAynfxyjwZv4fWvDOXw44xsK5ZPuIyjdUnAJl
Of8Lzj8Sa5/Wg4y19iM/BsyhulBzY8jBgDnqdqHvQL4PmLPxE811IAcC5gTd
h/4t8kPAnI0fiF8RvDNgzsCj6IeQnwKOObUVfTNyLGBO0uX610EOB8ypt11z
DcjxgDlMl6IvUh4Bc+ptQl+PHA2YE3Kd5tKQIwFz8K3WvybyXcAcfnMpz3jw
roA5B98AjwF/EzBH4QmVHTkRcEytt9CnI3sD5iw9jX5SEnBMro+THWNCsSWK
wL9obIucCjgG1zvkP051FjDn4TT0KciegDlT56C/ozoPmPN1BunHgreDxfE4
G30Gsi9gjtrvVVfIzwHH9HoNfTKyO2CO1oWc/6yeQcCcjIoNsTfXXDf/HyMC
fCDX3DaKKXEX/ydLaR8VYx1zri14iv4RYh1zqB/911jOKRvrMUcS9lexl451
zKdHsT+HvTx4fJxjDynGkWIbKQZRc9K/QvpSsY4Z9V6K96Bo74k4QH9Ktg+v
fHfF8Xsq2T7U8p0Wx4bWguTDL999rQkdwf44+DtwINq+w/Ipli+xfIhPJNtn
WL7C4pRozPVf1j9OrGNSxYMngkvEOsZSADwBXDzWMZpuBy/SP0+sYxTKt/da
rrmB5OMr7pl12eZSEQeNuGo2ZpsLRZw14rbZnG3uFHHcVBdXi/6RYh0zqpK4
XMA3xDqmVITWC8E3xTqG1L+aLwb/G3CMpRuxjwJfCziG1c3iUgFfDzhGVT2t
V4KLxTqGVElxr+ifKeCYVk9QFyV5xzPruM7+4XvWoZXHBvWon7fBg8B1NLYV
fwl6uKvHunsZX36Y7pgtitXyBulXpjvmkGINvaPvNePNQ+Cj4JbaU0Jdfc74
Ksz4+FeOzcJ+FPtx7ZVqYF+Ey+DfgvZJWJHumE6K5TSb/JamOyaUYkHNBI/k
/APgI+Cm2nOY7hhFik30LvbP0h0zSrGi3gavTXeMJMVGek/f63THnFKsqVng
uemOGaVYUdPBdbnXpxmff8zzrc7zrQKuipzBvqQE7QD9Cc2PMB4+zbF7FLss
1/9CZ8HL0Jdyv52a+ZxY8r+m8U3QPlxz0v8XIwP8uuov13tYtHels/xZtF+0
q/Oax/Ve436/49gx7d3hfm/GVk7/Y7yrD/L/+bHWWlu6LEu1RplmDj5x7xXq
/wf8PfgHcDZ4Lvg4+HtwOvjjdMeoUmyqaZRnfrpjVCk21ZvgRemOuaVYWzPA
R+Tbxz9lctA+NifB1cApQfuI/QiuCm4dtI/TH/I1ArcL2uemCuWtB04L2kfy
Cvba4A5B+9ycB9cAtw3aZ6cc6etqDiZon6I0cCK4IGgf2NOkrw5uE7RPWRvs
IXBe0D6uNcD1weGgfUA7gRPA+UH7yJYG19EcUNA+Rn/JNwncPmifoJLYozSn
E7SP0R3U327tnwZHU3/DwPvkcwQOgcPgHdp/Da4hzpx0x9hSbK23qL8C7LvA
h8BR2FPA34APgCuBm4C3aX83uCw4BrwVvA9cHPyvfLs0RxW0T9FNlC8S3Clo
n6jyad4jq72xV/jf/z3Ve7q0l+ss+Gqq93RpL9ev4P9yzCEq7lC10ZbkF0ea
3KB9fvuE7UMl36m3uX5+2D5W8q2aDq4WNiePuHhGCmeYs0hcRXu43/fD5nQU
l+P6Bh5bzdWehWiPse7MsM+pfE2vcuwl8S3zvdoWMEdzXNgcbuJuG8/5P6eb
k0hcRCtJfz7dHHHihlsLjsowx5K4lQ6ovaabQ0jcQcvAr4btoyrf1BXkN5/6
ygG/C84A35jmPcLaG/wH9TOO8oymPFsD5oQemWKONXGr1aU/n8q72y3D/6JP
0ie8Bk7P8Fh2FHgYed2mf16NtdVnYu+V4X/bp7GnkV+PDP8Lfx3nvvdu8D/R
7oO7YE/L8Fj5K/kTgweDE2s6Brf+de/L8NyR/nlTsXfN8FzcNtJPBMfnOBZ1
Y9J/Kv9Qjl3H3oDy3Inen/R/g78lffcMc/qJy+8ix7IzzOEn7r7fwG0yzMEp
7s1T4IfC9jGXb/nH4lyi/lLlswJuBs4M28dPvn1TwZ3C9jmUr+FkcFvSJ8mH
DFwZPBWcAZ6p/kP/d+AweAa4FXhE2D7v8nWfD+6HvR34dXAMOAPcWj5c4Jrg
/mH74Mn37h3tMQ/bR1G+iXPAD5K+s3zCwAnacw6+BTxB7xO4Gbgl+GXwzeDW
YfsoyjfxJXDxDHM8itvxa+rj33RzNoqrcQv4z3RzPorrcSO4S4Y5J8U1eQ7c
IsOcu+La/QlcLsNtRm1lJzgxwxy+4u49Dg5kmPNQXIffgW8J2+dTvp4vUJ5Y
ytsCPBFcAjw2bJ9/+fov0vcWexZ4tr434Alh+7DLd30puBB7G/AUcB1wOv1B
I/qD7kHvQUgCx4O7Bb1n4BZwQ3DXoPcsHM+wj698e9uAXwD3Ag8BVwavzbBP
q3xZE/V96Enb4nt2N/iPRO45wz6w8n1tgf16hn1A5fuZDf4twz6a8s3sAp6V
YR9M+V5GaX2M7+mDfUjbmP5P8zcZ9mmVL2sA+zWu1YJnslf7hzk2KcM+qfJF
rYb9AWxDwQ+Ch1O/TcnvIfLLIb+r5LdF3C6U+SJlXaX5nkzvadBehu6c3z7T
eza0V2Mw+Cz1+zL4Ke1VJb/cTO9h0N6FR7C/Sv/yNP3L1wFzrP+Uap8r+Vr9
RP+Tg75J83vgVmVpM+3oA8ETGton954i+7DId0UxmOtleg+D9i7cRv6nSHsa
2VyDZ8N4pkmm93xor8fd+l7kcR3GK28wXpmiOgS/leS6uUX+E9z/No59jH6Z
+92f6pgHinXwHeWLxb4F+wfYL2q9tpP3vGuv+zv8f9yg8Rl4FrhBtH2tFoDf
bWifq5s5fzl1dLSWj83pwTcDOUFe74Ob5HmPqfaWduAaVTX3SZ2VZyx7ijS7
Uh3zV7F+D1KeHwp59txvFPhAAmlSvedee+1PYK8UNieguACHa3zU1T7K8k2+
U20kbI46cdONw34u1Xvstbf+FOdfTjXHhLglftF6Qao5JMQdcUZ7lCnfI7SX
XJ7FP5Rvfh9zBogrQDEkbsH+sHwG0P/G3lDxqrnHD7m3P8Hx4K/AH8kXANyA
93Ez53+u+VXK00jjAfBycBlxEPTxHm7t3VZM4Jac/zXnf8L51zi/VJo5NMSd
cYnyVU0z54i4Rv4BT+9jTg9xeSgG23t9zMEh7g3FcO3C/e3Kse+UfKzSuzuG
p2J3fs0zKN2G5429T9Axn1eh3yd/xTo+9rq+laRvGLTP+TTwjeC4oH3AXwVf
78K3LOg9RH3BV8F1g/5m3qNvIbh+0N/Eu/StAtcL+pu1QWuf5HdL0D7xm8Hl
wM2D9on/HFwa3CRon/VV4LLgZkH7vC8HlwE3DdrnfQb4JnB80D70W8HlwS2C
9sH/BlwBfGvQPusTUvxN1bf0P8ozBvu/lC866DXZIHURIH1W0HuGEsFBcE7Q
e7aiwNHgjKD3aNUCNwCnB71HKhocA84Meo9UHDgWnB30HqWDXK8yOCnoPQP7
wZXArYLeUzAR/B/liQ16T85iyvpZjvti7cnYmWIfdPmel+PYMxpLkD4Q9B6g
3eCK5NcyaJ/2xeBS4MZB7yloCD5H+kpB78mZBy6JvVHQPvwfgIuDE4L2mb+S
Zo5GcTMOof2+l2YOcHF/dwG/kWYOdHGftwM/BRZnurjSb9F8cZo50cWFnqT1
jDRzzIhbphb4hrA5wcUF/mAD+/oWBz8atM/vUPAtlKco6D1dT2Z4z4322pQF
98LeDHuvoPeYLU8zp424bHI1f5tmThxx4dzQwFz64tAUd6Y49dunmUNE3CFV
wA3TzBEibpCS4B7k35T8ewa9R01czeLsFFenOJvzsTfB3iPoPW0fUb4S4MSg
9xhkY28MLgx6z5m49MVJKi5Scerfm2aOe3HbBxuYm1+cn+L6FEd/8zRzQogL
ohy4JvgX8F1qv1pPTzMnj7h46mK/K80cO+LWCYAfTjMnvrjwEzUfT/mKUZ5Q
0Hsk4mlPZbK5Pv3FZ5V47uCy4AfAn4MTwTeDHwQvB7ctMge2uK8Vkz2pyBzX
4rZWzIdwkWMUKDaBYtwPDDvGvWLbv8/1e4UdE0axYGaA7ww7hr1i188GxxeZ
01Rcpoqx0SHsGB6K3fGKxot8n86Dj4D7a36oyBz54sZXTI/mRebkFhe3Yiil
hx1zRrFmpnB+N7BiKimW0jT9/5HfOezf6XtCfp2KzEEv7vmPOP+/NMdIUmyk
B0hfNuwYT4rt9Bi4cdgcq+JWfR4cHTanqrhUx4Lrhh1zSbGWngZHhM3BKu7V
J8FJYccYUWyRieAKYXNei+v6CXCgyJyr4lpVzKh6Rea8FdetYjSVDDsGlmJf
PaL8i8xRK25axYDK4f5+BR/TehT3lwX+BXxU4wlwKvgs+DD4dvB47vcAeAv4
Vvln9HHMBMVKUMybZNL/BN4DziN9K/CP4N3gXHAK+GfwXnAB+GPyOwreDg6T
33HwafBB1Te4I+lPgQ9ofKR/Is2Xg78F54DXpDlmgWIV5Gs9lfsty/P5GzwP
vAj7Mew7wFng7CLHwFDsi3niWEtzzAXFWuiO/QHOL439ip6v/me43gns+8CF
XK89+CR4P7gnuHKRYyAo9oFiuAwnv30a42msw/lDwHvAG8HxWk8DHwJ/BU4B
X+vjmBGKFaGYLmf6OIaFYlcopktnrncGfEjjP663r485t8S1NRp7HvntAK8B
R5Lf2+DvwF+DO4JLFTmGhWJXKOZN906O+aBYDxsZzx3v45gaiqWhmDF9OX8X
eJ3Gd/rfYzw1Mtdr57U4tgFbf3Bt8HuMx+7RegM4FjxQ/lqM9cojn8tXQT6Y
jF1ewJ6Afj9jmGfRjzI+fZHxaTzHTnRj/MyxEHo57G+h10LOkFcLjk1A/6Sr
126Vx1nSv5lrW2XST0Sf19VrtYkcewZ8mPxfIP84rfdz/RdzbRtM+ufRPyL9
kvK+5nHGl4OSvXYaBA8g/TTSNEcfRvofuN6/KbaVAr+MbUFXrx034tjb8s1G
zmqsDP6c8xeB26PPIv076IFcj6VbxTlWxcfg1nGOWfEZ6Wfn2jaD9Oe43oxc
51UFfB48E9wSXBW8WLZcjwV1jaWUfx64Dfpansdf+rcXJwd4XQnGctgXgNuB
N2Jfiv4jaTqAOyLLsc+X/4PWD7Av0fwl9/dQOac5RN18lutnf51r9qO8L+X6
3odQnl3Y3wD3quUx/iuaL+X8FeiNSXMOPJ42+DVtazD/K4f0fHLN/fIGcgZ9
LPavsN+PPYa2E43spf3czvm/YH8e+3bsQ7A3xBZE9mO/E/sq7OcpQyp6F615
gE/yPxHNWHY66SuRtiKynPRdsW/CfkoxpkLmCHiSvEcjH6BnYd+s/x8kE30c
56xDv0D+6eAwEkteAWQftjvAJ7GfQHaA+2qOGVs1ZCu4N/g1bJu7+t+yKXgZ
9Tcp13Uzm/q7G/xqrm1DwdPRq+T6X0htcCr697Tnl2jPzcAryGs65WmCfhfP
5C7O749sLetjFVp5Dlpzz+P0f0BZqiBbKE8vzQdpPRF7UZw5ICKxRSDbsd/G
sZroNZCvwH3AP8nfhfrZQv2/Sh1VaE1d9zbX6CekmaW9BMi58m6j6+QrofaC
/i7taTtl+ybPbaeG2lOG98hqb2wy44tS/P/+QxuP4t770h62Z3jPpfZaNsd+
NMN7bLW3NgX8VYb3yGpvbDPwmQzvadZe5o7gZuT1uNaswM8iTcHnc912ngH/
3JZrc6wm18vieu919hqX1rY+kz8pZW2EfRz4EdK0FDdvru99gto89ibdnNej
2KfxPO6Sz2acfXB+yfCeVO1F7Ux5ameas0BcBb3Bhzn3MdK04F//LMfKd+T9
TbH+dG3K0It6BZ8Bj6KOv5SvDvh8nOcM6mSaY0HcCkXkdzXDe1611zUD/HGG
97RqL2sDrb9keI+v9vbGg1dneM+x9hongOdneE+x9hLHaP4g05wH4jooAJfJ
9J5c7cXN03xLhvfsaq9ulv5/uJ/TuX53x3KsMfhsrt911eH91FdCN9sepr7S
qauVtKeTtKeEip4brIt9RJznCDU3GAUeHuc5Qs09RoCfiPMcpOb2aukZx3mO
72+uVY06qkRe98R57rCG6jjOc4iaO6wijog4zyFq7q8C+KE4zwFqbqwa+NE4
z5Fprq0c+ME4z7lpLrMS+OE4z2lqLrEs+IE4zylO0diUMvQHH6S9N+XdaYKU
qOhjmpurT/qRcZ6j01pAJ/ArcV4TeJP66ACepHc3kedNfbUCv6jvK/U1FHxr
N7e9x8BJ6Btz3bcpzVt6Hzk2Gb1SotcW2oJfjvMaw1De9+nyUQE/Ee1YUldz
XVeKKbWAsn6K9E50jJQm1GU70t8XZ59AzaVHk9+oOM+pt0FP6WZf04n6/mV4
T7X2Ukfqf5fzb+EaEeDzpJ+e4T3q2pteG/tLGeYYEbdIVfCj3N9cxQBR+bi/
ARmew9bc9b+UN56yxSEH6Gv6cSydsmcgN6u+y9Be0NNy7bulY0VFjlmjWDWL
aWPzyPuOrvb10zVmkve2bvalzeN/ObYD/SJlGMC1N/MNu53rF5Bml+6f62dm
eM5ec/W/gvtkeI5fc/t/gfMzPEevufk/NB5kfLUpz7FNn2V89QrjyUpaH9G3
lvp+GlwO/C/lW6j57Gxz+ojLZ2PAXFpdOf/OeHNq3ce9DUJ+oi53av+X/Kty
3ZfeA75Xa9e5XouNK8m3kvwrkOY/8l+i8WAvc5qJy+wh9dlhxzxSrKMv9f9a
5BhHim20UOPJIsfcUqytBeA7ixxTSLGEloCncX4V8E369nL+W2HH8FHsntVa
D8gw54m4Ts6q/qjfIu7nPo2lNEag/71M/dcCZ9P/9s40x4u4XYZrfodnPasN
ZdD3gDaZk2lOGHHBPIw9I9OcOeLKeRDcNtMcOeLGuR/cKNOcO+LauQvcIs9j
TI0tU5FWeR5TaSyVjsRnmgNG3C/9NJ+guVjKWA3cnjpIzjRnjrhy7sPeMs9j
NI3NwsiteR6Taiyahgym7Ku5h7sp+7YqntvVGFJjR83x/p1ujhdxu2ymfqIz
zMEj7p3Dmv/PMEeKuFF+BIcyzJEibpRj4KHgN8nv8ziv+cxBP0ye16nLlTon
3Zwl4ir5AnvrDHOoiDvlJDgiw5xA4gLaD/4j3Rw04p7ZAD6bbg4XcbesAd+U
Yc4Zcc1sA5fNMOeKuFZ2gKtkmANH3De7wccoz3FkCXhgJa+FhsGvxnlNdDHj
zbm01xS1F/rLOehxuZ4bTeZYZequTmtzk0VTZzdSvwdzPVaMATfD/h/51df8
tPbbYLsCrg2eSf2GaO/x7Xxuddr7jp70ozzPGuAfeSZDSV8Wez1wXa7Xl+cT
rT5XbYHzM5LM8Sluz/7g0uRXhvR1VRbyK53kmGiKhdZF/8ScHwNOAoc0J93K
PqDy/fyMPqZskmOmKVZaakOPTW7I871ojHJAa//gWPBY7PO5v3raUwnuRXnL
Ud664Obg97C/hr2qxijgtthLow+jfA3BQWQy9sr65qKnYB9D/jeBA3rfOL8I
XF/fFHBD/VOCG4BbguM0J8P5tTXGARdy/jxwJLgZuCe4OnoN9W886w6MOedq
/Ahuir0H9rc0/gU3BncDl0xyTDjFgutM/q3RU7SnVP8Tpbkf6vcqdZav94v6
nZnkNQKtDbxJmmZaq+BYR3AnpBF4L2XeQd/dDnyqlX1o5Tu7pL7XZhqD28d7
jeYZ8j9Mmlz1J41seynJ5yrNuVb2uZWv7eec3xS9FHX+XWVfcxznHyRNV/Tb
OH8E144jTVu9/1ojaGUfX/n2LuX8BPRQnmOFKs0rnP+b1pQ11uf89jz/TOy3
gwdpfICeIR/gmj42lfTXSN9d/RnpuyWZU1ZcsoO4XvEkx8xTrLxO4FdJf5n0
eeCBpJ8C/gdcoPTg/CRzzopr9n7NcSSZk1ZctIPB7bmf99rT1sE3ac6I86cj
kxhf3MGxFrxb2XnWX6C840mbC67LWLU+/Xm3PO9h19515TGI/F4C90O/hfzK
Yb85z9yVcfFeO9Iz1bPUGtIZ0pfKc9t9UeNncJk8p30ZXIPx8UL6l+fAz3DN
2Snm0BB3hmJqNEkxB4m4R74An+F78wDHxqk9kv4UZYnj/bhbdUsZf8A+FPsY
cD72d1LMKSEuCcXguIT9YY49q+dd29wImkPQ3IE4En7B/iD2Z/R+1jbXgeY4
NLchzoPfsT+EfTy4j8rbzTFtFct2hf4Zch3TVrFso+PMTaAxkMY+4ig4wfnD
OH8suDvnL+N7soZ36h7epVqKnwJeBe4HvlzNvmUz+Ubva2wfs3fRZxeZq3Q/
x2ahv11kriSlWa/976oztR/y3we+H/yk+gfwIfBg8FPgruBN4HtV5+rvwN+C
B4FHgzPB28H3gUfpewr+CjxQdarvIfgoeAj4afUH4NLcfzmO3QOe3dDcEppT
0FyCOCb0L7sZmRPvf9q+PP9peeby3835qeBxeY41sgocBj+X51gma8AZ4Bfy
HLthHTgH/GKeYzV8Ce4CHpPn2CsrwWng8XmOfbIanAuelOfYCZvBr1DXlfRO
g1tT512xv5TnWBCbsL+V7j0C2hvwGn1iN+yT8xxrYQv27npXkdP6v+J7+Az2
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
fRX2hzm+NXwLXgFHwS3gm/APYu5XU3i72teGXuu9lfROwa/AC8lfSewB3R+V
F+WzAf4d+3PYZ2LPDZ+Ah8Cz4ILwas3d43vkMG3TQc1v1Hg2fEprLcrwPGJf
j0wiP0cI+ybDc4b/f64wsizDc4o1l3gvshT+NsM29TF+Rz+GlCa/pwkrFaJd
0v8JOL/GzNFzkJ8c6P9irwjnpU/3NvYShKXU9T9l/UveX53n5iGuM+RjZ2k9
aV3/M9S/wr+wF2hony/y9aI9MzZz7k3IZPJ/nPQPoR/QHD/SP5HstfiViF8y
4DX5lZU2538nxmFD4I1daJ8oi/bwz7x7XiKsk8aPiT9E/f2QbVrTlUFbvYf0
/1BbX8Z7DVQI+Vq058BnDezTRr5stMfIStI7mOG8fKA6jb41w3mdVJIyRd+N
FItxmkfRj2R4bt2fWmOge6djyviasuv6H5P+LR3V/3b0aCTM93FBwh7n/VOK
Miqkf3+8f8LEz4n9lu4/8VtQd06T5h0x+blM2ivgK/Al5JSuTXMqOddZeA/v
lz8zrD9MHnLp/w/x78L/aI0E7+672G+ovpBeNuVzG74O/0b8k9THoXrfUB+L
UB/vYbuDNIrxMZs1FkEaK+6n3Hn//aO0kAYxTiNM3+HBTO+to2/4s9hOI2Ww
n0v2v5IzGdb1z+SCdCQO+3nCVlAeSeQ5ivLYQHn8ACfCxfSvBi6vsqQ+TIpx
nB+xl1UdRv8FeznVNewTYxx2H/wv93xCjNNYLl8HhBVFX6f/l+h3sY+Pcdj9
XNv5DOdlWaz/xRzP8LOifzK5id+dMltU0mWaF+4Nf1/Sz0yc/mXpHpNeEfhP
yvNlynO+5idRnvG0B4k804O0ngmOVV8AXsvzMA3Oq7EF7bFB+9ILXqb2kjq5
m/rVJsV7uS/XmF+K93Tfhb4jYl+UQwlbif5jxL4zn02x74cVEevyASHfDz9p
DDLFPiB+QP8+Yl+VSlN7ma/VGGSK9zSXr50tGhNJsc+dn9HXROyrU3F+QV8X
se/Qwcof+raIfYO+mGJfOtsj1uVTZyv65oh92SrN1eirIvZNqjztRd8dsa/P
l+AD6jtF7DvzZfgw+qGI9/aQT1r55tkTcVz56DmKfkTvzEL2ifuH3nfc0znw
+yn2jbQz4rKSjyT5BtofcdryESTfLBfhIqn20XIe/WzEa3kLE7ZU44s8o/Po
/zzCMX/BlyNe61oU+yX0CxGvHVYa8g1zLuJj5SNGvpM2aswqxT6U5AtpfcRl
J59Im9A3ROybT3GqZnM8bWwT2oviD9Aewpdbei7b17XpI1K/RnGOTtiq8/6p
iT3uQftW+IewOupvaH4geir2APZk5BJ8GamCfpP0mpDe4tr2PXOV8xdLtQ+a
e+h3Il77W4KwUsQvke21xrGp9kWTAy6Zap808nVzN+K48nmTE9u/Ea9tVpyK
8LqWnpvzCeerAI/g+qbx/m0Dl8/2P1z9ux1M/Puy/c9a/6r7wuWy/Y9d/9af
gctm+x+7/q0PSLWvnCsR3wv5zLmG/nfEa7V1TQnZ/mesf8U94KRs/5PXv/hn
4cRs/2PWv+XecGy2fQbJV1AqHKOx4WyvHU9MtS+l6Gzr8qkkX0cls1028nkU
n+1/2Pp3/Thhx8lL13r29TU5xb5op7a3Lp+0r3K//uR84+mfzeF+LRPTfhfM
RT8VLkH8K/Lxmp/vetqHKI2/wzfhkXBJXS98Bx4HF4ZPwHk43xA4Bs6nNR+0
J1PhaDgPPAaeAheHzxN/N/GHw8Xgxe2oC+jD9L+C/BzifgWoj6/p+w/7n+oP
E/8l7P2xT6K+VaO8JmHvB58hfj3ij4f7wr/BNeGxcCmOv8bx/5LfCRxfGs5F
fkaTn8lwIfh37LlJ/3k4P3wYvkf72B/OrWcNvgFnw7ngnfregLPgPLr3Kh/4
CTif6qK+d+A+cE74V/gyHILLwAU4/1jO/z58l/xuwL4Fe3u4IPZjcC7yMwgu
oPZG+cf+NJxD7R98Cu6q9yfHb4L3wp3gO/q+oTzb6t8BMuAxz+HU3M23anot
xrMhrw3Smow++t6nvILYR2N/Aq4HF+V5eQ7uCueFp/O93xPuAufR8wR3h7vB
+eAP4SfhDvBd2ocxcBc4Ay7wkH1/9oNDcHF4Hvan4I7wPeK/DmfAnTU+gX0c
HIG/gD9p4L7RIrgT/C/xx2LPhGfDA7F/x/fzXHgY3FX1m/ifw3Pg17D3yM13
G9wePsrxV2lfO8KP6vsYXl6UMoFbwglwIvWlNXyP/kYT5NOa/sc3BPsulSff
5zMI6wlvJb8FKL+hcA94M5wffgHupfhwaXgY/CJci/z9w/GfwC/o/KTXAp4G
PwdXg5cQ/124OdyH57k99aEp3ELf7/AiuAXcFp7/CHVR7RscgZNV3pTPQPh5
eDbPSw7ah/fh3vBB7Mmk/6rGe2g/UpB6ddyG/x+nFdHR
          
          "]]}]}, {}, {}, {}, {}}, 
     {GrayLevel[0], Opacity[0.4], LineBox[CompressedData["
1:eJwl3HUYVcXTwPFLp3QKBqKooIKSgoSolEqDSIgdlALSICEdUvpTaRBQSUG6
Q7o7DVIsuhF5P/O8f3yfObE7OzM755w9e/befG9+WLtVkkQiMTVHIpGUjO10
yI778Cjyp08k3iSrKbAxWSJRNmUi8V6aRKJDhkTiYs5Eol2BRCJ5iURiULVE
IgVZq24iURPPPZtIPNQwkahIbn0xkdhSmp7G5HOJRNP6icRrqNAgkSiPhS8k
EqVfVq5MItGtaiJxR52iLyUST+IplFRnS+1EYhu2oqu2itZKJMaWUrZ6IvEf
rtZMJE6WTSQeJptoq1q5RKIKdmqzKtmT7pN0nULu5xOJzGzMiizYSd8OfFiS
7XTVwGL6N7NjEbmJTKrOXcqOp/+uiolEc741rccPTOLLRHzzdCLxNj8mk8cq
JxKH6TmCN7V/hB1vkdPYNpoNY7CIXx/WSSRa4yNMYsPXWCGOadVLgw7ansqG
9uSv4vi4+i3Ve1x7j6GY+BVFUmV6Kv+J85Udz8eGyWybiinIIlaPlOczWZQt
o8TqN/vHsJJdNx1bRVYWpw7a6YhvKyQSr76aSDRCQzRgVxJtvUq+IRavY5G2
Jj+jbNhD3qSjkjaeoW+BNtKI1XN8fR7PsPuw/juKI/hdGy85PlT5dXKgAraL
3zS+3nRuOjkDudj0neO5yb1VEonU+iANXmb7I00Siepka21vVGcTKqjzgP55
EPkxnL2r2T+C7M/mfuiqznK+dCEvivkf4vYBmwfxuQ1fWqOa81VxRfnPI2e1
/4f2SohnSZTCOW295dh5Mo26K9m5CsX5Uly9kiiBVHLrNz6nJvPpp/sxIvzT
b8PJ8+x+Wp+1Eq+8bMmovUzYXgP078QOXFN/BJuuk/doPy+GivPyV5Thyy4M
pqcRG4aQe+XhWG2NQ2Hn7qGjCDlLnWn8nUleLO66129p6E2LlEhuP1Vsi+tZ
21v4U5HOVPbfFa/bbC6i755AYRTXtxv5txmb0JQ/D6O0vp2q7SlowNeHxGic
visolhNtL6X7OjuWkV849qU6XyEF/Qv02SIsREr9OFW7LfidV/n1zq9DWm0X
Ui/h+uwtXp/iDXa/jnu1l178krL5uDbn8KFY9A02i8smdBCjWvY7khvtd2dn
D2xkz23tbCLn0T+KTaORU5vb2LMD27EfGbT1pdwarJ8HYQUbFmoz12uJxPe2
C9tOL+ZN9FVjrBDzy/prg3bWYyQbR+Bt9j6gjdli9plyQ1BZjO7Txlo6OvE/
Ez259GFmsh09E+n5BpOwUWy6sGUTeYcd/+FjZSY497Xyo7CCnx/ydyV5kb/n
tX8Bbfh5nL9tyYXy73txnYZV+nWQe9MQDMaXWKx/6/D3Ij0X8BW7m4hLXXZ9
abuMviqNofgMv4n7y2zJI7e3OF+Cr8UxF3OwwLFk2mrApm183orByuZqxN7I
WTHJg7y4av8KH6/hKiqKzSxxacfn/OzfFs8bjGV3ebYW1O9p6WrGjnr01kUN
fVIdX2qvadhPHhSLg+JwCK+LwWG63iC/F4uv2TYKC+lsTmdLtMBQMXiOHEbe
pOcGmmt7DH+akYfZm1H9BnS9rm56babDo+x+BJfF5BJaKvO047n0+1N0FMUP
YjYbf/NrqLL/kDnZngMD9OkSfbpGLNaiK/vrqNON3MqPwXwYgp3sT6JPdpEr
5fB49kzA3Ww7IG6HcBAD4/5HpuZHHfbURh16J2q3NnnK+W1sfIsfreXjVtt9
6ZzOvsLaHU93W8/tY/TmEKdsyB73BT4vkSvLsBS3tf0vivKzH/v64pY6a8Rr
kXbSOZcGaXHe/gntn8JJlGXfKG1XFodMcV26Hoohm3KZ2JOPPZnJPuzpi3s9
J+7BaDF53f4Y8pDYLNXmMtRUfjc9tciB6vVn74DIeTZX0qdVUBn3i8k7bM9H
HqfnGAax92V21xDbgbafkltPohd6Yow+Go2c8q61/Sfk+OM459hZTI/cJ59g
0zzyRxRlUxX2FCOLo2zcc+2XIyuw7wV+Pqi9SmRLfq8So9V4JmKujVzIiX7s
XC5W/cke+rF73APUWSyGbcmz+vI4ff3E8hj5Gf2Z+DBM/jXQj9XY9iJeQg3x
qImH+LFDmV3YGddqPN/J5GQbtraOe5ic/Me1NlRODMO50BvPRbIXe39xLW/1
nMmg3W3kNcc+lsPXyXZkFW33Y8M77Hwb99PfiN6qjk+ld5typ8kf6bssLvPI
4c4NFYNhSCIO0/g9A9ORVCzG8vVF+ZJN+SXOL0aK8Ee9G/q5s/Y64RXt1ccb
6hR0fqnzneTzV/y4T3/fj5lyZwZO0vcg206Rk52v67nzqPOD1flQnd3s3IMe
+rae4z3J7eoN48tw7GV3MnHZR65R5xu2T457G9t+Zvev+AUj2T4UDfXjW/rw
TcyI55o+vNdzZbrtpnHti+f/Is+11cV2S7r28G0bP7ZgKx5j473q34/74j7s
2N2YrP3dYroLhZS5x7kUdFShoxIq4x77admTHulQCSW1nU/fl5W3z2Cyvt+h
D2fzuw2bk7IrGx+TkT85tkaMf8Ja3OTPS+y7RabSLwP5PQB/aquYWDWTa/nl
ZRZls+JnebiLrj3YjRviPlL7N8n7tH0vhml/hfb3aG8vPqOnsXgMJfeJ/Xhx
n4DfYoxDxzFyI99na/MHPKD9i/y6jEsYzIed5F1srCcmdfGNNuvRfbfYT7Jd
13ZbsRku9l9qq43tD+jaxrdVYrsCK/GIuGZTPweyx/VId2f5M0H7W8V9C1Jr
v71j/9L5TIyZUCbu03QmYUeyyGdUx171HxX7UmJ3KeyO9yztzKGvWPSz2DV0
7jE+FkQhthYiHyPTKHNY2SM4F33g/nYb/2IhvQeQRlxby+uX6ErNr+TqbOFj
MnICPbnZOU2/PKlfd+ibndE/aEdne7xD79/ul2fxD2qw9QV1apKbYlyFlfrr
Er+z8S87Luqn7tq6RGbRVin6nsYn2jvDl+7kT/yaT/8CbNDGZDZPxRQ8op96
k4+Sf9LzB2qLywjt1iJ3ieVtumvSVV/d/+TMbeQRk7uxhL9l1Omljbe1n5CD
JWNMixIopc52vuzEDpygr4rjzfi0Mupis/rjtHXVufHkBGQUs8mOZyJ3hF4+
J0FZ/Xy/PCxHvi+Oi9RZjFIxnnUPSo906M6fxfq8B9lW7rRBc3Xms7kZeUZ/
HWbzO/z6VByb6ZcPUNH5Z3FO+cH262r/lPYK8rkQHsMpbb3m2Gkyibpr2LkW
JflSSr3SeBqZ5cNxPmchH9Z3BfA/dWaJ7ReRf+wuJ7atxewRtjygvfw4q/9W
0r8aq7BX/Z5s2kem035adJMH01230/gyHSfp6cKGU2QG8apBPmf/eZyvxB9c
9uyY75p+SJ984JlSgGxG5ol9ffKuOnlt59Z+LozGKPwp7sXZvECf5bF/N244
liLeO8i8YtRSHL+1PwU12TqVrEV+4lxvfvbBLbH6Wp+MjvEIlumDOSjNrxni
NR1b1fmRP1vIueQH6ryv7Qe1U8R2QzZU0NZn4jWdve/ybwZ5gl+/iO+veF/b
vyjzATlTuYl8mxTPJr51kevd0BV9tV2BXCRHkqqXJO512mqtbxqI+3jbFeXS
s+gtTp/iHv2TN3KFrl72/xCLM3gsngNork4xvlbV7pP64VM5kZWN2TDW9pjI
d/525d8WMom+TKC9/pysP0fzeQxW8ekjdVaTl/h2kW2X8DGfTvCtHbkoYsCv
GVjNns9iPB1ja3yFNqjLt8txf0BTfn3NvtdiDMvG5OrXpauhuin5lCLyj10P
oAabqqOfMi86Pl3b0zCQrwPQlJ5b4jdQf3yqXK94n9anT+ujj5X/V72htr9i
5z/a+JrsIBe6arcbrjk3WPnPMAR5xKIYmTfGBvHMwAhxWM+W4WSSeK6KRQ31
nqL7NTqLknMc+4Bvc8nT4rSdjTvifVl7+5V5lRyp3DAxGo5ZfK0dcUEdvI8f
XaNpxOkAPfvxKd9eEKOX5EAv24/q/0fQHu1wWB9Wizkw1+2GeC8XjwcxERPw
o2P/sbcOm9aKyxr0Vza7fFnMlwzOpcdduGD/NB/P4HeUi+sjxhHikJn9m93j
iiO7clniHsGfrDEGZWf/GF/JsfswVltvxH2UPCwOy8VgBWorv4eeOuQg9QaK
wSBMF4eqfH8R1fAA/98Vh/zkSXpOxBwIP6qLQ01xGBx5zfeicS3gU4zj11jk
4lsb+0X4XhgXHDuPGbbnk4XZtJBcgBIxLmVPSbIUyrNrq/0K5LMx/8bPh7RX
hWwV4x8xWouy7MitjTy4GwPYuSLev8he+qIn2quzRAzbkefk5sl4NxHLE5GL
8Y4T80Vy81V5+DLbqsc4HbXEozYK8GO3MnuxBylinEamJD9ma1t87jo96zof
LgdG4ELoZe9Fsg97j+njne6zGbW7i7zhWHvX9U2yA1lN2/3Z8B47342xIP2N
6X3R8W/p3a7c7+R8+q7EPCA5wrnhYjACScVhJr9nx7t7jG+iH/j6knzJHnNB
zi9FyvBHvZv6uav2uoTf2muAN9Up5Pwy5zsbd3/Nj3z6+wHMljuzcJq+h9j2
OznF+XrGNAUjJ9T5SJ297NyHXvq2flwz5A71RsT7DPazO7m4HCDXqjOF7VNj
TMy239h9HMfwOduHoVG8K+rDtzErbNSH9xkvzox3C9ufiOeX8nxMvKvbbkXX
Xr7t5Md27Ij5NDY+oP6DyI97HMuLKTH3KaZ78Lgy+ZxLSceLcZ9GNdxr/y72
ZIw5KVRGqbgX6vvy8rZczAXr+5368Ad+t2VzcnZl52MKcp1j68R4A9bH/Y8/
L7PvNplavwzm9yD8pa3iYtVcrj0oL7Mpmx2/yMO9dO2P9xvcEvfPtf9vzHlq
+34M1/5K7e/T3n4Mo6eJeAwn94v9RHGfhONinpaOE+Qmvs/R5lzk1/4Vfl3D
1bjv8mFX+MvGV8SkPqZo8xW684j95Hi3i7kysRkh9l9p6+MYK9G1nW9r47mD
NXhUXHOqnxu50IPuLvJnova3xztozDtrv4Njt+ksH9d0jH9iforO5DFPiRSo
gX3qFxT7p8XuinqXUUA7c+krrq37xK6Rc4X5+HjA1ifIJ2IeVpmjyv6M8zFm
dX9LsOlOPOvpPYi04tom5tboSsOvlPFOwccUMbdKz93snK5fntKvu/XNnugf
dKCzY4yV6D3nfnkB51GLrZXUqU1u0QebsSrmKvmdg385cVk/9dDWFTKrtkrT
VwY9tPcHX3qS6/i1ML5vYKM2vmXz9/gu5uP0Ux+yEPk3PX+hrriM1G4dcrdY
/hdzsnS9om6C/XfkzT1ikhdL+ftMXKsx7tV+EjlYOsboeDpQZxdf9mA3Tsb1
4XhzPq2Kutii/kRtXXNuEvkNMsf17XgWcie9SfmcDOX1cz55WCHGceK4RJ2l
MVevzl3uQRmRIeZ9+LNEn/ci28WcS8zrqbOAzS3IP/TXETa/y6/e4tiCX83x
vPPP4bzyQ+zX0/5p7T0e80Px3MHv2mrq2Jn4DqXuT+xch1Lx7qFeWTwTz3L5
cILP2chH9d0j+Eqd2WL7JXmJ3eXFto2YPcqWB7X3EM7pvzX0/4S1cf2q34tN
B8i7tJ8en8iDGa7bGXyZGc97erqy4Xcyo3jVJF+wXwkXjdMv4KpnxwLX9MMx
b+qZ8gjZIsafMWbXJ++pc6/te7SfF2MxBn+Jewk2L9Rn99m/FzcdSym3/kfe
I0atxHGa/e9Qm63fk3XI7s715We/mGsUqzH6ZBzGYrk+mIsy/JolXjOxXZ35
/NlGziObxXt8jIe086TtRmx4VltDxWsme9/j3yzyJL9+E99jaKbtX5VpTs5S
7puYW4lnE98+kes90B39tP1szJ/LkeTqJYt7nbba6JtXxX2i7efl0nMxjydO
fXGf/rkXzejqY/+veJfBE/EcQAt1isf9X7tP6YfeciI7G3PEvKztcdjK3278
20Ym05dJ0UF/TtGfY/k8DmviHS7eAcnLfLvMtitoz6eTfOtALo4YxPgz7pfs
Gc6XkRiBr9EW9fh2Ne4PeINfo9j3OnkwvumoX4+uRuqm5lOqyD92PYhabKoZ
Y0xlXnJ8prZnYDBfB+H1mB8Rv0H6o49yveOeoE9L66N2yt+O8bHtUew8q43R
ZEe58Il2u+O6c0OVH45huEcsipP3klPjmRHf+MRhA1tGkklj/ivmDNQrRndT
OouTP8YcFd/mkb+L00427kJD7R0I38jPlRshRiMxm6/1xOUV1McHmOcaTStO
h+g5iD58qyRGL8uB3rYLxTwkOqIDjujDF9mXzXW70fmHxaMAvsEkzHPsDnvr
smmduPwU3wiUzSFflvAlc3yHQCZcjHsRH//Cn/H9XQzG8LGqOGSJ7/PucSWQ
I+bw+JGfP9nJAewcGOMrOZYP47X1pv0J5BFxWBnPCtRVfi899cjB6g0WgyHx
ficOL/G9Ol7Gg/x/TxweIk/HO3/M1/GjhjjUEofP4jsR34ujL/pgAr/GIzff
2tp/iu9P4pJjFzHT9iKyCJuWkIvxNJuqsac0WQbPsmub/YpkRfZV5WcB7VUj
P+T3T2K0Lp7p7MirjXtxDwaxc2XMDcZck774FB3VWSqGHcjzcvN0xEksT0Uu
0p+FDyPkZkN5WDPG6KiNOuJRFw/zY58yB7AfqeR2OTI12Z6t7fCF6/Sc63yk
HPgcl0Ivey+TfeO7pj7e6z6bSbv7yFuOdXRd/xvfC8mXtD0g3vXZ+X6MBeNb
Hb0vxzd1encod4ZcSN9VcVkU75rOjRSDz5FMHH7g91zMQXKxGM/Xl+VLDuVX
OL8cqcIf9W7FPU973dBIew3xljqPOb/c+S7G3aP4kV9/P4g5cucHnKGvANv+
iOvR+frGNIWc/0yd1ursZ+cB9Na3r8Q1Q+5U7/OIEQ6yO4W4HIq5wngPYft3
MSZm2wl2n8JJfMH24Wgc+acP38UP8c0h5uSMF2eHvbZ7xHt/vJNqq7vtD+na
x7c9/NiF3SjCxgLqP4KHY27dsXsxVfv7xXQfCivzUHz/p6N6rHfAy7jPfib2
ZEFmVIl5B23nj+eNvK0Qazf0/S59OCe+lbA5Jbty8DFVzCnEegcx3oxN+I8/
1dl3h0wTc0v8HoK/tVVCrFrItYfkZQ5lc+JXeXgg4oWDuC3uX2j/v/iOqu0H
MEL7q7R/QHsHMYKe18RjJHlA7L8R98k4Kebp6DhFbub7j9qchwe1f51fN3Ej
5kn4sDveT9j4qpg0wLexnoTuvGI/Nd7tbHcQm5Fi/7W22ttuTtcOvq0X25+w
DgXF9W7188b3jHh3prur/JkU47fI6/juq/2OMY9BZ8VYF4Jn41sLnanYkQap
URP71S8k9qXF7lrM4+Jh7fxIXwlt3S92jZ17io9FUJitT8Y2mU6ZX5T9FRfY
mYQ9yZAUi+k9hHTi2lZeV6crLb9Sq7ONj6nISfTkYecM/VI03kn1zf7oH3Si
s3OMlei96H55GZfi+ztbK6tTl9ymD7Zitf66wu9c/MuNq/qpp7aukdm09Qx9
ZdFLe3/GnDG5nl+L6V+CTdqY5t48A9PxmH7qSz5OnqXnH9QXl8+1W4/cI5Z3
6K5NVwN1k7I/Ce6LtRdYxt+y6vSOcW+MqeVgWe2UibVAKK3OXr7sxz6cinGM
4y34tDrqxtgl1lNFHjk3JdZCIWt8E4z5SHIXvcljHhfP6ucH5GHFGMeJ4zJ1
lsf3FHUyuQdlQeaY9+HPUn3em+wQcy74UJ2FbG5F/qm/jrL5PX71ifd0PrVE
JedfwAXlP7NfX/u/x3oa18qTeAp/aOt1x/4kk6m7np0b8DRfyqlXAeXjW5B8
OMnnHGQhfVcQo+JeK7Zfx7ti5KvYthWzgmwpoL2HcV7/raN/A9bHtav+p2w6
RGbUfgZ0lwczXbez+DI7vhPQ0y2+i5CZxKsWWdl+FVw2Tr+E654dC13Tj+qT
lp4pBclWMf6Msbs+eV+d+23n0/79GI9x+FvcS8b3e32W3/4DuOVYKrn1JXlv
fBeNdUaxXgB12TqDrEf2iHkkfg6I7zNiNV6fTMQErNAHP+IZfv0gXrNjnZ46
C/mzg1xANo/3eG0X0M5TthuzoaK2honXbPa+H+soyFP8Oi6+J9BC278p05Kc
rdyUuF/Hs4lvPeX6p+iF/tquSC6RIynVSxH3Om211TcNxf2bGLPJpRcwUJwG
IJ/+uT/e6+jqb/+fiA+KxHMALWNMw9cXtVtUP/SREznZmCveR21PiPVv/P2E
fzvIFPoyOTrqz6n6czyfJ8Q31XiHi3dA8grfrrLtGjry6RTfOpFLIgb8+gFr
2fM5X/6HLzAKH8d4lG/X4/6At/g1mn1vkofYmFL9+nQ1Vjctn9JE/rGrAOqw
qXaMMZV52fHZ2p6Fz/g6BG/E/Ij4DY51Hsr1je+0+rSMPmofzyr1hse7GTvP
aWMs2Uku9NBuT9yIuZqYV8NI3CcWJcj7ye/imYH/icNGtnxBJovvcTFnoF4J
ul+Pudn4XhhzVHxbQJ4Rp91s3IPG2juoTJP49qPc52L0RcSKrw3EpSFeRTPM
d42mE6cj9BxGP75VFqPqcqCv7cdjbIPO6ISj8e00rm/X7aaYdxePRzAFk2Mu
2bGEtuqxaYO4rMdAZXPKl6Ux5uZLFmTFJft/8/FsrP9BhXiP5WM1ccjK/q3u
cSWRM8YF8T7Pn5zkoFiPEOMrOZYfE7X1lv1J5FFxWC0Ga1Bf+X0xz0IOibUg
sRYTM8WhBt9roSYK8P99cXiYPBPv/DFfF990xaG2OAyzXYrvJdE/3l0xiV8T
cTffPrZfjO9FccWxy5hle2ncN9m0nFwWawliDpk9ZclyeI5d2+0/Tz4X33D4
+bD2XiI/4vd6MdoQcxrsuE8b+XA/hrBzVYw34vmlL/qgszrLxLATeUFunonv
CGL5e+RifI/gw8gYs8rDOmyri3qBeNSP7/j8OKjMYRxCmphTJdOSHWOdbnwX
dZ2ed51/IQf+hyuhl71XyQHsPaWPD7rPZtbuIfK2Y51d1/+RXcjq2h4Y94/4
vhtjwfjOFeuRHf+e3p3K/UEupu9arGmJd03nvhCD/8W3MHH4kd/zMS/mIeOd
ia/VY+2Y8qucX4nU4Y96/+rnHtrrjibaaxzjYHUej/UL8Z3LuHs0Px7S3wXw
o9yZiz/jWzDb/iK/df4VY5rH4v1NnTbqHGTnIfTVtw3imiF3qfc/vnyJw+xO
KS5HYq4wfGP7tBgTs+00u8/gd/yP7SPQRD9+oA/fx9z45hBzcsaLc2y/Y7tX
fJOV5+NivY3tj+jaz7f9/NiLfbGOPOb+1X8MhZDPsfvxrfYPiumBmO+JtTzO
paajFh01UBP328/KnuzIhqox7xDzFvr+OXlbEd/q+936cG6sZ2Jzanbl5GOa
mFNwbIsYb8NWJMStRowTybTxvOL3UPyjrZJi1VKu5ZaXdymbIerJwy10bcNW
nFNvWMwZkrnj2xUGaX9prAHV3ib0p+dV8RhA7hb7r2N8gaNinoqOn2Psx/fp
2pwRPsa8Pr/+wd+4EO9KyCT2jcSkIb7XZqNYjyn238W7ne1OYvO52I+KNbQx
r0nXTr5tinUaMf+LtOKaQf1MyIhu4tNJ/hSOsa+4T8TkWHft2C90FqLjURSM
Z4H9m/ENAbfwEpu2qj8/clDsDsfzKsZ32mlKX05t5RK7V517mI8PhZ+2C5DP
ON5NuU/Qho1X3NOu4SpeiOcivV/Fu4mcrkzPNeX+iW/v/Ps7nhN0ZGPj6PiW
rK36+uUVNAgZ61fjG4K+O6LMzziKKnLkebIquUj8F2KpvroQ7yd8Tofr+qhX
rB8ls2urHH3l0Vt7f8UYlNyg/aUxp4jNbJ/J3tmYhSfY3I8sTJ6n5xwaiMkX
2n2F3CuOCfXrxLdkdZOzPxnyief9WB5j03injjFvrPXhQwXtlEP5GK+rc0CM
DuEgTscYxvGWfFoTdbFN/W+1dSPeu8nvkT3ew2MuMtaZ0ZsyxoV4Tp/ml4PP
xxjOtbFCnZWx5inG9u4/2ZEt5nz4s0x/9yU7xXwLWquziM0fkX/pr5/Z/D6/
+sZ1z6cPUcX5yrio/FD7r2j/jPaKuk6KoTj+0tYbjv1NJld3Izs3oTRfno3f
r6AicsqzU3zORT6u7x7DGHXmRB7Et6h4p9RvH4tZIbY8or1HcUH/baR/Mzbh
sPq92XQkvolrPxN6yINZ8S2OL3PivYOeT+KbCJlZvGqTVe1Xw1Vj9Cu46bkx
z/WcX5+853nyIPk+mSv29ckBertqO7f9hezOajsLvsZXeDfWobD5R32X3X42
NIz8jOtY3+QRqxbi+bn9b+TdBduTyW6O91LvU9yMNYf65St8iT764SmyIN+m
xX0Cm/n6bdyLYh0NWTvG59ppF9/Xbb8Sz8+Yw+fjd/iQ7d+T1eP5H+/6+mED
3tX2z469R84Q3/HKTYj3VWU6yvnO6IRv4tqN+4JcSeijO7GOQHsf6aNXxH+s
7Qpyqnx8qxGvHsitn3Lhfbq62z/BtuMoEWuF0Cq+ScW3Hu0W1B/vsOeOthN0
z7c9D3fxeak6GciP7ddw30jnfBm+bNJfD6t7yvnTWMaOFVgeaxmV7yE2e8g0
+ix19Fv8JkM+fCde32MzHe3o2kLe1Oe3+PUvuorF72LSjVwec9JsmhfzIvwY
LxYTMSF+TxTfCuVATjH5jZ5f43kQfS0m/eP+KxZPoAe6Y3t8f2BnDrm82fZj
tgthGr5Hf/7loeMV9lzj27J4xolPduTA5VizEO/H8WzCy3Jilz5py8cH4l7t
/CFM0v+tYw2kGD8RvzGyvYLu8nRXiDUhxhD9MFU778R9hTzO/6N8/xlv8/so
fe/EOyX/x/J9HBbzvx2fO6B95ET8XkH7y/n/Jv1V9c2/yt1U5yf9eYP8ko63
xP5NHI71uPHM5X8L8aikbOW4D9L7szj+il/wBl8LxByXHM4Z8UIjPlSLOUM+
5Ysxme1+MZ5Trj/5X7zvODcW7Rxrj3GO1RGjeqgbMtYNsbc+mYt/a/TT6vhd
UTxXYmzl2O1Ys8XGnmgqxq/FvY7tlbBKmTGOvxbzzzFGR81YR4dOMU9jvzO5
RSz7i+MAbOd/In5bFO+M6o8Nu5A75nfYtA97UUQM08ecF9nE9d0YC7U1wf17
KlmQvBHjdDEpw84f5fL39H+H/uLTD6f4Xiz6XZlk8bscXHPslLJfkw/Eugx1
f4jvaLhoe3aMnR0fxKbBMd8kZpPYMxnfYE/MKeJjMdsS9x0clWN74l4b63DU
eSL6Vb3VsRYn5szFoHOsDyLTi01bdnwc35jE+Y34Nq7/P9DPzdEMGek+RmaK
9ST8eTDW0MQalnhnIC/EOgC6PlKvgNjfLR55cJLOxWK7FEviN1zqd2fXLjKV
/kqJLhEn1/xktk6Jd9p4lsSziLyhn25o6yY6i8Np8ehCLtPGnFhHEPOh8mG0
PB+LMRiHVkipn/bRszfGxHFds/NFNvSI70dyu0B8X3LP64AcYlA91jnTdZqf
P7F7LUrF3A5+inVT2uoe30vi+Ypl6n0f95sYn4pvadfWabal18bv5BHH5ovL
AhSJ7wPaS4PUWKW/5sW4Xh68IwZvx3NZ/+TRn0XjfqDOcG19ZPsJsiR9xbGR
/yWiDbp/Y88xXIzxTKyFibXrWE/vOpznf05xyxFr/tjfO8Yk5KfkWXVuxrdL
vi2I5wOblqjbgS8dkZU9WXBcP32mv07EuiT72eL7pP5arL/WxRx8rOnRT3Xj
GwG5TX99pr2h2M3OpLFunVwd6zFirUGsE4nfBfHzKI7gFtLFdcze5mxohmVs
+E6efkc+Tv5HR+VYx8X/hdpfQP98DNNHQ7EwfoshFhOVSWE/ecwROpZZPo7m
44PxDUXd6/yeQ9cl23PJYY4PYdNnMT5k17ds+R7fYWXMgaIV3+9VfqPzG5BO
O4+pl0R/92VfH7wVa51wnzZn2n+azbPJWbjFlo7q/0veRhf1u4YOOVcIi+N9
R/yWkH+L375Yd4XX2HdIvabkt3GfVucrLODDO/ruPbyLpeL2PLks1iiplyq+
m7FzCls+Jn/h22PqN6GrhbqF4l4Va2LiXoYb4n0drZQpHd+jxbBErIOO913P
jLnxzU0Mhit7mcwTcxoYoh+WyYNtcmA7BrK/oTqDyD38GB3jRPzC/tTy4NcY
w4vbTPbMQr7IQ3E+j3PxDYL9f5K1yKbseS2gd5p2m8R6C32xh41v86Oz62K3
7X4xJmJfEe1+Q/fHnpknYo2hOOVErvhGxeflrumVWIGkjiVBMX4OirWwMaZQ
Z614LY/fN7AtV9z/ccX+xfAbl/As+8bH9RnvnezYpZ9LIZdyldjzQuRpzCPF
XACK6N/CWCYmrewvJy+IzVltnsNHyh+jpzW5QL1v2fUdVsb8qT4diAG4JiYT
+X+dvEe9vPHbMTZPZ3Mf8ky8O6jfWr0S+rA4SrC3OJLF99V4Djn/Sbzjk4Wd
L4Ir8vEyPmfX63R8QZ7UtydijWf8Nts9roLzz2Kz81tinlG8DxuDVyafcw3s
IXdjqXgWd72VQDEc0+7xeJ/Fb/gVq9nfkb2V3W+qogpKxXpwehvFPBY9VfR7
VbyAyqgUuUn3R+LYGvPZ9ZaYvI3X8SbeiPUX/Grl/IfYxK6WZAtU0OY8ufqb
XD2OY9grVx5lR8FYj4ZHUEWOPhzfvGOdVMwRoliMw+XMBqzFung2ILs4jRCj
kTEHLKaDMBAb2TBUm8NwgA2fkUPQgQ2L2HBG23/iD+xnwxPaK4xCeBxV2fBY
2MSGDnK5I4rSU0QMnsTjKIwn4nuA+lniniQnN2FjfFeMdVyoRE+mWHui3ZLa
Ham9L/A53lZvoZgvwjwsiDlj5eeTE2OeWflhyo3AcFSNtcuOfS5Pi5G39P1Z
cpH9c+Qbzl+IZ4L98+S3bL8cczGx5o980/lL5BL7F8la2pgkP9rFNwRyIqag
vf3J5CX104p9OgyMdX1karzHl2xkdgyJdYpkDlxR/m4yTzx7HM9N5kLt+J0k
mTl+D+p4VjJLrOtRPgOZEYPiPw3I9KE3vgUY099AX8dvxbtm/OYi9MfvK+J9
KdZuIS+Gs3UkPmT3CLJGfD8mP7L/P/JzfBW/f7T/JXmenv/ou4N+9N8m/8Xr
4Zd+zo7fwy8yB8rpp7vJPDgTfpG54r0g5jL1Sy7kwN3IHfvi3B8n2XZAHz0k
1vvJE/b7xRw5TqCrfjgec5P0XCB7RL+QZXAe3aNfyabsSkZHb/vJyXKOpST7
2E9BjorfPZBJUda5BPmpc3dsZ1U3i/2B9rOSFR3LTg6yn40cG+N7coj93ORz
YR852H4O8m3135a/9cTuHfJ4fH+Pb3zYhwPYjzExl6B8V/5/gm54lq5Mjg2g
KyN5QwxeIsfZf5ms4XwNcrz96rEGjI7a5ET7dciaztciJ9ivGWMNtjQgJ8fc
EVnb+UZRz37D+C6lfn3ym/iOEPntfD1ykv265N3qrydn2N9ANnR+U3yfjDEF
+Za82ErOtr+NbBRzpTEvYn9zrD9Qv4j8eU8sniQLoyjet/8UuUT9ne6bu+L/
CeRJJXIPn3PIrd3kCzGf4/iO+LaGxcr/Tp5BwxizkqewUjsXyIto4vjleO5j
hfLnyPNo7PhZ8h/kVv4ubWTA245nIjNirfJZyWx4x/EsZGasU/4r962v8Ybn
yVt4M9ZdKp/O+fR4K9YGkGlwje1vhW60dfzd0IddyteN91P+1yNroU78H4n9
2uQe7RwVt/ni9zPZVDzvyItEzKHGtwbcRld6rpM3cA23Yn0/XlP+iHrz4n2d
LE/fI3EPtf8oWTmuM+UGoA/6oS8myIP07JzJjrtiDgQZMct+BrKO6/k1129T
3LDfhGyMD+O9krwLp6IOmQFl4/5OZsXp+L8WMhP6xDo17WVFZmRHtrgXsKs3
fnO974jYsXU7+Wv85imuP2RULhPSIwPuQm/6DuqTQ7FWwzNsCf5l83+4jRbs
OBS/B/J8aY92sVbE/kGUc/4AOZkPczzn5uK0Z+Y+z+P92I292BO/04nxmnNj
2TMe42J9p/27ncuDnMiNXHiSTUf09VF016dDPHM/w0AMxqD475RYJ6S9ilgd
981Yo41ybHlDvTdRU917lL0XdyMv8qCLum08u9uigToN8SrGs7Erfd2wg85X
HKuP3TEmjXs1asT/MtCRO8YBMbcUaxjit5F0NnH+NbRRtzHZKOYs9cErZAO0
drwh+Sp2KL/P+Gc/9uIgDqB6/H6F3IMd2IWdIdlwSf9fjueA6+8qeQV/6p8b
5E3kdvw6eQ2d47olzyNnXNfkBfyh/D/k2XjOxP8rkH9FvtHf0HOwEcZFfpKN
kcxYp6y+KodnYjyI8tgf3wPRP3KAbKrPDpMD4rsWeQg/Y6D9o2TyGGPS90b8
Hpn+puRraKXd5NpPEWN3x1ORKfEMO9OS6XAyxgFkanyqndTyNg1SIR3SxjUg
v3viZ7ZtEfM35f9m8mjMdcYzCSmUS4mkSI5k6EXffrl/IOZz9PUi3GDzLdxE
c3bsi/k6ed8WbbDb/l6UjffbmCfmw2w58wNOxe9Z5PAubMMObEdtudXHuVHs
GYPR6G0/u3M5kAXZkBVF2HRIjhzGJxFj+TUAfdAPfeMbRMwfx/gWq8Qne/ye
GM+wpZ569fGyulljPXzM3cRvWJEZnWI8Lfdbo4469VAX49jYmb4u2E5nbcdq
xXdXOuvQVxcv0Zkh5oRiXQDuQnpsp7OW87Xxkbo141qJtTX64MWohw8drx52
YZvyW+T1VmyOuVdsw4uxxpfchHXYgPVxLbDhROQCssnb03G/jLGR/vkjroMY
Q8VzLcZRMXam/1fyt7iHOn48/p8jzin/M/kLsjh+lDyCMvTXlo91MIad9ci6
SCJvS+mrp1ESZVAa29m5E31i7pB8TZ/tJvtGTpC7Ym0r+tnfSyaNb8H0vRr/
RxT3FrI+Wmr3X/G+jWOO3yH/Qxl2JmVXMhx3PAmZQE/t/Ofd7Q5ux3qzeLYh
S4zd4tnFtk1i/ob830getv+J45lxS/l/cR03cQM96Nsr9/dhfswH4Sqbr+Ma
msUas1gDJu8/wofYbn8nngnfYz6SDzPZPAsn47/K5PBWbMRmbIq1FHLrU+e+
ZM/X+Aq97GdyLjPuQkZkiO94bDogRw6im9h9Kr96owd6oWeslYv5oPhWiJUx
vmd3FpRmS1X1qgXqpom15kgZ/z2FVOigbiu5/2H8PladmqgRc9Ns7BhzxdhG
58uOvRS/56OzMn1VUDXuZXSkQBIkizmF+F82Ol9wvhJaqfs8+Vz8DkQflCcr
oKXjFclnsSXW+MnrNTEfiJ+wNt6J6V9BrsRSLMeyuDbYsCd+sxfjAHm7n9wX
Y4N4PpOHkdnxg+QBtKd/B7kTGeMdndwV10ysuyS3xzgj1heSW/A0/dXk44sY
Fb6TL+EOPUX1VTE8hRIojvVxnaKXHNhANtFnm6Ov7G+JtT/Yht72t5IJ+V+T
vloxN0R/DbI6Wmj3snhfwa/xzZm8Gr+rYudN8hZ+c/wGeR3dtXM55i5wCddw
FZnkd7dYd8G2DWL+uvxfTx603zXGPvGeqtxFnMV5nMMncd3K/T34UV/PwyU2
X8FlfBDxijW48r4lWmCz/a0oE77GezMfprNtBk7EnIEc3oC1WIefYh2R3OoZ
69DY8z98Ec8l++mcS4/USIs08T2bTfvkyH50FbtP5Ff3GLegW/z/X/yuK74z
xJpWrIjxIbszoRRbyqpXDpXVvRPrrZT/N9YBx7q0+Aapbgu53xJV1XkR1TCG
je1jvgJb6aziWGVspbMMfc9EftN5M343jmu4gevYTOfTzpdGC3VLkSVxXh8U
JYuhueMlyOLYpPxCeb0IC2L+GYvxAv3zyPmYgx8xF1vYsFae/oT08nY9uS6e
B/pnE7k5xtCObyQ34GP6V5KrYgzh+BpydYwxlF9OrkBax5eRS1GS/ory8Tl8
xc4XyOdxm54n9FVhPI4nUQQr2LkK3eXASrKxPltD9rC/llyNdehp/yfyP3qq
0Fc11qLQX5mshOba/Vu8/8HPjp8jz+Jpdl4kL+EXxy+Q52Nsqp0/5e1f+AP/
4O/4ZhdrqHCAbevEvKn8/4ncb7+z43fhd+XOxHcZnMYpdKVvp9zfhTn6ei7O
s/kiLuD9iG/8f4O8b4YPsD7WC6B0XPvkBD58z7ZpOC6nV8vhNViBVViJGnKr
e/xmij0jMSKeS/GfBc6lQjKkQPJYb82mPXJkL7qIXSf52xnt0THu3/EfJJFv
cZ/A8nhvYneG+N0cW55U7yk8r+4VuXkVF3EZl2INq7rN5H5zPK9OJbyA0Wz8
mL522ELnc45VxGY6C9NXJO7pMZdDxwX8g3M4i410Pu78E2gW68HIQjF/pA8e
Jh/BB7EGi3wUG5SfKa9nYQZ+wGxUpH8aOR3f4nt8F+MhNvwoT+fFOFjeLiDn
x9hA/ywmlyCN44vIhWhD/2zyB6SKeXxyToyBYg6enBXjbMdnkNNRnP7S8rFM
rFNjZ1nymfjmTs+j+qogHsFjKIQF7FyErnJgIdlIny0hu9lfSi7G8rh32V9G
/ktPBfqexZf0lyfLoZl2T8a4GUcc/z3eIeM/cNj5J/kXjjr+B3kmxqba+U3e
HsOvOIHjSC+/O2Ef29aK+Wvyfw25135Hx9PFu4Fyv+AwjuIIOtO3Xe7viDlV
ff0D/mHzOZzFe+xYJ8ffkffv4V2sid+g4um41mPdNh++Zdt3MYaT08vk8PL4
nWN8n4k11PG7r1h7Ff/vwZ5hGBrPpVgD51xS/CenE+Qd8jE27Yr5G3SO9aOO
tUNrtEUbHBfPkhGn+L4Q85jsTh/fl9nykHoFYpyh7l9y82+cwZ/x+yK0Vvd9
uf8BysfvBlABo9jYJr4HYzOd5eK/emJem8789D0Y4xg6T8d/CuAETuEk1tOZ
z/kH8H78XoS8D2f1QR4yL96L/2ci74n5IOW/kdeTMQlTMSXWp9A/gZyIsRiP
cfEewIZv5OlkJJe3U8kpMb7XP9+T0+Id0vHvyG/xEf3jyQkxhnZ8EjkRv8Y3
fnIcksZ/uZCjUZT+p+Rj0fhNFTuLx/x/fH+m50F99RDy42EUwCx2/hD3Jjkw
m2yoz+aSne3/SM7BfHSxPy+emfSUou9pfEF/SbIEPoj5qrj345Djv8b9HiXZ
eTzGEzjs+LEYB8XYNN5X5e0B7MMhHERa+d0Be9i2WsybxNwhudt+e8fTxDnl
9mIndmNXfO+lb6vc3xa/B9bXs/Anm//GX3iXHavl+Jvy/m28hRX2V6FUPPvI
cXyYwrapYWOsu4p1N/E7TyyINeTxm0e51SX+S5M9QzA4nkv2/43/RcQN3MJN
FGLTDjmyE51ijt2xj9ACrdASx+J7k/ZKYGnMt8V6wvgdBFvmq7cg7rfqvqXs
23gdb8balXiXVreH3O8Z6w/U6YaumMrGgfQNwn46OzvWCb/FvZe+eZHb8a5H
R1M0QhM0jnUxdM5xfi56qPsDORsLUT2f+3d6+yncc5MmEjmTsNXlPiqbfiFT
IxVSQpFEciRL/P9/Uv8ffSvqIQ==
       "]], LineBox[CompressedData["
1:eJwl3HXcFsXXx/GLRhEQbKS7U6W7U7q7QUpKQhoVkBKlURBEGikRDEIB82cX
DYI0KAagEs/7vJ4/Pq/vzuzsmTNnzrUxu/edo+vApgOSJBKJfzIkElltdLSd
IVki0YneSarOdmfbF/GEcqGUiUT3dIlEt7yJxOXHE4mHaiUSD6NnjUQiE30E
+8okEgvbJhKLsABLsBiVqiUS8+h8vIy5eAUHnlCuaxuJmtrQuThWnh26CEnU
L6DzMZD9WXQ27uh3Dn0JR7WfQWfitvrp9EU0Yn9ObX1gvfq59BVkKGts7RKJ
LuiEbuiKdNUTiXvxaodEIj3tWTqRyEhfU76PZsADWKp8P83IzgL2FmID+/Pp
PAzXb3P9t8B19a1oS9TiZ1vaDjfUt6GtY2z66dqKH+iCHuiO/BXYxt98uyTm
fSuaD/qX8gL1+dBJu85oj47ogHnsnWmeSJzFx40TiU+QwQTfh4wYwo+/qyQS
U9uIE6bhD+W/UNPY/qTrjGF3nURiDy4b641mcgV/4zquoW05MbVvC3+2YSte
Ua5oXyWUQwWURxk+XZYjV/C8fNjUNJHYjA14Cxtxxfw21F8jfCw+ufidEw35
ssFxG9HLsW20bYuWaI1WmOLYsS0SiXEY7pgReAYr+TiFvan4gc1h6obiOJvr
2FsfOcxmczZaoAmaoSmOsrnG/rUY59jVdBWSOXYFfQNj1b9JV+KI9hnEICPu
xf24Dz3YT0fTIw3S4h4cY6dZPX2juDxvSVvgmvlpQ9uihPrWtBVeYP9J2hjF
1DelTfC39g1pIxRV34DWRwP2p8nHF7GWnzPodKSXt+303x5t0REdkNLcpcYi
OZCK9jBnd9PFymnoXUiLJcr3xG+FndnsvYR17M+iMzFMvw3kdUP8rf7J+C2i
Jj+b0ma4pr4JbRy/ef20lrdt0Art0BZ55fd8/Mm3C/K+j/w/T/9Qnqc+D1po
1xJN0RzN8Ap7p+X+r9hvrg8gnby/F+kxmB9X5fjz8n4KXsAV5d9Rw9h+o2uN
4QM5swuXjPVPOfwXfscfuIo2cutl+97iz2ZswhzlMvaVxeMojSdC+XRRjlzC
c/Jhnfxaj9VYizW4bH7r668BDohPDn5nR32+vO645eju2Ce1bYwGaISGeN6x
z8r9MXjaMUMwGG/w8Xn2XsD3bA5SNxBH2VzK3jJ0Y7MeG/VRG3VRB4fZfNX+
1zDGsUvoYiR17Hy6AM+qX0QX4pD2qcQgdeQS7sZdcW5lPzlNgSRIhqQ4wk51
eVoDheVtLVoTf5mfurQeiqivQ2vjOfYr0yoopL4arYo/ta9IK6Gg+gq0fBzP
/kT5OAmr+fkcnYy08ral/luhBdqgNW7zM2H+5suBO7a7m7OkyguUk9EkSIGF
yslpOnamsDcVa9h/gT6PofqtEfmOP9XXjnM/avCzHq2Pv9TXpXXwsn4aydsn
0RBN0Bi55fdcXOXbOXnfW/6fpb/HeVZ9LtTXrgHqoB7qYg57v8j9U/jIXO9D
GnmfFvfgaX5cluOT5P1zmIwLypdQ3dgu0jXG8J6ceR8XjfWKHP4NF3EZl9Ba
br1k33r+bMQGzFYuZd9jKI6SKBG/AT6dlyMXMFls35Rfq7ACK/EGLpnfuvqr
h/3ik43fWVGXL3MdNw9dHFtT21qohhqojsmOHSX3R6OfYwagP1bwcTJ7z+E7
Np9S1xeH496DvVfQmc0qbFRFRVRGJRxk8yX752C0Y2fTWUji2BfpdIxSP5PO
wM/a33Jfcxs3kRCPO7QT+//S/3Ad/+AGDrFTSp4+hvzy9gn6OP4wP2VpORRQ
X4aWxiT2i8W1AvnUl4zrA65qXyTO/cirvnD8PlCH/VHycTTe5OcY+izSyNsm
fGuKxmiOZrjGzxt4RQ5cp93M2b90rvJ/9B/cins55Zv0HnbGszcBq9gfR8di
iH4ryOuKuKq+Mq2E6vysFoo/1FelVeIeTj815G1NVEdt1EJO+f0yfuPbGXnf
S/7/Sq/EeVZ9DlTVrhoqoQoqYzZ7J+T+Sew11x8itby/G3dhED/Oy/Hx8n4i
JuCM8jlUM7azdLUx7JQz7+KCnD4vhy/gDM7hLFrJrVn2reHPOqzFTOWi9hVD
IRRB4bgW8OmsHDmHSWL3uvxajtewDEtx0fzW1l8d7BOfLPzOjNp8meq4aejo
2PLaVkAZlENZTHTsCLk/Er0c0we9sZyPE9mbhG/Z7KmuBw6y+QJ7U9CBzSfY
KI1SeByP4Sc2n4v7NYx07OTwvVY8EJhrOh4j1E+kE/Cj9n/K67/wB67hb7Rn
/3d6FZfxG67gZ3ZyydPcgbzNS/Pgd/NTIM7lUVafP/IdE9jPRrMjl/qcNAd+
0z4LzYqc6jPTR1GL/cGRj3gj7v3i3Iy75G0Dc9UQ9fEkGuFK+ImX4h6AdjVn
f9A5cU9Mr+JvvKz8F72bnRHsjcRK9p+Je38M1u9j8vpx/Ka+NH0C1fhZjpbH
7+rL0jKYpZ9y8rY8yqIiKiC7/H4Jl/l2Wt73lP+n6KU4z6rPhtLalcFjeAKP
YyZ7x+T+cew213uQQt6nQkoM5MevcnyMvB+HsfhF+TSqGtspusoY3pEzO3Be
Tp+Ww7/iJE7hF7SUWzPse5M/q7EK05UL2FcQeZEf+eJ6wKdf5cgZTBS7JfLr
VSzEYizCBfNbU3+18JH4PMrvTKjJlzFxr412ji2hbUkURXEUw3jHDpf7z6Cr
Y7qjG17n43j2JuAbNruo64yf2Bwd9y9oy2ZhNoqgAAqhIH5gc2Sc4/GMY0eE
4o45GEKHYrj64XQYvtf+vLy+gHO4hItow/4Zehan8CtO40c+3CdP74+clrcP
0gdwxfw8QjNFfqt/mD6Eceynp/cim/qMNAMua5+WpovfgPp7aJq4r2K/r3x8
Csv52Z/2Qyp5W9tc1UEt1EPdOMfy8xxmxjmQdjFnF+isuCeg53EZs5Uv0dTs
DGLvaaxgfyAdEGX9FpbXRXBZfTFaFFX5WZKWwhX1JWhxzNBPcXlbAsVQCiWR
VX7PwkW+/SLmPeT/SXohzrPqs6CIdkVREIVRCNPZOyL3j+IDc70LSeV9ciTD
AH6clOOj5P2zGI1jyidQxdiO0zeN4W05sx3n5PRxOXwCR3AMR9FCbr1o3wr+
rMQbmKac2748yIFcyIlSfDolR07HuVLs5suvBXgF8zAX581vdf3VwIfi8wi/
H0Z1vjztuMFo7dh82uZHbuRFHox17FC5PwwdHNMJHbGMj2PZG4ev2Wyvrh1+
YHMge4PQis2cbORCNuRAdnzHZn/7B0R+O7YffQq341pMe8dvQH1f2gffan9c
Xp/AMfyCk2jJ/hF6FAdxOO598D0fksnT5Mgsb1PSFLhkfu6idyOL+tQ0Fcaw
fyfWiuL8rj4pTYKL2t+KtR9kUn+T/hfnW/a7ysduWMbPHrQ7UsjbauaqOqqi
JmrE8zg/T+DFyAHaOe6j6fQ4J9KT+BUzlE/TlOz0Zq8PXme/F+2JQfrNrf88
uKg+H80b9zr8LEgL4ZL6AjR/rFXpJ6+8zYc8KBBrP8gsv2fgPN9OiHl3+X+c
novzrPpH4xkgnhPiWhH3S8iBaewdkvuH8Z65fh93+JwkFvnQnx9H5fgz8n4k
RuCQ8hFU1u4wXWkMW+XMNpyV04fk8GH8hIP4Gc3l1lT7lvFnOV7HFOVs9mVH
ZmRFlngO4NNJOfJL3DfENVV+vYxZeAmzcS7yx/4T8YwsPsfoUVTlSz5jn2hs
kzEpnveNYRM/N2MD3sLjfN9IW+vro6p+B8r7aG51jxhjJjyIh/EQntDfWna/
Z+9H/BDrD2K6Rt2a9q5pdETcB9J1yu/SNvZf0e43XMRlXIq5Y6uG315NHBbv
I7hfrB/EA9jE3wf58pl+v8DnuE/5AdSO9US6WF/l9bGQvcVYFGuBjnuf/x9g
J95Dae3fpcvjvkH7edotwPx4BuRfWXVz+VuG3pIv1+j7ytdpN/v/oR8o36Cr
+X2T7la+Rbvb/x/dpfwvbaaPVebrGX2ujuc2rMUI5TX0muOzyvlsmBX3rDQz
ehtLfloAc9QXogVxQ/uitFisy6ovQgujuX5y0zyxnhS/GZoX17XPSXNhdqyJ
0Ox4kP0ETYIp6pPRpLga94jyMDuyIidyYCFfF2MwvxfRxvp7lQ5Rfi3uR7AM
Q5WX0j/YSRnXyni+Zz8FTY6u+s3sN5sF5+MZlWZFZfOUk+bChfCTZsdU/WQ2
L1nwKLLFdQ2ZxPlFnI3zjjnKK9ZH6Zm4hqh/BL9ijHk4Taew8zedqHyNVsBf
mKD8J+3CrzRsvKB8D62iLh2dopyWLnb8XfRuVLYvNX3evlT0fsdmobOUs9Ka
9mens5Wz0aWOzUXnKOemtezPSV9SzkF7OL6n/G0pdr3oqcrG0tq4cAhHcBiv
RSy0H2f8EzAeNeI8pm4mW5noTTGoEDmtXJHWt78yna9cia5go1r8RpSr0wbx
DEgXKFehW/hShy5RrksbxRoJfVW5Hn3D8bUiHsq1aUP7a9JFyjVoZsd/STcp
f0Xb2/8N3az8dfw+5MX3dKvyD7SD/d9Fv8rf0o8cX0b+9BGLsrR0PK+hr3I5
+oHjf3SN+gk15Uk9esSYH3CeO0zrKtdQ/wP9Hu9rf5FeQjv1F+h5fKiff+i/
6KT+Jv0Pu7W/Tm+go/pr9G88qn2SWLuLNRT1yWMdG3tjzY6mRlf1KWmKeJej
/TzXj/no+KRrITphT1yD2UvEuon2t23fQirtd6jbGfc36t+j7+K49rvo7rjv
V/8BfR8ntd9H98d6kPqP6YE492v/If0onjXV76V7Yo1S+zfiOQub1K+KNQ3c
7xq8NtafsVn9mljri3cy5vkp9wb9UJJ/A2j/WFMxXyPN1ShUlau30cO9SC/0
RHn9n5aXv+IUzuJMXBv8vp/ze34et+JZmE5CT351pl3wr/putCs6a9+T9op7
kbj3oN3RN847/HsNb6lfRpfiPuNYTJdgo/oGDdlUt0j5mO3itK1yfdvtaAnl
0uZjvZzqoNyjgVyl65SnGe8G2sAYO6nraV9nesO16R9cxxXlD8zt+3GPEHOs
/J36u1zTe7JbUvnhRs5DyITDyu+qv2a82+XyTtuPqu9Ne+FPNHRNKm5fIzrd
OWCf3/z++N2zvxR/x3qX695ftCmdo10T+jIdUt+5GUnE7cVK8p3v0+hs19H2
bHdAWv1to9v08Uvcn9vejnvUp0E72wX5WTR8FudFxpNVeSHNQi/Ry/jaOfYr
fCFOFcWpiH3txagwrRBxo8/QgX7Pb/JjUFwH5c1SeTDY9mv0aZpHH5fNwxVs
N2e/x/XLtf63eA8oj9I04Rvuxl24zK+3xTetce2J8zTdFfdL8VvmTwO5WB/F
5eEo5ZF4yP3Xk2LXQruz7pH2G2O3eJ6Nd29yYTzNqc+u6laxf1S8vhPD4eyX
tV2vpZzVpprxpTKm3mynjvMTfVL/KW2nQFX7k0c9O73RWGx+U/c7jts+Fuel
eP40jsX2L8HPxvwafRWtxbUVWuJL/S/Tbz3b9XFOP2nN2Xn6tX2b+f0VnRi/
Dds38aGYfYStbO6P670x7aNZ9VlQn4VQAPkxyjjXOn6r3NqGfuLTHyPFcWw8
M7Pxv7j20y/jXYSYLpRbixwzLK55yof5/GbknfIT8byh7eO0lXxsjZZYaf/3
7B+Xy+fZv4CLKMLWGnPfih837LuHj6XYPGq7qLzYZl9W21tpEeVetkfxbYLt
VfqbSJvLpy3yaCvewmZsirUfx7TV7zHbx3EUW7QvyUZWMSxBq+hvZzz/iOcG
2+XUradJlPvJ3Ybi2Z/uiLVe+bLRvhx8/ky7b4znc/ot/VKbDvp6Sp+P8usL
9dP1VdT2H3HNV75K15rDdViFNViNazjk+L3isSfWmdBV+US8f6XfiPsweiDW
32hjPg2lHytPFLeifPqMv7f19TndLvZL+Pg2fVgsWxvfXDH70DzMi/eY7E/F
WD7t4vsY+mc8+8nt/HJlunEsM6cdte+E+fJvAbqyN5LdLnSu8jwswkIUiGfl
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
//+/z/8BE47uoQ==
       "]]}}]},
  AspectRatio->1,
  Epilog->{
    InsetBox[
     FormBox["\"YA XAa stable\"", TraditionalForm], {1.6, 0.9}], 
    InsetBox[
     FormBox["\"YA XAa stable\"", TraditionalForm], {0.5, 0.75}], 
    InsetBox[
     FormBox["\"Ya XAa stable\"", TraditionalForm], {0.75, 0.5}], 
    GeometricTransformationBox[
     InsetBox[
      FormBox["\"Ya XAa stable\"", TraditionalForm], {0.9, 1.5}], {{{0, -1}, {
      1, 0}}, Center}], 
    InsetBox[
     FormBox["\"Ya XA stable\"", TraditionalForm], {0.25, 0.9}], 
    InsetBox[
     FormBox["\"YA Xa stable\"", TraditionalForm], {0.8, 0.15}], 
    GeometricTransformationBox[
     InsetBox[
      FormBox["\"Ya Xa stable\"", TraditionalForm], {1.1, 0.9}], {{{0, -1}, {
      1, 0}}, Center}], 
    InsetBox[
     FormBox["\"YA XA stable\"", TraditionalForm], {0.9, 1.1}]},
  Frame->True,
  FrameLabel->{
    FormBox[
    "\"\\!\\(\\*SubscriptBox[\\(W\\), \\(aa\\)]\\)\"", TraditionalForm], 
    FormBox[
    "\"\\!\\(\\*SubscriptBox[\\(W\\), \\(AA\\)]\\)\"", TraditionalForm]},
  Method->{"TransparentPolygonMesh" -> True, "AxesInFront" -> True},
  PlotLabel->FormBox[
   "\"\\!\\(\\*SubscriptBox[\\(W\\), \\(Aa\\)]\\)=1, \
\\!\\(\\*SubscriptBox[\\(W\\), \\(a\\)]\\)=\\!\\(\\*SubscriptBox[\\(W\\), \
\\(A\\)]\\)=1, \[Alpha]=1/2, \
\\!\\(\\*\\nStyleBox[\\\"r\\\",\\nFontSlant->\\\"Italic\\\"]\\)=0\"", 
    TraditionalForm],
  PlotRange->{{0, 2}, {0, 2}},
  PlotRangeClipping->True,
  PlotRangePadding->None]], "Output",
 CellChangeTimes->{
  3.697911088116672*^9, {3.697911162077824*^9, 3.697911235727847*^9}, {
   3.69791130576336*^9, 3.697911351607232*^9}, {3.697911799570928*^9, 
   3.697911815977784*^9}, {3.697911896517908*^9, 3.6979119184970417`*^9}, 
   3.697911972990937*^9, 3.697912075561558*^9, 3.6979121334853477`*^9, {
   3.6979121869308157`*^9, 3.697912191598274*^9}, {3.697912271224947*^9, 
   3.697912439958119*^9}, 3.697912778763857*^9, 3.697914454264285*^9, 
   3.69791450695636*^9, {3.697915986585332*^9, 3.6979159962694273`*^9}, 
   3.697916036489069*^9, 3.69791612761257*^9, 3.697920260505817*^9, {
   3.697920312940867*^9, 3.6979203159887867`*^9}, {3.6979203580111923`*^9, 
   3.6979203956148367`*^9}, {3.697920443038228*^9, 3.697920463175959*^9}, 
   3.69792052063496*^9, {3.697920554221393*^9, 3.697920560701068*^9}, {
   3.6979206036405497`*^9, 3.697920637145103*^9}, 3.6979213396960707`*^9, 
   3.6979217739203568`*^9, 3.697926106472251*^9, 3.697989523968059*^9, 
   3.697989690271475*^9, 3.698432329428095*^9, 3.698586430408536*^9, 
   3.699207854110696*^9, 3.704482362175095*^9, 3.7069926392418833`*^9, 
   3.7082631976103373`*^9, 3.708347369582749*^9, 3.710707803437701*^9, 
   3.710792211484329*^9, 3.710868279876498*^9, 3.711370731985477*^9, 
   3.7114748311000032`*^9, 3.711795888497562*^9, 3.712482563944323*^9, 
   3.71249072194592*^9, 3.712496896443645*^9, 3.7125589216115026`*^9, 
   3.712575747121786*^9, 3.713012246099496*^9, 3.7131777294959297`*^9, 
   3.715112415492352*^9},
 ExpressionUUID -> "393f317d-fcb2-412f-a93d-3a188b57ce3b"]
}, Open  ]]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Invasion (tight linkage between X and A; r=0) [ENTER]", "Section",
 CellChangeTimes->{{3.697913371599511*^9, 3.697913374750823*^9}, {
   3.697914058443087*^9, 3.6979140588116703`*^9}, 
   3.708347319375119*^9},ExpressionUUID->"29f17aa7-9f28-47de-bf6c-\
149eddafc506"],

Cell[CellGroupData[{

Cell["General", "Subsection",
 CellChangeTimes->{{3.697913444939024*^9, 
  3.697913445593615*^9}},ExpressionUUID->"d1a7f3f0-bdcd-43f0-851a-\
504999e56dfc"],

Cell["Jacobian for the mutants", "Text",
 CellChangeTimes->{{3.6979134527701473`*^9, 
  3.69791346081811*^9}},ExpressionUUID->"e7902c35-608e-4e7f-83db-\
212dd9f1c99f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"eqsmut", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"ParallelTable", "[", 
            RowBox[{
             SubscriptBox["fHapNext", 
              RowBox[{"x", ",", "y", ",", "m", ",", "sex"}]], ",", 
             RowBox[{"{", 
              RowBox[{"sex", ",", 
               RowBox[{"{", 
                RowBox[{"male", ",", "female"}], "}"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"y", ",", 
               RowBox[{"{", 
                RowBox[{"A", ",", "a"}], "}"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"x", ",", 
               RowBox[{"{", 
                RowBox[{"X", ",", "Y"}], "}"}]}], "}"}]}], "]"}], "/.", 
           "sumsex"}], "/.", "invXY"}], "/.", "pseg0"}], "/.", "pseg1"}], "/.",
        "pseg2"}], "/.", "pseg3"}], "/.", "pseg4"}], "//", "Flatten"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"matExtFull", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"ParallelTable", "[", 
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{"eqsmut", ",", 
            SubscriptBox["fHap", 
             RowBox[{"x", ",", "y", ",", "m", ",", "sex"}]]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"sex", ",", 
            RowBox[{"{", 
             RowBox[{"male", ",", "female"}], "}"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"y", ",", 
            RowBox[{"{", 
             RowBox[{"A", ",", "a"}], "}"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", 
            RowBox[{"{", 
             RowBox[{"X", ",", "Y"}], "}"}]}], "}"}]}], "]"}], ",", "2"}], 
       "]"}], "]"}], "/.", "subequil"}], "//", "Factor"}]}], ";"}]}], "Input",\

 CellChangeTimes->{{3.697913402044807*^9, 3.697913424146625*^9}},
 ExpressionUUID -> "eac2fc75-0578-4739-adf3-bb4e470bb411"],

Cell["Characteristic polynomial", "Text",
 CellChangeTimes->{{3.69791346676231*^9, 
  3.697913497267357*^9}},ExpressionUUID->"0fca9e83-53ef-4055-b21c-\
d36cbc937812"],

Cell[BoxData[
 RowBox[{
  RowBox[{"charpolyExt", "=", 
   RowBox[{"Det", "[", 
    RowBox[{"matExtFull", "-", 
     RowBox[{
      RowBox[{"IdentityMatrix", "[", "8", "]"}], "*", "\[Lambda]"}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.697913564151082*^9, 3.697913564319689*^9}},
 ExpressionUUID -> "27390115-e067-428b-a009-424c96dfe18c"]
}, Closed]],

Cell[CellGroupData[{

Cell["Equilibrium YA XA", "Subsection",
 CellChangeTimes->{{3.697913773952116*^9, 3.697913784399803*^9}, {
   3.6979148752917624`*^9, 3.697914875779706*^9}, 
   3.6979247219721622`*^9},ExpressionUUID->"c44505dd-773e-4fd3-8ae7-\
0fa2efc7dabe"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"YAXAExtEigs", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{"0", "==", 
       RowBox[{"Normal", "[", 
        RowBox[{"Series", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"charpolyExt", "/.", 
             RowBox[{"k", "\[Rule]", "1"}]}], "/.", "weakrecAX"}], "/.", 
           "eqr0YAXA"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Epsilon]", ",", "0", ",", "0"}], "}"}]}], "]"}], 
        "]"}]}], ",", "\[Lambda]"}], "]"}], ",", "posassumps"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6979135683753853`*^9, 3.697913568971593*^9}, {
  3.69791359937243*^9, 3.6979136604360247`*^9}, {3.697914180004593*^9, 
  3.697914184507428*^9}},
 ExpressionUUID -> "4386aa60-b797-47cf-8372-47d7475b99cb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Lambda]", "\[Rule]", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Lambda]", "\[Rule]", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Lambda]", "\[Rule]", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Lambda]", "\[Rule]", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Lambda]", "\[Rule]", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Lambda]", "\[Rule]", 
     RowBox[{"1", "-", "recAMnotAX"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Lambda]", "\[Rule]", 
     FractionBox[
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "recAMnotAX"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SubscriptBox["\[Alpha]", "female"]}], ")"}], " ", 
       SubscriptBox["wHap", 
        RowBox[{"a", ",", "female"}]], " ", 
       SubscriptBox["wDip", 
        RowBox[{"a", ",", "A", ",", "female"}]]}], 
      RowBox[{
       SubscriptBox["wHap", 
        RowBox[{"A", ",", "female"}]], " ", 
       SubscriptBox["wDip", 
        RowBox[{"A", ",", "A", ",", "female"}]]}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Lambda]", "\[Rule]", 
     FractionBox[
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "recAMnotAX"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SubscriptBox["\[Alpha]", "female"]}], ")"}], " ", 
       SubscriptBox["wHap", 
        RowBox[{"a", ",", "female"}]], " ", 
       SubscriptBox["wDip", 
        RowBox[{"a", ",", "A", ",", "female"}]]}], 
      RowBox[{
       SubscriptBox["wHap", 
        RowBox[{"A", ",", "female"}]], " ", 
       SubscriptBox["wDip", 
        RowBox[{"A", ",", "A", ",", "female"}]]}]]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.697913595909998*^9, 3.697913662019691*^9}, 
   3.6979141894573307`*^9, 3.697921076836198*^9, 3.697989657783074*^9, 
   3.698432474019368*^9, 3.698502597218955*^9, 3.698586554395389*^9, 
   3.69875904252931*^9, 3.699207980230482*^9, 3.704224202835737*^9, 
   3.706992799034769*^9, 3.708263337933819*^9, 3.7083475065001698`*^9, 
   3.710707937024077*^9, 3.710792382569145*^9, 3.710868431391266*^9, 
   3.7113708581176434`*^9, 3.711474991950938*^9, 3.711796052090044*^9, 
   3.712482725354911*^9, 3.7124908801191597`*^9, 3.71249705291529*^9, 
   3.712559086354368*^9, 3.712575901605401*^9, 3.713012404085081*^9, 
   3.713177885504973*^9, 3.715112547745583*^9},
 ExpressionUUID -> "cf5720b5-5b60-4228-8740-481c7b8f00a0"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Equilibrium Ya Xa", "Subsection",
 CellChangeTimes->{{3.697913773952116*^9, 3.69791379297598*^9}, {
   3.697914879284156*^9, 3.697914879628162*^9}, 
   3.697924720716283*^9},ExpressionUUID->"00d4c58f-7f99-4e95-bbb0-\
f35d92247574"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"YaXaExtEigs", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{"0", "==", 
       RowBox[{"Normal", "[", 
        RowBox[{"Series", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"charpolyExt", "/.", 
             RowBox[{"k", "\[Rule]", "1"}]}], "/.", "weakrecAX"}], "/.", 
           "eqr0YaXa"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Epsilon]", ",", "0", ",", "0"}], "}"}]}], "]"}], 
        "]"}]}], ",", "\[Lambda]"}], "]"}], ",", "posassumps"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6979135683753853`*^9, 3.697913568971593*^9}, {
  3.69791359937243*^9, 3.6979136604360247`*^9}, {3.6979137955369453`*^9, 
  3.697913796968976*^9}, {3.6979142838467283`*^9, 3.697914289372945*^9}},
 ExpressionUUID -> "532f743e-6de5-4357-b5d5-5f89c0d4c230"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Lambda]", "\[Rule]", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Lambda]", "\[Rule]", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Lambda]", "\[Rule]", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Lambda]", "\[Rule]", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Lambda]", "\[Rule]", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Lambda]", "\[Rule]", 
     RowBox[{"1", "-", "recAMnotAX"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Lambda]", "\[Rule]", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "recAMnotAX"}], ")"}], " ", 
        SubscriptBox["\[Alpha]", "female"], " ", 
        SubscriptBox["wHap", 
         RowBox[{"A", ",", "female"}]], " ", 
        SubscriptBox["wDip", 
         RowBox[{"A", ",", "a", ",", "female"}]]}], 
       RowBox[{
        SubscriptBox["wHap", 
         RowBox[{"a", ",", "female"}]], " ", 
        SubscriptBox["wDip", 
         RowBox[{"a", ",", "a", ",", "female"}]]}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Lambda]", "\[Rule]", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "recAMnotAX"}], ")"}], " ", 
        SubscriptBox["\[Alpha]", "female"], " ", 
        SubscriptBox["wHap", 
         RowBox[{"A", ",", "female"}]], " ", 
        SubscriptBox["wDip", 
         RowBox[{"A", ",", "a", ",", "female"}]]}], 
       RowBox[{
        SubscriptBox["wHap", 
         RowBox[{"a", ",", "female"}]], " ", 
        SubscriptBox["wDip", 
         RowBox[{"a", ",", "a", ",", "female"}]]}]]}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.697913595909998*^9, 3.697913662019691*^9}, 
   3.697913798235928*^9, 3.697914293130905*^9, 3.697921103543881*^9, 
   3.6979896586376867`*^9, 3.698432474859983*^9, 3.698502598089723*^9, 
   3.698586555253858*^9, 3.698759043366404*^9, 3.699207981149522*^9, 
   3.704224203706717*^9, 3.7069927999117107`*^9, 3.708263338804599*^9, 
   3.708347507352676*^9, 3.710707937920162*^9, 3.71079238371278*^9, 
   3.710868432327278*^9, 3.711370858975709*^9, 3.7114749930048857`*^9, 
   3.711796053160524*^9, 3.712482726500489*^9, 3.712490881209971*^9, 
   3.712497053835462*^9, 3.712559087318303*^9, 3.712575902670038*^9, 
   3.713012405169939*^9, 3.713177886568228*^9, 3.715112548645543*^9},
 ExpressionUUID -> "12c87db5-51cc-4424-8690-93ab987e5d71"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Equilibrium YA Xa", "Subsection",
 CellChangeTimes->{{3.697913773952116*^9, 3.6979138107603207`*^9}, {
   3.697914880683963*^9, 3.6979148827639914`*^9}, 
   3.6979247194443398`*^9},ExpressionUUID->"6ac60eff-f6bd-4461-8bfc-\
59e78bb2fc1f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"YAXaExtEigs", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{"0", "==", 
       RowBox[{"Normal", "[", 
        RowBox[{"Series", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"charpolyExt", "/.", 
             RowBox[{"k", "\[Rule]", "1"}]}], "/.", "weakrecAX"}], "/.", 
           "eqr0YAXa"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Epsilon]", ",", "0", ",", "0"}], "}"}]}], "]"}], 
        "]"}]}], ",", "\[Lambda]"}], "]"}], ",", "posassumps"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6979135683753853`*^9, 3.697913568971593*^9}, {
  3.69791359937243*^9, 3.6979136604360247`*^9}, {3.6979137955369453`*^9, 
  3.6979138131944838`*^9}, {3.697914525850132*^9, 3.6979145270388203`*^9}},
 ExpressionUUID -> "18da0a12-72b8-480b-bb4d-0ee85564946d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Lambda]", "\[Rule]", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Lambda]", "\[Rule]", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Lambda]", "\[Rule]", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Lambda]", "\[Rule]", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Lambda]", "\[Rule]", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "recAMnotAX"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SubscriptBox["\[Alpha]", "male"]}], ")"}], " ", 
           SubscriptBox["wHap", 
            RowBox[{"a", ",", "male"}]], " ", 
           SubscriptBox["wDip", 
            RowBox[{"a", ",", "a", ",", "female"}]]}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SubscriptBox["\[Alpha]", "female"]}], ")"}], " ", 
           SubscriptBox["\[Alpha]", "male"], " ", 
           SubscriptBox["wHap", 
            RowBox[{"A", ",", "male"}]], " ", 
           SubscriptBox["wDip", 
            RowBox[{"a", ",", "A", ",", "female"}]]}]}], ")"}]}], 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SubscriptBox["\[Alpha]", "male"]}], ")"}], " ", 
        SubscriptBox["wHap", 
         RowBox[{"a", ",", "male"}]], " ", 
        SubscriptBox["wDip", 
         RowBox[{"a", ",", "a", ",", "female"}]]}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Lambda]", "\[Rule]", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "recAMnotAX"}], ")"}], " ", 
        SubscriptBox["wHap", 
         RowBox[{"A", ",", "female"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", 
           SubscriptBox["\[Alpha]", "female"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SubscriptBox["\[Alpha]", "male"]}], ")"}], " ", 
           SubscriptBox["wHap", 
            RowBox[{"a", ",", "male"}]], " ", 
           SubscriptBox["wDip", 
            RowBox[{"A", ",", "a", ",", "female"}]]}], "-", 
          RowBox[{
           SubscriptBox["\[Alpha]", "male"], " ", 
           SubscriptBox["wHap", 
            RowBox[{"A", ",", "male"}]], " ", 
           SubscriptBox["wDip", 
            RowBox[{"A", ",", "A", ",", "female"}]]}]}], ")"}]}], 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SubscriptBox["\[Alpha]", "male"]}], ")"}], " ", 
        SubscriptBox["wHap", 
         RowBox[{"a", ",", "female"}]], " ", 
        SubscriptBox["wHap", 
         RowBox[{"a", ",", "male"}]], " ", 
        SubscriptBox["wDip", 
         RowBox[{"a", ",", "a", ",", "female"}]]}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Lambda]", "\[Rule]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          SubscriptBox["wHap", 
           RowBox[{"a", ",", "female"}]]}], " ", 
         SubscriptBox["wHap", 
          RowBox[{"a", ",", "male"}]], " ", 
         SubscriptBox["wDip", 
          RowBox[{"a", ",", "a", ",", "female"}]]}], "+", 
        RowBox[{
         SubscriptBox["\[Alpha]", "male"], " ", 
         SubscriptBox["wHap", 
          RowBox[{"a", ",", "female"}]], " ", 
         SubscriptBox["wHap", 
          RowBox[{"a", ",", "male"}]], " ", 
         SubscriptBox["wDip", 
          RowBox[{"a", ",", "a", ",", "female"}]]}], "-", 
        RowBox[{"2", " ", 
         SubscriptBox["\[Alpha]", "male"], " ", 
         SubscriptBox["wHap", 
          RowBox[{"a", ",", "female"}]], " ", 
         SubscriptBox["wHap", 
          RowBox[{"A", ",", "male"}]], " ", 
         SubscriptBox["wDip", 
          RowBox[{"a", ",", "A", ",", "female"}]]}], "+", 
        RowBox[{"2", " ", "recAMnotAX", " ", 
         SubscriptBox["\[Alpha]", "male"], " ", 
         SubscriptBox["wHap", 
          RowBox[{"a", ",", "female"}]], " ", 
         SubscriptBox["wHap", 
          RowBox[{"A", ",", "male"}]], " ", 
         SubscriptBox["wDip", 
          RowBox[{"a", ",", "A", ",", "female"}]]}], "+", 
        RowBox[{"2", " ", 
         SubscriptBox["\[Alpha]", "female"], " ", 
         SubscriptBox["\[Alpha]", "male"], " ", 
         SubscriptBox["wHap", 
          RowBox[{"a", ",", "female"}]], " ", 
         SubscriptBox["wHap", 
          RowBox[{"A", ",", "male"}]], " ", 
         SubscriptBox["wDip", 
          RowBox[{"a", ",", "A", ",", "female"}]]}], "-", 
        RowBox[{"2", " ", "recAMnotAX", " ", 
         SubscriptBox["\[Alpha]", "female"], " ", 
         SubscriptBox["\[Alpha]", "male"], " ", 
         SubscriptBox["wHap", 
          RowBox[{"a", ",", "female"}]], " ", 
         SubscriptBox["wHap", 
          RowBox[{"A", ",", "male"}]], " ", 
         SubscriptBox["wDip", 
          RowBox[{"a", ",", "A", ",", "female"}]]}], "-", 
        RowBox[{"2", " ", 
         SubscriptBox["\[Alpha]", "female"], " ", 
         SubscriptBox["wHap", 
          RowBox[{"a", ",", "male"}]], " ", 
         SubscriptBox["wHap", 
          RowBox[{"A", ",", "female"}]], " ", 
         SubscriptBox["wDip", 
          RowBox[{"A", ",", "a", ",", "female"}]]}], "+", 
        RowBox[{"2", " ", "recAMnotAX", " ", 
         SubscriptBox["\[Alpha]", "female"], " ", 
         SubscriptBox["wHap", 
          RowBox[{"a", ",", "male"}]], " ", 
         SubscriptBox["wHap", 
          RowBox[{"A", ",", "female"}]], " ", 
         SubscriptBox["wDip", 
          RowBox[{"A", ",", "a", ",", "female"}]]}], "+", 
        RowBox[{"2", " ", 
         SubscriptBox["\[Alpha]", "female"], " ", 
         SubscriptBox["\[Alpha]", "male"], " ", 
         SubscriptBox["wHap", 
          RowBox[{"a", ",", "male"}]], " ", 
         SubscriptBox["wHap", 
          RowBox[{"A", ",", "female"}]], " ", 
         SubscriptBox["wDip", 
          RowBox[{"A", ",", "a", ",", "female"}]]}], "-", 
        RowBox[{"2", " ", "recAMnotAX", " ", 
         SubscriptBox["\[Alpha]", "female"], " ", 
         SubscriptBox["\[Alpha]", "male"], " ", 
         SubscriptBox["wHap", 
          RowBox[{"a", ",", "male"}]], " ", 
         SubscriptBox["wHap", 
          RowBox[{"A", ",", "female"}]], " ", 
         SubscriptBox["wDip", 
          RowBox[{"A", ",", "a", ",", "female"}]]}], "-", 
        RowBox[{
         SubscriptBox["\[Alpha]", "male"], " ", 
         SubscriptBox["wHap", 
          RowBox[{"A", ",", "female"}]], " ", 
         SubscriptBox["wHap", 
          RowBox[{"A", ",", "male"}]], " ", 
         SubscriptBox["wDip", 
          RowBox[{"A", ",", "A", ",", "female"}]]}], "+", 
        RowBox[{"\[Sqrt]", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SubscriptBox["wHap", 
                RowBox[{"a", ",", "female"}]], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SubscriptBox["\[Alpha]", "male"]}], ")"}], " ", 
                  SubscriptBox["wHap", 
                   RowBox[{"a", ",", "male"}]], " ", 
                  SubscriptBox["wDip", 
                   RowBox[{"a", ",", "a", ",", "female"}]]}], "-", 
                 RowBox[{"2", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "recAMnotAX"}], ")"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SubscriptBox["\[Alpha]", "female"]}], ")"}], " ", 
                  SubscriptBox["\[Alpha]", "male"], " ", 
                  SubscriptBox["wHap", 
                   RowBox[{"A", ",", "male"}]], " ", 
                  SubscriptBox["wDip", 
                   RowBox[{"a", ",", "A", ",", "female"}]]}]}], ")"}]}], "-", 
              
              RowBox[{
               SubscriptBox["wHap", 
                RowBox[{"A", ",", "female"}]], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "recAMnotAX"}], ")"}], " ", 
                  SubscriptBox["\[Alpha]", "female"], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SubscriptBox["\[Alpha]", "male"]}], ")"}], " ", 
                  SubscriptBox["wHap", 
                   RowBox[{"a", ",", "male"}]], " ", 
                  SubscriptBox["wDip", 
                   RowBox[{"A", ",", "a", ",", "female"}]]}], "+", 
                 RowBox[{
                  SubscriptBox["\[Alpha]", "male"], " ", 
                  SubscriptBox["wHap", 
                   RowBox[{"A", ",", "male"}]], " ", 
                  SubscriptBox["wDip", 
                   RowBox[{"A", ",", "A", ",", "female"}]]}]}], ")"}]}]}], 
             ")"}], "2"], "+", 
           RowBox[{"4", " ", 
            SubscriptBox["wHap", 
             RowBox[{"a", ",", "female"}]], " ", 
            SubscriptBox["wHap", 
             RowBox[{"A", ",", "female"}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"4", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 RowBox[{"2", " ", "recAMnotAX"}]}], ")"}], " ", 
               SubsuperscriptBox["\[Alpha]", "female", "2"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 SubscriptBox["\[Alpha]", "male"]}], ")"}], " ", 
               SubscriptBox["\[Alpha]", "male"], " ", 
               SubscriptBox["wHap", 
                RowBox[{"a", ",", "male"}]], " ", 
               SubscriptBox["wHap", 
                RowBox[{"A", ",", "male"}]], " ", 
               SubscriptBox["wDip", 
                RowBox[{"a", ",", "A", ",", "female"}]], " ", 
               SubscriptBox["wDip", 
                RowBox[{"A", ",", "a", ",", "female"}]]}], "+", 
              RowBox[{
               SubscriptBox["\[Alpha]", "male"], " ", 
               SubscriptBox["wHap", 
                RowBox[{"A", ",", "male"}]], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SubscriptBox["\[Alpha]", "male"]}], ")"}], " ", 
                  SubscriptBox["wHap", 
                   RowBox[{"a", ",", "male"}]], " ", 
                  SubscriptBox["wDip", 
                   RowBox[{"a", ",", "a", ",", "female"}]]}], "+", 
                 RowBox[{"2", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "recAMnotAX"}], ")"}], " ", 
                  SubscriptBox["\[Alpha]", "male"], " ", 
                  SubscriptBox["wHap", 
                   RowBox[{"A", ",", "male"}]], " ", 
                  SubscriptBox["wDip", 
                   RowBox[{"a", ",", "A", ",", "female"}]]}]}], ")"}], " ", 
               SubscriptBox["wDip", 
                RowBox[{"A", ",", "A", ",", "female"}]]}], "+", 
              RowBox[{"2", " ", 
               SubscriptBox["\[Alpha]", "female"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "recAMnotAX"}], ")"}], " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SubscriptBox["\[Alpha]", "male"]}], ")"}], "2"], " ", 
                  SubsuperscriptBox["wHap", 
                   RowBox[{"a", ",", "male"}], "2"], " ", 
                  SubscriptBox["wDip", 
                   RowBox[{"a", ",", "a", ",", "female"}]], " ", 
                  SubscriptBox["wDip", 
                   RowBox[{"A", ",", "a", ",", "female"}]]}], "-", 
                 RowBox[{"2", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"2", " ", "recAMnotAX"}]}], ")"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SubscriptBox["\[Alpha]", "male"]}], ")"}], " ", 
                  SubscriptBox["\[Alpha]", "male"], " ", 
                  SubscriptBox["wHap", 
                   RowBox[{"a", ",", "male"}]], " ", 
                  SubscriptBox["wHap", 
                   RowBox[{"A", ",", "male"}]], " ", 
                  SubscriptBox["wDip", 
                   RowBox[{"a", ",", "A", ",", "female"}]], " ", 
                  SubscriptBox["wDip", 
                   RowBox[{"A", ",", "a", ",", "female"}]]}], "-", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "recAMnotAX"}], ")"}], " ", 
                  SubsuperscriptBox["\[Alpha]", "male", "2"], " ", 
                  SubsuperscriptBox["wHap", 
                   RowBox[{"A", ",", "male"}], "2"], " ", 
                  SubscriptBox["wDip", 
                   RowBox[{"a", ",", "A", ",", "female"}]], " ", 
                  SubscriptBox["wDip", 
                   RowBox[{"A", ",", "A", ",", "female"}]]}]}], ")"}]}]}], 
             ")"}]}]}], ")"}]}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"4", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SubscriptBox["\[Alpha]", "male"]}], ")"}], " ", 
        SubscriptBox["wHap", 
         RowBox[{"a", ",", "female"}]], " ", 
        SubscriptBox["wHap", 
         RowBox[{"a", ",", "male"}]], " ", 
        SubscriptBox["wDip", 
         RowBox[{"a", ",", "a", ",", "female"}]]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Lambda]", "\[Rule]", 
     RowBox[{"-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SubscriptBox["wHap", 
           RowBox[{"a", ",", "female"}]], " ", 
          SubscriptBox["wHap", 
           RowBox[{"a", ",", "male"}]], " ", 
          SubscriptBox["wDip", 
           RowBox[{"a", ",", "a", ",", "female"}]]}], "-", 
         RowBox[{
          SubscriptBox["\[Alpha]", "male"], " ", 
          SubscriptBox["wHap", 
           RowBox[{"a", ",", "female"}]], " ", 
          SubscriptBox["wHap", 
           RowBox[{"a", ",", "male"}]], " ", 
          SubscriptBox["wDip", 
           RowBox[{"a", ",", "a", ",", "female"}]]}], "+", 
         RowBox[{"2", " ", 
          SubscriptBox["\[Alpha]", "male"], " ", 
          SubscriptBox["wHap", 
           RowBox[{"a", ",", "female"}]], " ", 
          SubscriptBox["wHap", 
           RowBox[{"A", ",", "male"}]], " ", 
          SubscriptBox["wDip", 
           RowBox[{"a", ",", "A", ",", "female"}]]}], "-", 
         RowBox[{"2", " ", "recAMnotAX", " ", 
          SubscriptBox["\[Alpha]", "male"], " ", 
          SubscriptBox["wHap", 
           RowBox[{"a", ",", "female"}]], " ", 
          SubscriptBox["wHap", 
           RowBox[{"A", ",", "male"}]], " ", 
          SubscriptBox["wDip", 
           RowBox[{"a", ",", "A", ",", "female"}]]}], "-", 
         RowBox[{"2", " ", 
          SubscriptBox["\[Alpha]", "female"], " ", 
          SubscriptBox["\[Alpha]", "male"], " ", 
          SubscriptBox["wHap", 
           RowBox[{"a", ",", "female"}]], " ", 
          SubscriptBox["wHap", 
           RowBox[{"A", ",", "male"}]], " ", 
          SubscriptBox["wDip", 
           RowBox[{"a", ",", "A", ",", "female"}]]}], "+", 
         RowBox[{"2", " ", "recAMnotAX", " ", 
          SubscriptBox["\[Alpha]", "female"], " ", 
          SubscriptBox["\[Alpha]", "male"], " ", 
          SubscriptBox["wHap", 
           RowBox[{"a", ",", "female"}]], " ", 
          SubscriptBox["wHap", 
           RowBox[{"A", ",", "male"}]], " ", 
          SubscriptBox["wDip", 
           RowBox[{"a", ",", "A", ",", "female"}]]}], "+", 
         RowBox[{"2", " ", 
          SubscriptBox["\[Alpha]", "female"], " ", 
          SubscriptBox["wHap", 
           RowBox[{"a", ",", "male"}]], " ", 
          SubscriptBox["wHap", 
           RowBox[{"A", ",", "female"}]], " ", 
          SubscriptBox["wDip", 
           RowBox[{"A", ",", "a", ",", "female"}]]}], "-", 
         RowBox[{"2", " ", "recAMnotAX", " ", 
          SubscriptBox["\[Alpha]", "female"], " ", 
          SubscriptBox["wHap", 
           RowBox[{"a", ",", "male"}]], " ", 
          SubscriptBox["wHap", 
           RowBox[{"A", ",", "female"}]], " ", 
          SubscriptBox["wDip", 
           RowBox[{"A", ",", "a", ",", "female"}]]}], "-", 
         RowBox[{"2", " ", 
          SubscriptBox["\[Alpha]", "female"], " ", 
          SubscriptBox["\[Alpha]", "male"], " ", 
          SubscriptBox["wHap", 
           RowBox[{"a", ",", "male"}]], " ", 
          SubscriptBox["wHap", 
           RowBox[{"A", ",", "female"}]], " ", 
          SubscriptBox["wDip", 
           RowBox[{"A", ",", "a", ",", "female"}]]}], "+", 
         RowBox[{"2", " ", "recAMnotAX", " ", 
          SubscriptBox["\[Alpha]", "female"], " ", 
          SubscriptBox["\[Alpha]", "male"], " ", 
          SubscriptBox["wHap", 
           RowBox[{"a", ",", "male"}]], " ", 
          SubscriptBox["wHap", 
           RowBox[{"A", ",", "female"}]], " ", 
          SubscriptBox["wDip", 
           RowBox[{"A", ",", "a", ",", "female"}]]}], "+", 
         RowBox[{
          SubscriptBox["\[Alpha]", "male"], " ", 
          SubscriptBox["wHap", 
           RowBox[{"A", ",", "female"}]], " ", 
          SubscriptBox["wHap", 
           RowBox[{"A", ",", "male"}]], " ", 
          SubscriptBox["wDip", 
           RowBox[{"A", ",", "A", ",", "female"}]]}], "+", 
         RowBox[{"\[Sqrt]", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SubscriptBox["wHap", 
                 RowBox[{"a", ",", "female"}]], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SubscriptBox["\[Alpha]", "male"]}], ")"}], " ", 
                   SubscriptBox["wHap", 
                    RowBox[{"a", ",", "male"}]], " ", 
                   SubscriptBox["wDip", 
                    RowBox[{"a", ",", "a", ",", "female"}]]}], "-", 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "recAMnotAX"}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SubscriptBox["\[Alpha]", "female"]}], ")"}], " ", 
                   SubscriptBox["\[Alpha]", "male"], " ", 
                   SubscriptBox["wHap", 
                    RowBox[{"A", ",", "male"}]], " ", 
                   SubscriptBox["wDip", 
                    RowBox[{"a", ",", "A", ",", "female"}]]}]}], ")"}]}], "-", 
               RowBox[{
                SubscriptBox["wHap", 
                 RowBox[{"A", ",", "female"}]], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "recAMnotAX"}], ")"}], " ", 
                   SubscriptBox["\[Alpha]", "female"], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SubscriptBox["\[Alpha]", "male"]}], ")"}], " ", 
                   SubscriptBox["wHap", 
                    RowBox[{"a", ",", "male"}]], " ", 
                   SubscriptBox["wDip", 
                    RowBox[{"A", ",", "a", ",", "female"}]]}], "+", 
                  RowBox[{
                   SubscriptBox["\[Alpha]", "male"], " ", 
                   SubscriptBox["wHap", 
                    RowBox[{"A", ",", "male"}]], " ", 
                   SubscriptBox["wDip", 
                    RowBox[{"A", ",", "A", ",", "female"}]]}]}], ")"}]}]}], 
              ")"}], "2"], "+", 
            RowBox[{"4", " ", 
             SubscriptBox["wHap", 
              RowBox[{"a", ",", "female"}]], " ", 
             SubscriptBox["wHap", 
              RowBox[{"A", ",", "female"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"4", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  RowBox[{"2", " ", "recAMnotAX"}]}], ")"}], " ", 
                SubsuperscriptBox["\[Alpha]", "female", "2"], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  SubscriptBox["\[Alpha]", "male"]}], ")"}], " ", 
                SubscriptBox["\[Alpha]", "male"], " ", 
                SubscriptBox["wHap", 
                 RowBox[{"a", ",", "male"}]], " ", 
                SubscriptBox["wHap", 
                 RowBox[{"A", ",", "male"}]], " ", 
                SubscriptBox["wDip", 
                 RowBox[{"a", ",", "A", ",", "female"}]], " ", 
                SubscriptBox["wDip", 
                 RowBox[{"A", ",", "a", ",", "female"}]]}], "+", 
               RowBox[{
                SubscriptBox["\[Alpha]", "male"], " ", 
                SubscriptBox["wHap", 
                 RowBox[{"A", ",", "male"}]], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SubscriptBox["\[Alpha]", "male"]}], ")"}], " ", 
                   SubscriptBox["wHap", 
                    RowBox[{"a", ",", "male"}]], " ", 
                   SubscriptBox["wDip", 
                    RowBox[{"a", ",", "a", ",", "female"}]]}], "+", 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "recAMnotAX"}], ")"}], " ", 
                   SubscriptBox["\[Alpha]", "male"], " ", 
                   SubscriptBox["wHap", 
                    RowBox[{"A", ",", "male"}]], " ", 
                   SubscriptBox["wDip", 
                    RowBox[{"a", ",", "A", ",", "female"}]]}]}], ")"}], " ", 
                SubscriptBox["wDip", 
                 RowBox[{"A", ",", "A", ",", "female"}]]}], "+", 
               RowBox[{"2", " ", 
                SubscriptBox["\[Alpha]", "female"], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "recAMnotAX"}], ")"}], " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SubscriptBox["\[Alpha]", "male"]}], ")"}], "2"], " ", 
                   SubsuperscriptBox["wHap", 
                    RowBox[{"a", ",", "male"}], "2"], " ", 
                   SubscriptBox["wDip", 
                    RowBox[{"a", ",", "a", ",", "female"}]], " ", 
                   SubscriptBox["wDip", 
                    RowBox[{"A", ",", "a", ",", "female"}]]}], "-", 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"2", " ", "recAMnotAX"}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SubscriptBox["\[Alpha]", "male"]}], ")"}], " ", 
                   SubscriptBox["\[Alpha]", "male"], " ", 
                   SubscriptBox["wHap", 
                    RowBox[{"a", ",", "male"}]], " ", 
                   SubscriptBox["wHap", 
                    RowBox[{"A", ",", "male"}]], " ", 
                   SubscriptBox["wDip", 
                    RowBox[{"a", ",", "A", ",", "female"}]], " ", 
                   SubscriptBox["wDip", 
                    RowBox[{"A", ",", "a", ",", "female"}]]}], "-", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "recAMnotAX"}], ")"}], " ", 
                   SubsuperscriptBox["\[Alpha]", "male", "2"], " ", 
                   SubsuperscriptBox["wHap", 
                    RowBox[{"A", ",", "male"}], "2"], " ", 
                   SubscriptBox["wDip", 
                    RowBox[{"a", ",", "A", ",", "female"}]], " ", 
                   SubscriptBox["wDip", 
                    RowBox[{"A", ",", "A", ",", "female"}]]}]}], ")"}]}]}], 
              ")"}]}]}], ")"}]}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"4", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SubscriptBox["\[Alpha]", "male"]}], ")"}], " ", 
         SubscriptBox["wHap", 
          RowBox[{"a", ",", "female"}]], " ", 
         SubscriptBox["wHap", 
          RowBox[{"a", ",", "male"}]], " ", 
         SubscriptBox["wDip", 
          RowBox[{"a", ",", "a", ",", "female"}]]}], ")"}]}]}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.697913595909998*^9, 3.697913662019691*^9}, {
   3.697913798235928*^9, 3.69791382482613*^9}, 3.697914538440433*^9, 
   3.697915467074589*^9, 3.697921128664033*^9, 3.697989669607417*^9, 
   3.698432486465858*^9, 3.698502608656067*^9, 3.698586565810631*^9, 
   3.698759054198677*^9, 3.6992079918116503`*^9, 3.7042242146635027`*^9, 
   3.7069928124944763`*^9, 3.708263350518545*^9, 3.708347518112352*^9, 
   3.710707948871475*^9, 3.710792396441475*^9, 3.710868443789649*^9, 
   3.711370869512032*^9, 3.711475000516158*^9, 3.711796060786439*^9, 
   3.712482734090806*^9, 3.712490888986458*^9, 3.712497060789074*^9, 
   3.712559094771237*^9, 3.712575913807981*^9, 3.7130124130920763`*^9, 
   3.713177894288402*^9, 3.715112559489724*^9},
 ExpressionUUID -> "74688e74-7813-4f63-8b8a-11b3b13550f6"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Equilibrium Ya XA", "Subsection",
 CellChangeTimes->{{3.697913773952116*^9, 3.6979138107603207`*^9}, {
   3.697913849538191*^9, 3.697913853346159*^9}, {3.697914885404479*^9, 
   3.697914887820529*^9}, 
   3.697924718372089*^9},ExpressionUUID->"5b72d60a-1d42-4ad7-9b2e-\
b00ea6ea28fe"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"YaXAExtEigs", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{"0", "==", 
       RowBox[{"Normal", "[", 
        RowBox[{"Series", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"charpolyExt", "/.", 
             RowBox[{"k", "\[Rule]", "1"}]}], "/.", "weakrecAX"}], "/.", 
           "eqr0YaXA"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Epsilon]", ",", "0", ",", "0"}], "}"}]}], "]"}], 
        "]"}]}], ",", "\[Lambda]"}], "]"}], ",", "posassumps"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6979135683753853`*^9, 3.697913568971593*^9}, {
  3.69791359937243*^9, 3.6979136604360247`*^9}, {3.6979137955369453`*^9, 
  3.6979138131944838`*^9}, {3.697913856715302*^9, 3.6979138576842413`*^9}, {
  3.697914620509902*^9, 3.697914621220343*^9}, {3.697914732775517*^9, 
  3.6979147455939627`*^9}},
 ExpressionUUID -> "3f89780b-d456-420b-a0f9-4e42bb3ae9b8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Lambda]", "\[Rule]", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Lambda]", "\[Rule]", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Lambda]", "\[Rule]", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Lambda]", "\[Rule]", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Lambda]", "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "recAMnotAX"}], ")"}], " ", 
       SubscriptBox["wHap", 
        RowBox[{"a", ",", "female"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SubscriptBox["\[Alpha]", "male"]}], ")"}], " ", 
          SubscriptBox["wHap", 
           RowBox[{"a", ",", "male"}]], " ", 
          SubscriptBox["wDip", 
           RowBox[{"a", ",", "a", ",", "female"}]]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SubscriptBox["\[Alpha]", "female"]}], ")"}], " ", 
          SubscriptBox["\[Alpha]", "male"], " ", 
          SubscriptBox["wHap", 
           RowBox[{"A", ",", "male"}]], " ", 
          SubscriptBox["wDip", 
           RowBox[{"a", ",", "A", ",", "female"}]]}]}], ")"}]}], 
      RowBox[{"2", " ", 
       SubscriptBox["\[Alpha]", "male"], " ", 
       SubscriptBox["wHap", 
        RowBox[{"A", ",", "female"}]], " ", 
       SubscriptBox["wHap", 
        RowBox[{"A", ",", "male"}]], " ", 
       SubscriptBox["wDip", 
        RowBox[{"A", ",", "A", ",", "female"}]]}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Lambda]", "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "recAMnotAX"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          SubscriptBox["\[Alpha]", "female"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SubscriptBox["\[Alpha]", "male"]}], ")"}], " ", 
          SubscriptBox["wHap", 
           RowBox[{"a", ",", "male"}]], " ", 
          SubscriptBox["wDip", 
           RowBox[{"A", ",", "a", ",", "female"}]]}], "-", 
         RowBox[{
          SubscriptBox["\[Alpha]", "male"], " ", 
          SubscriptBox["wHap", 
           RowBox[{"A", ",", "male"}]], " ", 
          SubscriptBox["wDip", 
           RowBox[{"A", ",", "A", ",", "female"}]]}]}], ")"}]}], 
      RowBox[{"2", " ", 
       SubscriptBox["\[Alpha]", "male"], " ", 
       SubscriptBox["wHap", 
        RowBox[{"A", ",", "male"}]], " ", 
       SubscriptBox["wDip", 
        RowBox[{"A", ",", "A", ",", "female"}]]}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Lambda]", "\[Rule]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SubscriptBox["wHap", 
          RowBox[{"a", ",", "female"}]], " ", 
         SubscriptBox["wHap", 
          RowBox[{"a", ",", "male"}]], " ", 
         SubscriptBox["wDip", 
          RowBox[{"a", ",", "a", ",", "female"}]]}], "-", 
        RowBox[{
         SubscriptBox["\[Alpha]", "male"], " ", 
         SubscriptBox["wHap", 
          RowBox[{"a", ",", "female"}]], " ", 
         SubscriptBox["wHap", 
          RowBox[{"a", ",", "male"}]], " ", 
         SubscriptBox["wDip", 
          RowBox[{"a", ",", "a", ",", "female"}]]}], "+", 
        RowBox[{"2", " ", 
         SubscriptBox["\[Alpha]", "male"], " ", 
         SubscriptBox["wHap", 
          RowBox[{"a", ",", "female"}]], " ", 
         SubscriptBox["wHap", 
          RowBox[{"A", ",", "male"}]], " ", 
         SubscriptBox["wDip", 
          RowBox[{"a", ",", "A", ",", "female"}]]}], "-", 
        RowBox[{"2", " ", "recAMnotAX", " ", 
         SubscriptBox["\[Alpha]", "male"], " ", 
         SubscriptBox["wHap", 
          RowBox[{"a", ",", "female"}]], " ", 
         SubscriptBox["wHap", 
          RowBox[{"A", ",", "male"}]], " ", 
         SubscriptBox["wDip", 
          RowBox[{"a", ",", "A", ",", "female"}]]}], "-", 
        RowBox[{"2", " ", 
         SubscriptBox["\[Alpha]", "female"], " ", 
         SubscriptBox["\[Alpha]", "male"], " ", 
         SubscriptBox["wHap", 
          RowBox[{"a", ",", "female"}]], " ", 
         SubscriptBox["wHap", 
          RowBox[{"A", ",", "male"}]], " ", 
         SubscriptBox["wDip", 
          RowBox[{"a", ",", "A", ",", "female"}]]}], "+", 
        RowBox[{"2", " ", "recAMnotAX", " ", 
         SubscriptBox["\[Alpha]", "female"], " ", 
         SubscriptBox["\[Alpha]", "male"], " ", 
         SubscriptBox["wHap", 
          RowBox[{"a", ",", "female"}]], " ", 
         SubscriptBox["wHap", 
          RowBox[{"A", ",", "male"}]], " ", 
         SubscriptBox["wDip", 
          RowBox[{"a", ",", "A", ",", "female"}]]}], "+", 
        RowBox[{"2", " ", 
         SubscriptBox["\[Alpha]", "female"], " ", 
         SubscriptBox["wHap", 
          RowBox[{"a", ",", "male"}]], " ", 
         SubscriptBox["wHap", 
          RowBox[{"A", ",", "female"}]], " ", 
         SubscriptBox["wDip", 
          RowBox[{"A", ",", "a", ",", "female"}]]}], "-", 
        RowBox[{"2", " ", "recAMnotAX", " ", 
         SubscriptBox["\[Alpha]", "female"], " ", 
         SubscriptBox["wHap", 
          RowBox[{"a", ",", "male"}]], " ", 
         SubscriptBox["wHap", 
          RowBox[{"A", ",", "female"}]], " ", 
         SubscriptBox["wDip", 
          RowBox[{"A", ",", "a", ",", "female"}]]}], "-", 
        RowBox[{"2", " ", 
         SubscriptBox["\[Alpha]", "female"], " ", 
         SubscriptBox["\[Alpha]", "male"], " ", 
         SubscriptBox["wHap", 
          RowBox[{"a", ",", "male"}]], " ", 
         SubscriptBox["wHap", 
          RowBox[{"A", ",", "female"}]], " ", 
         SubscriptBox["wDip", 
          RowBox[{"A", ",", "a", ",", "female"}]]}], "+", 
        RowBox[{"2", " ", "recAMnotAX", " ", 
         SubscriptBox["\[Alpha]", "female"], " ", 
         SubscriptBox["\[Alpha]", "male"], " ", 
         SubscriptBox["wHap", 
          RowBox[{"a", ",", "male"}]], " ", 
         SubscriptBox["wHap", 
          RowBox[{"A", ",", "female"}]], " ", 
         SubscriptBox["wDip", 
          RowBox[{"A", ",", "a", ",", "female"}]]}], "+", 
        RowBox[{
         SubscriptBox["\[Alpha]", "male"], " ", 
         SubscriptBox["wHap", 
          RowBox[{"A", ",", "female"}]], " ", 
         SubscriptBox["wHap", 
          RowBox[{"A", ",", "male"}]], " ", 
         SubscriptBox["wDip", 
          RowBox[{"A", ",", "A", ",", "female"}]]}], "+", 
        RowBox[{"\[Sqrt]", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SubscriptBox["wHap", 
                RowBox[{"a", ",", "female"}]], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SubscriptBox["\[Alpha]", "male"]}], ")"}]}], " ", 
                  SubscriptBox["wHap", 
                   RowBox[{"a", ",", "male"}]], " ", 
                  SubscriptBox["wDip", 
                   RowBox[{"a", ",", "a", ",", "female"}]]}], "+", 
                 RowBox[{"2", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "recAMnotAX"}], ")"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SubscriptBox["\[Alpha]", "female"]}], ")"}], " ", 
                  SubscriptBox["\[Alpha]", "male"], " ", 
                  SubscriptBox["wHap", 
                   RowBox[{"A", ",", "male"}]], " ", 
                  SubscriptBox["wDip", 
                   RowBox[{"a", ",", "A", ",", "female"}]]}]}], ")"}]}], "+", 
              
              RowBox[{
               SubscriptBox["wHap", 
                RowBox[{"A", ",", "female"}]], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "recAMnotAX"}], ")"}], " ", 
                  SubscriptBox["\[Alpha]", "female"], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SubscriptBox["\[Alpha]", "male"]}], ")"}], " ", 
                  SubscriptBox["wHap", 
                   RowBox[{"a", ",", "male"}]], " ", 
                  SubscriptBox["wDip", 
                   RowBox[{"A", ",", "a", ",", "female"}]]}], "+", 
                 RowBox[{
                  SubscriptBox["\[Alpha]", "male"], " ", 
                  SubscriptBox["wHap", 
                   RowBox[{"A", ",", "male"}]], " ", 
                  SubscriptBox["wDip", 
                   RowBox[{"A", ",", "A", ",", "female"}]]}]}], ")"}]}]}], 
             ")"}], "2"], "+", 
           RowBox[{"4", " ", 
            SubscriptBox["wHap", 
             RowBox[{"a", ",", "female"}]], " ", 
            SubscriptBox["wHap", 
             RowBox[{"A", ",", "female"}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"4", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 RowBox[{"2", " ", "recAMnotAX"}]}], ")"}], " ", 
               SubsuperscriptBox["\[Alpha]", "female", "2"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 SubscriptBox["\[Alpha]", "male"]}], ")"}], " ", 
               SubscriptBox["\[Alpha]", "male"], " ", 
               SubscriptBox["wHap", 
                RowBox[{"a", ",", "male"}]], " ", 
               SubscriptBox["wHap", 
                RowBox[{"A", ",", "male"}]], " ", 
               SubscriptBox["wDip", 
                RowBox[{"a", ",", "A", ",", "female"}]], " ", 
               SubscriptBox["wDip", 
                RowBox[{"A", ",", "a", ",", "female"}]]}], "+", 
              RowBox[{
               SubscriptBox["\[Alpha]", "male"], " ", 
               SubscriptBox["wHap", 
                RowBox[{"A", ",", "male"}]], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SubscriptBox["\[Alpha]", "male"]}], ")"}], " ", 
                  SubscriptBox["wHap", 
                   RowBox[{"a", ",", "male"}]], " ", 
                  SubscriptBox["wDip", 
                   RowBox[{"a", ",", "a", ",", "female"}]]}], "+", 
                 RowBox[{"2", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "recAMnotAX"}], ")"}], " ", 
                  SubscriptBox["\[Alpha]", "male"], " ", 
                  SubscriptBox["wHap", 
                   RowBox[{"A", ",", "male"}]], " ", 
                  SubscriptBox["wDip", 
                   RowBox[{"a", ",", "A", ",", "female"}]]}]}], ")"}], " ", 
               SubscriptBox["wDip", 
                RowBox[{"A", ",", "A", ",", "female"}]]}], "+", 
              RowBox[{"2", " ", 
               SubscriptBox["\[Alpha]", "female"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "recAMnotAX"}], ")"}], " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SubscriptBox["\[Alpha]", "male"]}], ")"}], "2"], " ", 
                  SubsuperscriptBox["wHap", 
                   RowBox[{"a", ",", "male"}], "2"], " ", 
                  SubscriptBox["wDip", 
                   RowBox[{"a", ",", "a", ",", "female"}]], " ", 
                  SubscriptBox["wDip", 
                   RowBox[{"A", ",", "a", ",", "female"}]]}], "-", 
                 RowBox[{"2", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"2", " ", "recAMnotAX"}]}], ")"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SubscriptBox["\[Alpha]", "male"]}], ")"}], " ", 
                  SubscriptBox["\[Alpha]", "male"], " ", 
                  SubscriptBox["wHap", 
                   RowBox[{"a", ",", "male"}]], " ", 
                  SubscriptBox["wHap", 
                   RowBox[{"A", ",", "male"}]], " ", 
                  SubscriptBox["wDip", 
                   RowBox[{"a", ",", "A", ",", "female"}]], " ", 
                  SubscriptBox["wDip", 
                   RowBox[{"A", ",", "a", ",", "female"}]]}], "-", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "recAMnotAX"}], ")"}], " ", 
                  SubsuperscriptBox["\[Alpha]", "male", "2"], " ", 
                  SubsuperscriptBox["wHap", 
                   RowBox[{"A", ",", "male"}], "2"], " ", 
                  SubscriptBox["wDip", 
                   RowBox[{"a", ",", "A", ",", "female"}]], " ", 
                  SubscriptBox["wDip", 
                   RowBox[{"A", ",", "A", ",", "female"}]]}]}], ")"}]}]}], 
             ")"}]}]}], ")"}]}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"4", " ", 
        SubscriptBox["\[Alpha]", "male"], " ", 
        SubscriptBox["wHap", 
         RowBox[{"A", ",", "female"}]], " ", 
        SubscriptBox["wHap", 
         RowBox[{"A", ",", "male"}]], " ", 
        SubscriptBox["wDip", 
         RowBox[{"A", ",", "A", ",", "female"}]]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Lambda]", "\[Rule]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SubscriptBox["wHap", 
          RowBox[{"a", ",", "female"}]], " ", 
         SubscriptBox["wHap", 
          RowBox[{"a", ",", "male"}]], " ", 
         SubscriptBox["wDip", 
          RowBox[{"a", ",", "a", ",", "female"}]]}], "-", 
        RowBox[{
         SubscriptBox["\[Alpha]", "male"], " ", 
         SubscriptBox["wHap", 
          RowBox[{"a", ",", "female"}]], " ", 
         SubscriptBox["wHap", 
          RowBox[{"a", ",", "male"}]], " ", 
         SubscriptBox["wDip", 
          RowBox[{"a", ",", "a", ",", "female"}]]}], "+", 
        RowBox[{"2", " ", 
         SubscriptBox["\[Alpha]", "male"], " ", 
         SubscriptBox["wHap", 
          RowBox[{"a", ",", "female"}]], " ", 
         SubscriptBox["wHap", 
          RowBox[{"A", ",", "male"}]], " ", 
         SubscriptBox["wDip", 
          RowBox[{"a", ",", "A", ",", "female"}]]}], "-", 
        RowBox[{"2", " ", "recAMnotAX", " ", 
         SubscriptBox["\[Alpha]", "male"], " ", 
         SubscriptBox["wHap", 
          RowBox[{"a", ",", "female"}]], " ", 
         SubscriptBox["wHap", 
          RowBox[{"A", ",", "male"}]], " ", 
         SubscriptBox["wDip", 
          RowBox[{"a", ",", "A", ",", "female"}]]}], "-", 
        RowBox[{"2", " ", 
         SubscriptBox["\[Alpha]", "female"], " ", 
         SubscriptBox["\[Alpha]", "male"], " ", 
         SubscriptBox["wHap", 
          RowBox[{"a", ",", "female"}]], " ", 
         SubscriptBox["wHap", 
          RowBox[{"A", ",", "male"}]], " ", 
         SubscriptBox["wDip", 
          RowBox[{"a", ",", "A", ",", "female"}]]}], "+", 
        RowBox[{"2", " ", "recAMnotAX", " ", 
         SubscriptBox["\[Alpha]", "female"], " ", 
         SubscriptBox["\[Alpha]", "male"], " ", 
         SubscriptBox["wHap", 
          RowBox[{"a", ",", "female"}]], " ", 
         SubscriptBox["wHap", 
          RowBox[{"A", ",", "male"}]], " ", 
         SubscriptBox["wDip", 
          RowBox[{"a", ",", "A", ",", "female"}]]}], "+", 
        RowBox[{"2", " ", 
         SubscriptBox["\[Alpha]", "female"], " ", 
         SubscriptBox["wHap", 
          RowBox[{"a", ",", "male"}]], " ", 
         SubscriptBox["wHap", 
          RowBox[{"A", ",", "female"}]], " ", 
         SubscriptBox["wDip", 
          RowBox[{"A", ",", "a", ",", "female"}]]}], "-", 
        RowBox[{"2", " ", "recAMnotAX", " ", 
         SubscriptBox["\[Alpha]", "female"], " ", 
         SubscriptBox["wHap", 
          RowBox[{"a", ",", "male"}]], " ", 
         SubscriptBox["wHap", 
          RowBox[{"A", ",", "female"}]], " ", 
         SubscriptBox["wDip", 
          RowBox[{"A", ",", "a", ",", "female"}]]}], "-", 
        RowBox[{"2", " ", 
         SubscriptBox["\[Alpha]", "female"], " ", 
         SubscriptBox["\[Alpha]", "male"], " ", 
         SubscriptBox["wHap", 
          RowBox[{"a", ",", "male"}]], " ", 
         SubscriptBox["wHap", 
          RowBox[{"A", ",", "female"}]], " ", 
         SubscriptBox["wDip", 
          RowBox[{"A", ",", "a", ",", "female"}]]}], "+", 
        RowBox[{"2", " ", "recAMnotAX", " ", 
         SubscriptBox["\[Alpha]", "female"], " ", 
         SubscriptBox["\[Alpha]", "male"], " ", 
         SubscriptBox["wHap", 
          RowBox[{"a", ",", "male"}]], " ", 
         SubscriptBox["wHap", 
          RowBox[{"A", ",", "female"}]], " ", 
         SubscriptBox["wDip", 
          RowBox[{"A", ",", "a", ",", "female"}]]}], "+", 
        RowBox[{
         SubscriptBox["\[Alpha]", "male"], " ", 
         SubscriptBox["wHap", 
          RowBox[{"A", ",", "female"}]], " ", 
         SubscriptBox["wHap", 
          RowBox[{"A", ",", "male"}]], " ", 
         SubscriptBox["wDip", 
          RowBox[{"A", ",", "A", ",", "female"}]]}], "-", 
        RowBox[{"\[Sqrt]", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SubscriptBox["wHap", 
                RowBox[{"a", ",", "female"}]], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SubscriptBox["\[Alpha]", "male"]}], ")"}]}], " ", 
                  SubscriptBox["wHap", 
                   RowBox[{"a", ",", "male"}]], " ", 
                  SubscriptBox["wDip", 
                   RowBox[{"a", ",", "a", ",", "female"}]]}], "+", 
                 RowBox[{"2", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "recAMnotAX"}], ")"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SubscriptBox["\[Alpha]", "female"]}], ")"}], " ", 
                  SubscriptBox["\[Alpha]", "male"], " ", 
                  SubscriptBox["wHap", 
                   RowBox[{"A", ",", "male"}]], " ", 
                  SubscriptBox["wDip", 
                   RowBox[{"a", ",", "A", ",", "female"}]]}]}], ")"}]}], "+", 
              
              RowBox[{
               SubscriptBox["wHap", 
                RowBox[{"A", ",", "female"}]], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "recAMnotAX"}], ")"}], " ", 
                  SubscriptBox["\[Alpha]", "female"], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SubscriptBox["\[Alpha]", "male"]}], ")"}], " ", 
                  SubscriptBox["wHap", 
                   RowBox[{"a", ",", "male"}]], " ", 
                  SubscriptBox["wDip", 
                   RowBox[{"A", ",", "a", ",", "female"}]]}], "+", 
                 RowBox[{
                  SubscriptBox["\[Alpha]", "male"], " ", 
                  SubscriptBox["wHap", 
                   RowBox[{"A", ",", "male"}]], " ", 
                  SubscriptBox["wDip", 
                   RowBox[{"A", ",", "A", ",", "female"}]]}]}], ")"}]}]}], 
             ")"}], "2"], "+", 
           RowBox[{"4", " ", 
            SubscriptBox["wHap", 
             RowBox[{"a", ",", "female"}]], " ", 
            SubscriptBox["wHap", 
             RowBox[{"A", ",", "female"}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"4", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 RowBox[{"2", " ", "recAMnotAX"}]}], ")"}], " ", 
               SubsuperscriptBox["\[Alpha]", "female", "2"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 SubscriptBox["\[Alpha]", "male"]}], ")"}], " ", 
               SubscriptBox["\[Alpha]", "male"], " ", 
               SubscriptBox["wHap", 
                RowBox[{"a", ",", "male"}]], " ", 
               SubscriptBox["wHap", 
                RowBox[{"A", ",", "male"}]], " ", 
               SubscriptBox["wDip", 
                RowBox[{"a", ",", "A", ",", "female"}]], " ", 
               SubscriptBox["wDip", 
                RowBox[{"A", ",", "a", ",", "female"}]]}], "+", 
              RowBox[{
               SubscriptBox["\[Alpha]", "male"], " ", 
               SubscriptBox["wHap", 
                RowBox[{"A", ",", "male"}]], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SubscriptBox["\[Alpha]", "male"]}], ")"}], " ", 
                  SubscriptBox["wHap", 
                   RowBox[{"a", ",", "male"}]], " ", 
                  SubscriptBox["wDip", 
                   RowBox[{"a", ",", "a", ",", "female"}]]}], "+", 
                 RowBox[{"2", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "recAMnotAX"}], ")"}], " ", 
                  SubscriptBox["\[Alpha]", "male"], " ", 
                  SubscriptBox["wHap", 
                   RowBox[{"A", ",", "male"}]], " ", 
                  SubscriptBox["wDip", 
                   RowBox[{"a", ",", "A", ",", "female"}]]}]}], ")"}], " ", 
               SubscriptBox["wDip", 
                RowBox[{"A", ",", "A", ",", "female"}]]}], "+", 
              RowBox[{"2", " ", 
               SubscriptBox["\[Alpha]", "female"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "recAMnotAX"}], ")"}], " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SubscriptBox["\[Alpha]", "male"]}], ")"}], "2"], " ", 
                  SubsuperscriptBox["wHap", 
                   RowBox[{"a", ",", "male"}], "2"], " ", 
                  SubscriptBox["wDip", 
                   RowBox[{"a", ",", "a", ",", "female"}]], " ", 
                  SubscriptBox["wDip", 
                   RowBox[{"A", ",", "a", ",", "female"}]]}], "-", 
                 RowBox[{"2", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"2", " ", "recAMnotAX"}]}], ")"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SubscriptBox["\[Alpha]", "male"]}], ")"}], " ", 
                  SubscriptBox["\[Alpha]", "male"], " ", 
                  SubscriptBox["wHap", 
                   RowBox[{"a", ",", "male"}]], " ", 
                  SubscriptBox["wHap", 
                   RowBox[{"A", ",", "male"}]], " ", 
                  SubscriptBox["wDip", 
                   RowBox[{"a", ",", "A", ",", "female"}]], " ", 
                  SubscriptBox["wDip", 
                   RowBox[{"A", ",", "a", ",", "female"}]]}], "-", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "recAMnotAX"}], ")"}], " ", 
                  SubsuperscriptBox["\[Alpha]", "male", "2"], " ", 
                  SubsuperscriptBox["wHap", 
                   RowBox[{"A", ",", "male"}], "2"], " ", 
                  SubscriptBox["wDip", 
                   RowBox[{"a", ",", "A", ",", "female"}]], " ", 
                  SubscriptBox["wDip", 
                   RowBox[{"A", ",", "A", ",", "female"}]]}]}], ")"}]}]}], 
             ")"}]}]}], ")"}]}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"4", " ", 
        SubscriptBox["\[Alpha]", "male"], " ", 
        SubscriptBox["wHap", 
         RowBox[{"A", ",", "female"}]], " ", 
        SubscriptBox["wHap", 
         RowBox[{"A", ",", "male"}]], " ", 
        SubscriptBox["wDip", 
         RowBox[{"A", ",", "A", ",", "female"}]]}], ")"}]}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.697913595909998*^9, 3.697913662019691*^9}, {
   3.697913798235928*^9, 3.69791382482613*^9}, 3.697913867759156*^9, 
   3.697914631182858*^9, {3.697914743866748*^9, 3.697914751831213*^9}, 
   3.697921184316028*^9, 3.697989678566498*^9, 3.698432495431574*^9, 
   3.698502617163249*^9, 3.698586573890338*^9, 3.6987590625136642`*^9, 
   3.699207999946492*^9, 3.704224223394218*^9, 3.706992820950656*^9, 
   3.708263358949462*^9, 3.708347526463279*^9, 3.710707957152993*^9, 
   3.710792404957403*^9, 3.710868452596571*^9, 3.711370877777669*^9, 
   3.7114750078174553`*^9, 3.7117960684202223`*^9, 3.712482741504558*^9, 
   3.712490896487454*^9, 3.71249706743394*^9, 3.7125591021966763`*^9, 
   3.712575921050006*^9, 3.7130124207956953`*^9, 3.713177901638183*^9, 
   3.715112567597014*^9},
 ExpressionUUID -> "f0d90e17-1067-4e9a-84f6-612b39832a46"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Equilibrium Ya XAa", "Subsection",
 CellChangeTimes->{{3.697913773952116*^9, 3.6979138107603207`*^9}, {
   3.697913849538191*^9, 3.697913876059013*^9}, 3.697914141693891*^9, {
   3.6979151914729*^9, 3.6979151933848677`*^9}, {3.697921419590148*^9, 
   3.6979214204303217`*^9}, 
   3.697924716972158*^9},ExpressionUUID->"feffbdbe-2880-4f7f-bf0f-\
f770380c0576"],

Cell[BoxData[
 RowBox[{
  RowBox[{"charpolyExtYaXAar0", "=", 
   RowBox[{"Normal", "[", 
    RowBox[{"Series", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"charpolyExt", "/.", 
         RowBox[{"k", "\[Rule]", "1"}]}], "/.", "weakrecAX"}], "/.", 
       "eqr0YaXAa"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Epsilon]", ",", "0", ",", "0"}], "}"}]}], "]"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.697923812313364*^9, 3.697923845474452*^9}, {
  3.697924089140847*^9, 3.697924091081086*^9}, {3.697924125429697*^9, 
  3.6979241302932673`*^9}, {3.697924223387383*^9, 3.697924223569709*^9}},
 ExpressionUUID -> "0ee2830f-f668-457a-b417-73385e5c76ad"]
}, Closed]],

Cell[CellGroupData[{

Cell["Equilibrium YA XAa", "Subsection",
 CellChangeTimes->{{3.697913773952116*^9, 3.6979138107603207`*^9}, {
   3.697913849538191*^9, 3.697913876059013*^9}, {3.697914890956723*^9, 
   3.6979148924528427`*^9}, {3.69792140184641*^9, 3.697921405149228*^9}, 
   3.69792471543666*^9},ExpressionUUID->"75659796-5e90-4017-a5ff-\
ce0b911b0e7f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"charpolyExtYAXAar0", "=", 
   RowBox[{"Normal", "[", 
    RowBox[{"Series", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"charpolyExt", "/.", 
         RowBox[{"k", "\[Rule]", "1"}]}], "/.", "weakrecAX"}], "/.", 
       "eqr0YAXAa"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Epsilon]", ",", "0", ",", "0"}], "}"}]}], "]"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.697924505807708*^9, 3.6979245114372473`*^9}},
 ExpressionUUID -> "efb9f619-f8c4-439b-8664-3faebd17ba85"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Mike - greyscale, plot lambdas for Ya equilibrium only", "Section",
 CellChangeTimes->{{3.711474794740471*^9, 
  3.7114748395320673`*^9}},ExpressionUUID->"873ac4b5-4591-4cd7-a5b1-\
006b3c64b0af"],

Cell[CellGroupData[{

Cell["Set-up [ENTER]", "Subsubsection",
 CellChangeTimes->{{3.6985863913502197`*^9, 3.698586392597275*^9}, 
   3.708347321336602*^9},ExpressionUUID->"92b52072-af77-4423-b546-\
08b46a093cd9"],

Cell["\<\
The MFS hypothesis is at work when we have a \[OpenCurlyDoubleQuote]perverse\
\[CloseCurlyDoubleQuote] equilibrium and the Y is more associated than the \
male X with the allele that makes better females.

The SPO hypothesis is at work when the Xs are more associated with the allele \
that makes better females, but the female X is not as associated with the \
allele that makes good females as it could be since the X spends some time in \
males.

We can differentiate between the two hypotheses when r=R=0 by looking at the \
eigenvalues of W-a and W-A (from turnoverSOM.nb)\
\>", "Text",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQAWIQ/aD523TjvteOEbc+LgbRdtPPrgDRSvX3wbRjOOd6
EP22t2oTiN4889jTYCDd/JrzJYiO+/jOOARIpyjvMAXR572/h4JoufthWSC6
Ji6kEERn3CwuBtHPsrZWgOirmSdrQXTucaYmEC3e9LAFRAvO+jIVRNel6ywE
0QfWNf8B0Tda1ZlCgXSLJdPiSCBddbFiA4hmVD3YHQWkn9jP6QPRQS6Ck0F0
++HwpSD6bJTpDhCttXcSmD627t1bEL0ntesPiF57Pow/GkgH9NRJgej4uH7L
GCAtZFvnCKILvom3gmi5//1tIPp6+bPCWCD9JdmiCEQDALJ4qAg=
  
  "],ExpressionUUID->"ce717819-76ad-4825-855c-ec481234c289"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"\[Lambda]Wa", ",", "\[Lambda]WA"}], "}"}], "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        FractionBox["1", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "freqYm"}], ")"}], " ", "meanF"}]], 
        RowBox[{
         SubscriptBox["wHap", 
          RowBox[{"a", ",", "female"}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "pAveM"}], ")"}], " ", 
            SubscriptBox["wHap", 
             RowBox[{"a", ",", "male"}]], " ", 
            SubscriptBox["wDip", 
             RowBox[{"a", ",", "a", ",", "female"}]]}], "+", 
           RowBox[{"2", " ", "pAveM", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SubscriptBox["\[Alpha]", "female"]}], ")"}], " ", 
            SubscriptBox["wHap", 
             RowBox[{"A", ",", "male"}]], " ", 
            SubscriptBox["wDip", 
             RowBox[{"a", ",", "A", ",", "female"}]]}]}], ")"}]}]}], ",", 
       FractionBox[
        RowBox[{
         SubscriptBox["wHap", 
          RowBox[{"A", ",", "female"}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "pAveM"}], ")"}], " ", 
            SubscriptBox["\[Alpha]", "female"], " ", 
            SubscriptBox["wHap", 
             RowBox[{"a", ",", "male"}]], " ", 
            SubscriptBox["wDip", 
             RowBox[{"A", ",", "a", ",", "female"}]]}], "-", 
           RowBox[{"pAveM", " ", 
            SubscriptBox["wHap", 
             RowBox[{"A", ",", "male"}]], " ", 
            SubscriptBox["wDip", 
             RowBox[{"A", ",", "A", ",", "female"}]]}]}], ")"}]}], 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "freqYm"}], ")"}], " ", "meanF"}]]}], 
      "}"}], "/.", 
     RowBox[{"meanF", "\[Rule]", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "pXf"}], ")"}], 
        SubscriptBox["wHap", 
         RowBox[{"a", ",", "female"}]], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", "pXm"}], ")"}], 
        SubscriptBox["wHap", 
         RowBox[{"a", ",", "male"}]], " ", 
        SubscriptBox["wDip", 
         RowBox[{"a", ",", "a", ",", "female"}]]}], "+", 
       RowBox[{"pXf", " ", 
        SubscriptBox["wHap", 
         RowBox[{"A", ",", "female"}]], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", "pXm"}], ")"}], " ", 
        SubscriptBox["wHap", 
         RowBox[{"a", ",", "male"}]], 
        SubscriptBox["wDip", 
         RowBox[{"A", ",", "a", ",", "female"}]]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "pXf"}], ")"}], 
        SubscriptBox["wHap", 
         RowBox[{"a", ",", "female"}]], " ", "pXm", " ", 
        SubscriptBox["wHap", 
         RowBox[{"A", ",", "male"}]], 
        SubscriptBox["wDip", 
         RowBox[{"a", ",", "A", ",", "female"}]]}], " ", "+", 
       RowBox[{"pXf", " ", 
        SubscriptBox["wHap", 
         RowBox[{"A", ",", "female"}]], " ", "pXm", " ", 
        SubscriptBox["wHap", 
         RowBox[{"A", ",", "male"}]], " ", 
        SubscriptBox["wDip", 
         RowBox[{"A", ",", "A", ",", "female"}]]}]}]}]}], "/.", 
    RowBox[{"pAveM", "\[Rule]", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", "freqYm"}], ")"}], "pXm"}], "+", 
      RowBox[{"freqYm", " ", "pYm"}]}]}]}], "//", "Simplify"}]}]], "Input",
 CellChangeTimes->{{3.698516744095645*^9, 3.698516775714273*^9}, 
   3.6985168537958317`*^9, {3.698516893339404*^9, 3.698516960191349*^9}, {
   3.698519190966762*^9, 3.6985192143301363`*^9}},
 ExpressionUUID -> "1a99fae6-8655-4bd4-8af5-ab749387a59f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["wHap", 
        RowBox[{"a", ",", "female"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "freqYm"}], ")"}], " ", "pXm"}], "-", 
            
            RowBox[{"freqYm", " ", "pYm"}]}], ")"}], " ", 
          SubscriptBox["wHap", 
           RowBox[{"a", ",", "male"}]], " ", 
          SubscriptBox["wDip", 
           RowBox[{"a", ",", "a", ",", "female"}]]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "freqYm"}], ")"}], " ", "pXm"}], "-", 
            
            RowBox[{"freqYm", " ", "pYm"}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SubscriptBox["\[Alpha]", "female"]}], ")"}], " ", 
          SubscriptBox["wHap", 
           RowBox[{"A", ",", "male"}]], " ", 
          SubscriptBox["wDip", 
           RowBox[{"a", ",", "A", ",", "female"}]]}]}], ")"}]}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "freqYm"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "pXf"}], ")"}], " ", 
          SubscriptBox["wHap", 
           RowBox[{"a", ",", "female"}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "pXm"}], ")"}], " ", 
             SubscriptBox["wHap", 
              RowBox[{"a", ",", "male"}]], " ", 
             SubscriptBox["wDip", 
              RowBox[{"a", ",", "a", ",", "female"}]]}], "-", 
            RowBox[{"pXm", " ", 
             SubscriptBox["wHap", 
              RowBox[{"A", ",", "male"}]], " ", 
             SubscriptBox["wDip", 
              RowBox[{"a", ",", "A", ",", "female"}]]}]}], ")"}]}], "+", 
         RowBox[{"pXf", " ", 
          SubscriptBox["wHap", 
           RowBox[{"A", ",", "female"}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "pXm"}], ")"}]}], " ", 
             SubscriptBox["wHap", 
              RowBox[{"a", ",", "male"}]], " ", 
             SubscriptBox["wDip", 
              RowBox[{"A", ",", "a", ",", "female"}]]}], "+", 
            RowBox[{"pXm", " ", 
             SubscriptBox["wHap", 
              RowBox[{"A", ",", "male"}]], " ", 
             SubscriptBox["wDip", 
              RowBox[{"A", ",", "A", ",", "female"}]]}]}], ")"}]}]}], ")"}]}],
       ")"}]}]}], ",", 
   RowBox[{"-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["wHap", 
        RowBox[{"A", ",", "female"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "freqYm"}], ")"}], " ", "pXm"}], "-", 
            
            RowBox[{"freqYm", " ", "pYm"}]}], ")"}], " ", 
          SubscriptBox["\[Alpha]", "female"], " ", 
          SubscriptBox["wHap", 
           RowBox[{"a", ",", "male"}]], " ", 
          SubscriptBox["wDip", 
           RowBox[{"A", ",", "a", ",", "female"}]]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"pXm", "-", 
            RowBox[{"freqYm", " ", "pXm"}], "+", 
            RowBox[{"freqYm", " ", "pYm"}]}], ")"}], " ", 
          SubscriptBox["wHap", 
           RowBox[{"A", ",", "male"}]], " ", 
          SubscriptBox["wDip", 
           RowBox[{"A", ",", "A", ",", "female"}]]}]}], ")"}]}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "freqYm"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "pXf"}], ")"}], " ", 
          SubscriptBox["wHap", 
           RowBox[{"a", ",", "female"}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "pXm"}], ")"}], " ", 
             SubscriptBox["wHap", 
              RowBox[{"a", ",", "male"}]], " ", 
             SubscriptBox["wDip", 
              RowBox[{"a", ",", "a", ",", "female"}]]}], "-", 
            RowBox[{"pXm", " ", 
             SubscriptBox["wHap", 
              RowBox[{"A", ",", "male"}]], " ", 
             SubscriptBox["wDip", 
              RowBox[{"a", ",", "A", ",", "female"}]]}]}], ")"}]}], "+", 
         RowBox[{"pXf", " ", 
          SubscriptBox["wHap", 
           RowBox[{"A", ",", "female"}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "pXm"}], ")"}]}], " ", 
             SubscriptBox["wHap", 
              RowBox[{"a", ",", "male"}]], " ", 
             SubscriptBox["wDip", 
              RowBox[{"A", ",", "a", ",", "female"}]]}], "+", 
            RowBox[{"pXm", " ", 
             SubscriptBox["wHap", 
              RowBox[{"A", ",", "male"}]], " ", 
             SubscriptBox["wDip", 
              RowBox[{"A", ",", "A", ",", "female"}]]}]}], ")"}]}]}], ")"}]}],
       ")"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.698516781538645*^9, 3.698516856911243*^9, 3.698516910103222*^9, {
   3.6985169437549753`*^9, 3.6985169605321617`*^9}, 3.6985868157254353`*^9, 
   3.698757979526286*^9, 3.699209108493339*^9, 3.704224234215554*^9, 
   3.704482362345174*^9, 3.706993235997797*^9, 3.708263776332326*^9, 
   3.708347944572485*^9, 3.7107083876393347`*^9, 3.710792884252151*^9, 
   3.710868891123085*^9, 3.7113725707010603`*^9, 3.711475118960779*^9, 
   3.711796079701316*^9, 3.712482752823823*^9, 3.712559113054267*^9, 
   3.7125592054863987`*^9, 3.713011811334093*^9, 3.713012432433255*^9, 
   3.7130795742646627`*^9, 3.7131779126217537`*^9, 3.7151125782823563`*^9, 
   3.715112691319104*^9},
 ExpressionUUID -> "72b4b9d3-7d45-4d08-acde-46e54e8ac0fb"]
}, Open  ]],

Cell["\<\
When the W with the allele not on the Y spreads, we have the SPO hypothesis, \
while when the W with the allele on the Y spreads, we have the MFS hypothesis.\
\>", "Text",
 CellChangeTimes->{{3.698518893866235*^9, 
  3.698518950418311*^9}},ExpressionUUID->"b304c605-415d-451e-8ca8-\
ccb151c2a968"]
}, Closed]],

Cell[CellGroupData[{

Cell["Parameters - male drive", "Subsubsection",
 CellChangeTimes->{{3.708264596129162*^9, 3.70826465145201*^9}, 
   3.7082655994495697`*^9, 3.7082656864074907`*^9, {3.7082871550004168`*^9, 
   3.7082871556906557`*^9}, {3.71137068020173*^9, 3.7113706859365587`*^9}, 
   3.711372159008786*^9, {3.7113750419844513`*^9, 3.711375060592574*^9}, 
   3.7113751601780663`*^9, {3.7113869231866426`*^9, 3.7113869323293343`*^9}, {
   3.711475974883295*^9, 3.711475978849615*^9}, 3.711796875678649*^9, {
   3.712487753555662*^9, 3.712487756828652*^9}, {3.713011844772447*^9, 
   3.71301185427815*^9}},ExpressionUUID->"a0c9595c-8294-4544-811d-\
29715392d650"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"someparams", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      SubscriptBox["wHap", 
       RowBox[{"a", ",", "sex_"}]], "\[Rule]", "1"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["wHap", 
       RowBox[{"A", ",", "sex_"}]], "\[Rule]", "1"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["\[Alpha]", "female"], "\[Rule]", 
      RowBox[{"1", "/", "2"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["wDip", 
       RowBox[{"A", ",", "A", ",", "sex_"}]], "\[Rule]", 
      RowBox[{"1", "+", "s"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["wDip", 
       RowBox[{"a", ",", "A", ",", "sex_"}]], "\[Rule]", 
      RowBox[{"1", "+", 
       RowBox[{"h", " ", "s"}]}]}], ",", 
     RowBox[{
      SubscriptBox["wDip", 
       RowBox[{"A", ",", "a", ",", "sex_"}]], "\[Rule]", 
      RowBox[{"1", "+", " ", 
       RowBox[{"h", " ", "s"}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["wDip", 
       RowBox[{"a", ",", "a", ",", "sex_"}]], "\[Rule]", "1"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["\[Alpha]", "male"], "\[Rule]", 
      RowBox[{
       RowBox[{"1", "/", "2"}], "+", "\[Alpha]md"}]}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"moreparams", "=", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"h", "\[Rule]", 
       RowBox[{"3", "/", "4"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"recAMnotAX", "\[Rule]", "0"}]}], "\[IndentingNewLine]", 
     "}"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{"charpolyYAXAar0", "/.", "someparams"}], ",", "posassumps"}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"intYAXAar0", "=", 
    RowBox[{
     RowBox[{"\[Lambda]", "/.", 
      RowBox[{"Solve", "[", 
       RowBox[{
        RowBox[{"%", "\[Equal]", "0"}], ",", "\[Lambda]"}], "]"}]}], "//", 
     "Flatten"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{"charpolyYaXAar0", "/.", "someparams"}], ",", "posassumps"}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"intYaXAar0", "=", 
   RowBox[{
    RowBox[{"\[Lambda]", "/.", 
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{"%", "\[Equal]", "0"}], ",", "\[Lambda]"}], "]"}]}], "//", 
    "Flatten"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.69791419088354*^9, 3.697914204107209*^9}, {
   3.69791423675738*^9, 3.697914267442163*^9}, {3.697914332513447*^9, 
   3.697914344706374*^9}, {3.6979210568048067`*^9, 3.697921086163679*^9}, {
   3.697921161278735*^9, 3.69792116307207*^9}, {3.697923698797831*^9, 
   3.6979237516937227`*^9}, {3.69792439200351*^9, 3.697924448790558*^9}, {
   3.697924546414797*^9, 3.697924651712484*^9}, 3.6979249626931677`*^9, {
   3.6979252361103277`*^9, 3.6979252781015997`*^9}, {3.697925865210726*^9, 
   3.697925906632759*^9}, {3.6979259919838133`*^9, 3.69792599286863*^9}, {
   3.697926282493573*^9, 3.697926298691634*^9}, {3.69792633000852*^9, 
   3.697926363936458*^9}, {3.6979265871865673`*^9, 3.697926593914707*^9}, 
   3.697989793786848*^9, {3.697989884811812*^9, 3.6979899000758*^9}, {
   3.69799030526079*^9, 3.697990455812793*^9}, {3.697990878903956*^9, 
   3.697990879016015*^9}, {3.698505224191556*^9, 3.698505279118783*^9}, {
   3.6985884845824614`*^9, 3.698588563629053*^9}, 3.698588615905355*^9, {
   3.6985886754283657`*^9, 3.698588780187793*^9}, {3.698589304512279*^9, 
   3.698589318027289*^9}, {3.698589833723196*^9, 3.698589850157795*^9}, {
   3.6986037137243843`*^9, 3.698603713821808*^9}, {3.698613813894794*^9, 
   3.698613813976364*^9}, {3.69875804231399*^9, 3.6987580952477293`*^9}, {
   3.708264756710517*^9, 3.70826486735957*^9}, {3.708264901408318*^9, 
   3.708265012641108*^9}, {3.7082650747312317`*^9, 3.708265158807321*^9}, {
   3.708265357326613*^9, 3.7082654072179003`*^9}, {3.708265688150424*^9, 
   3.708265688964964*^9}, {3.708266698979836*^9, 3.7082668815205307`*^9}, {
   3.7113707457391863`*^9, 3.711370746006536*^9}, {3.711372444673503*^9, 
   3.711372470970936*^9}, {3.711375074476313*^9, 3.711375105762352*^9}, {
   3.711375171651992*^9, 3.711375177717349*^9}, {3.7113912010190487`*^9, 
   3.711391206270217*^9}, {3.71139124623836*^9, 3.7113912466140957`*^9}, {
   3.711474858918627*^9, 3.7114748591022863`*^9}, {3.7124825822801332`*^9, 
   3.712482626916399*^9}, {3.712492712070631*^9, 3.712492712215355*^9}, {
   3.712559688942739*^9, 3.7125596890200987`*^9}, {3.712559732337173*^9, 
   3.712559734481785*^9}, {3.712560207989962*^9, 3.7125602347713223`*^9}, {
   3.712561017124344*^9, 3.712561018345109*^9}, 3.7130118306370897`*^9, {
   3.7130121369433813`*^9, 3.7130121478791523`*^9}, 3.713012812008912*^9, {
   3.7130129837575293`*^9, 3.713012984270946*^9}, {3.713081028729556*^9, 
   3.713081052410268*^9}},ExpressionUUID->"7d0c311a-ebee-418d-99a9-\
f4a279b21118"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{{3.713081045703207*^9, 
  3.713081054881428*^9}},ExpressionUUID->"eb31cb2f-ff35-4dda-af46-\
1539fc7facb2"],

Cell[BoxData[
 TemplateBox[{
  "Flatten","normal",
   "\"Nonatomic expression expected at position \
\\!\\(\\*RowBox[{\\\"1\\\"}]\\) in \\!\\(\\*RowBox[{\\\"Flatten\\\", \
\\\"[\\\", \\\"\[Lambda]\\\", \\\"]\\\"}]\\).\"",2,1034,63,
   29230388600069974847,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.7130810457225018`*^9, 
  3.713081054899356*^9}},ExpressionUUID->"94f5dc89-2290-4b8d-94ac-\
6b9829b30fab"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{{3.713081045703207*^9, 
  3.713081056099454*^9}},ExpressionUUID->"9bb6b0a3-3d7e-40f9-8f1e-\
40f9876b4e42"],

Cell[BoxData[
 TemplateBox[{
  "Flatten","normal",
   "\"Nonatomic expression expected at position \
\\!\\(\\*RowBox[{\\\"1\\\"}]\\) in \\!\\(\\*RowBox[{\\\"Flatten\\\", \
\\\"[\\\", \\\"\[Lambda]\\\", \\\"]\\\"}]\\).\"",2,1036,64,
   29230388600069974847,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.7130810457225018`*^9, 
  3.713081056119236*^9}},ExpressionUUID->"11775546-c069-493f-82b1-\
65fe53c63dbc"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"bothfixedA", "=", "\[IndentingNewLine]", 
    RowBox[{"RegionPlot", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Max", "[", 
          RowBox[{"Abs", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"\[Lambda]", "/.", "YaXAEigs"}], "/.", "someparams"}], "/.",
              "moreparams"}], "//", "Flatten"}], "]"}], "]"}], "<", "1"}], 
        ")"}], "&&", 
       RowBox[{"(*", 
        RowBox[{"internally", " ", "stable"}], "*)"}], "\[IndentingNewLine]", 
       
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"\[Lambda]WA", ">", "1"}], "/.", "eqr0YaXA"}], "/.", 
          "someparams"}], "/.", "moreparams"}], ")"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"\[Alpha]md", ",", 
        RowBox[{
         RowBox[{"-", "1"}], "/", "2"}], ",", 
        RowBox[{"1", "/", "2"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"s", ",", 
        RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Gray", ",", 
         RowBox[{"Opacity", "[", "0.25", "]"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"BoundaryStyle", "\[Rule]", "None"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"MaxRecursion", "\[Rule]", "2"}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"bothfixeda", "=", "\[IndentingNewLine]", 
    RowBox[{"RegionPlot", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Max", "[", 
          RowBox[{"Abs", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"\[Lambda]", "/.", "YaXAEigs"}], "/.", "someparams"}], "/.",
              "moreparams"}], "//", "Flatten"}], "]"}], "]"}], "<", "1"}], 
        ")"}], "&&", 
       RowBox[{"(*", 
        RowBox[{"internally", " ", "stable"}], "*)"}], "\[IndentingNewLine]", 
       
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"\[Lambda]Wa", ">", "1"}], "/.", "eqr0YaXA"}], "/.", 
          "someparams"}], "/.", "moreparams"}], ")"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"\[Alpha]md", ",", 
        RowBox[{
         RowBox[{"-", "1"}], "/", "2"}], ",", 
        RowBox[{"1", "/", "2"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"s", ",", 
        RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Gray", ",", 
         RowBox[{"Opacity", "[", "0.25", "]"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"BoundaryStyle", "\[Rule]", "None"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"MaxRecursion", "\[Rule]", "2"}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"XpolymorphicA", "=", "\[IndentingNewLine]", 
    RowBox[{"RegionPlot", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Max", "[", 
          RowBox[{"Abs", "[", 
           RowBox[{"intYaXAar0", "/.", "moreparams"}], "]"}], "]"}], "<", 
         "1"}], ")"}], "&&", 
       RowBox[{"(*", 
        RowBox[{"internally", " ", "stable"}], "*)"}], "\[IndentingNewLine]", 
       
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"\[Lambda]WA", ">", "1"}], "/.", "eqr0YaXAa"}], "/.", 
          "someparams"}], "/.", "moreparams"}], ")"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"\[Alpha]md", ",", 
        RowBox[{
         RowBox[{"-", "1"}], "/", "2"}], ",", 
        RowBox[{"1", "/", "2"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"s", ",", 
        RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Gray", ",", 
         RowBox[{"Opacity", "[", "0.25", "]"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"BoundaryStyle", "\[Rule]", "None"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"MaxRecursion", "\[Rule]", "2"}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Xpolymorphica", "=", "\[IndentingNewLine]", 
   RowBox[{"RegionPlot", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Max", "[", 
         RowBox[{"Abs", "[", 
          RowBox[{"intYaXAar0", "/.", "moreparams"}], "]"}], "]"}], "<", 
        "1"}], ")"}], "&&", 
      RowBox[{"(*", 
       RowBox[{"internally", " ", "stable"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"\[Lambda]Wa", ">", "1"}], "/.", "eqr0YaXAa"}], "/.", 
         "someparams"}], "/.", "moreparams"}], ")"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\[Alpha]md", ",", 
       RowBox[{
        RowBox[{"-", "1"}], "/", "2"}], ",", 
       RowBox[{"1", "/", "2"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"s", ",", 
       RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Gray", ",", 
        RowBox[{"Opacity", "[", "0.25", "]"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"BoundaryStyle", "\[Rule]", "None"}], ",", "\[IndentingNewLine]", 
     RowBox[{"MaxRecursion", "\[Rule]", "2"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.69791419088354*^9, 3.697914204107209*^9}, {
   3.69791423675738*^9, 3.697914267442163*^9}, {3.697914332513447*^9, 
   3.697914344706374*^9}, {3.6979210568048067`*^9, 3.697921086163679*^9}, {
   3.697921161278735*^9, 3.69792116307207*^9}, {3.697923698797831*^9, 
   3.6979237516937227`*^9}, {3.69792439200351*^9, 3.697924448790558*^9}, {
   3.697924546414797*^9, 3.697924651712484*^9}, 3.6979249626931677`*^9, {
   3.6979252361103277`*^9, 3.6979252781015997`*^9}, {3.697925865210726*^9, 
   3.697925906632759*^9}, {3.6979259919838133`*^9, 3.69792599286863*^9}, {
   3.697926282493573*^9, 3.697926298691634*^9}, {3.69792633000852*^9, 
   3.697926363936458*^9}, {3.6979265871865673`*^9, 3.697926593914707*^9}, 
   3.697989793786848*^9, {3.697989884811812*^9, 3.6979899000758*^9}, {
   3.69799030526079*^9, 3.697990455812793*^9}, {3.697990878903956*^9, 
   3.697990879016015*^9}, {3.698505224191556*^9, 3.698505279118783*^9}, {
   3.6985884845824614`*^9, 3.698588563629053*^9}, 3.698588615905355*^9, {
   3.6985886754283657`*^9, 3.698588780187793*^9}, {3.698589304512279*^9, 
   3.698589318027289*^9}, {3.698589833723196*^9, 3.698589850157795*^9}, {
   3.6986037137243843`*^9, 3.698603713821808*^9}, {3.698613813894794*^9, 
   3.698613813976364*^9}, {3.69875804231399*^9, 3.6987580952477293`*^9}, {
   3.708264756710517*^9, 3.70826486735957*^9}, {3.708264901408318*^9, 
   3.708265012641108*^9}, {3.7082650747312317`*^9, 3.708265158807321*^9}, {
   3.708265357326613*^9, 3.7082654072179003`*^9}, {3.708265688150424*^9, 
   3.708265688964964*^9}, {3.708266698979836*^9, 3.7082668815205307`*^9}, {
   3.708267185586544*^9, 3.708267196826241*^9}, {3.7082675323948603`*^9, 
   3.708267532985468*^9}, {3.7082675734459543`*^9, 3.708267576453854*^9}, {
   3.7082682937576733`*^9, 3.708268295680781*^9}, {3.7113707155192127`*^9, 
   3.711370729731615*^9}, {3.711370792225245*^9, 3.711370828115415*^9}, {
   3.711371063092106*^9, 3.711371063757251*^9}, {3.711372144469955*^9, 
   3.7113721753248243`*^9}, {3.7113723412610397`*^9, 3.711372350993482*^9}, {
   3.711372826645961*^9, 3.711372834477874*^9}, {3.7113743080460997`*^9, 
   3.7113743149408293`*^9}, {3.711374982870043*^9, 3.7113749857732067`*^9}, {
   3.711386976094173*^9, 3.7113871196229973`*^9}, {3.71138730852668*^9, 
   3.7113873209295588`*^9}, {3.711391212371595*^9, 3.7113912239549627`*^9}, {
   3.711474886567898*^9, 3.711474904791568*^9}, {3.7114750103602667`*^9, 
   3.711475036828904*^9}, {3.711475085124415*^9, 3.711475099411407*^9}, {
   3.7130121953925467`*^9, 3.7130122038152847`*^9}, {3.713012634133914*^9, 
   3.71301263824895*^9}, {3.713012700596148*^9, 3.713012700690166*^9}, {
   3.713012779031542*^9, 
   3.713012791717905*^9}},ExpressionUUID->"80201ebc-58ac-4164-98b5-\
ad9d15682d5d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"YaIntStable", "=", 
   RowBox[{"RegionPlot", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Max", "[", 
         RowBox[{"Abs", "[", 
          RowBox[{"intYaXAar0", "/.", "moreparams"}], "]"}], "]"}], "<", 
        "1"}], ")"}], "||", 
      RowBox[{"(*", 
       RowBox[{"internally", " ", "stable"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Max", "[", 
         RowBox[{"Abs", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"\[Lambda]", "/.", "YaXAEigs"}], "/.", "someparams"}], "/.",
             "moreparams"}], "//", "Flatten"}], "]"}], "]"}], "<", "1"}], 
       ")"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\[Alpha]md", ",", 
       RowBox[{
        RowBox[{"-", "1"}], "/", "2"}], ",", 
       RowBox[{"1", "/", "2"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"s", ",", 
       RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotStyle", "\[Rule]", "None"}], ",", "\[IndentingNewLine]", 
     RowBox[{"BoundaryStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Black", ",", "Thick"}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"MaxRecursion", "\[Rule]", "2"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.711474925092482*^9, 3.71147496716144*^9}, {
   3.711475038965263*^9, 3.711475062759836*^9}, {3.7114753145796022`*^9, 
   3.711475322770665*^9}, {3.711475370926453*^9, 3.7114754140461817`*^9}, {
   3.711475452043969*^9, 3.711475500965314*^9}, 3.713012207087121*^9, 
   3.713012638998308*^9},ExpressionUUID->"59285ff9-7b59-4f4c-8e94-\
64e9bc705ddc"]
}, Closed]],

Cell[CellGroupData[{

Cell["Plot", "Subsubsection",
 CellChangeTimes->{{3.708291374414747*^9, 
  3.7082913765974817`*^9}},ExpressionUUID->"162c849f-b770-4a9b-a90c-\
b6fe919f4a2c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"plot1A", "=", 
   RowBox[{"Show", "[", "\[IndentingNewLine]", 
    RowBox[{
    "bothfixedA", ",", "\[IndentingNewLine]", "XpolymorphicA", ",", 
     "\[IndentingNewLine]", "bothfixeda", ",", "\[IndentingNewLine]", 
     "Xpolymorphica", ",", "\[IndentingNewLine]", "YaIntStable", ",", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.5"}], ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Frame", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"True", ",", "True", ",", "True", ",", "True"}], "}"}]}], 
       ","}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"ImageSize", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"xsize", ",", "xsize"}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotRangePadding", "\[Rule]", "0"}], ",", "\[IndentingNewLine]", 
     RowBox[{"FrameTicks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"x", ",", "x", ",", "ticksize"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", 
            RowBox[{"-", "0.5"}], ",", "0", ",", "0.25"}], "}"}]}], "]"}], 
        ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"y", ",", "y", ",", "ticksize"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"y", ",", "0", ",", "1", ",", "0.5"}], "}"}]}], "]"}], ",",
         "None", ",", "None"}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"FrameTicksStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Directive", "[", 
           RowBox[{"Black", ",", 
            RowBox[{"Thickness", "[", "lwd", "]"}]}], "]"}], ",", 
          RowBox[{"Directive", "[", 
           RowBox[{"Black", ",", 
            RowBox[{"Thickness", "[", "lwd", "]"}]}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Directive", "[", 
           RowBox[{"Black", ",", 
            RowBox[{"Thickness", "[", "lwd", "]"}]}], "]"}], ",", 
          RowBox[{"Directive", "[", 
           RowBox[{"Black", ",", 
            RowBox[{"Thickness", "[", "lwd", "]"}], ",", 
            RowBox[{"FontColor", "\[Rule]", "White"}]}], "]"}]}], "}"}]}], 
       "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"FrameStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Black", ",", 
          RowBox[{"Thickness", "[", "lwd", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Black", ",", 
          RowBox[{"Thickness", "[", "lwd", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Black", ",", 
          RowBox[{"Thickness", "[", "lwd", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Black", ",", 
          RowBox[{"Thickness", "[", "lwd", "]"}]}], "}"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<Relative fitness of \!\(\*
StyleBox[\"aa\",
FontSlant->\"Italic\"]\) males\>\"", ",", "\"\<\>\""}], "}"}]}], ","}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"BaseStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], ",", 
        RowBox[{"FontSize", "\[Rule]", "14"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ImagePadding", "\[Rule]", "Pad"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Epilog", "\[Rule]", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Text", "[", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{"\"\<A\>\"", ",", "14", ",", "Bold"}], "]"}], ",", 
            RowBox[{"Scaled", "@", 
             RowBox[{"{", 
              RowBox[{"0.05", ",", "0.95"}], "}"}]}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Text", "[", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{"\"\<\!\(\*
StyleBox[SubscriptBox[\"\[Lambda]\", \"WA\"],
FontSlant->\"Italic\"]\)>1\>\"", ",", "14"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"1.29", ",", "0.5"}], "}"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Text", "[", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{"\"\<\!\(\*
StyleBox[SubscriptBox[\"\[Lambda]\", \"WA\"],
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"<\",
FontSlant->\"Italic\"]\)1 & \!\(\*
StyleBox[SubscriptBox[\"\[Lambda]\", \"Wa\"],
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"<\",
FontSlant->\"Italic\"]\)1\>\"", ",", "14"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.5", ",", "0.5"}], "}"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Text", "[", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{"\"\<Ya equilibrium unstable\>\"", ",", "14"}], "]"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"0.5", ",", "1.25"}], "}"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Text", "[", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{"\"\<*\>\"", ",", "18"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"1.2", ",", "0.85"}], "}"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Rotate", "[", 
           RowBox[{
            RowBox[{"Text", "[", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{"\"\<Relative fitness of \!\(\*
StyleBox[\"AA\",
FontSlant->\"Italic\"]\) males\>\"", ",", "14"}], "]"}], ",", 
              RowBox[{"Scaled", "@", "ylabpos"}]}], "]"}], ",", 
            RowBox[{"90", " ", "Degree"}]}], "]"}]}], "\[IndentingNewLine]", 
         "}"}]}], ","}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"PlotRangeClipping", "\[Rule]", "True"}]}], 
    "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{"plotdir", "<>", "\"\<regionplot_2_Female_A.pdf\>\""}], ",", 
      "%"}], "]"}], ";"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.708267985099811*^9, 3.708267989570319*^9}, {
   3.708268041250675*^9, 3.7082680810425158`*^9}, {3.708268118487771*^9, 
   3.708268121126305*^9}, {3.708268268066489*^9, 3.70826827554463*^9}, {
   3.708350249357357*^9, 3.70835026123699*^9}, {3.708350297167807*^9, 
   3.708350409763027*^9}, {3.708352686831295*^9, 3.7083528333666773`*^9}, {
   3.708352868657325*^9, 3.7083530692688217`*^9}, {3.708353115276188*^9, 
   3.708353194253536*^9}, {3.708353379246372*^9, 3.708353388550728*^9}, {
   3.7083535989918137`*^9, 3.7083536283355227`*^9}, {3.710868251778583*^9, 
   3.7108682622771273`*^9}, {3.71087011391715*^9, 3.710870115771612*^9}, {
   3.711370865703402*^9, 3.711370878260462*^9}, {3.711372412223158*^9, 
   3.711372419799553*^9}, {3.711373360079027*^9, 3.711373360965246*^9}, {
   3.7113746969426537`*^9, 3.71137469708457*^9}, {3.711374799783164*^9, 
   3.711374891781783*^9}, {3.711375236683269*^9, 3.711375236783635*^9}, {
   3.711382181849908*^9, 3.711382184798916*^9}, {3.7113871694311666`*^9, 
   3.7113871979430637`*^9}, {3.711391233801846*^9, 3.71139123556815*^9}, 
   3.711475237620105*^9, {3.7114755423254843`*^9, 3.711475801569694*^9}, {
   3.71147583434204*^9, 3.711475854172817*^9}, {3.711796289334046*^9, 
   3.7117962951713543`*^9}, {3.7124873313285503`*^9, 3.712487333930496*^9}, {
   3.712559052738544*^9, 3.712559054305307*^9}, {3.7130126612291718`*^9, 
   3.7130126873941603`*^9}, {3.71301274872731*^9, 3.713012750877109*^9}, {
   3.713014542230651*^9, 3.713014594286989*^9}, 
   3.71307956208044*^9},ExpressionUUID->"03c2ddc9-950d-45c9-8e61-\
e390218d28a7"],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1: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
8cTMPfesOeXw/cDhn4uCE3DiiDXt1j4WmPFTu4/IlojDQuYM0cZXQd95Yz3U
y05jwn2XCXJRDXy8oKCPUXcam/+cekK1ugamzztssx4qRldzbRDfcZfNj5em
l2ZH4h0o/iRUouxVihvrMk0OrAOf8PI4TWUprkyPSFdNqoet9ZvsptYzWFaq
2KUJuA+/39s8Tj65gs1Xt7ykd7TvXkMfp4PJKh8bvIyPclZfq0AfU62z9rkV
YjvKx8vV55m94XcDisvScKGnX4U41QYOt8k2k8rA+s8xIW/pmFzk5aYe/xC8
XjQF8gojRq2a7qTNewTi0WOSNMPNePvkxATVq2b4tXBYoGhXBuMnKO1Jf6NH
BlqDtP9QP26GUdZL7dbqDLztF71P8/r9s25zOsiXWNh7Z0za2ZviFjNalwVm
ybLbIM689on1kAXdTk16avBth95x1bE6LpPZS8bvWyoKzsT/nEytsS56DPX/
cn3g2JaJ7u9HuSlPPwbfzSv7GT2y8NHiUfPtke1QHuT/h6k1E398NVusbHwC
vTfO3s4Vv31f0Xsr9XNJqSOxHZb0m1Ipnp3Fvjs7HpY7tl1j/S3V69VS0ehM
1s9IP/1GbdunqWyF/E8nTpB36tHvUIKf9JNc+GzIwDhdwmXUp9ev58OqYNSx
6DDeswi3Vp/2lh/lQaq1vzA8eP17ZUOvOdLYBtC/F+4p7zyHdzbubbOmNMDP
30Xw1kPXkUvv7TCsb4IfThUv5zMuYcP3+5fxHdfhYZa+3fq6v65evWS4Mr4N
AqfVb9ZxMey983+oCsB1
    "], {{{
       {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[0.25], EdgeForm[None],
         GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwBwAI//SFib1JiAgAAAOUAAAADAAAAdmE6Hx4DHQQGZWQiYwYJPQgLDAgJ
aGclZgsOTUwMJg0REg0OUVAPQBEVFhESVlUTKBQYGRQVGhUWNh4EVRYSIR0F
ZGMIIwkGWlkXPj0KCAwLJAwJTA4LJyYQERYVDRIRQUAUZ2YNUBIOIAYEFBkY
XUsvWRoWamBENCodch0GRB4CMSseKyAEPCwgMiEFbm1ILCMGLSQJLyUNNS8m
ayYRKSgYHSoEHisEIy0JFRoZJC4MJi8NKDAUICwGHzEeITQdJzUmHjYCKjcE
bzoBcXBgNjkCNzYEbzs4XDsBaUg9dD0LaT4HbkkibGtAQkEUbEEQPz4KFEAV
MEIURUQCK0YgLEcjSUgHPUgIHkQDO0M4O28BSUoiDEwLTE0PL0slTk0MTU8P
D1AODkwPElATUFETUlEPUVMTQVQQakUcE1USVVYXXlIPFlUXV1YTX1cTVlgX
WVobM1wBNV0vT14PYWAcGlkbU18TRGADc2QFcWE4YWI6ZGUFc3JjbWQIYmEc
CGMJdm84dXRmQWxAF1kWZ2gKPmk9YGocSGkHdWcKJWcNRWpEJmsQZG0iSG0I
DWYObW4ia2wQQGsRSW5ILk4MYHADkPgh6qgwg7MB55xX8fJbn+kogogQw8Qj
kaMiycoky4Au45hSgPsumvwnof0qYXY4h5IH7/Mbq6oyhIwC7PBaqP4wb3Y6
ia4z044fYXFgPXQK+HohHXIF/qkwnehYZHNjZnQLcnMFk9lKdHUKl+FP/aIq
+6UusI8fZ3Vmvro6jbk5meRTm+VU9e0XY3IGzs9Dj9Mfu4s7vK8DxX4td4MB
fYcH6Z4o6PZY/IEn2n0H3ZUl7uxacHE4rJont7wD1tdHxts+1NVGrYkzir0c
laQlur860Yoc0NJFwoY8tK0z3t9LucA5eIQClMkkftwtyMc/E93XAQ==
           "]], 
          PolygonBox[{{133, 121, 43, 49}, {160, 187, 59, 92}, {123, 171, 50, 
           5}, {177, 161, 42, 52}, {122, 177, 52, 33}, {205, 204, 65, 66}, {
           127, 200, 63, 10}, {136, 172, 39, 16}, {175, 176, 31, 3}, {142, 
           133, 49, 31}, {134, 124, 44, 60}, {166, 227, 82, 94}, {199, 198, 
           62, 63}, {150, 224, 77, 78}, {152, 226, 81, 82}, {156, 230, 86, 
           87}, {167, 231, 87, 95}, {210, 209, 28, 69}, {179, 180, 51, 1}, {
           193, 194, 60, 32}, {184, 255, 112, 56}, {196, 197, 45, 35}, {192, 
           120, 2, 57}, {191, 119, 1, 58}, {189, 247, 98, 28}, {228, 167, 95, 
           83}, {178, 244, 93, 53}, {174, 160, 92, 51}, {225, 166, 94, 79}, {
           181, 141, 57, 54}, {219, 218, 7, 62}, {202, 203, 46, 36}, {169, 
           205, 66, 48}, {207, 184, 56, 67}, {139, 206, 67, 59}, {213, 193, 
           32, 70}, {121, 212, 70, 43}, {215, 195, 35, 71}, {124, 214, 71, 
           44}, {216, 147, 74, 73}, {217, 145, 34, 74}, {242, 235, 41, 91}, {
           235, 159, 40, 41}, {247, 190, 58, 98}, {249, 123, 5, 101}, {164, 
           250, 104, 37}, {220, 148, 36, 45}, {129, 178, 53, 39}, {162, 182, 
           55, 42}, {163, 249, 101, 34}, {140, 208, 69, 2}, {146, 216, 73, 
           7}, {170, 144, 33, 50}, {182, 181, 54, 55}, {230, 157, 88, 86}, {
           246, 245, 23, 88}, {158, 234, 48, 40}, {224, 151, 79, 77}, {204, 
           155, 84, 65}, {237, 238, 90, 23}, {165, 150, 78, 46}, {244, 222, 
           75, 93}, {223, 221, 37, 75}, {240, 239, 27, 90}, {229, 130, 16, 
           84}, {226, 153, 83, 81}, {250, 127, 10, 104}, {255, 183, 3, 
           112}}]}]}}, {}, {}, {}, {}}}], GraphicsComplexBox[CompressedData["
1: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
vpdMEfKTyf8AB3Bo8g==
    "], {{{
       {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[0.25], EdgeForm[None],
         GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNlmdslmUUhs/XAaW0lLIKFKi0QFvZBZUqKCputIg4iorKMAi1FAxFLETF
EUeciTPuEY2KUeMe8Ydxr/jDOBLj3ibuPe8752rsjyvv0/M+73nOuc95ztfx
y9ct7iyKiJ9FsThYLBSjxUYxFnudKBVlYqloFwPFBNEg+vF3f/aswE+tqMde
LlbzrBRNokIMFjViiBgq1mLzer3oEtVQwbcniw6xo1gmjhXDxBhid8xT8TlC
tGEvEWvESaJRjCPHUnxXc3YDedg+GbvPnUQ+A8REci7D32p89MfuPGeLudg6
yM0xHSimi1FiPPp6zwZynkJONegwjXyG830NeR0mFuOni72Ofwbau7a7oktv
HVvIq5TcXbvd0MK2fYnbeZ7K07lsEt1oOZe4HfMCfPbmUIcm/dDRPvcTu1Dz
fSL7xu93Qkfvb6Wezm8e7/z9aXznvHYXzaIKf41o3kmdXKM9xBz+noOW1Wg3
Fd3mo39B7M/ZfrcX2lm3vcVMNNoiZhHzWOzFaDObvBuIuYycdo7sgyZiregT
k+NZKY7i3SpxDHHMpGb2v5WzNxJfK/q0ULNS9GhCk3Y0KEfjecQ1C90d/yRq
XE8NF1CzZupkX+6pJZF9dUJkv3o9Db0cy57iADSczh6vfc98933XlkfOFNtq
sRex9yD2+/0h2N1ji8QOfNOGDotYl3Dm/D7nHk5s1v7I+P9etqNDJ+tBaG3N
G7EtxW7/R3BuK7VwLx7NHvvzfPGd9B2rYT2S5zLWfh7PegnaObbjeDcMDVaQ
i7VcxZkL0aKIOqwk3s2R99DzZZKSfjyy5yqwVbLHM8hzaR05O6+eyPvjueOe
84zwPRqCbSh5dmDz07O1Ch/2NRmtOjnLPdmNVm2sXSPPD9+ZsZyznnz9t/vX
vTcFezXPDezpZk8xMXVh7yGmKvZs4txFrNvIezNaNJFvFZptRpO12Afjr6eP
rYf99rOG/av5vpy4thD/LNaOoXc+en+T6tIsTiHOrXxXJdvAQtZ7op6PRN7d
Rs6rwN9WfE7QnociZ4Dnh/vPvXeP6F/I3vpUfBbZ5x+JD9GjVu/PjbzTv4pb
ImfAGNnPi7z3f4rbOf8L8SU1uVH8EnkH6rT/wsh5UND6zsgeGaX1WdT5WXEb
Pr8SX4tDXVfteTOy964XIwv523MD3/vbh9GihZwGkJe/u4hvy2V7IHJ+9NP6
7sg7NEXrM/Q8UYzQelgh1xV6vhF5p6x3JZo/FnlnfF/G6fkkuo7W+lHq+a54
LXL2vy8+iJxH9nc2Pp8R57D/bfFK5PxrkJ/7IufQ+eIK+uFzcQFnXS7eibzX
28TrkZr4zGs51/6uwefz4rnI3zrbXsX+sfgkco6e7prQby+K7ZGz2Xpvw3+9
1pdgf0m8FTkzXxBXRv5O3ivei5zFL4urI2fr9+KHyBn2YGRfuieHF7IG1vwb
au+6F8lWXMi5+Zf4O3LOXiquivzt/ScyAM/TMyP/55xBToMKmdddkX3pnvxd
/BE5092nT2P/Tnwb+b/Pj+KnyN+AfyP7z/3jnn0qsm/d709E9rz79DJivjXy
nviO3BHZ9+5597XvjHv7JvFb5G/ndjSdRi+4h9wP11GbWmruPnPdb468k76P
ng2umet1sSgp5P8B99ND7p//ALd121k=
           "]], PolygonBox[CompressedData["
1:eJwt1HeIz3Ecx/H39+cIcSecTfcr88gmmWeviJ8ZMs7xK8XVub9FZGRlyx5F
RvYe5+yVCNm78I+9snm++7z+ePSdn/V+vz+feHZuYlLMzAYjBe/wAQNQGQ9x
FVnoiSd4ir7og01YinaoCYvM/nFJxTCcwBYMR0uU4ftvrkORg9UoybtsrlWw
ApfREOn4ojn5XAZhGc6jNkrgLu6hYxjajmADuqIZMnlZDvncT8Zs3EI39bEc
C9AKHXAQhWiNJvr3KJqrzU0cQlN0QQGK0f8oruUVi1looZjMw0W0Rxqmor7m
Mx578Flra4S5uI3uqIdvOIMM5WgJpqExkqhIX+lR6Muf/+AX6ijGMzVnn2sc
z7FeffXDdNxAZ9TQWGcVOx/zGM6hrWLg/x5QbLzNYZxGG8VkBl6ob6+nVdiv
+XbCdeXcc10NZZl7DCO4H4dU7tMwlvuquKN//FsPC7msoPXmK1ZeUzmK2UK1
8X+9hu7jgcaOKTc/MEQ5KkLbCJkW5nDKY8dzHtcGntMoxDypfJXmuVQU1uZz
jHO/zXOKXLUtUC3kKdd1o1B7Pt+MKNSE18JExcZzmFSMPmE3xmAgqvNtjoVa
n4CiPO/kOhoj/T3PxVFJ7xZhChLor9xtVO49h9+x2cJe9T2yz8Ke9r3se/Ar
1ij2Pp9nWKzY+Z5/jCsW9lpvjfVRc/UxT2qNvjaP6UrstVDbWVrbI/TSGlP4
d7ti7XvwLd5o7gn9u0tjeZvjionHwmt8vnLgsfczx8+avxbOHj9z3qtP78vP
tB2KocfO9+wrvLZwNtWykMtLFs4Cz6nX9joLe8Nr/JqFM9HPQj9zLmCrhb3q
e7wQay3Utp8hP/FSfXvN/QcQLZSI
           "]]}]}}, {}, {}, {}, {}}}], 
   GraphicsComplexBox[CompressedData["
1:eJxlVntYjPkeD6ETEVral7W12XbkEmocnOVrDcdltZvWWh4ZFlk1KOQyHSu3
HavdFA0lkanQUk3akurl22Wamm5mKk1SUc10k8pY13OOd/P2/H49D3+8z/f5
vN/f7/e9X+w3+np49TczM+vq+d7RV5mWwTJTJLI8vQaThha2GYSpOI6nKopV
qY62cr0WSniajQGbvLOEcj0c4WkBThuZINa711M+wYS/e8PLQ6yskeKy9AgP
K6MRZvHnynDi8DkTxKI2yieY8I9tefA8SdFB+QQTftPtAwUc1wVtvXZgMU8z
obGX4qe8HZVUP4K/6LUT7/Hnauh5gut4WoR2/DkDPa/m33lE3yOY8Ml5cv8A
r3cL5RNM9Ce4qNfP6Mr/76SY2EfeI3yC37efxI/YQ+JHMIkf0YfEh7xH4kP4
BBN9iP9n8Pw4zOn1AwTw7+RiCX/+Hsh4OekUE36UZchygbIBpvFx1uDQrTZh
EkEXjM56Jz8IL/bmJczl7byDu/h75RDEyy3By1b9jivYZirfpjdPgeQzwUQ+
uU/ymWAin/iP8Mt7/UDvT+mNE80/Em9yn9ij5f8nU3+Q+/t671F9SX6S84RP
MJFH7r+fvyQ/iT8FvB73KX6/Pkk+En2X3Vyf5i5uovj9+FfxtJ3mJ8HNvJ/u
YqL17hym6DHND1LvlXyc8/EIH6daiom+JH4vf5w2XmplpPoSfcj7Zl4xq01M
O9WfyCfvEf4l3u86Gj+iD/EHyR+iD8FEX2IvkU/0I/lO5JP6JPI9MnRdGkkr
xaRfkfdIfRD/erIiJ5H0CeWT80QesYf4g+hL7CF4myvzNiw8mvbrG3EVKLRJ
o/XeMiWekVpdpZjky6vogfNES8sh7+s3LqLX6TQ/4pZ2dGuK+/p32PELR9lB
OTQfTjS1LhU4533Qr53WgUkzpAVyvNBWnHf3g/7dWSEJUNQ+gX1TmAT3i4U0
Psujos5KBBdw6/39RxVsPER3e46QK1Px6hcuuUI2D1rXuv2uYGPRONSgFtrk
gO3a6Ur3+ps4gE2t5qAKRB4SV1FGAfo6XDNqJtVD0PTOMfKX2WgTM+owu7cR
TlbUDZFuv4sHpyrcrNJawXzFhbUmn0J0KNi4TyHvgprqd35jsCbqHXWCvOKA
y+7iBHz6R6Q/K8sAVptiIQ/PwASeaiAofmMmUxRN6/XmqJwdbFUCSk46R0nM
iiA31rdQ6JqMdv2eD5MmlsKcQZNDFONyab26blkeJ9maj4UbZOUc3ocNLXt/
NDFplL/YzUXHBWaihfmnzqKMGuo/H7/MakNdHSxsm7tdb62m9fN46D4/tr4Y
maYRr3q6Fo1v3D91f0iWNEKId5Y3m4S0P9kLvnupmaTC/U+nLhCEtMDTx39y
Ycq+eVPlnO4ona3FRuH585KV7ZCi++gTaWI+Wldv2s3O7MHb7TLc5+lw+ZqU
20z7EwgbvGCPXqZDbnNBFmPWBVezHH302gI6j8j82bHqeKbQphA8bUO6kxT4
wfxJDQn5l+DbYprfuWUxH0sVejg3cHUJB7c/qM/iLyerhBcbYVjUygOsY1+9
aSPOWyob+uYRmU+n1y/LZnZ1QKigwcsUGYPdC1yqGMtsGHqDDVZ05OKcnyoW
CQLvgV/CyHOyz1SoGpDqoz+kh121MbGSwjRc4J/2bwFXCQbTQqHgYRnqKtIc
xQ9awLNx3tukhgK8pBttJt/XCa++CtrOyoKRdfktwV0cAacm+/7Myo7h6Qnf
fSNQXoL/j/7eT+8uR0/nR5VMUTL4rXZr4iAb7UaYuQl8dRBzK9VZnJeCJ8TT
9uhDdXBlfa1MtusOTgzf7CLoegiba2NlstN3ULqCTZRY98wbo3c/eXopepTN
7qec3gwNIz6xko8pwJUh/Uq5hx10/i2yPWkl11+BY/7V3QZhKJ2nEOi1T+8e
SvsHmbfVw1f1U9pfAQeTeTHHXcCZ0VadGkkGeIy8/h9Wdhn/Gmj8wcqYQt/v
TirXc3gT3samNxqEEXTeul5fmC2sTMVI9sRBtrmCztPqY5mRshkVIFiRPVCp
+JPO3w11g85L4jPpvL1Q236bKUqk+Ll4RbCsKBNxtOp3GVMMkZ4+y628NDS/
T9a5lXMPNbjD4Zc9+g0NMK7EwkZaWoQjvfeqhP6NUJ9f95Mp4Aam8nWaDfN/
iAtQsIkfzN/HWWlZjCWC28xHjuK8dEwONX1r5VUA/d/OyXS/mIxvCsNZJqgM
1M6+juIBhehff0PDYT3M31UcKisvxC2JexIlsx7R/N9WmOMi+vgWPPC6IxS9
vkL9M0f+9CP5mBRaD0R+JGPwYQfdpfvBQT4fbtD5X/f8FJdkXwATIoP99NNU
ePBerKvonJ7WN+nnArnpVVJDz/62e8DXgpBG0Jns4t3ri2g/H2Z37UuBsm+/
HdsaZi/Oy8RZE9S5jOUDmLt/i4XSPpfuC0GRYx9y0bnYvXC8r97MCGc3DlQJ
U3PRfFM6CicYYb9mwhKBc98+q/V5ESGb0TN/XcubDGdaQNZqlyjZqqXz++xn
i4YoD2vR0q3jnGTJY5ofR753yBO65oFr8gEHqVUK3Z+6F7hmCCtv4a7olZ+L
Y6th3jdnjYYzarTV1m3Udz+g8/eN5o2Wi66BF7X7J4tml1D9x6Vf6i8fXIrz
LcPiJPON8Cb8kLW0tATna+qs5S8N8Itw+iUZk40+/vaVzMwGWJKUNkY+Jgen
1d05xF5phLSbTxykpTk4+TfDJlNmE/SXzNUyPnm4wUK83rSsGZjPnS7Jxmux
+uLMKMn/2uB80PA7Qhs1tbfL776T+Gg+nszJVTHtbXD22TOFhFVjcJJdm0bY
AXY1bhPFm9T4a6DtKlPQY9i2PxFEa3S0nzolXK1k2rVoWOeZIkzt6Wdan07D
GR2Oi5n1NOmrLjD3X3aEVfftP2QfurbYsZCL7gJLJ2aA0j6f7kOz8v9x2f0i
i+bBCR6mgDq6D1kPPuXNqh/S/jwEHUdJ3R7Aoaa2yaLXWXT/CLmVNlIaXEz3
JWuuuZgLLKX7QYRsjq++W4Um3aEGg7GV9veptouruOgWsB2784XmuoruT3f5
+lDT/m3h+q6PxmPw3cE1XGA+LBg1LFQRlYPxiY926v0q4NbPe/SGM2XIJppz
STtb4K/S66dluQX431rLZ0mzO+HXGPV6ffJtbDx8ap2+uwyaU+K7DD3zYevW
NePF4R3wN3bAKuU=
    "], {{{
       {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[0.25], EdgeForm[None],
         GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwBKgLV/SFib1JiAgAAALMAAAADAAAAPTwRVFMYHA0LTzwSQ0ILGgsNGRcJ
PxYINh4CHB0NKR0cNBQHFRQGEA8EQD8TVhwLGxoNKx8PIxgILCIXWBcKJyAP
S0IKOTICUxcIJR4OLzsPHzMDMzIDFDQFFiMIDyAEGSwXGiQLOCUOPiYEECsP
h+4fFCEHQ0oJFSgUOycPIRYHFyIILi0BQTUHNTQHKTEdLx8DHjkCMjoDLTgO
MC8DUkgiHy8PHjYOMjcCRRQFJhAEKCEUPT4EFj8HEz8IUUATTj0RP0AHQEEH
REMLEjwEJEQLRkUFWUMJWVhCFEUGLFIiVUwKIUkWQksMIkgTTEsKPE8GW0YR
T1AGRkcRF1MKGFMIU1QK0tNJVkIMQlYLRltFWlsRRVoGdbM67ogfcJYqPD0E
W1pFPFoRIhMIWjwGIBIEVFUKF1gJQlgKcrI36oYeV1YMt6MtVlccyq82gdVK
Q1lC4+BPWFkJ744k6OZUweISje8kXuoelqEqackCaJ4B14JM240koJcBhNoa
Y9Qjf8UYnWYMdusQ2OkM6Z0MpaQu3d5N34lOgOwZ1tlLsHEOk4AZr7E2wMES
m34Ve81H7GQZxGMjZW4J2oMa618Q0X0VwsMWn5UqxcYYiuFQxucYftEVznwT
qKcwbHoFtGEFXWkCrLU0YMsgz9BIlG8pYWwFsrs3kZAmkmsno7otXGgB5ItR
cbYOrq01j2oluJkDecASlXAqs7k6slOfgQ==
           "]], 
          PolygonBox[{{200, 199, 67, 68}, {110, 147, 25, 9}, {95, 152, 43, 
           16}, {161, 160, 1, 42}, {151, 165, 46, 1}, {212, 127, 24, 35}, {
           115, 143, 37, 56}, {171, 169, 50, 51}, {164, 162, 45, 46}, {137, 
           188, 61, 78}, {139, 190, 64, 81}, {111, 103, 49, 41}, {136, 171, 
           51, 31}, {181, 180, 5, 52}, {177, 176, 14, 54}, {220, 132, 26, 
           27}, {203, 121, 18, 32}, {100, 156, 44, 25}, {154, 155, 21, 6}, {
           153, 168, 48, 3}, {158, 159, 42, 1}, {186, 92, 1, 45}, {119, 223, 
           78, 17}, {125, 109, 40, 21}, {190, 191, 65, 64}, {102, 237, 87, 
           12}, {167, 166, 47, 48}, {166, 120, 59, 47}, {182, 183, 45, 14}, {
           124, 228, 81, 19}, {208, 206, 19, 72}, {229, 207, 72, 82}, {162, 
           115, 56, 45}, {225, 154, 6, 80}, {226, 227, 79, 18}, {134, 116, 57,
            30}, {185, 184, 3, 58}, {170, 117, 58, 50}, {195, 196, 35, 22}, {
           201, 202, 54, 2}, {142, 200, 68, 36}, {230, 140, 85, 84}, {188, 
           189, 62, 61}, {116, 170, 50, 57}, {205, 119, 17, 71}, {169, 114, 
           55, 50}, {204, 123, 71, 70}, {224, 138, 80, 79}, {156, 229, 82, 
           44}, {231, 232, 84, 24}, {140, 215, 76, 85}, {120, 146, 39, 59}, {
           189, 145, 38, 62}, {107, 96, 32, 39}, {191, 174, 53, 65}, {133, 
           148, 41, 28}, {109, 98, 33, 40}, {122, 204, 70, 5}, {130, 214, 75, 
           76}, {173, 172, 52, 53}, {152, 135, 31, 43}, {187, 93, 2, 55}, {98,
            210, 73, 33}, {222, 220, 27, 77}, {237, 133, 28, 87}, {106, 94, 
           30, 37}, {211, 194, 22, 73}, {213, 101, 9, 74}, {199, 129, 74, 
           67}, {131, 219, 36, 26}, {217, 216, 12, 75}, {144, 118, 16, 
           38}}]}]}}, {}, {}, {}, {}}}], GraphicsComplexBox[CompressedData["
1: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
vpdMEfKTyf8AB3Bo8g==
    "], {{{
       {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[0.25], EdgeForm[None],
         GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNlmdslmUUhs/XAaW0lLIKFKi0QFvZBZUqKCputIg4iorKMAi1FAxFLETF
EUeciTPuEY2KUeMe8Ydxr/jDOBLj3ibuPe8752rsjyvv0/M+73nOuc95ztfx
y9ct7iyKiJ9FsThYLBSjxUYxFnudKBVlYqloFwPFBNEg+vF3f/aswE+tqMde
LlbzrBRNokIMFjViiBgq1mLzer3oEtVQwbcniw6xo1gmjhXDxBhid8xT8TlC
tGEvEWvESaJRjCPHUnxXc3YDedg+GbvPnUQ+A8REci7D32p89MfuPGeLudg6
yM0xHSimi1FiPPp6zwZynkJONegwjXyG830NeR0mFuOni72Ofwbau7a7oktv
HVvIq5TcXbvd0MK2fYnbeZ7K07lsEt1oOZe4HfMCfPbmUIcm/dDRPvcTu1Dz
fSL7xu93Qkfvb6Wezm8e7/z9aXznvHYXzaIKf41o3kmdXKM9xBz+noOW1Wg3
Fd3mo39B7M/ZfrcX2lm3vcVMNNoiZhHzWOzFaDObvBuIuYycdo7sgyZiregT
k+NZKY7i3SpxDHHMpGb2v5WzNxJfK/q0ULNS9GhCk3Y0KEfjecQ1C90d/yRq
XE8NF1CzZupkX+6pJZF9dUJkv3o9Db0cy57iADSczh6vfc98933XlkfOFNtq
sRex9yD2+/0h2N1ji8QOfNOGDotYl3Dm/D7nHk5s1v7I+P9etqNDJ+tBaG3N
G7EtxW7/R3BuK7VwLx7NHvvzfPGd9B2rYT2S5zLWfh7PegnaObbjeDcMDVaQ
i7VcxZkL0aKIOqwk3s2R99DzZZKSfjyy5yqwVbLHM8hzaR05O6+eyPvjueOe
84zwPRqCbSh5dmDz07O1Ch/2NRmtOjnLPdmNVm2sXSPPD9+ZsZyznnz9t/vX
vTcFezXPDezpZk8xMXVh7yGmKvZs4txFrNvIezNaNJFvFZptRpO12Afjr6eP
rYf99rOG/av5vpy4thD/LNaOoXc+en+T6tIsTiHOrXxXJdvAQtZ7op6PRN7d
Rs6rwN9WfE7QnociZ4Dnh/vPvXeP6F/I3vpUfBbZ5x+JD9GjVu/PjbzTv4pb
ImfAGNnPi7z3f4rbOf8L8SU1uVH8EnkH6rT/wsh5UND6zsgeGaX1WdT5WXEb
Pr8SX4tDXVfteTOy964XIwv523MD3/vbh9GihZwGkJe/u4hvy2V7IHJ+9NP6
7sg7NEXrM/Q8UYzQelgh1xV6vhF5p6x3JZo/FnlnfF/G6fkkuo7W+lHq+a54
LXL2vy8+iJxH9nc2Pp8R57D/bfFK5PxrkJ/7IufQ+eIK+uFzcQFnXS7eibzX
28TrkZr4zGs51/6uwefz4rnI3zrbXsX+sfgkco6e7prQby+K7ZGz2Xpvw3+9
1pdgf0m8FTkzXxBXRv5O3ivei5zFL4urI2fr9+KHyBn2YGRfuieHF7IG1vwb
au+6F8lWXMi5+Zf4O3LOXiquivzt/ScyAM/TMyP/55xBToMKmdddkX3pnvxd
/BE5092nT2P/Tnwb+b/Pj+KnyN+AfyP7z/3jnn0qsm/d709E9rz79DJivjXy
nviO3BHZ9+5597XvjHv7JvFb5G/ndjSdRi+4h9wP11GbWmruPnPdb468k76P
ng2umet1sSgp5P8B99ND7p//ALd121k=
           "]], PolygonBox[CompressedData["
1:eJwt1HeIz3Ecx/H39+cIcSecTfcr88gmmWeviJ8ZMs7xK8XVub9FZGRlyx5F
RvYe5+yVCNm78I+9snm++7z+ePSdn/V+vz+feHZuYlLMzAYjBe/wAQNQGQ9x
FVnoiSd4ir7og01YinaoCYvM/nFJxTCcwBYMR0uU4ftvrkORg9UoybtsrlWw
ApfREOn4ojn5XAZhGc6jNkrgLu6hYxjajmADuqIZMnlZDvncT8Zs3EI39bEc
C9AKHXAQhWiNJvr3KJqrzU0cQlN0QQGK0f8oruUVi1looZjMw0W0Rxqmor7m
Mx578Flra4S5uI3uqIdvOIMM5WgJpqExkqhIX+lR6Muf/+AX6ijGMzVnn2sc
z7FeffXDdNxAZ9TQWGcVOx/zGM6hrWLg/x5QbLzNYZxGG8VkBl6ob6+nVdiv
+XbCdeXcc10NZZl7DCO4H4dU7tMwlvuquKN//FsPC7msoPXmK1ZeUzmK2UK1
8X+9hu7jgcaOKTc/MEQ5KkLbCJkW5nDKY8dzHtcGntMoxDypfJXmuVQU1uZz
jHO/zXOKXLUtUC3kKdd1o1B7Pt+MKNSE18JExcZzmFSMPmE3xmAgqvNtjoVa
n4CiPO/kOhoj/T3PxVFJ7xZhChLor9xtVO49h9+x2cJe9T2yz8Ke9r3se/Ar
1ij2Pp9nWKzY+Z5/jCsW9lpvjfVRc/UxT2qNvjaP6UrstVDbWVrbI/TSGlP4
d7ti7XvwLd5o7gn9u0tjeZvjionHwmt8vnLgsfczx8+avxbOHj9z3qtP78vP
tB2KocfO9+wrvLZwNtWykMtLFs4Cz6nX9joLe8Nr/JqFM9HPQj9zLmCrhb3q
e7wQay3Utp8hP/FSfXvN/QcQLZSI
           "]]}]}}, {}, {}, {}, {}}}], 
   GraphicsComplexBox[CompressedData["
1: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
Dfw/8Mlrng==
    "], {{{}, {}, {}, {}, {}}, {{
       {GrayLevel[0], Thickness[Large], 
        LineBox[{138, 1, 325, 230, 347, 346, 345, 273, 313, 312, 212, 366, 
         367, 363, 365, 364, 211, 362, 245, 360, 244, 361, 210, 425, 278, 338,
          326, 242, 329, 274, 337, 231, 304, 276, 437, 275, 438, 277, 243, 
         280, 445, 279, 314, 281, 439, 282, 246, 284, 446, 283, 368, 247, 348,
          415, 232, 416, 369, 370, 349, 417, 233, 418, 371, 372, 350, 373, 
         234, 248, 70, 10, 6, 138}], LineBox[CompressedData["
1:eJwt0lkzFWAYwPEju5CvIKEQE1mSXTN1I42b3GUrd3wGWUK2sq83qKaiLDeq
7yEqZLmj5VrKz0wXv/k/7/O+M2fmnBNf11zVFBQIBEY5IIdc8rhBPjcpoJAZ
j6eYZpxJJnjJK8a4wAixjJLBc84zQBTPuEo/kfQRQRpLfPdZjfqIh4TSzZZ9
g9ZTRxedfLX/Sa25hid0sGn3gyBzO+copohqKrnHY1r44+19TeAux84VeptD
8x29yBrxFPDZ/o3+0zZ9wIm5VeeY5ch5ndfmS/w9+z51Q9+e/QBcI4kPJFLC
F1cLGkwml/lIMqV8c7+oIWSRwieuUMa2+3caxnV+Oe/w3pxKOE/ppYd5ytn1
ZlmjySaHPbsVTSeGQYYZ4gW32PdmVePI5ff//9UpaetImg==
         "]], 
        LineBox[{377, 376, 374, 375, 235, 213, 381, 382, 286, 339, 285, 340, 
         315, 341, 342, 331, 250, 332, 214, 330, 249, 288, 440, 287, 383, 384,
          378, 380, 379, 377}]}}}}]},
  AspectRatio->1,
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{Automatic, Automatic},
  BaseStyle->{FontFamily -> "Helvetica", FontSize -> 14},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->{{
     GrayLevel[0], 
     Thickness[0.006]}, {
     GrayLevel[0], 
     Thickness[0.006]}, {
     GrayLevel[0], 
     Thickness[0.006]}, {
     GrayLevel[0], 
     Thickness[0.006]}},
  FrameTicks->{{{-0.5, 
      FormBox[
       RowBox[{"-", "0.5`"}], TraditionalForm], {0, 0.01}}, {-0.25, 
      FormBox[
       RowBox[{"-", "0.25`"}], TraditionalForm], {0, 0.01}}, {0., 
      FormBox["0.`", TraditionalForm], {0, 0.01}}}, {{0., 
      FormBox["0.`", TraditionalForm], {0, 0.01}}, {0.5, 
      FormBox["0.5`", TraditionalForm], {0, 0.01}}, {1., 
      FormBox["1.`", TraditionalForm], {0, 0.01}}}, None, None},
  FrameTicksStyle->{{
     Directive[
      GrayLevel[0], 
      Thickness[0.006]], 
     Directive[
      GrayLevel[0], 
      Thickness[0.006]]}, {
     Directive[
      GrayLevel[0], 
      Thickness[0.006]], 
     Directive[
      GrayLevel[0], 
      Thickness[0.006], FontColor -> GrayLevel[1]]}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->{{40, 20}, {50, 30}},
  ImageSize->{360, 360},
  Method->{
   "ScalingFunctions" -> None, "TransparentPolygonMesh" -> True, 
    "AxesInFront" -> True},
  PlotRange->{{-0.5, 0}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->0,
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7082679901832733`*^9, {3.708268037786875*^9, 3.70826807723018*^9}, 
   3.7082681228144617`*^9, 3.7082683686172113`*^9, 3.708290720489683*^9, {
   3.708350293871221*^9, 3.7083503157667017`*^9}, {3.708350363409504*^9, 
   3.7083504099400377`*^9}, {3.708352826814301*^9, 3.708352833894183*^9}, {
   3.70835287316109*^9, 3.708353069770844*^9}, {3.7083531157038727`*^9, 
   3.708353194494418*^9}, {3.708353389457487*^9, 3.708353422653029*^9}, 
   3.708353472231934*^9, 3.708353557618922*^9, {3.708353602057424*^9, 
   3.708353628678946*^9}, 3.7108692387842627`*^9, 3.710870117824407*^9, 
   3.711371299355803*^9, 3.711372421876944*^9, 3.711372533472704*^9, 
   3.711372773677491*^9, 3.711372933319132*^9, 3.7113733622092047`*^9, 
   3.711374699755022*^9, 3.711374752552959*^9, {3.711374814608631*^9, 
   3.7113748350086946`*^9}, {3.711374868816112*^9, 3.711374896307176*^9}, 
   3.711375109926654*^9, 3.711375299765567*^9, 3.711382185680716*^9, 
   3.711387242885256*^9, 3.711387403559289*^9, 3.711391355912635*^9, {
   3.7114752261757383`*^9, 3.7114752387282343`*^9}, {3.711475535139833*^9, 
   3.711475545145396*^9}, {3.711475577264015*^9, 3.711475580853435*^9}, {
   3.711475616976709*^9, 3.711475620099489*^9}, {3.71147565810998*^9, 
   3.711475662743082*^9}, 3.711475705751689*^9, {3.711475746612671*^9, 
   3.711475802948635*^9}, {3.7114758467755623`*^9, 3.711475854574589*^9}, 
   3.7117962258263187`*^9, 3.711796814316484*^9, 3.711797020173929*^9, 
   3.712482967150958*^9, 3.712559328036532*^9, 3.712560450678878*^9, 
   3.712561243217821*^9, 3.712573569915584*^9, 3.7130126517152977`*^9, 
   3.713012688137144*^9, 3.7130127517224607`*^9, 3.713012801719905*^9, 
   3.713012906977214*^9, 3.7130130803967247`*^9, 3.713013172337055*^9, 
   3.713013219974084*^9, {3.713014552123434*^9, 3.713014594551928*^9}, 
   3.713079673714225*^9},ExpressionUUID->"6730867a-945e-4eeb-b515-\
6c22d450c95e"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Parameters - male gametic competition", "Subsubsection",
 CellChangeTimes->{{3.708264596129162*^9, 3.70826465145201*^9}, 
   3.7082655994495697`*^9, 3.7082656864074907`*^9, {3.7082871550004168`*^9, 
   3.7082871556906557`*^9}, {3.71137068020173*^9, 3.7113706859365587`*^9}, 
   3.711372159008786*^9, {3.7113750419844513`*^9, 3.711375060592574*^9}, 
   3.7113751601780663`*^9, {3.7113869231866426`*^9, 3.7113869323293343`*^9}, {
   3.711475974883295*^9, 3.711475978849615*^9}, 3.711796875678649*^9, {
   3.712487753555662*^9, 3.712487756828652*^9}, {3.713011844772447*^9, 
   3.71301185427815*^9}, {3.713014683170349*^9, 
   3.713014685342834*^9}},ExpressionUUID->"39df50d0-dc50-4acc-8701-\
5f9ac4131044"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"someparams", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      SubscriptBox["wHap", 
       RowBox[{"A", ",", "male"}]], "\[Rule]", 
      RowBox[{"1", "+", "t"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["wHap", 
       RowBox[{"A", ",", "female"}]], "\[Rule]", "1"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["wHap", 
       RowBox[{"a", ",", "sex_"}]], "\[Rule]", "1"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["\[Alpha]", "sex_"], "\[Rule]", 
      RowBox[{"1", "/", "2"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["wDip", 
       RowBox[{"A", ",", "A", ",", "sex_"}]], "\[Rule]", 
      RowBox[{"1", "+", "s"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["wDip", 
       RowBox[{"a", ",", "A", ",", "sex_"}]], "\[Rule]", 
      RowBox[{"1", "+", 
       RowBox[{"h", " ", "s"}]}]}], ",", 
     RowBox[{
      SubscriptBox["wDip", 
       RowBox[{"A", ",", "a", ",", "sex_"}]], "\[Rule]", 
      RowBox[{"1", "+", " ", 
       RowBox[{"h", " ", "s"}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["wDip", 
       RowBox[{"a", ",", "a", ",", "sex_"}]], "\[Rule]", "1"}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"moreparams", "=", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"h", "\[Rule]", 
       RowBox[{"3", "/", "4"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"recAMnotAX", "\[Rule]", "0"}]}], "\[IndentingNewLine]", 
     "}"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{"charpolyYAXAar0", "/.", "someparams"}], ",", "posassumps"}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"intYAXAar0", "=", 
    RowBox[{
     RowBox[{"\[Lambda]", "/.", 
      RowBox[{"Solve", "[", 
       RowBox[{
        RowBox[{"%", "\[Equal]", "0"}], ",", "\[Lambda]"}], "]"}]}], "//", 
     "Flatten"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{"charpolyYaXAar0", "/.", "someparams"}], ",", "posassumps"}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"intYaXAar0", "=", 
   RowBox[{
    RowBox[{"\[Lambda]", "/.", 
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{"%", "\[Equal]", "0"}], ",", "\[Lambda]"}], "]"}]}], "//", 
    "Flatten"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.69791419088354*^9, 3.697914204107209*^9}, {
   3.69791423675738*^9, 3.697914267442163*^9}, {3.697914332513447*^9, 
   3.697914344706374*^9}, {3.6979210568048067`*^9, 3.697921086163679*^9}, {
   3.697921161278735*^9, 3.69792116307207*^9}, {3.697923698797831*^9, 
   3.6979237516937227`*^9}, {3.69792439200351*^9, 3.697924448790558*^9}, {
   3.697924546414797*^9, 3.697924651712484*^9}, 3.6979249626931677`*^9, {
   3.6979252361103277`*^9, 3.6979252781015997`*^9}, {3.697925865210726*^9, 
   3.697925906632759*^9}, {3.6979259919838133`*^9, 3.69792599286863*^9}, {
   3.697926282493573*^9, 3.697926298691634*^9}, {3.69792633000852*^9, 
   3.697926363936458*^9}, {3.6979265871865673`*^9, 3.697926593914707*^9}, 
   3.697989793786848*^9, {3.697989884811812*^9, 3.6979899000758*^9}, {
   3.69799030526079*^9, 3.697990455812793*^9}, {3.697990878903956*^9, 
   3.697990879016015*^9}, {3.698505224191556*^9, 3.698505279118783*^9}, {
   3.6985884845824614`*^9, 3.698588563629053*^9}, 3.698588615905355*^9, {
   3.6985886754283657`*^9, 3.698588780187793*^9}, {3.698589304512279*^9, 
   3.698589318027289*^9}, {3.698589833723196*^9, 3.698589850157795*^9}, {
   3.6986037137243843`*^9, 3.698603713821808*^9}, {3.698613813894794*^9, 
   3.698613813976364*^9}, {3.69875804231399*^9, 3.6987580952477293`*^9}, {
   3.708264756710517*^9, 3.70826486735957*^9}, {3.708264901408318*^9, 
   3.708265012641108*^9}, {3.7082650747312317`*^9, 3.708265158807321*^9}, {
   3.708265357326613*^9, 3.7082654072179003`*^9}, {3.708265688150424*^9, 
   3.708265688964964*^9}, {3.708266698979836*^9, 3.7082668815205307`*^9}, {
   3.7113707457391863`*^9, 3.711370746006536*^9}, {3.711372444673503*^9, 
   3.711372470970936*^9}, {3.711375074476313*^9, 3.711375105762352*^9}, {
   3.711375171651992*^9, 3.711375177717349*^9}, {3.7113912010190487`*^9, 
   3.711391206270217*^9}, {3.71139124623836*^9, 3.7113912466140957`*^9}, {
   3.711474858918627*^9, 3.7114748591022863`*^9}, {3.7124825822801332`*^9, 
   3.712482626916399*^9}, {3.712492712070631*^9, 3.712492712215355*^9}, {
   3.712559688942739*^9, 3.7125596890200987`*^9}, {3.712559732337173*^9, 
   3.712559734481785*^9}, {3.712560207989962*^9, 3.7125602347713223`*^9}, {
   3.712561017124344*^9, 3.712561018345109*^9}, 3.7130118306370897`*^9, {
   3.7130121369433813`*^9, 3.7130121478791523`*^9}, 3.713012812008912*^9, {
   3.7130129837575293`*^9, 3.713012984270946*^9}, {3.7130147014936457`*^9, 
   3.713014732172743*^9}, {3.7130148491286917`*^9, 3.713014850499349*^9}, {
   3.713015020440887*^9, 
   3.7130150314500523`*^9}},ExpressionUUID->"0f7b74b6-5122-49aa-aa28-\
736350aa1433"],

Cell[BoxData[
 RowBox[{
  RowBox[{"moreparams", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"h", "\[Rule]", 
      RowBox[{"3", "/", "4"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"recAMnotAX", "\[Rule]", "0"}]}], "\[IndentingNewLine]", "}"}]}],
   ";"}]], "Input",
 CellChangeTimes->{{3.713013159165114*^9, 3.713013159267778*^9}, {
  3.713013206558484*^9, 
  3.7130132066317244`*^9}},ExpressionUUID->"6e74fefa-3b1a-477a-93d7-\
e7a820ff1547"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"bothfixedA", "=", "\[IndentingNewLine]", 
    RowBox[{"RegionPlot", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Max", "[", 
          RowBox[{"Abs", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"\[Lambda]", "/.", "YaXAEigs"}], "/.", "someparams"}], "/.",
              "moreparams"}], "//", "Flatten"}], "]"}], "]"}], "<", "1"}], 
        ")"}], "&&", 
       RowBox[{"(*", 
        RowBox[{"internally", " ", "stable"}], "*)"}], "\[IndentingNewLine]", 
       
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"\[Lambda]WA", ">", "1"}], "/.", "eqr0YaXA"}], "/.", 
          "someparams"}], "/.", "moreparams"}], ")"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"t", ",", 
        RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"s", ",", 
        RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Gray", ",", 
         RowBox[{"Opacity", "[", "0.25", "]"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"BoundaryStyle", "\[Rule]", "None"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"MaxRecursion", "\[Rule]", "2"}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"bothfixeda", "=", "\[IndentingNewLine]", 
    RowBox[{"RegionPlot", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Max", "[", 
          RowBox[{"Abs", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"\[Lambda]", "/.", "YaXAEigs"}], "/.", "someparams"}], "/.",
              "moreparams"}], "//", "Flatten"}], "]"}], "]"}], "<", "1"}], 
        ")"}], "&&", 
       RowBox[{"(*", 
        RowBox[{"internally", " ", "stable"}], "*)"}], "\[IndentingNewLine]", 
       
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"\[Lambda]Wa", ">", "1"}], "/.", "eqr0YaXA"}], "/.", 
          "someparams"}], "/.", "moreparams"}], ")"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"t", ",", 
        RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"s", ",", 
        RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Gray", ",", 
         RowBox[{"Opacity", "[", "0.25", "]"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"BoundaryStyle", "\[Rule]", "None"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"MaxRecursion", "\[Rule]", "2"}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"XpolymorphicA", "=", "\[IndentingNewLine]", 
    RowBox[{"RegionPlot", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Max", "[", 
          RowBox[{"Abs", "[", 
           RowBox[{"intYaXAar0", "/.", "moreparams"}], "]"}], "]"}], "<", 
         "1"}], ")"}], "&&", 
       RowBox[{"(*", 
        RowBox[{"internally", " ", "stable"}], "*)"}], "\[IndentingNewLine]", 
       
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"\[Lambda]WA", ">", "1"}], "/.", "eqr0YaXAa"}], "/.", 
          "someparams"}], "/.", "moreparams"}], ")"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"t", ",", 
        RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"s", ",", 
        RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Gray", ",", 
         RowBox[{"Opacity", "[", "0.25", "]"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"BoundaryStyle", "\[Rule]", "None"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"MaxRecursion", "\[Rule]", "2"}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Xpolymorphica", "=", "\[IndentingNewLine]", 
   RowBox[{"RegionPlot", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Max", "[", 
         RowBox[{"Abs", "[", 
          RowBox[{"intYaXAar0", "/.", "moreparams"}], "]"}], "]"}], "<", 
        "1"}], ")"}], "&&", 
      RowBox[{"(*", 
       RowBox[{"internally", " ", "stable"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"\[Lambda]Wa", ">", "1"}], "/.", "eqr0YaXAa"}], "/.", 
         "someparams"}], "/.", "moreparams"}], ")"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"s", ",", 
       RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Gray", ",", 
        RowBox[{"Opacity", "[", "0.25", "]"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"BoundaryStyle", "\[Rule]", "None"}], ",", "\[IndentingNewLine]", 
     RowBox[{"MaxRecursion", "\[Rule]", "2"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.69791419088354*^9, 3.697914204107209*^9}, {
   3.69791423675738*^9, 3.697914267442163*^9}, {3.697914332513447*^9, 
   3.697914344706374*^9}, {3.6979210568048067`*^9, 3.697921086163679*^9}, {
   3.697921161278735*^9, 3.69792116307207*^9}, {3.697923698797831*^9, 
   3.6979237516937227`*^9}, {3.69792439200351*^9, 3.697924448790558*^9}, {
   3.697924546414797*^9, 3.697924651712484*^9}, 3.6979249626931677`*^9, {
   3.6979252361103277`*^9, 3.6979252781015997`*^9}, {3.697925865210726*^9, 
   3.697925906632759*^9}, {3.6979259919838133`*^9, 3.69792599286863*^9}, {
   3.697926282493573*^9, 3.697926298691634*^9}, {3.69792633000852*^9, 
   3.697926363936458*^9}, {3.6979265871865673`*^9, 3.697926593914707*^9}, 
   3.697989793786848*^9, {3.697989884811812*^9, 3.6979899000758*^9}, {
   3.69799030526079*^9, 3.697990455812793*^9}, {3.697990878903956*^9, 
   3.697990879016015*^9}, {3.698505224191556*^9, 3.698505279118783*^9}, {
   3.6985884845824614`*^9, 3.698588563629053*^9}, 3.698588615905355*^9, {
   3.6985886754283657`*^9, 3.698588780187793*^9}, {3.698589304512279*^9, 
   3.698589318027289*^9}, {3.698589833723196*^9, 3.698589850157795*^9}, {
   3.6986037137243843`*^9, 3.698603713821808*^9}, {3.698613813894794*^9, 
   3.698613813976364*^9}, {3.69875804231399*^9, 3.6987580952477293`*^9}, {
   3.708264756710517*^9, 3.70826486735957*^9}, {3.708264901408318*^9, 
   3.708265012641108*^9}, {3.7082650747312317`*^9, 3.708265158807321*^9}, {
   3.708265357326613*^9, 3.7082654072179003`*^9}, {3.708265688150424*^9, 
   3.708265688964964*^9}, {3.708266698979836*^9, 3.7082668815205307`*^9}, {
   3.708267185586544*^9, 3.708267196826241*^9}, {3.7082675323948603`*^9, 
   3.708267532985468*^9}, {3.7082675734459543`*^9, 3.708267576453854*^9}, {
   3.7082682937576733`*^9, 3.708268295680781*^9}, {3.7113707155192127`*^9, 
   3.711370729731615*^9}, {3.711370792225245*^9, 3.711370828115415*^9}, {
   3.711371063092106*^9, 3.711371063757251*^9}, {3.711372144469955*^9, 
   3.7113721753248243`*^9}, {3.7113723412610397`*^9, 3.711372350993482*^9}, {
   3.711372826645961*^9, 3.711372834477874*^9}, {3.7113743080460997`*^9, 
   3.7113743149408293`*^9}, {3.711374982870043*^9, 3.7113749857732067`*^9}, {
   3.711386976094173*^9, 3.7113871196229973`*^9}, {3.71138730852668*^9, 
   3.7113873209295588`*^9}, {3.711391212371595*^9, 3.7113912239549627`*^9}, {
   3.711474886567898*^9, 3.711474904791568*^9}, {3.7114750103602667`*^9, 
   3.711475036828904*^9}, {3.711475085124415*^9, 3.711475099411407*^9}, {
   3.7130121953925467`*^9, 3.7130122038152847`*^9}, {3.713012634133914*^9, 
   3.71301263824895*^9}, {3.713012700596148*^9, 3.713012700690166*^9}, {
   3.713012779031542*^9, 3.713012791717905*^9}, {3.7130147419687767`*^9, 
   3.71301475673291*^9}},ExpressionUUID->"643e11fc-db34-40ae-8d65-\
86bd86cc2011"],

Cell[BoxData[
 RowBox[{
  RowBox[{"YaIntStable", "=", 
   RowBox[{"RegionPlot", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Max", "[", 
         RowBox[{"Abs", "[", 
          RowBox[{"intYaXAar0", "/.", "moreparams"}], "]"}], "]"}], "<", 
        "1"}], ")"}], "||", 
      RowBox[{"(*", 
       RowBox[{"internally", " ", "stable"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Max", "[", 
         RowBox[{"Abs", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"\[Lambda]", "/.", "YaXAEigs"}], "/.", "someparams"}], "/.",
             "moreparams"}], "//", "Flatten"}], "]"}], "]"}], "<", "1"}], 
       ")"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"s", ",", 
       RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotStyle", "\[Rule]", "None"}], ",", "\[IndentingNewLine]", 
     RowBox[{"BoundaryStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Black", ",", "Thick"}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"MaxRecursion", "\[Rule]", "2"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.711474925092482*^9, 3.71147496716144*^9}, {
   3.711475038965263*^9, 3.711475062759836*^9}, {3.7114753145796022`*^9, 
   3.711475322770665*^9}, {3.711475370926453*^9, 3.7114754140461817`*^9}, {
   3.711475452043969*^9, 3.711475500965314*^9}, 3.713012207087121*^9, 
   3.713012638998308*^9, 
   3.713014765882523*^9},ExpressionUUID->"dcbad3da-65d7-4cbd-80fa-\
c372e9d5e904"]
}, Closed]],

Cell[CellGroupData[{

Cell["Plot", "Subsubsection",
 CellChangeTimes->{{3.708291374414747*^9, 
  3.7082913765974817`*^9}},ExpressionUUID->"93782bcb-4c5f-473c-9e53-\
566ec276ae32"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"plot2A", "=", 
   RowBox[{"Show", "[", "\[IndentingNewLine]", 
    RowBox[{
    "bothfixedA", ",", "\[IndentingNewLine]", "XpolymorphicA", ",", 
     "\[IndentingNewLine]", "bothfixeda", ",", "\[IndentingNewLine]", 
     "Xpolymorphica", ",", "\[IndentingNewLine]", "YaIntStable", ",", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Frame", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"True", ",", "True", ",", "True", ",", "True"}], "}"}]}], 
       ","}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"ImageSize", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"xsize", ",", "xsize"}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotRangePadding", "\[Rule]", "0"}], ",", "\[IndentingNewLine]", 
     RowBox[{"FrameTicks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"x", ",", "x", ",", "ticksize"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", 
            RowBox[{"-", "1"}], ",", "0", ",", "0.5"}], "}"}]}], "]"}], ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"y", ",", "y", ",", "ticksize"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"y", ",", "0", ",", "1", ",", "0.5"}], "}"}]}], "]"}], ",",
         "None", ",", "None"}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"FrameTicksStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Directive", "[", 
           RowBox[{"Black", ",", 
            RowBox[{"Thickness", "[", "lwd", "]"}]}], "]"}], ",", 
          RowBox[{"Directive", "[", 
           RowBox[{"Black", ",", 
            RowBox[{"Thickness", "[", "lwd", "]"}]}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Directive", "[", 
           RowBox[{"Black", ",", 
            RowBox[{"Thickness", "[", "lwd", "]"}]}], "]"}], ",", 
          RowBox[{"Directive", "[", 
           RowBox[{"Black", ",", 
            RowBox[{"Thickness", "[", "lwd", "]"}], ",", 
            RowBox[{"FontColor", "\[Rule]", "White"}]}], "]"}]}], "}"}]}], 
       "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"FrameStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Black", ",", 
          RowBox[{"Thickness", "[", "lwd", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Black", ",", 
          RowBox[{"Thickness", "[", "lwd", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Black", ",", 
          RowBox[{"Thickness", "[", "lwd", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Black", ",", 
          RowBox[{"Thickness", "[", "lwd", "]"}]}], "}"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<Relative fitness of \!\(\*
StyleBox[\"aa\",
FontSlant->\"Italic\"]\) males\>\"", ",", "\"\<\>\""}], "}"}]}], ","}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"BaseStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], ",", 
        RowBox[{"FontSize", "\[Rule]", "14"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ImagePadding", "\[Rule]", "Pad"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Epilog", "\[Rule]", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Text", "[", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{"\"\<A\>\"", ",", "14", ",", "Bold"}], "]"}], ",", 
            RowBox[{"Scaled", "@", 
             RowBox[{"{", 
              RowBox[{"0.05", ",", "0.95"}], "}"}]}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Text", "[", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{"\"\<\!\(\*
StyleBox[SubscriptBox[\"\[Lambda]\", \"WA\"],
FontSlant->\"Italic\"]\)>1\>\"", ",", "14"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"1.29", ",", "0.5"}], "}"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Text", "[", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{"\"\<\!\(\*
StyleBox[SubscriptBox[\"\[Lambda]\", \"WA\"],
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"<\",
FontSlant->\"Italic\"]\)1 & \!\(\*
StyleBox[SubscriptBox[\"\[Lambda]\", \"Wa\"],
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"<\",
FontSlant->\"Italic\"]\)1\>\"", ",", "14"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.5", ",", "0.5"}], "}"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Text", "[", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{"\"\<Ya equilibrium unstable\>\"", ",", "14"}], "]"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"0.5", ",", "1.25"}], "}"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Text", "[", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{"\"\<*\>\"", ",", "18"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"1.2", ",", "0.85"}], "}"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Rotate", "[", 
           RowBox[{
            RowBox[{"Text", "[", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{"\"\<Relative fitness of \!\(\*
StyleBox[\"AA\",
FontSlant->\"Italic\"]\) males\>\"", ",", "14"}], "]"}], ",", 
              RowBox[{"Scaled", "@", "ylabpos"}]}], "]"}], ",", 
            RowBox[{"90", " ", "Degree"}]}], "]"}]}], "\[IndentingNewLine]", 
         "}"}]}], ","}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"PlotRangeClipping", "\[Rule]", "True"}]}], 
    "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{"plotdir", "<>", "\"\<regionplot_2_Female_A.pdf\>\""}], ",", 
      "%"}], "]"}], ";"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.708267985099811*^9, 3.708267989570319*^9}, {
   3.708268041250675*^9, 3.7082680810425158`*^9}, {3.708268118487771*^9, 
   3.708268121126305*^9}, {3.708268268066489*^9, 3.70826827554463*^9}, {
   3.708350249357357*^9, 3.70835026123699*^9}, {3.708350297167807*^9, 
   3.708350409763027*^9}, {3.708352686831295*^9, 3.7083528333666773`*^9}, {
   3.708352868657325*^9, 3.7083530692688217`*^9}, {3.708353115276188*^9, 
   3.708353194253536*^9}, {3.708353379246372*^9, 3.708353388550728*^9}, {
   3.7083535989918137`*^9, 3.7083536283355227`*^9}, {3.710868251778583*^9, 
   3.7108682622771273`*^9}, {3.71087011391715*^9, 3.710870115771612*^9}, {
   3.711370865703402*^9, 3.711370878260462*^9}, {3.711372412223158*^9, 
   3.711372419799553*^9}, {3.711373360079027*^9, 3.711373360965246*^9}, {
   3.7113746969426537`*^9, 3.71137469708457*^9}, {3.711374799783164*^9, 
   3.711374891781783*^9}, {3.711375236683269*^9, 3.711375236783635*^9}, {
   3.711382181849908*^9, 3.711382184798916*^9}, {3.7113871694311666`*^9, 
   3.7113871979430637`*^9}, {3.711391233801846*^9, 3.71139123556815*^9}, 
   3.711475237620105*^9, {3.7114755423254843`*^9, 3.711475801569694*^9}, {
   3.71147583434204*^9, 3.711475854172817*^9}, {3.711796289334046*^9, 
   3.7117962951713543`*^9}, {3.7124873313285503`*^9, 3.712487333930496*^9}, {
   3.712559052738544*^9, 3.712559054305307*^9}, {3.7130126612291718`*^9, 
   3.7130126873941603`*^9}, {3.71301274872731*^9, 3.713012750877109*^9}, {
   3.713014542230651*^9, 3.713014594286989*^9}, {3.713014772557486*^9, 
   3.713014773178067*^9}, {3.713014820514689*^9, 3.713014822114974*^9}, {
   3.713014916385593*^9, 3.713014918925579*^9}, {3.71301522537064*^9, 
   3.7130152296315727`*^9}, {3.713015320430455*^9, 3.713015320641542*^9}, {
   3.713075390716559*^9, 3.713075390796854*^9}, 
   3.713079568158252*^9},ExpressionUUID->"44fdd180-1287-406e-b363-\
6f6b13ae58c4"],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1:eJxlV3lUU2cWx+pUR02LyDhOymFcMcVaqCUedaoXCc4gFU2xrVohUhwUjQsq
LsG1VJ/WcWFqcEEUo6COFTDsyIOLBdGAS1ifIIQAARRQMFPX8ZjRl3M/zrH8
c8+Pu3x3vy8jQ9cEhr3n8Oavj4PDW/r8ysADnPUi8nYK4wffeGCRF6OLnQLx
CRO/OMNtuFYwMj7hm3aKUUuW58m1ApMnHG2n6Ol0SSUoTUyeMMkTJvn1Ic92
8lwzkydM8oRJ/nb2sUBJayuTJ0zyhCfb38GPP5w6RqV4wPQJkz5h0idM+ruW
3nuSouti+oRJnzDpEyb9lvyt1222bqZPmPQJkz7hB2L+r2CZnUKzSEvxr6Jc
FdMnPM5OsVqUq2P6xCf8Lr9EtGOGBvv/cYQob2F8wsTfKsbRzuIjXGq3g17i
/x8xTPGQ/9RPZJ/6hzD1B2GqP71P9SU+YXqP8h8l6lXgTZFfDRPFODIYHpb3
Vj8OT4l24mCa+O5tXGfXg32inXpMkvTZo+Pb2DxQPcies50ye4TJvwp73Ky+
hDkx7us4wf4usxdtf5fVk+pD/UPYU+zTWowfeGi2LLWJ5adGpB2sPoTbxDo0
YrLj+qvS0k7mL8VD/tI+MIrvFOJVO2X+brJTlg+Kh/yX2f1i/lM9q+x5Z/ER
pn6kfD/73tNVI2ll/UL9RfkjTP5RfQgH5pZ3G9T3WbwOYWcWWKUdzB7lg+wR
Jn2SJ0z5In3qb9InTPJBvMJdoXnI8OBw58NqWTectteJzQPxCVM9aF9TPqi/
SZ72E2Hqd8o/1Ysw1fegmLdsjLBTFg/ln/YJYZofqif1B80v2ad5oXrTvqB+
JUz96p+1OFOpamH+Uz9RP5jsdWPvUTzU3xQ/5YfqRf6+Oz+EqV9pPgmTfUGk
l9FNrGcByw/tJ9oP7/Y37Sfyn+Ije5TvlV7S14ePprL66hMrUe58jc0b5T9g
wNQKqX8FjJTNe2YYX8XeJ39/VjttFBzLYejJ7BjdF3rGT5zV1WMo672/hfrM
Qrk2g+Fy64gLSlMd87dyQb2XQpPNcEbjoj9pJFd+dz/dg8FqGNQOV8NwuKqo
keV/dnz8EbUsGcNrN/+o4y9AQk/QEG1qMZ4f9/mvcr4IojzMVdLSy/gypUKw
YQ0oAtVeilwB14y+2GoYb4LEpXVOWiEd2+4cGa/IrYeDlQ2DNKsacfunugBJ
5n2ou/s2XnesixcpFJVFJSlVPD7+T1wkz+WC3jDGT+ahxdV7+2zh2zLZPE5w
299pkRcBb0wboD1qwEt2ClPf/+SQzqWC3UOvpbMT1eHVeCOEq7BhLbSd+ECm
yE1hfOrf2MSqM0pTA/g+mLZKcKxh83FqjGeienMmvvp+UJ5SZobOwZsieNM9
lLYMeW7AFtg2KylXrs1Ba/CiO9KOFujvMW+WZGwePv/a3GI50A78N+oGizwP
azZu2K2Lb4fHnem2w6m997TGI9tNM8WMzfITJ9Rfd4B52LfzrNJ8XDB3hrMm
uQMKNKf3cuvyMW3dtv2cTyekrRqRq5zehLMXpuVLOx7C4f4+GwSuCW3/vJ4n
degGv1vpPpLWArzf/XQPV/EQ4mcO382tQ9xflBwsmB/Bt5Z+4zSS3n20RZyr
faxfg4Yf6knR3WHzT/MREvJ8iaAsY/OQnBHrpdAJvffIkJalPNXM5vnp0PFK
ycx2WPp3r1BByffus2MnBqY29d5vuuc/L/YvlK7rgrb9YR+pFAWMP1jPH9B1
VeDUZZUzZTuqIeKS03FuVBUW981YIewUwK8+aK71u1ScpXQKtf5aBRarr1zW
aMLyykw31b12eD5j3yqeO4n85/+6pFQdg5z5Z49y1l340DKy3ZKZBBELAlps
YMQRQxwCZGvKoTI0wGTJvIg3Fr8OkDUawbN1eR9tdgMG3p7SJ/Wz3u8Dh9Ef
aTnrOdgVebfHIj/Nvi/axpWoee4ULhr1ulLqfxUa9VlnlaqTeF/+VbV0XyEE
Ov2yhecy8bc/tM6XtKbBwYTBg1J1MThxt98fU3V6lr8/H3cPskpz4F5YgVzx
IovtM9rH1bY+JXKtHkIa3j+hvlDK7vMT1VcHuNJSxGHF+zlpGYw/kjNSI0ln
/Xx/UcB+HZ+OEVe2uqp+rIe4oBWzJWG17HvjYENAha2xFleP3r1BCGkCl5sD
nDW36tBp+cZieWQznN/3YYHcOYvJJ2ybkC/XZuHqoFETVUuawDf9UbBVmo3b
G4f+zzCoGawqLJGW5rD7EB5ZW2mz5WCP16NCeaQFXlbdPshZc9Hxb+WBkmut
wN0fkawON7N7fWTUzEGpP5hxYEDXcbVfJ7Rs/HSOJOwYu3d0T4NuvdToXArA
dK1hmTXqKmacXXND7lUI3vMTo3R8PpOne+QTvGewRoIQMMnspiq6jpdjrHMl
YddhezD3sUpxjuVT1rHQX9Z9BpXekVH8pBKYFS3olaokPNc1bZjmgAGuxy15
kaK7iAVG/VjNLSPEBKaphZ5z2FUV8o3VWgYlcaHDtIIeb6aFdBt+uQsrjaOz
lao0/Itri6citxamzznSaomtweHGhlCh5x67Ly8NL422hDoo8Vjjpup7FyNN
eoMNTeC9riyGq7iLS5M3JKsnm8Hodf4n3ReZmPXfXQnKgkZ4Wr/5E8WUepZv
l+zT72n7N6D3wMOJau9WeHl0p6PmVj16Gxoctc8ssOCC9LT6RjYWh8aabJ3N
kGbLW8u75bH9NCcr5JhaxiM/9060zuUBSMe6n+ZczXj31KR49as396Gm8LeU
GfmsXrS/fYf4LRMiHkDEpi8/0EgK0DonPUk5vQtWbk4GxcIm9j3lful8lbTD
jJbgoDR5RhfEGFc8ssQ2ocuZyY9TZnRDcYmPj2QsMvmgMztkCk0BRvb1/4lz
egiuo1026XjE+pipK/il3dAv0j+aL+n9/qLvsYv/cLthS3izH59EgkKjY/c4
Oqlnh47v/f3raGsrs+1oYPfxymeTJipe5KBvbLyvzCMLfIZ+EKOLL8cLyea1
QkQljIk7ECF4VuH26rNeiuMCPBX3Vwqa9a+eGcoqQaa1Pk9pevN7Zn3fL2WH
mmHJKFuW3PkKmty/WyU4tEHOtg2CJdaEfHI/W8radth7pmSxcPkWNv/w72Ch
5za0pV3otrzZl+HhC11VR7uAa9/kK2k9yb5n/g9TT+LI
    "], {{{
       {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[0.25], EdgeForm[None],
         GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwByQI2/SFib1JiAgAAAOgAAAADAAAAeWE3KBUZZWQgPQkMDQkKYwcKHgQH
azoCRzkDaAwPQBIWFxITU1IUJg4SEAwNamkkGhUWV1YYJRANGxYXIQcEIgoH
Pj0LZGMJHx4GOjkECQ0MIw0KJyYRDhMSTk0QTRMPDBAPaWgOQUAVEw4PEhcW
UhcTNCoedR4HMR8GZiEEKSgZbWBEVhsXcXBJMishLCMKLiQOHioELSUNKyIH
biYSNS4mKjsEISsHXDgBXUwuJS8QKDAVJi4OFRoZFhsaIy0NIiwKHzQea0Q5
ZjkFcjcBOzoEdHNgJzUmcjg2PCwibEk9dnVjbD4IPUkJb25AQkEVb0ERPz4L
FUAWMEIVRUQCOkYCOUcFK0giSkkIOUQDOEM2WFcYcUogLkwkE00USksgTU4U
L08QTlAUEE0PQVERFFITF1IYVFMUXlQUbUUdU1UYG1YcUlMYGFYXVlccX1gY
rP8wOWYENV0uVV8YYWAdUF4UM1wBWVscRGADYmEdCWMKcGQJV1kcdmQGYWI3
dGE2ZGUGdz0MZ2YFJm4RZmcheGkLRGsCOms5aWoLJGkODmgPSWwIPmw9QG4S
bm8ReHdoQW9ARW1EYG0dZHAgSXAJcHEgSnFJm+dQn+tV2NZHs40z+HwfYXRg
HnUGYHMD/qcqc3Q2Y3UHnehR/Kovo/FZ8vNa8KJYmKkkoewo6p5Utn4FT04Q
/60wOHIBv7w3eXI2kdVGmcsldXYGPXcLspwniJACsK8xy8wlsYky4pgk/YUn
7KAoubMze4gCyMkjipUIh7gB7awwcnk3jbQzaHcMYXk2aXhod3gLlt5LgIoI
ZHZjzYQvyoMthowRg+Utjr4d9NcDvMA3xIs8x8Y/29xI4+RM34AI1tpHgeEs
eocBxeA+l8gj2fUF9bYFkvgfhPwvk6gg0tRFpv4quvQD0NFDnP0n044dvY84
gAbaKg==
           "]], PolygonBox[CompressedData["
1:eJwt09lLlVEUxuGdDQhd+QdEHlPSSsrKAZXCKaPCoYzKUkEQwYu88E6tKCgQ
BZtUShps0CwaKSqlbJak0ibSJjXLJrIiMKqbfov9Xjxw+M737b3W2u8OFJev
3BjknEvHJDxGJ+KQhi14haWYjdu4g2SEYRu6sRhTUYutmKN3TuEL8lCIN2jE
cizDa60Zpj3O4AfWogijaEYOslCHC5iJEOzXO/ZfNm5iF5YgEb14hBSk4jiu
IQEb8BxVCNI3DarRagvGQXzGKvVwBN+xRjW+xR6Eqqd7uItFmskzPMU0ZOAB
HmIuIvAC/cjERNRo5jbr+diEc4jBFFxCK2ZhIU6rR+ttHurRp7OzHl9iAJO1
x2b8Rame3UAlJiAe1drD1p6Ow/imtSM1i0NYrZn8UY1WWwl+o0trFeOrzrRI
33zCDp1dLobRhBnOZ+af85myLJXhpM44WzP7hTFEIR8/cQzrsQ7jGMEKFOA9
3iFcz6z3vQhoBpaNA6rFMnJCPZXoTC86nxnLygLt3aJZWA2WhaPa2zKxHZcR
63xG76MH0erxCq5qLZu53TX7UeH8nbuuGdrsLDNDGHQ+i5apNtxCkvMZ2Ikn
zmfLMtyuGZap5w/Y53zWotX7eeezFVCt45qV1XwWu50/+xjtZXcqUXt+dP5O
213OUe0dzmfXevgPGtOETw==
           "]]}]}}, {}, {}, {}, {}}}], 
   GraphicsComplexBox[CompressedData["
1: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
KAXhF5IZIkE2+R+5snn9
    "], {{{
       {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[0.25], EdgeForm[None],
         GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNlmdslmUUhs/XAaW0lLIKFKi0QFvZBZUqKCputIg4iorKMAi1FAxFLETF
EUeciTPuEY2KUeMe8Ydxr/jDOBLj3ibuPe8752rsjyvv0/M+73nOuc95ztfx
y9ct7iyKiJ9FsThYLBSjxUYxFnudKBVlYqloFwPFBNEg+vF3f/aswE+tqMde
LlbzrBRNokIMFjViiBgq1mLzer3oEtVQwbcniw6xo1gmjhXDxBhid8xT8TlC
tGEvEWvESaJRjCPHUnxXc3YDedg+GbvPnUQ+A8REci7D32p89MfuPGeLudg6
yM0xHSimi1FiPPp6zwZynkJONegwjXyG830NeR0mFuOni72Ofwbau7a7oktv
HVvIq5TcXbvd0MK2fYnbeZ7K07lsEt1oOZe4HfMCfPbmUIcm/dDRPvcTu1Dz
fSL7xu93Qkfvb6Wezm8e7/z9aXznvHYXzaIKf41o3kmdXKM9xBz+noOW1Wg3
Fd3mo39B7M/ZfrcX2lm3vcVMNNoiZhHzWOzFaDObvBuIuYycdo7sgyZiregT
k+NZKY7i3SpxDHHMpGb2v5WzNxJfK/q0ULNS9GhCk3Y0KEfjecQ1C90d/yRq
XE8NF1CzZupkX+6pJZF9dUJkv3o9Db0cy57iADSczh6vfc98933XlkfOFNtq
sRex9yD2+/0h2N1ji8QOfNOGDotYl3Dm/D7nHk5s1v7I+P9etqNDJ+tBaG3N
G7EtxW7/R3BuK7VwLx7NHvvzfPGd9B2rYT2S5zLWfh7PegnaObbjeDcMDVaQ
i7VcxZkL0aKIOqwk3s2R99DzZZKSfjyy5yqwVbLHM8hzaR05O6+eyPvjueOe
84zwPRqCbSh5dmDz07O1Ch/2NRmtOjnLPdmNVm2sXSPPD9+ZsZyznnz9t/vX
vTcFezXPDezpZk8xMXVh7yGmKvZs4txFrNvIezNaNJFvFZptRpO12Afjr6eP
rYf99rOG/av5vpy4thD/LNaOoXc+en+T6tIsTiHOrXxXJdvAQtZ7op6PRN7d
Rs6rwN9WfE7QnociZ4Dnh/vPvXeP6F/I3vpUfBbZ5x+JD9GjVu/PjbzTv4pb
ImfAGNnPi7z3f4rbOf8L8SU1uVH8EnkH6rT/wsh5UND6zsgeGaX1WdT5WXEb
Pr8SX4tDXVfteTOy964XIwv523MD3/vbh9GihZwGkJe/u4hvy2V7IHJ+9NP6
7sg7NEXrM/Q8UYzQelgh1xV6vhF5p6x3JZo/FnlnfF/G6fkkuo7W+lHq+a54
LXL2vy8+iJxH9nc2Pp8R57D/bfFK5PxrkJ/7IufQ+eIK+uFzcQFnXS7eibzX
28TrkZr4zGs51/6uwefz4rnI3zrbXsX+sfgkco6e7prQby+K7ZGz2Xpvw3+9
1pdgf0m8FTkzXxBXRv5O3ivei5zFL4urI2fr9+KHyBn2YGRfuieHF7IG1vwb
au+6F8lWXMi5+Zf4O3LOXiquivzt/ScyAM/TMyP/55xBToMKmdddkX3pnvxd
/BE5092nT2P/Tnwb+b/Pj+KnyN+AfyP7z/3jnn0qsm/d709E9rz79DJivjXy
nviO3BHZ9+5597XvjHv7JvFb5G/ndjSdRi+4h9wP11GbWmruPnPdb468k76P
ng2umet1sSgp5P8B99ND7p//ALd121k=
           "]], PolygonBox[CompressedData["
1:eJwt1HeIz3Ecx/H39+cIcSecTfcr88gmmWeviJ8ZMs7xK8XVub9FZGRlyx5F
RvYe5+yVCNm78I+9snm++7z+ePSdn/V+vz+feHZuYlLMzAYjBe/wAQNQGQ9x
FVnoiSd4ir7og01YinaoCYvM/nFJxTCcwBYMR0uU4ftvrkORg9UoybtsrlWw
ApfREOn4ojn5XAZhGc6jNkrgLu6hYxjajmADuqIZMnlZDvncT8Zs3EI39bEc
C9AKHXAQhWiNJvr3KJqrzU0cQlN0QQGK0f8oruUVi1looZjMw0W0Rxqmor7m
Mx578Flra4S5uI3uqIdvOIMM5WgJpqExkqhIX+lR6Muf/+AX6ijGMzVnn2sc
z7FeffXDdNxAZ9TQWGcVOx/zGM6hrWLg/x5QbLzNYZxGG8VkBl6ob6+nVdiv
+XbCdeXcc10NZZl7DCO4H4dU7tMwlvuquKN//FsPC7msoPXmK1ZeUzmK2UK1
8X+9hu7jgcaOKTc/MEQ5KkLbCJkW5nDKY8dzHtcGntMoxDypfJXmuVQU1uZz
jHO/zXOKXLUtUC3kKdd1o1B7Pt+MKNSE18JExcZzmFSMPmE3xmAgqvNtjoVa
n4CiPO/kOhoj/T3PxVFJ7xZhChLor9xtVO49h9+x2cJe9T2yz8Ke9r3se/Ar
1ij2Pp9nWKzY+Z5/jCsW9lpvjfVRc/UxT2qNvjaP6UrstVDbWVrbI/TSGlP4
d7ti7XvwLd5o7gn9u0tjeZvjionHwmt8vnLgsfczx8+avxbOHj9z3qtP78vP
tB2KocfO9+wrvLZwNtWykMtLFs4Cz6nX9joLe8Nr/JqFM9HPQj9zLmCrhb3q
e7wQay3Utp8hP/FSfXvN/QcQLZSI
           "]]}]}}, {}, {}, {}, {}}}], {}, {}, 
   GraphicsComplexBox[CompressedData["
1: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
KQ==
    "], {{{}, {}, {}, {}, {}}, {{
       {GrayLevel[0], Thickness[Large], LineBox[CompressedData["
1:eJwt0ts2lAEYgOF/iAtQoUimbEpmmKFIslR30CW4AF2Ei+gk2qBsFsVa2lBC
2dUJpUKh/bILHYiT0jNrOXjW+33fzH8w/5pw3bWr9aEgCK7TSYQoJZQSI04Z
5TTwmmIPTWqRTugZXdTTOq6FOqandEFP6gs9oSP6kQvme5qqKRxg2B7Wu5qs
SYQYtB/TZn1AYN6TbM3itvk+X3hKhdstXUv8DvMRjpJOJhmUsOPzXQ6a03ho
/ssb/tDHNlt08Ztpan13SpdpTLwb+xM9rP/0EYfMUSJ0228k3qP5rT5mhSbO
uvXrEu+4ZJ/RVW5yzj6gn/nAZft7XecOlfZn+pU5rthn9RctnLc/12/00EqV
27wOkWPO5TgxNtzaqDa/1O/8oJ2Lbp90lDxzAfnE2XTroMb8Sn/Su/+/+g+A
e1Cr
         "]], 
        LineBox[{266, 265, 263, 264, 172, 154, 270, 271, 205, 249, 204, 250, 
         231, 251, 252, 243, 180, 244, 155, 242, 179, 207, 319, 206, 272, 273,
          267, 269, 268, 266}]}}}}]},
  AspectRatio->1,
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{Automatic, Automatic},
  BaseStyle->{FontFamily -> "Helvetica", FontSize -> 14},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->{{
     GrayLevel[0], 
     Thickness[0.006]}, {
     GrayLevel[0], 
     Thickness[0.006]}, {
     GrayLevel[0], 
     Thickness[0.006]}, {
     GrayLevel[0], 
     Thickness[0.006]}},
  FrameTicks->{{{-1., 
      FormBox[
       RowBox[{"-", "1.`"}], TraditionalForm], {0, 0.01}}, {-0.5, 
      FormBox[
       RowBox[{"-", "0.5`"}], TraditionalForm], {0, 0.01}}, {0., 
      FormBox["0.`", TraditionalForm], {0, 0.01}}}, {{0., 
      FormBox["0.`", TraditionalForm], {0, 0.01}}, {0.5, 
      FormBox["0.5`", TraditionalForm], {0, 0.01}}, {1., 
      FormBox["1.`", TraditionalForm], {0, 0.01}}}, None, None},
  FrameTicksStyle->{{
     Directive[
      GrayLevel[0], 
      Thickness[0.006]], 
     Directive[
      GrayLevel[0], 
      Thickness[0.006]]}, {
     Directive[
      GrayLevel[0], 
      Thickness[0.006]], 
     Directive[
      GrayLevel[0], 
      Thickness[0.006], FontColor -> GrayLevel[1]]}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->{{40, 20}, {50, 30}},
  ImageSize->{360, 360},
  Method->{
   "ScalingFunctions" -> None, "TransparentPolygonMesh" -> True, 
    "AxesInFront" -> True},
  PlotRange->{{-1, 0}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->0,
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7082679901832733`*^9, {3.708268037786875*^9, 3.70826807723018*^9}, 
   3.7082681228144617`*^9, 3.7082683686172113`*^9, 3.708290720489683*^9, {
   3.708350293871221*^9, 3.7083503157667017`*^9}, {3.708350363409504*^9, 
   3.7083504099400377`*^9}, {3.708352826814301*^9, 3.708352833894183*^9}, {
   3.70835287316109*^9, 3.708353069770844*^9}, {3.7083531157038727`*^9, 
   3.708353194494418*^9}, {3.708353389457487*^9, 3.708353422653029*^9}, 
   3.708353472231934*^9, 3.708353557618922*^9, {3.708353602057424*^9, 
   3.708353628678946*^9}, 3.7108692387842627`*^9, 3.710870117824407*^9, 
   3.711371299355803*^9, 3.711372421876944*^9, 3.711372533472704*^9, 
   3.711372773677491*^9, 3.711372933319132*^9, 3.7113733622092047`*^9, 
   3.711374699755022*^9, 3.711374752552959*^9, {3.711374814608631*^9, 
   3.7113748350086946`*^9}, {3.711374868816112*^9, 3.711374896307176*^9}, 
   3.711375109926654*^9, 3.711375299765567*^9, 3.711382185680716*^9, 
   3.711387242885256*^9, 3.711387403559289*^9, 3.711391355912635*^9, {
   3.7114752261757383`*^9, 3.7114752387282343`*^9}, {3.711475535139833*^9, 
   3.711475545145396*^9}, {3.711475577264015*^9, 3.711475580853435*^9}, {
   3.711475616976709*^9, 3.711475620099489*^9}, {3.71147565810998*^9, 
   3.711475662743082*^9}, 3.711475705751689*^9, {3.711475746612671*^9, 
   3.711475802948635*^9}, {3.7114758467755623`*^9, 3.711475854574589*^9}, 
   3.7117962258263187`*^9, 3.711796814316484*^9, 3.711797020173929*^9, 
   3.712482967150958*^9, 3.712559328036532*^9, 3.712560450678878*^9, 
   3.712561243217821*^9, 3.712573569915584*^9, 3.7130126517152977`*^9, 
   3.713012688137144*^9, 3.7130127517224607`*^9, 3.713012801719905*^9, 
   3.713012906977214*^9, 3.7130130803967247`*^9, 3.713013172337055*^9, 
   3.713013219974084*^9, {3.713014552123434*^9, 3.713014594551928*^9}, {
   3.713014814651188*^9, 3.713014822585209*^9}, 3.7130149300475082`*^9, 
   3.7130151994055243`*^9, 3.7130152300667143`*^9, 3.713015321974635*^9, 
   3.7130753912724953`*^9, 
   3.7130798391951733`*^9},ExpressionUUID->"98530ecc-7fdf-4b51-b34d-\
6de040f2036b"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Parameters - female drive", "Subsubsection",
 CellChangeTimes->{{3.708264596129162*^9, 3.70826465145201*^9}, 
   3.7082655994495697`*^9, 3.7082656864074907`*^9, {3.7082871550004168`*^9, 
   3.7082871556906557`*^9}, {3.71137068020173*^9, 3.7113706859365587`*^9}, 
   3.711372159008786*^9, {3.7113750419844513`*^9, 3.711375060592574*^9}, 
   3.7113751601780663`*^9, {3.7113869231866426`*^9, 3.7113869323293343`*^9}, {
   3.711475974883295*^9, 3.711475978849615*^9}, 3.711796875678649*^9, {
   3.712487753555662*^9, 3.712487756828652*^9}, {3.713011844772447*^9, 
   3.71301185427815*^9}, {3.7130795884769287`*^9, 
   3.713079588563848*^9}},ExpressionUUID->"1d272d23-2e4c-4665-b8bc-\
457ba6cb9196"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"someparams", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      SubscriptBox["wHap", 
       RowBox[{"a", ",", "sex_"}]], "\[Rule]", "1"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["wHap", 
       RowBox[{"A", ",", "sex_"}]], "\[Rule]", "1"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["\[Alpha]", "male"], "\[Rule]", 
      RowBox[{"1", "/", "2"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["wDip", 
       RowBox[{"A", ",", "A", ",", "sex_"}]], "\[Rule]", 
      RowBox[{"1", "+", "s"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["wDip", 
       RowBox[{"a", ",", "A", ",", "sex_"}]], "\[Rule]", 
      RowBox[{"1", "+", 
       RowBox[{"h", " ", "s"}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["wDip", 
       RowBox[{"A", ",", "a", ",", "sex_"}]], "\[Rule]", 
      RowBox[{"1", "+", " ", 
       RowBox[{"h", " ", "s"}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["wDip", 
       RowBox[{"a", ",", "a", ",", "sex_"}]], "\[Rule]", "1"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["\[Alpha]", "female"], "\[Rule]", 
      RowBox[{
       RowBox[{"1", "/", "2"}], "+", "\[Alpha]fd"}]}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"moreparams", "=", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"h", "\[Rule]", 
       RowBox[{"1", "/", "4"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"recAMnotAX", "\[Rule]", "0"}]}], "\[IndentingNewLine]", 
     "}"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{"charpolyYAXAar0", "/.", "someparams"}], ",", "posassumps"}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"intYAXAar0", "=", 
    RowBox[{
     RowBox[{"\[Lambda]", "/.", 
      RowBox[{"Solve", "[", 
       RowBox[{
        RowBox[{"%", "\[Equal]", "0"}], ",", "\[Lambda]"}], "]"}]}], "//", 
     "Flatten"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{"charpolyYaXAar0", "/.", "someparams"}], ",", "posassumps"}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"intYaXAar0", "=", 
   RowBox[{
    RowBox[{"\[Lambda]", "/.", 
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{"%", "\[Equal]", "0"}], ",", "\[Lambda]"}], "]"}]}], "//", 
    "Flatten"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.69791419088354*^9, 3.697914204107209*^9}, {
   3.69791423675738*^9, 3.697914267442163*^9}, {3.697914332513447*^9, 
   3.697914344706374*^9}, {3.6979210568048067`*^9, 3.697921086163679*^9}, {
   3.697921161278735*^9, 3.69792116307207*^9}, {3.697923698797831*^9, 
   3.6979237516937227`*^9}, {3.69792439200351*^9, 3.697924448790558*^9}, {
   3.697924546414797*^9, 3.697924651712484*^9}, 3.6979249626931677`*^9, {
   3.6979252361103277`*^9, 3.6979252781015997`*^9}, {3.697925865210726*^9, 
   3.697925906632759*^9}, {3.6979259919838133`*^9, 3.69792599286863*^9}, {
   3.697926282493573*^9, 3.697926298691634*^9}, {3.69792633000852*^9, 
   3.697926363936458*^9}, {3.6979265871865673`*^9, 3.697926593914707*^9}, 
   3.697989793786848*^9, {3.697989884811812*^9, 3.6979899000758*^9}, {
   3.69799030526079*^9, 3.697990455812793*^9}, {3.697990878903956*^9, 
   3.697990879016015*^9}, {3.698505224191556*^9, 3.698505279118783*^9}, {
   3.6985884845824614`*^9, 3.698588563629053*^9}, 3.698588615905355*^9, {
   3.6985886754283657`*^9, 3.698588780187793*^9}, {3.698589304512279*^9, 
   3.698589318027289*^9}, {3.698589833723196*^9, 3.698589850157795*^9}, {
   3.6986037137243843`*^9, 3.698603713821808*^9}, {3.698613813894794*^9, 
   3.698613813976364*^9}, {3.69875804231399*^9, 3.6987580952477293`*^9}, {
   3.708264756710517*^9, 3.70826486735957*^9}, {3.708264901408318*^9, 
   3.708265012641108*^9}, {3.7082650747312317`*^9, 3.708265158807321*^9}, {
   3.708265357326613*^9, 3.7082654072179003`*^9}, {3.708265688150424*^9, 
   3.708265688964964*^9}, {3.708266698979836*^9, 3.7082668815205307`*^9}, {
   3.7113707457391863`*^9, 3.711370746006536*^9}, {3.711372444673503*^9, 
   3.711372470970936*^9}, {3.711375074476313*^9, 3.711375105762352*^9}, {
   3.711375171651992*^9, 3.711375177717349*^9}, {3.7113912010190487`*^9, 
   3.711391206270217*^9}, {3.71139124623836*^9, 3.7113912466140957`*^9}, {
   3.711474858918627*^9, 3.7114748591022863`*^9}, {3.7124825822801332`*^9, 
   3.712482626916399*^9}, {3.712492712070631*^9, 3.712492712215355*^9}, {
   3.712559688942739*^9, 3.7125596890200987`*^9}, {3.712559732337173*^9, 
   3.712559734481785*^9}, {3.712560207989962*^9, 3.7125602347713223`*^9}, {
   3.712561017124344*^9, 3.712561018345109*^9}, 3.7130118306370897`*^9, {
   3.7130121369433813`*^9, 3.7130121478791523`*^9}, 3.713012812008912*^9, {
   3.7130129837575293`*^9, 3.713012984270946*^9}, {3.71307962139642*^9, 
   3.713079627138225*^9}, {3.7130832256456223`*^9, 3.713083225752466*^9}, 
   3.713179141404285*^9},ExpressionUUID->"fe7c3bb4-9000-4ef7-9867-\
f8f3817f7801"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"bothfixedA", "=", "\[IndentingNewLine]", 
    RowBox[{"RegionPlot", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Max", "[", 
          RowBox[{"Abs", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"\[Lambda]", "/.", "YaXAEigs"}], "/.", "someparams"}], "/.",
              "moreparams"}], "//", "Flatten"}], "]"}], "]"}], "<", "1"}], 
        ")"}], "&&", 
       RowBox[{"(*", 
        RowBox[{"internally", " ", "stable"}], "*)"}], "\[IndentingNewLine]", 
       
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"\[Lambda]WA", ">", "1"}], "/.", "eqr0YaXA"}], "/.", 
          "someparams"}], "/.", "moreparams"}], ")"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"\[Alpha]fd", ",", 
        RowBox[{
         RowBox[{"-", "1"}], "/", "2"}], ",", 
        RowBox[{"1", "/", "2"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"s", ",", 
        RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Gray", ",", 
         RowBox[{"Opacity", "[", "0.25", "]"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"BoundaryStyle", "\[Rule]", "None"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"MaxRecursion", "\[Rule]", "2"}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"bothfixeda", "=", "\[IndentingNewLine]", 
    RowBox[{"RegionPlot", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Max", "[", 
          RowBox[{"Abs", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"\[Lambda]", "/.", "YaXAEigs"}], "/.", "someparams"}], "/.",
              "moreparams"}], "//", "Flatten"}], "]"}], "]"}], "<", "1"}], 
        ")"}], "&&", 
       RowBox[{"(*", 
        RowBox[{"internally", " ", "stable"}], "*)"}], "\[IndentingNewLine]", 
       
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"\[Lambda]Wa", ">", "1"}], "/.", "eqr0YaXA"}], "/.", 
          "someparams"}], "/.", "moreparams"}], ")"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"\[Alpha]fd", ",", 
        RowBox[{
         RowBox[{"-", "1"}], "/", "2"}], ",", 
        RowBox[{"1", "/", "2"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"s", ",", 
        RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Gray", ",", 
         RowBox[{"Opacity", "[", "0.25", "]"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"BoundaryStyle", "\[Rule]", "None"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"MaxRecursion", "\[Rule]", "2"}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"XpolymorphicA", "=", "\[IndentingNewLine]", 
    RowBox[{"RegionPlot", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Max", "[", 
          RowBox[{"Abs", "[", 
           RowBox[{"intYaXAar0", "/.", "moreparams"}], "]"}], "]"}], "<", 
         "1"}], ")"}], "&&", 
       RowBox[{"(*", 
        RowBox[{"internally", " ", "stable"}], "*)"}], "\[IndentingNewLine]", 
       
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"\[Lambda]WA", ">", "1"}], "/.", "eqr0YaXAa"}], "/.", 
          "someparams"}], "/.", "moreparams"}], ")"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"\[Alpha]fd", ",", 
        RowBox[{
         RowBox[{"-", "1"}], "/", "2"}], ",", 
        RowBox[{"1", "/", "2"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"s", ",", 
        RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Gray", ",", 
         RowBox[{"Opacity", "[", "0.25", "]"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"BoundaryStyle", "\[Rule]", "None"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"MaxRecursion", "\[Rule]", "2"}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Xpolymorphica", "=", "\[IndentingNewLine]", 
   RowBox[{"RegionPlot", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Max", "[", 
         RowBox[{"Abs", "[", 
          RowBox[{"intYaXAar0", "/.", "moreparams"}], "]"}], "]"}], "<", 
        "1"}], ")"}], "&&", 
      RowBox[{"(*", 
       RowBox[{"internally", " ", "stable"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"\[Lambda]Wa", ">", "1"}], "/.", "eqr0YaXAa"}], "/.", 
         "someparams"}], "/.", "moreparams"}], ")"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\[Alpha]fd", ",", 
       RowBox[{
        RowBox[{"-", "1"}], "/", "2"}], ",", 
       RowBox[{"1", "/", "2"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"s", ",", 
       RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Gray", ",", 
        RowBox[{"Opacity", "[", "0.25", "]"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"BoundaryStyle", "\[Rule]", "None"}], ",", "\[IndentingNewLine]", 
     RowBox[{"MaxRecursion", "\[Rule]", "2"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.69791419088354*^9, 3.697914204107209*^9}, {
   3.69791423675738*^9, 3.697914267442163*^9}, {3.697914332513447*^9, 
   3.697914344706374*^9}, {3.6979210568048067`*^9, 3.697921086163679*^9}, {
   3.697921161278735*^9, 3.69792116307207*^9}, {3.697923698797831*^9, 
   3.6979237516937227`*^9}, {3.69792439200351*^9, 3.697924448790558*^9}, {
   3.697924546414797*^9, 3.697924651712484*^9}, 3.6979249626931677`*^9, {
   3.6979252361103277`*^9, 3.6979252781015997`*^9}, {3.697925865210726*^9, 
   3.697925906632759*^9}, {3.6979259919838133`*^9, 3.69792599286863*^9}, {
   3.697926282493573*^9, 3.697926298691634*^9}, {3.69792633000852*^9, 
   3.697926363936458*^9}, {3.6979265871865673`*^9, 3.697926593914707*^9}, 
   3.697989793786848*^9, {3.697989884811812*^9, 3.6979899000758*^9}, {
   3.69799030526079*^9, 3.697990455812793*^9}, {3.697990878903956*^9, 
   3.697990879016015*^9}, {3.698505224191556*^9, 3.698505279118783*^9}, {
   3.6985884845824614`*^9, 3.698588563629053*^9}, 3.698588615905355*^9, {
   3.6985886754283657`*^9, 3.698588780187793*^9}, {3.698589304512279*^9, 
   3.698589318027289*^9}, {3.698589833723196*^9, 3.698589850157795*^9}, {
   3.6986037137243843`*^9, 3.698603713821808*^9}, {3.698613813894794*^9, 
   3.698613813976364*^9}, {3.69875804231399*^9, 3.6987580952477293`*^9}, {
   3.708264756710517*^9, 3.70826486735957*^9}, {3.708264901408318*^9, 
   3.708265012641108*^9}, {3.7082650747312317`*^9, 3.708265158807321*^9}, {
   3.708265357326613*^9, 3.7082654072179003`*^9}, {3.708265688150424*^9, 
   3.708265688964964*^9}, {3.708266698979836*^9, 3.7082668815205307`*^9}, {
   3.708267185586544*^9, 3.708267196826241*^9}, {3.7082675323948603`*^9, 
   3.708267532985468*^9}, {3.7082675734459543`*^9, 3.708267576453854*^9}, {
   3.7082682937576733`*^9, 3.708268295680781*^9}, {3.7113707155192127`*^9, 
   3.711370729731615*^9}, {3.711370792225245*^9, 3.711370828115415*^9}, {
   3.711371063092106*^9, 3.711371063757251*^9}, {3.711372144469955*^9, 
   3.7113721753248243`*^9}, {3.7113723412610397`*^9, 3.711372350993482*^9}, {
   3.711372826645961*^9, 3.711372834477874*^9}, {3.7113743080460997`*^9, 
   3.7113743149408293`*^9}, {3.711374982870043*^9, 3.7113749857732067`*^9}, {
   3.711386976094173*^9, 3.7113871196229973`*^9}, {3.71138730852668*^9, 
   3.7113873209295588`*^9}, {3.711391212371595*^9, 3.7113912239549627`*^9}, {
   3.711474886567898*^9, 3.711474904791568*^9}, {3.7114750103602667`*^9, 
   3.711475036828904*^9}, {3.711475085124415*^9, 3.711475099411407*^9}, {
   3.7130121953925467`*^9, 3.7130122038152847`*^9}, {3.713012634133914*^9, 
   3.71301263824895*^9}, {3.713012700596148*^9, 3.713012700690166*^9}, {
   3.713012779031542*^9, 3.713012791717905*^9}, {3.713079633781869*^9, 
   3.713079641311886*^9}},ExpressionUUID->"e877dabb-20b3-4947-8b33-\
95c01c4a5848"],

Cell[BoxData[
 RowBox[{
  RowBox[{"YaIntStable", "=", 
   RowBox[{"RegionPlot", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Max", "[", 
           RowBox[{"Abs", "[", 
            RowBox[{"intYaXAar0", "/.", "moreparams"}], "]"}], "]"}], "<", 
          "1"}], ")"}], " ", "&&", " ", 
        RowBox[{"0", "<", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"pXf", "/.", "eqr0YaXAa"}], "/.", "someparams"}], "/.", 
           "moreparams"}], ")"}], "<", "1"}], " ", "&&", 
        RowBox[{"0", "<", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"pXm", "/.", "eqr0YaXAa"}], "/.", "someparams"}], "/.", 
           "moreparams"}], ")"}], "<", "1"}]}], "  ", ")"}], "||", 
      RowBox[{"(*", 
       RowBox[{"internally", " ", "stable"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Max", "[", 
         RowBox[{"Abs", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"\[Lambda]", "/.", "YaXAEigs"}], "/.", "someparams"}], "/.",
             "moreparams"}], "//", "Flatten"}], "]"}], "]"}], "<", "1"}], 
       ")"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\[Alpha]fd", ",", 
       RowBox[{
        RowBox[{"-", "1"}], "/", "2"}], ",", 
       RowBox[{"1", "/", "2"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"s", ",", 
       RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotStyle", "\[Rule]", "None"}], ",", "\[IndentingNewLine]", 
     RowBox[{"BoundaryStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Black", ",", "Thick"}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"MaxRecursion", "\[Rule]", "2"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.711474925092482*^9, 3.71147496716144*^9}, {
   3.711475038965263*^9, 3.711475062759836*^9}, {3.7114753145796022`*^9, 
   3.711475322770665*^9}, {3.711475370926453*^9, 3.7114754140461817`*^9}, {
   3.711475452043969*^9, 3.711475500965314*^9}, 3.713012207087121*^9, 
   3.713012638998308*^9, 3.7130796439067593`*^9, {3.7131819818869543`*^9, 
   3.7131820115918493`*^9}, {3.713182108519018*^9, 
   3.713182109517391*^9}},ExpressionUUID->"a302c56e-c796-4127-a89f-\
eecc10eeeb9b"]
}, Closed]],

Cell[CellGroupData[{

Cell["Plot", "Subsubsection",
 CellChangeTimes->{{3.708291374414747*^9, 
  3.7082913765974817`*^9}},ExpressionUUID->"aed32099-b5dd-4702-a4d3-\
7f0a945f6fc3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
  "bothfixedA", ",", "\[IndentingNewLine]", "XpolymorphicA", ",", 
   "\[IndentingNewLine]", "bothfixeda", ",", "\[IndentingNewLine]", 
   "Xpolymorphica", ",", "\[IndentingNewLine]", "YaIntStable", ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.5"}], ",", "0.5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Frame", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"True", ",", "True", ",", "True", ",", "True"}], "}"}]}], 
     ","}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"ImageSize", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"xsize", ",", "xsize"}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRangePadding", "\[Rule]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{"FrameTicks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x", ",", "x", ",", "ticksize"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "0", ",", "0.5", ",", "0.25"}], "}"}]}], "]"}], 
      ",", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"y", ",", "y", ",", "ticksize"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"y", ",", 
          RowBox[{"-", "1"}], ",", "0", ",", "0.5"}], "}"}]}], "]"}], ",", 
      "None", ",", "None"}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"FrameTicksStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Directive", "[", 
         RowBox[{"Black", ",", 
          RowBox[{"Thickness", "[", "lwd", "]"}]}], "]"}], ",", 
        RowBox[{"Directive", "[", 
         RowBox[{"Black", ",", 
          RowBox[{"Thickness", "[", "lwd", "]"}]}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Directive", "[", 
         RowBox[{"Black", ",", 
          RowBox[{"Thickness", "[", "lwd", "]"}]}], "]"}], ",", 
        RowBox[{"Directive", "[", 
         RowBox[{"Black", ",", 
          RowBox[{"Thickness", "[", "lwd", "]"}], ",", 
          RowBox[{"FontColor", "\[Rule]", "White"}]}], "]"}]}], "}"}]}], 
     "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"FrameStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Black", ",", 
        RowBox[{"Thickness", "[", "lwd", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Black", ",", 
        RowBox[{"Thickness", "[", "lwd", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Black", ",", 
        RowBox[{"Thickness", "[", "lwd", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Black", ",", 
        RowBox[{"Thickness", "[", "lwd", "]"}]}], "}"}]}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Relative fitness of \!\(\*
StyleBox[\"aa\",
FontSlant->\"Italic\"]\) males\>\"", ",", "\"\<\>\""}], "}"}]}], ","}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], ",", 
      RowBox[{"FontSize", "\[Rule]", "14"}]}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ImagePadding", "\[Rule]", "Pad"}], ",", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Epilog", "\[Rule]", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Text", "[", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"\"\<A\>\"", ",", "14", ",", "Bold"}], "]"}], ",", 
          RowBox[{"Scaled", "@", 
           RowBox[{"{", 
            RowBox[{"0.05", ",", "0.95"}], "}"}]}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Text", "[", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"\"\<\!\(\*
StyleBox[SubscriptBox[\"\[Lambda]\", \"WA\"],
FontSlant->\"Italic\"]\)>1\>\"", ",", "14"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"1.29", ",", "0.5"}], "}"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Text", "[", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"\"\<\!\(\*
StyleBox[SubscriptBox[\"\[Lambda]\", \"WA\"],
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"<\",
FontSlant->\"Italic\"]\)1 & \!\(\*
StyleBox[SubscriptBox[\"\[Lambda]\", \"Wa\"],
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"<\",
FontSlant->\"Italic\"]\)1\>\"", ",", "14"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"0.5", ",", "0.5"}], "}"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Text", "[", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"\"\<Ya equilibrium unstable\>\"", ",", "14"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"0.5", ",", "1.25"}], "}"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Text", "[", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"\"\<*\>\"", ",", "18"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"1.2", ",", "0.85"}], "}"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Rotate", "[", 
         RowBox[{
          RowBox[{"Text", "[", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{"\"\<Relative fitness of \!\(\*
StyleBox[\"AA\",
FontSlant->\"Italic\"]\) males\>\"", ",", "14"}], "]"}], ",", 
            RowBox[{"Scaled", "@", "ylabpos"}]}], "]"}], ",", 
          RowBox[{"90", " ", "Degree"}]}], "]"}]}], "\[IndentingNewLine]", 
       "}"}]}], ","}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"PlotRangeClipping", "\[Rule]", "True"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.7131820419301147`*^9, 
  3.713182049168096*^9}},ExpressionUUID->"aa38802e-f023-40f0-9a76-\
4ca771e0cafc"],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1: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
5bb8CtfRAf4fq9/fWg==
    "], {{{
       {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[0.25], EdgeForm[None],
         GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxVlmdw1VUQxfcB0VCCYFAQASlCjEFKQrGgICgKCipWVFBQUGpECF1BFGyA
kAh2/Wzvvffee+9ldBy7o6OjnjP7e8Pzw5nd/757d/funr339ZhaP2Fus4io
LEQ0lzxAGC3sLsyItG0lzBXmCHsKs4SZwh7CbKFMaClsg2wl1AvlQgXfZfhp
i93rFgjzhWHCjs5B6AAqWLsd0r4XCQuFvYUGob3QSThdaCNsK8wTThP2EnZg
je2dkY5xDr97TxfiOc5ioaOwk9Ad3f57IO2vJ9L+eiGd+85I+9tF6IafZehV
QnWJ70ri+5y7YnOcw9hfK/QlnuPshnScFcKZwghhjNBHGCCMI85AYamwRNhH
OJLYdUINcex3IrEHCZP4bbAwhdhDIns+m56V0cuW1LieM5TTo4qSevk85siM
+D8/vG4+PWtfUtMe+KqkT8XedyhZ16mkl/42FxroUyX178y5F1P3CnwUudWF
dR3J0f04Q1guDC/pa7E+ddSuG32pYk81392pYTVnqOF7HD3pg+9l6D2pbU1J
X/vGFg71orfua39hGmuG0qNB+J9Cr2pYMwQ/6yNn13PrvteSp3k1kPxXRs6u
+7IqcqbdwzWRs+h6nxc5Z67TBZE8cg3WUiefZWQkB53n/sK+Qj/hQH6zvh96
f/IaTW6j2NMPm++dAmtHYR+JL8cYT019hrHUZwByLP4PRh+APAh7FXud86H4
GohtPOvX4qs3dZxCbaeiu74TqGMtcgJ+jkCvRR6OvZoeuP5HodehH836Y/iu
o68T2ee8DiG3Y7G79ycKkyN7fzy/DUIeF1tmfBL+JqMPRk5mfZETVdhOwD4R
X/Zj3no2ulKDqfgxJzx3nbCdhN08nUb9pqMPRU6nhqei227++X7wu7Ahkrv+
Njdn8rvXnsLeDdj9XjVGctd30MZIThfvKUvfN+b1HGwb0Vsg56L7HfBd1gbY
XwVxZhFrRORMmksnc2bn0xT5lhTvMkvfT56h+dia0FsjF6BfHDlvDei+y9pF
ztxCamy5CHsjeW4tbIqcT99xw+mTue0Z9d3XjTXWt0cuRd8cOc/F+8iyCt/z
8L8Zn13x5Ti+88xfc9W8HUNNPC8PCJ9y7uXsX0aczfhZwzl9Fs/aOnL/Sfg+
cv6XkPdizreJnBeyt4F6r6Zvq/l2Pc2Fs+n5GGL4fBdF8qoZ9W+iT/XsKefs
jdjWs8d31b/Cq5Hz3UyX0+uR81om/c3I+ftZ+D3ynvpbeDnyjrlMuJ56XiJc
Sw7mnrk4m1gbsM9EN/9XsqYF52sqOWMjPmewvznnXoXde8+KLf/N/O05esu/
F3LO37DvQt4X7witCjnD7wkVhZy3l4S/Iu+g14RCIe+sV4R/Iu+4h+i9+/6h
cBt1u0e4i17cKdxOPs8KX0e+E/cL99LHF4Q/Iu/rX6mp6/mo8HDkTDwhPBbJ
8SK3zM119No8PDeSZ+3osWvXhnqspJ7edyF+fhOeiZzvBvYW377zifuc8G3k
m/S08GQkb9cQbxhrvcdcLXK3I3Ecz/z/U3gx8o26VLiOfK4UbmKv5+CHyFnw
bK3gXN8Jz0e+pV9RR9fwZuFx/Luu32D3mb7kXK3Vt3cj761rhFsj31bz8YNI
7jmXO8jnFuEp4l5FDPu/mt9604fPqeEVwo3U3PJB9MuFGyJ5a3kfumfi7kiu
OpdfyKet8nw/8n1wPR6hJuWyvx357pkLn9EXc+3HSL65J1/QF/Pu40jumXcf
RXLPXPskkm//AX/QFuQ=
           "]], PolygonBox[CompressedData["
1:eJwtlOdLV3EUxs81y/bObAm96G2a7b0pKiwsNCpKLCoQDCEIApEQiRDpZdre
9QcURVEYRUE7zYZmwwYtGrR3n8N5Xnx4fud+7/3dM55zBxetyytJMbM5kAqN
0CYxW4Iug2PQl3iTzs/DQOIqdBBcdCWuRofAXWhHvBwthMfQg7gUHQ8vYQ8M
hanwBHpyvh6dAM3QmXg1uhbuQwfiInQVNIAR5yOLoQ4GEG9B0+Ep9CbeiE6C
1/AWZsJ0eATdOS9Bx8EJyCCuQNPgGnxTP+bBDfgJubAA3sO7SMFmwVHomkSu
o+EKvIJpMAPOQH/ON/t74Rn0IS5DJ+vey8rNn3nudXBejk6BVuhFvAGdCLfg
D+TBIjgF/TivRDvBL9gH2TBftb9Qr70HCfceQHOgQL2s1+989eKkelOh2V5S
rtV612nNslLeOI6OtfCI17ZL3ihT7Wc1W++Be+s2utTCY6nEB9Hhuua175aX
ytX766olV7O5CnM1o++wF7J0zb15QbN3j36CzzDbwnNpnB9CR8AK+Av7YRgs
tPDuHZ25hzsSH0ZHwkr4AB81+zEW3jun2bgH3Xs7LbzoHjzic0nCu6Msak1J
wrtes8/in2aZo9n9sPBetmZ9U7n5zB9AJs9v9f9R7W8svJalWn5beNVr8tzb
J7GLXoPX3jaJ3fYefIUvFl7zHnVJImfPdY3FLjbpt++k7+p2C6/5zvpu3lNv
fEe7EW9TbsUW3t1h4X338EPdUyzP+C7WWHxbfCf9W1FrsYulqrVFvfaa/wPx
D3+k
           "]]}]}}, {}, {}, {}, {}}}], GraphicsComplexBox[CompressedData["
1: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
OSUcuFthk0S/j/0fPjLN/w==
    "], {{{
       {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[0.25], EdgeForm[None],
         GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNV2ds11UUvZfZ0lIoG8pqaRlWStlltgIiIHuI7A0qq4AUxEJBECpLhuwt
GwGFgrjiQI3rA4kfHInGEUeicUSNW+M5uaeRDyf39f3euPfc8+79N336wpEL
KpjZODerCNsMwNCqAEmyVYEzGlcDzgFngeZASyALSNA67uV5F4DzQGvgFqCN
ztsH5ANNgBQgUWdmalwd6AU01poEnUff+gAZQCXgCa1NBdoBORrfA3QGOgBP
A22BWsB6YDDQBZgH5AENgB5Amu4rBLoDjYBbgWz56IqN8RcBNYHawAKgG9AQ
mAt0BeoD7YFcralwEzc9dQ/va6WYk8VfktZkaH1F8ZGiOM8qB4niMkW83Qt0
BOrJ31StPy+O6Osy+V1LPNXWfHmOq4kr+lwX2ATMF09PWmiCa/crfwXAdmCR
OOtnoYVErU0XZ9P0jXFuBRbexNkw8dZbeSYvY4G+4uBBYArQQvnOECedFC/9
vKKzq4uzLHE43UJzjG080F+cjRPvyeIvW3vLgMtAMTABuEPfNstP+vsMcA0o
AWZY6CNFfOeIz4nAQP2dpDvJ7UwLjaaK+1zlYrbiYSxrgQcsdFuiGOsAsyz0
xH1zLLTNXG8Ahlhojj7mic9JwCDdMdXifSZoLbVPfT4CDNWeoTqDb2G4YqX+
R1i8hTTFM1A+jLF4n8zZY8Ao/b1De/ieRiuvzOlu7clXPvson4/qPt5xN3C7
8jdKZ3DvXRZa4117gT3AbQLPawocB7borJEWb4w+UxfUXqK4GCSes5Vf5oK1
YYBywVz1V07J/Z3iuau4I2/HgI3iO0s+M8/UZl/xTI4Ha305v+T2CFCqvyfr
/I6Kf7g436w7himO0eKhl3hpLG5GKMbTwC7xu0jxp4mbMeLtsEVN7CDux8rf
3uKXa1oqB4yJ72a8+DgF7NTd1PsE8UctU+s54mC6eGihHFcSH1PFSSfF3FEc
zxDP1BT1TV11lp/knHqfpLzdZ1Hj6ilvM5U78jdH88ztbOWX75t1J1P3cS/f
0UWLOljDoq6xvjVUfucqR3n6xnm+gwXKy2LNc80SzXPNUX1roDwWiv9C5YPj
E8D9Oof7Fmr8uM5qqLiXKhbWgIeUL2pzuYU+iSJxtVyxcG6lRd2qoe8csxaV
6Rv7L2vXagu905aIk6Xit57WrtL6izqnSByWiFvuXaNzmK+18vN14KSH74xp
q2KlrreIS+q+VHxTv9vEGbW+UdyTp+3ij++W/Y71k1qmzsvfATXJd8A6wJqQ
L7A3NVVONilnBZpvIrtfa+YrB+SfejlkUS9YG4/IX649oPWsV8cVE2vdScVx
yaJH0teD2sM7m1v0bMbBnFMHzDvr4WnFxPp5SjFd0vrKsuc0Zg9nn2OfumrR
15M1vmL/93jaVH2/oDXFyiW1sUzjIvl7Seef0d/s75e1n+c9pfnKmuO31prj
t2biYJt4OKszed7DFr+3usjHq/KHGiuTX5n6lqzzryoG9lj+FqHecjWmzldb
6LhEuKY1xfKtptZyvq3myuTzNe3lPDVWqFycgGZreryzDrCnPL6vgi3x0NYy
2CKPXG2Ere/x7j+l7x7nvwWs8KjXy/kOPPT6Ju/zqMs3gC+UC/7W3uDRw9fD
1vao0+8C31m8zZWYK/bQC39M5Xn0BIft4VG/S2FzPHrNIthCD21+DBz0qOuv
Ans9auRrwD6P2vkKsMejBreCva57MxmTR938ETjqUY//IX8eWq7hwR15awR7
QDF+DRz26BVvAPs9euG3wBGPvvELcMyjJ3wOHPLoOS1hs1z1CHasR999m7n3
6FXc97PF3t+AXy3q0GjM/y69VcH4femT99eVDzthX7DoD+SjljghB6niYTts
NY/etRs2xaPnkMuPLPjchXF1jz62AzbJowe2g23j0UsqMD+u3y6wGR6/iQtg
P7CoDd8Dgz3qKfPZUzklT99YcNUY4zSP361rYSt51Bjm5AeLvFAX3aQNcv+V
Bf/Mcx3lmrW5q+oz+f7MgvMvgQEedX847AhgHcZDYH+yqO3NPXRGjSXCHvf4
HfG84mfszwLvWNSK2Zib41H3Z8HO9PhdQz7yxUl3jzfD98LzEnQmfewiP6/r
PVCTzTw0R70NhR3m0SOfU86Yr14eWqFOpmA82aOWz6WmPOr3eNfbw/gP6Yaa
mQA70aM/MYfZyuMY2FEe9YzcvGfBz0gPvtaVx+0RO+vHvxY1ZB7G8z3q41TY
aR59jm+FdYHvJRfjPy361V/Mm0dfombTpdv+5Njj/6HFsEs8+t8n0jT13Ila
9qjx7WH/tujDH0pz1Ftf2H7ACowHwr5kUYvWMT6P/vei9E1tU6dVtZdrb2j9
y3obfBf/AUZ6Z1o=
           "]], PolygonBox[CompressedData["
1:eJwtlWdskFUUhs9hiwgKBBBRaRDaFCqCDJkiskFIisqGUvYsewqU0coeCkpQ
hrVqYkLiXwWNBtQ/ajSohKEMlaXsJQjC8+bcH0/ue777jXvPfc/5MvILcqeW
MbOFUA6OwG/QCPKgpptdZxwHvWEBsUNH9MvQGJ0NddCT4DA8QNyZcQSchSeJ
ezDmQCG6DHRCvyrQ3zL2gWKoTnyZcSz0giziTKiJngAZ6PpQOz1zD+oS5zJO
h9roZ2AGehfUQDeA8egd8DPsT3sZDo8w9w/jGOgJdYibwUx0CbyOrgUvScOP
8CV0hyHwKHPNYRa6FE7ADzAYsuF72ANdYSBcTWvQt1vAQXic5zOUJ/gc6hEP
YqwCF+EADINm6d1fQLf0jVNpTVpLE6jEs98xDrA4g3PwEwyFphZzn8GL6Z5Z
3G/Q3iKHC9GL4C308/AQ+g/GUembWsu+dDZa07PMN4KJ6NkCPRc2ozukb3+V
cqs1VGXuDOPolMPKHp7LS2sqT1wCn0jDXniCeCRjpvLo4TF5S549mnKs3Mqz
DzL/O2N+ynk+8X+MU2CNckLczePZBtojejm8a+HJ9ugOHt6Ux59GN/Xwtjwn
L2nP2qs81QvdE6qh50IP9HHGLFgsnxFfYFwKhdDHoyZy0rXuxH+lexfBRuJP
094/1pl6eLIk7aENuq1H7enMNnt4Rl7ZDeuIJ8NG9AfQxWPP2usC+B+mEm+y
8OzD6JYwz6JGf4GvYT4shytQ7FE7zWEVegisRO+EG+kZ3dtSOWHuLmMBrIdf
4RsoghVJq+aL07Wh6IHQ2uKd/8IrHnOt4DX0BvjIwpN30jf0btXoWvRYWId+
H/qpVj3WukzvQPf10NrTFPQE5dAiR7eTR+QN9YyR6GHwHHo1jEOPgjYW31iD
zvOYew/K6d2wzcJDOR49oTTlYI7WCh9a1IR65WqP3qSeqV53zaIXqOc1ZO4p
j16nmlLtnbaobdXgn8kz8oo8p7WNgbUWa9TaR8Aqiz1or5OUQ4s9F6Cnwxvo
dlDRw3PyWn35yMNTu5OH5Y0WHt6WR1RbJy16m2pM/4ab6ez1j9BZDvbolTrT
x9DHLGpXPU21/7dFL1IPOG9RI4UWPV69+JJFr1NPnumxZq31TZ2hR49Rb9li
kdsZHnPKsbwyz2NOnpno4RF5QzlQb6ng0WvVY0Z7nKnOUjmc5lFDqh3laIlH
T1QvfBuGe9SAvK8cD0DfSl7VP6I/ca6H1+XhpejFHs9utag9/bP0r1INFhG/
AF3Q2y163QoPrZ4nb5WFdyw8pnsPpbPSM/cBubjcsg==
           
           "]]}]}}, {}, {}, {}, {}}}], GraphicsComplexBox[CompressedData["
1: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
YoXyOFWZ86d7+D/30azZ
    "], {{{
       {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[0.25], EdgeForm[None],
         GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNlXds1lUUhk+BUsooo1KgshUK4kRRlKHVamUIUgWxWqhQZi2VoZVC3Xvv
vXccMcZtjBq3RmOcuKNxa9QYJ+73zXkI/ePJd79z7z2/c95z7r3DFjTXrOgQ
ERtFR7GnmCyGiFpsnUWJ6CKKxeHiMDFUzBfzxDCxQBwhhos6Ucj6roztZztR
IUpFPT57iBpRLfow1x37ItEgthI92/mbIfYirsWit+gnthUjWLtULBFbi4X4
tP/lYpkYia0U+yQxUYwSO4gxolxsL0bjf5zYUWzDfBVrComrGG1qsc0W00QZ
2tTzzWJiLCGPUvJtINbeaFOCfSY5O7eD0KuC/Bbjv5oYe5PfNGKbQxzOYS45
OvZGaug4m6ihv9km1pNbKd+xPqvRsozYRxBfc2TNnddKauUYdkPLQeIANC3H
r78/QOwd2ROl/I7le/2I198aj+YDqe9OfHsKtfHaoyN7tiNrd6ZGE8SujHcn
pkFoMIkYpmIfyO94xqNYNwgfe4jB+J4Qm3tgIn78/cntYhiHn001dh0rGW/B
Wp+3AmyV6FCJLh77bNVRl32Y89590dHfdc+0RvZNG3MjqVk1tfDv/mg1nXqU
Y/Ncf8ZT2q1x/2yJJlPRYzX2vuLgyF6swDYdnzXY7XNWZO+OgBnt9JhBLp4/
kHEF+/tQ51nsq8ben30zWT+WOCrQyFr5bLnf5xD/IYxHg+fKqNtc6rs28nwW
RZ4Hn1/fV4eyZgw5zsbn0MhzXsiv70Tfo8OomWM5NvKMOaYW1nXA7jWdIs9M
fWRv2DYfu+NpYm44sXXndwFxTqMeZdR4Ibr5/DVg83ldwpp1jHsx9lnddHf4
13VvZW83fhcx9r6l7K0jr0Ji8F3Tl9/ljOuJ3zqsZ66cfUei3wrWFGFrJPcm
5qzlUZH3Szfya0aHVcTfi9hXkm8ze4ZjW4UercwtRLM1aLOG/475mMh7xDWq
ZdyRX88NoYYtzDdSy06saWHvPOx11Gstevhc7hd5NpuwFxFXKzm24KuW+NeR
4zJ09N7fxV+RZ/Il8WLkfXO5eCPyfrpA3Mzel8WXkffX+eIGvvWnuCfyXJ8r
riKX98WFkefvGfF05D3bRRdV14I8SxeLVyPP30ZicjzFmn878oycJ64lx+fF
c5FvgP29hs+LxG3o7/nXWXOp+CPy/uwmn89GnuNzxAPo3En2tyLvhLvFz+hb
hVbut9vFrdT6C/FB5L38r/g78s76UXwXeRd7Xxs6F8n/V5HvxG/il8g78hZx
U2Rf3Siuj+y3y8R/kW/EFeKH4E2Sn8KCvBNPE78S8xLq6/69WlwZeS6uE9dE
9v994l2xi3gQv/bpR+PjyHfpEnFX5FvQQ/Z3Iu+009HRGp7KugFo8A06HIem
1tO5fk2+34rPIt/Mj8QGYjiTPAcT14fYrd/3aPiUeDLyPXcfvRLZS/Z3Pz5P
jOxF9+EJkb3iPjk+shfdh5+IeyPfWef6KfmeHNk37pnHHXtBvh8nRfZ9L+rz
KDV6U5wSm99N17eKuj1C7dyzZ0T2rfU7Cw39/c+JwfP/sOYncWfkm+z+eiyy
x3oqlhci343uGpcU5Pvxnjgb3TZQV+vm89e5IM+g6/8QPXCHeCKyD93j7hv3
jPvi4cje+B8LifJt
           "]], PolygonBox[CompressedData["
1:eJwt1FmIzmEUx/HzH8Ng7MY6tkGy72YwSYjMIGuWUmpKSdNrmiaXjGUSLl1M
ERHZk+z7EtmN7YpMmBCTfcvO93R+F5/OnPf9/5/3Oec5z+QULZmRSjOzSUjH
VTRKzOYS5+EmniAX+TiBFnxfROyKQ7iOgRiOA7iE/ijAeWzAYPTDHVShl545
juast4CYg1PIIl9E7I5jaEY+n9gFJ9GSfCGxG44gm3wp0eu4h7vogwHYiw8Y
g3E4iCv6bgrOoRXvLyb20N4yyedoj+35e5f2UobneIFh6I3LqM8zsy3e8VqW
q5deUxPyxuho0VPfyx6M1Z68tmXau9f4Du8xGp3V63JihkXP25BvUa9SaE2+
Sb0pRlvybTqbErQj36FelaIheQNkW+zZe7nCa7bo6Wk8wiD0xWusQQfVXKMz
97POwzVUYohmwGflBkZqZp7hqXrl+WOsRScMxUs8VO7vvEKF7xujsB7Vetaf
eYs3SNSjdajFCIse37eY2Xztyc92lUeLM/bZWul9t5ixeuQZSfxWTxxWjXla
c6N6XKwz9dlqmsTd8Bnbqp6XqIebdUYpnZmf9QWL2fczX42PFrOYhbNeC89P
JU7HTouZK9Oet+sMS7XnffiE8eqRv3uGOM1ijTTyB1rbP/tn0axc9e87fqBQ
Z/oLP1V7odbejwn6ja/4holeJ35b3CG/O5PxxeLOF+iZz9htcZd8jVuq0Wvz
mbqIOuxnJnEW6vJ3ehJr+2d/8Fdr+4ze1jv+rP8P8bt+1OJu+J3/D/kyenk=

           "]]}]}}, {}, {}, {}, {}}}], GraphicsComplexBox[CompressedData["
1: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
pcSlrgD+B5XUCiY=
    "], {{{
       {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[0.25], EdgeForm[None],
         GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwBgQJ+/SFib1JiAgAAANAAAAADAAAAFwEGCAIDBwECLhoEXQYKX14YCwYH
Hh0IHAkNIiELDgkKYmEgJCMOYA0RTRATTk0SJhMQKSgTSS0qLCsVAQcGGggD
AggHXl0JBgsKHQsHCQ4NHxwMIQ4KIxENYWAQJyYRayUSaygVQyILMBgJZBcG
FxkBOC8aBBoDUkAbQjAcaRwNOTEdCB0HQR4IaGdTOh8MCyEKSC0WSisWDiMN
RCQOPDMjbWxWPTUmESYQRScREygSPjYoWlAqRikTVisURywVPzcrOzIhQC4E
Gi8IHDAJIzMRITIOJTQSLD8rJjUTHTELKDYVKzcWHjkdJDwjKT4oJz0mLjga
G0AEIjshL0EIK0oUMkQOMUMLM0URNkcVNUYTN0gWXEkqHGkMTEsWSUwWY1NN
Ek0TS0oWH0IcT04SY04PNE8SaFQgTVMQVFUgK1YVV1YUbVclV1glUFkqQlsw
LVoqZmRdGF4JCV0KZl4FVFMPXl8FEGARamEMYWIMU2MPTmNNamlgZ2EQVGhT
ZWQFZGUXXmZdZGYFYWcgZ2ggU2cQXWQGLUkWYGkNeu5Q2rVcdH8PxNJObnsF
se00uLc6f5MP0XQP1tdZb9wve6cFq+wubG0lmugnn+kp4bAzu7E0cN0xluck
qIYX5LY33KwvVmwV5pAia2wlbGsVYWpgKGsS4K8y4rM15YselNBV47Q2yIcY
ubwZ7bI07sdQ3a0x3nEfkeYio+osc+Ayh6kYx8ZQiMgY6qIsgpwUjOUe55Uk
6Jkn2NlbaWoMd4IUwXcUy8xRvsJK6Z4p1aEqwL9LpqUtndRYV21Wzs1Sj64g
jt4f7KoueeQ3eOM2deEzduI16im6VQ==
           "]], 
          PolygonBox[{{132, 121, 55, 63}, {160, 163, 44, 71}, {129, 118, 53, 
           61}, {170, 124, 56, 46}, {169, 219, 95, 24}, {164, 166, 45, 72}, {
           131, 120, 54, 62}, {202, 206, 82, 27}, {167, 235, 101, 5}, {114, 
           184, 58, 12}, {125, 112, 49, 57}, {146, 150, 36, 68}, {126, 115, 
           50, 59}, {139, 125, 57, 30}, {195, 192, 75, 76}, {151, 154, 39, 
           69}, {155, 159, 41, 70}, {128, 117, 51, 60}, {197, 196, 78, 79}, {
           124, 111, 47, 56}, {156, 211, 87, 20}, {191, 190, 74, 75}, {147, 
           207, 84, 15}, {144, 126, 59, 34}, {174, 223, 98, 32}, {149, 128, 
           60, 36}, {134, 185, 25, 23}, {153, 129, 61, 39}, {205, 137, 64, 
           82}, {175, 146, 68, 50}, {176, 151, 69, 51}, {172, 138, 65, 47}, {
           158, 131, 62, 41}, {162, 132, 63, 44}, {152, 187, 52, 37}, {194, 
           193, 20, 74}, {189, 195, 76, 73}, {178, 197, 79, 52}, {133, 122, 
           80, 90}, {182, 164, 72, 55}, {113, 186, 66, 31}, {179, 155, 70, 
           53}, {180, 160, 71, 54}, {201, 136, 24, 48}, {173, 141, 67, 49}, {
           207, 148, 85, 84}, {217, 201, 48, 91}, {181, 189, 73, 92}, {165, 
           133, 90, 45}, {137, 171, 46, 64}, {141, 145, 34, 67}, {138, 140, 
           30, 65}, {183, 142, 31, 58}, {186, 216, 91, 66}, {219, 110, 5, 
           95}, {198, 214, 89, 80}, {235, 168, 23, 101}, {223, 114, 12, 98}, {
           208, 143, 32, 85}, {212, 152, 37, 88}, {211, 157, 88, 87}, {204, 
           202, 27, 81}, {215, 213, 42, 89}, {161, 218, 92, 42}, {210, 209, 
           15, 78}}]}]}}, {}, {}, {}, {}}}], 
   GraphicsComplexBox[CompressedData["
1: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
uXpTB/8foyQ//Q==
    "], {{{}, {}, {}, {}, {}}, {{
       {GrayLevel[0], Thickness[Large], LineBox[CompressedData["
1:eJwt0tk2llEcwOH3MyVEkZRMX0py5rRTx61luQQXUHfSnYgoM5kiQ0rmuUKG
JlKGonr24uBZv//e73q/tb+93njto5qHsSiKHpNAmKvZZYdePnDPg/faRR23
rT9qHyf0c8ot+3E+m59wxzygm2xRT5m9NX3JP4b4yyDdNERnB4lxaDxigwrr
df3CKxKtR8K5dVhf8JQk62SOzb/5QyN37X3SUVLMqVyglK/2mig3j+k2Pfxg
j++85hsH/GScfd7wi2ekef+tXtQJTdfneknfaYZOaqY262Wd0iyd1ivaojk6
o9k6q1e1Va/pnObqvOZpm97QBb2ui5qv7VqgS3pTl7VQO7RYV7RIV7VEO/UB
VdynMtxHeBZ+N5wt/B+Swx2H+z//Zv4DL19NLg==
         "]]}}}}]},
  AspectRatio->1,
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{Automatic, Automatic},
  BaseStyle->{FontFamily -> "Helvetica", FontSize -> 14},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->{{
     GrayLevel[0], 
     Thickness[0.006]}, {
     GrayLevel[0], 
     Thickness[0.006]}, {
     GrayLevel[0], 
     Thickness[0.006]}, {
     GrayLevel[0], 
     Thickness[0.006]}},
  FrameTicks->{{{0., 
      FormBox["0.`", TraditionalForm], {0, 0.01}}, {0.25, 
      FormBox["0.25`", TraditionalForm], {0, 0.01}}, {0.5, 
      FormBox["0.5`", TraditionalForm], {0, 0.01}}}, {{-1., 
      FormBox[
       RowBox[{"-", "1.`"}], TraditionalForm], {0, 0.01}}, {-0.5, 
      FormBox[
       RowBox[{"-", "0.5`"}], TraditionalForm], {0, 0.01}}, {0., 
      FormBox["0.`", TraditionalForm], {0, 0.01}}}, None, None},
  FrameTicksStyle->{{
     Directive[
      GrayLevel[0], 
      Thickness[0.006]], 
     Directive[
      GrayLevel[0], 
      Thickness[0.006]]}, {
     Directive[
      GrayLevel[0], 
      Thickness[0.006]], 
     Directive[
      GrayLevel[0], 
      Thickness[0.006], FontColor -> GrayLevel[1]]}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->{{50, 10}, {50, 10}},
  ImageSize->{360, 360},
  Method->{
   "ScalingFunctions" -> None, "TransparentPolygonMesh" -> True, 
    "AxesInFront" -> True},
  PlotRange->{{-0.5, 0.5}, {-1, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->0,
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.713179111345065*^9, 3.713182019409294*^9, 
  3.713182049429023*^9, 
  3.713182114567382*^9},ExpressionUUID->"27349ff1-b422-4ccc-a806-\
8eda0673de9b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"plot3A", "=", 
   RowBox[{"Show", "[", "\[IndentingNewLine]", 
    RowBox[{
    "bothfixedA", ",", "\[IndentingNewLine]", "XpolymorphicA", ",", 
     "\[IndentingNewLine]", "bothfixeda", ",", "\[IndentingNewLine]", 
     "Xpolymorphica", ",", "\[IndentingNewLine]", "YaIntStable", ",", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0.5"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Frame", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"True", ",", "True", ",", "True", ",", "True"}], "}"}]}], 
       ","}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"ImageSize", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"xsize", ",", "xsize"}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotRangePadding", "\[Rule]", "0"}], ",", "\[IndentingNewLine]", 
     RowBox[{"FrameTicks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"x", ",", "x", ",", "ticksize"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "0", ",", "0.5", ",", "0.25"}], "}"}]}], "]"}], 
        ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"y", ",", "y", ",", "ticksize"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"y", ",", 
            RowBox[{"-", "1"}], ",", "0", ",", "0.5"}], "}"}]}], "]"}], ",", 
        "None", ",", "None"}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"FrameTicksStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Directive", "[", 
           RowBox[{"Black", ",", 
            RowBox[{"Thickness", "[", "lwd", "]"}]}], "]"}], ",", 
          RowBox[{"Directive", "[", 
           RowBox[{"Black", ",", 
            RowBox[{"Thickness", "[", "lwd", "]"}]}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Directive", "[", 
           RowBox[{"Black", ",", 
            RowBox[{"Thickness", "[", "lwd", "]"}]}], "]"}], ",", 
          RowBox[{"Directive", "[", 
           RowBox[{"Black", ",", 
            RowBox[{"Thickness", "[", "lwd", "]"}], ",", 
            RowBox[{"FontColor", "\[Rule]", "White"}]}], "]"}]}], "}"}]}], 
       "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"FrameStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Black", ",", 
          RowBox[{"Thickness", "[", "lwd", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Black", ",", 
          RowBox[{"Thickness", "[", "lwd", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Black", ",", 
          RowBox[{"Thickness", "[", "lwd", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Black", ",", 
          RowBox[{"Thickness", "[", "lwd", "]"}]}], "}"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<Relative fitness of \!\(\*
StyleBox[\"aa\",
FontSlant->\"Italic\"]\) males\>\"", ",", "\"\<\>\""}], "}"}]}], ","}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"BaseStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], ",", 
        RowBox[{"FontSize", "\[Rule]", "14"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ImagePadding", "\[Rule]", "Pad"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Epilog", "\[Rule]", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Text", "[", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{"\"\<A\>\"", ",", "14", ",", "Bold"}], "]"}], ",", 
            RowBox[{"Scaled", "@", 
             RowBox[{"{", 
              RowBox[{"0.05", ",", "0.95"}], "}"}]}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Text", "[", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{"\"\<\!\(\*
StyleBox[SubscriptBox[\"\[Lambda]\", \"WA\"],
FontSlant->\"Italic\"]\)>1\>\"", ",", "14"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"1.29", ",", "0.5"}], "}"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Text", "[", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{"\"\<\!\(\*
StyleBox[SubscriptBox[\"\[Lambda]\", \"WA\"],
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"<\",
FontSlant->\"Italic\"]\)1 & \!\(\*
StyleBox[SubscriptBox[\"\[Lambda]\", \"Wa\"],
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"<\",
FontSlant->\"Italic\"]\)1\>\"", ",", "14"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.5", ",", "0.5"}], "}"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Text", "[", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{"\"\<Ya equilibrium unstable\>\"", ",", "14"}], "]"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"0.5", ",", "1.25"}], "}"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Text", "[", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{"\"\<*\>\"", ",", "18"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"1.2", ",", "0.85"}], "}"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Rotate", "[", 
           RowBox[{
            RowBox[{"Text", "[", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{"\"\<Relative fitness of \!\(\*
StyleBox[\"AA\",
FontSlant->\"Italic\"]\) males\>\"", ",", "14"}], "]"}], ",", 
              RowBox[{"Scaled", "@", "ylabpos"}]}], "]"}], ",", 
            RowBox[{"90", " ", "Degree"}]}], "]"}]}], "\[IndentingNewLine]", 
         "}"}]}], ","}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"PlotRangeClipping", "\[Rule]", "True"}]}], 
    "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{"plotdir", "<>", "\"\<regionplot_2_Female_A.pdf\>\""}], ",", 
      "%"}], "]"}], ";"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.708267985099811*^9, 3.708267989570319*^9}, {
   3.708268041250675*^9, 3.7082680810425158`*^9}, {3.708268118487771*^9, 
   3.708268121126305*^9}, {3.708268268066489*^9, 3.70826827554463*^9}, {
   3.708350249357357*^9, 3.70835026123699*^9}, {3.708350297167807*^9, 
   3.708350409763027*^9}, {3.708352686831295*^9, 3.7083528333666773`*^9}, {
   3.708352868657325*^9, 3.7083530692688217`*^9}, {3.708353115276188*^9, 
   3.708353194253536*^9}, {3.708353379246372*^9, 3.708353388550728*^9}, {
   3.7083535989918137`*^9, 3.7083536283355227`*^9}, {3.710868251778583*^9, 
   3.7108682622771273`*^9}, {3.71087011391715*^9, 3.710870115771612*^9}, {
   3.711370865703402*^9, 3.711370878260462*^9}, {3.711372412223158*^9, 
   3.711372419799553*^9}, {3.711373360079027*^9, 3.711373360965246*^9}, {
   3.7113746969426537`*^9, 3.71137469708457*^9}, {3.711374799783164*^9, 
   3.711374891781783*^9}, {3.711375236683269*^9, 3.711375236783635*^9}, {
   3.711382181849908*^9, 3.711382184798916*^9}, {3.7113871694311666`*^9, 
   3.7113871979430637`*^9}, {3.711391233801846*^9, 3.71139123556815*^9}, 
   3.711475237620105*^9, {3.7114755423254843`*^9, 3.711475801569694*^9}, {
   3.71147583434204*^9, 3.711475854172817*^9}, {3.711796289334046*^9, 
   3.7117962951713543`*^9}, {3.7124873313285503`*^9, 3.712487333930496*^9}, {
   3.712559052738544*^9, 3.712559054305307*^9}, {3.7130126612291718`*^9, 
   3.7130126873941603`*^9}, {3.71301274872731*^9, 3.713012750877109*^9}, {
   3.713014542230651*^9, 3.713014594286989*^9}, 3.71307956208044*^9, {
   3.7130796512647533`*^9, 3.713079651366935*^9}, {3.7130798512090597`*^9, 
   3.713079870109231*^9}, {3.713080222309546*^9, 3.713080225407016*^9}, {
   3.713083471317823*^9, 
   3.713083475935382*^9}},ExpressionUUID->"a5bdd38b-85f6-4d2d-9a8d-\
d6e27e610be8"],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1: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
5bb8CtfRAf4fq9/fWg==
    "], {{{
       {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[0.25], EdgeForm[None],
         GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxVlmdw1VUQxfcB0VCCYFAQASlCjEFKQrGgICgKCipWVFBQUGpECF1BFGyA
kAh2/Wzvvffee+9ldBy7o6OjnjP7e8Pzw5nd/757d/funr339ZhaP2Fus4io
LEQ0lzxAGC3sLsyItG0lzBXmCHsKs4SZwh7CbKFMaClsg2wl1AvlQgXfZfhp
i93rFgjzhWHCjs5B6AAqWLsd0r4XCQuFvYUGob3QSThdaCNsK8wTThP2EnZg
je2dkY5xDr97TxfiOc5ioaOwk9Ad3f57IO2vJ9L+eiGd+85I+9tF6IafZehV
QnWJ70ri+5y7YnOcw9hfK/QlnuPshnScFcKZwghhjNBHGCCMI85AYamwRNhH
OJLYdUINcex3IrEHCZP4bbAwhdhDIns+m56V0cuW1LieM5TTo4qSevk85siM
+D8/vG4+PWtfUtMe+KqkT8XedyhZ16mkl/42FxroUyX178y5F1P3CnwUudWF
dR3J0f04Q1guDC/pa7E+ddSuG32pYk81392pYTVnqOF7HD3pg+9l6D2pbU1J
X/vGFg71orfua39hGmuG0qNB+J9Cr2pYMwQ/6yNn13PrvteSp3k1kPxXRs6u
+7IqcqbdwzWRs+h6nxc5Z67TBZE8cg3WUiefZWQkB53n/sK+Qj/hQH6zvh96
f/IaTW6j2NMPm++dAmtHYR+JL8cYT019hrHUZwByLP4PRh+APAh7FXud86H4
GohtPOvX4qs3dZxCbaeiu74TqGMtcgJ+jkCvRR6OvZoeuP5HodehH836Y/iu
o68T2ee8DiG3Y7G79ycKkyN7fzy/DUIeF1tmfBL+JqMPRk5mfZETVdhOwD4R
X/Zj3no2ulKDqfgxJzx3nbCdhN08nUb9pqMPRU6nhqei227++X7wu7Ahkrv+
Njdn8rvXnsLeDdj9XjVGctd30MZIThfvKUvfN+b1HGwb0Vsg56L7HfBd1gbY
XwVxZhFrRORMmksnc2bn0xT5lhTvMkvfT56h+dia0FsjF6BfHDlvDei+y9pF
ztxCamy5CHsjeW4tbIqcT99xw+mTue0Z9d3XjTXWt0cuRd8cOc/F+8iyCt/z
8L8Zn13x5Ti+88xfc9W8HUNNPC8PCJ9y7uXsX0aczfhZwzl9Fs/aOnL/Sfg+
cv6XkPdizreJnBeyt4F6r6Zvq/l2Pc2Fs+n5GGL4fBdF8qoZ9W+iT/XsKefs
jdjWs8d31b/Cq5Hz3UyX0+uR81om/c3I+ftZ+D3ynvpbeDnyjrlMuJ56XiJc
Sw7mnrk4m1gbsM9EN/9XsqYF52sqOWMjPmewvznnXoXde8+KLf/N/O05esu/
F3LO37DvQt4X7witCjnD7wkVhZy3l4S/Iu+g14RCIe+sV4R/Iu+4h+i9+/6h
cBt1u0e4i17cKdxOPs8KX0e+E/cL99LHF4Q/Iu/rX6mp6/mo8HDkTDwhPBbJ
8SK3zM119No8PDeSZ+3osWvXhnqspJ7edyF+fhOeiZzvBvYW377zifuc8G3k
m/S08GQkb9cQbxhrvcdcLXK3I3Ecz/z/U3gx8o26VLiOfK4UbmKv5+CHyFnw
bK3gXN8Jz0e+pV9RR9fwZuFx/Luu32D3mb7kXK3Vt3cj761rhFsj31bz8YNI
7jmXO8jnFuEp4l5FDPu/mt9604fPqeEVwo3U3PJB9MuFGyJ5a3kfumfi7kiu
OpdfyKet8nw/8n1wPR6hJuWyvx357pkLn9EXc+3HSL65J1/QF/Pu40jumXcf
RXLPXPskkm//AX/QFuQ=
           "]], PolygonBox[CompressedData["
1:eJwtlOdLV3EUxs81y/bObAm96G2a7b0pKiwsNCpKLCoQDCEIApEQiRDpZdre
9QcURVEYRUE7zYZmwwYtGrR3n8N5Xnx4fud+7/3dM55zBxetyytJMbM5kAqN
0CYxW4Iug2PQl3iTzs/DQOIqdBBcdCWuRofAXWhHvBwthMfQg7gUHQ8vYQ8M
hanwBHpyvh6dAM3QmXg1uhbuQwfiInQVNIAR5yOLoQ4GEG9B0+Ep9CbeiE6C
1/AWZsJ0eATdOS9Bx8EJyCCuQNPgGnxTP+bBDfgJubAA3sO7SMFmwVHomkSu
o+EKvIJpMAPOQH/ON/t74Rn0IS5DJ+vey8rNn3nudXBejk6BVuhFvAGdCLfg
D+TBIjgF/TivRDvBL9gH2TBftb9Qr70HCfceQHOgQL2s1+989eKkelOh2V5S
rtV612nNslLeOI6OtfCI17ZL3ihT7Wc1W++Be+s2utTCY6nEB9Hhuua175aX
ytX766olV7O5CnM1o++wF7J0zb15QbN3j36CzzDbwnNpnB9CR8AK+Av7YRgs
tPDuHZ25hzsSH0ZHwkr4AB81+zEW3jun2bgH3Xs7LbzoHjzic0nCu6Msak1J
wrtes8/in2aZo9n9sPBetmZ9U7n5zB9AJs9v9f9R7W8svJalWn5beNVr8tzb
J7GLXoPX3jaJ3fYefIUvFl7zHnVJImfPdY3FLjbpt++k7+p2C6/5zvpu3lNv
fEe7EW9TbsUW3t1h4X338EPdUyzP+C7WWHxbfCf9W1FrsYulqrVFvfaa/wPx
D3+k
           "]]}]}}, {}, {}, {}, {}}}], GraphicsComplexBox[CompressedData["
1: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
OSUcuFthk0S/j/0fPjLN/w==
    "], {{{
       {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[0.25], EdgeForm[None],
         GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNV2ds11UUvZfZ0lIoG8pqaRlWStlltgIiIHuI7A0qq4AUxEJBECpLhuwt
GwGFgrjiQI3rA4kfHInGEUeicUSNW+M5uaeRDyf39f3euPfc8+79N336wpEL
KpjZODerCNsMwNCqAEmyVYEzGlcDzgFngeZASyALSNA67uV5F4DzQGvgFqCN
ztsH5ANNgBQgUWdmalwd6AU01poEnUff+gAZQCXgCa1NBdoBORrfA3QGOgBP
A22BWsB6YDDQBZgH5AENgB5Amu4rBLoDjYBbgWz56IqN8RcBNYHawAKgG9AQ
mAt0BeoD7YFcralwEzc9dQ/va6WYk8VfktZkaH1F8ZGiOM8qB4niMkW83Qt0
BOrJ31StPy+O6Osy+V1LPNXWfHmOq4kr+lwX2ATMF09PWmiCa/crfwXAdmCR
OOtnoYVErU0XZ9P0jXFuBRbexNkw8dZbeSYvY4G+4uBBYArQQvnOECedFC/9
vKKzq4uzLHE43UJzjG080F+cjRPvyeIvW3vLgMtAMTABuEPfNstP+vsMcA0o
AWZY6CNFfOeIz4nAQP2dpDvJ7UwLjaaK+1zlYrbiYSxrgQcsdFuiGOsAsyz0
xH1zLLTNXG8Ahlhojj7mic9JwCDdMdXifSZoLbVPfT4CDNWeoTqDb2G4YqX+
R1i8hTTFM1A+jLF4n8zZY8Ao/b1De/ieRiuvzOlu7clXPvson4/qPt5xN3C7
8jdKZ3DvXRZa4117gT3AbQLPawocB7borJEWb4w+UxfUXqK4GCSes5Vf5oK1
YYBywVz1V07J/Z3iuau4I2/HgI3iO0s+M8/UZl/xTI4Ha305v+T2CFCqvyfr
/I6Kf7g436w7himO0eKhl3hpLG5GKMbTwC7xu0jxp4mbMeLtsEVN7CDux8rf
3uKXa1oqB4yJ72a8+DgF7NTd1PsE8UctU+s54mC6eGihHFcSH1PFSSfF3FEc
zxDP1BT1TV11lp/knHqfpLzdZ1Hj6ilvM5U78jdH88ztbOWX75t1J1P3cS/f
0UWLOljDoq6xvjVUfucqR3n6xnm+gwXKy2LNc80SzXPNUX1roDwWiv9C5YPj
E8D9Oof7Fmr8uM5qqLiXKhbWgIeUL2pzuYU+iSJxtVyxcG6lRd2qoe8csxaV
6Rv7L2vXagu905aIk6Xit57WrtL6izqnSByWiFvuXaNzmK+18vN14KSH74xp
q2KlrreIS+q+VHxTv9vEGbW+UdyTp+3ij++W/Y71k1qmzsvfATXJd8A6wJqQ
L7A3NVVONilnBZpvIrtfa+YrB+SfejlkUS9YG4/IX649oPWsV8cVE2vdScVx
yaJH0teD2sM7m1v0bMbBnFMHzDvr4WnFxPp5SjFd0vrKsuc0Zg9nn2OfumrR
15M1vmL/93jaVH2/oDXFyiW1sUzjIvl7Seef0d/s75e1n+c9pfnKmuO31prj
t2biYJt4OKszed7DFr+3usjHq/KHGiuTX5n6lqzzryoG9lj+FqHecjWmzldb
6LhEuKY1xfKtptZyvq3myuTzNe3lPDVWqFycgGZreryzDrCnPL6vgi3x0NYy
2CKPXG2Ere/x7j+l7x7nvwWs8KjXy/kOPPT6Ju/zqMs3gC+UC/7W3uDRw9fD
1vao0+8C31m8zZWYK/bQC39M5Xn0BIft4VG/S2FzPHrNIthCD21+DBz0qOuv
Ans9auRrwD6P2vkKsMejBreCva57MxmTR938ETjqUY//IX8eWq7hwR15awR7
QDF+DRz26BVvAPs9euG3wBGPvvELcMyjJ3wOHPLoOS1hs1z1CHasR999m7n3
6FXc97PF3t+AXy3q0GjM/y69VcH4femT99eVDzthX7DoD+SjljghB6niYTts
NY/etRs2xaPnkMuPLPjchXF1jz62AzbJowe2g23j0UsqMD+u3y6wGR6/iQtg
P7CoDd8Dgz3qKfPZUzklT99YcNUY4zSP361rYSt51Bjm5AeLvFAX3aQNcv+V
Bf/Mcx3lmrW5q+oz+f7MgvMvgQEedX847AhgHcZDYH+yqO3NPXRGjSXCHvf4
HfG84mfszwLvWNSK2Zib41H3Z8HO9PhdQz7yxUl3jzfD98LzEnQmfewiP6/r
PVCTzTw0R70NhR3m0SOfU86Yr14eWqFOpmA82aOWz6WmPOr3eNfbw/gP6Yaa
mQA70aM/MYfZyuMY2FEe9YzcvGfBz0gPvtaVx+0RO+vHvxY1ZB7G8z3q41TY
aR59jm+FdYHvJRfjPy361V/Mm0dfombTpdv+5Njj/6HFsEs8+t8n0jT13Ila
9qjx7WH/tujDH0pz1Ftf2H7ACowHwr5kUYvWMT6P/vei9E1tU6dVtZdrb2j9
y3obfBf/AUZ6Z1o=
           "]], PolygonBox[CompressedData["
1:eJwtlWdskFUUhs9hiwgKBBBRaRDaFCqCDJkiskFIisqGUvYsewqU0coeCkpQ
hrVqYkLiXwWNBtQ/ajSohKEMlaXsJQjC8+bcH0/ue777jXvPfc/5MvILcqeW
MbOFUA6OwG/QCPKgpptdZxwHvWEBsUNH9MvQGJ0NddCT4DA8QNyZcQSchSeJ
ezDmQCG6DHRCvyrQ3zL2gWKoTnyZcSz0giziTKiJngAZ6PpQOz1zD+oS5zJO
h9roZ2AGehfUQDeA8egd8DPsT3sZDo8w9w/jGOgJdYibwUx0CbyOrgUvScOP
8CV0hyHwKHPNYRa6FE7ADzAYsuF72ANdYSBcTWvQt1vAQXic5zOUJ/gc6hEP
YqwCF+EADINm6d1fQLf0jVNpTVpLE6jEs98xDrA4g3PwEwyFphZzn8GL6Z5Z
3G/Q3iKHC9GL4C308/AQ+g/GUembWsu+dDZa07PMN4KJ6NkCPRc2ozukb3+V
cqs1VGXuDOPolMPKHp7LS2sqT1wCn0jDXniCeCRjpvLo4TF5S549mnKs3Mqz
DzL/O2N+ynk+8X+MU2CNckLczePZBtojejm8a+HJ9ugOHt6Ux59GN/Xwtjwn
L2nP2qs81QvdE6qh50IP9HHGLFgsnxFfYFwKhdDHoyZy0rXuxH+lexfBRuJP
094/1pl6eLIk7aENuq1H7enMNnt4Rl7ZDeuIJ8NG9AfQxWPP2usC+B+mEm+y
8OzD6JYwz6JGf4GvYT4shytQ7FE7zWEVegisRO+EG+kZ3dtSOWHuLmMBrIdf
4RsoghVJq+aL07Wh6IHQ2uKd/8IrHnOt4DX0BvjIwpN30jf0btXoWvRYWId+
H/qpVj3WukzvQPf10NrTFPQE5dAiR7eTR+QN9YyR6GHwHHo1jEOPgjYW31iD
zvOYew/K6d2wzcJDOR49oTTlYI7WCh9a1IR65WqP3qSeqV53zaIXqOc1ZO4p
j16nmlLtnbaobdXgn8kz8oo8p7WNgbUWa9TaR8Aqiz1or5OUQ4s9F6Cnwxvo
dlDRw3PyWn35yMNTu5OH5Y0WHt6WR1RbJy16m2pM/4ab6ez1j9BZDvbolTrT
x9DHLGpXPU21/7dFL1IPOG9RI4UWPV69+JJFr1NPnumxZq31TZ2hR49Rb9li
kdsZHnPKsbwyz2NOnpno4RF5QzlQb6ng0WvVY0Z7nKnOUjmc5lFDqh3laIlH
T1QvfBuGe9SAvK8cD0DfSl7VP6I/ca6H1+XhpejFHs9utag9/bP0r1INFhG/
AF3Q2y163QoPrZ4nb5WFdyw8pnsPpbPSM/cBubjcsg==
           
           "]]}]}}, {}, {}, {}, {}}}], GraphicsComplexBox[CompressedData["
1:eJxlV3lU01cWBlHrQhCXcYmMI+pg1LZSShhFnSvGoa2jmFotWm3QTuVYotTi
1gAuRYyWlqqYAqUcSlzrlmhVFIxe1kgCKAFCQjBhC4uIgmndRmum/nLuo2f8
654vee/mvu9+970vvp98vmRtHzc3t7Hubm4vY8u1+BtOZwO4YjcmRtY/VClv
wz4udiF9T3jKkOBJElEdvMHFO2w9YVpP+Obl9CW8ViNUcbGV7SdM+wnTfsKb
Vj/epZFXwTYuNrN8hCkfYcpHmPIR9h92RmIS34QZXLSx/IQpP2HKT5jyE479
z2dXhYobkMBFE8tPmPITpvyEiy/6jVaY8qGci5UsH2HKR9jHs/SOXXgRpnGx
mO0nrMkblCx3ZMATLp7CQFedEMTF+1jLfW4BCxc7Md5VB+ziYjuO5/LUwCQu
2lHr+l3Qc7ERjdw+PVhdeVh++v5vrjpgsisPy0/rq7iYB82uPCw/rS9z1Q13
XOtYPlpP/aTfo/5QfuKb8hGftJ/4o/ye60YckgoaoM2VF5fkGrp1UjP4u/Ji
Afc75yDAtQ+zuH1JMPIqxzP7vtLVBxzBrTvK1tN5qT/buHous/VvcPxdf2U/
9Y/4oHzUbzoP7Z/j0gnjh/pN53PFbtZ/4o8w6dlt7eHlDr4Fklw6x7Pemwr4
+nqGqR+kxxiO70KIdfHOMPFPeqL+ECb9L8iJuCSWVEONay4YP3JX35jeKB9h
+n0B1ycdOz/NJ51vlUY0VSSzsv4SpvOSful7mk+q9xjPfa9SU8v0QHomTPNJ
9dm4PLcYH6Tv/+eHzkd8EqZ6aD7pPISpH+e5eJf1j+aX5oEw6flDLnaw+mm+
6byEH6/xHyfjGeEZF1tZv4hPmi/CmYP2LxSoDZDNxSZ2XuKP+CGcwJ2nnOmJ
5pP4K+fqKWF6oPPRe0L67MvF3vuL3gvq10kutrH66f4nvYVxsYXVS3qg/pEe
SG+kV9Ib9Z/6Re8j6SuCi/cYpn5R/dQPqpf4pvqIT6qH+CJ+SE+kH8IbXkse
KhP2vt9PTr5/UC43M/4UTzZ32B/WML52pIYeUMYbGD9zM4xJ8oByxsfRix7R
puwSdn7So88Oj1BePyv+Zp+gd+68zuaR9LQ6cMxYWUUt+p2Lnyjj/cLuP9JD
dNuwKEdwJdZ+ubuUr09j9x3db28cyZggSy5k75ky4AOHSpmF3kmSY+Lo2/B8
3vJQnrELs+rlWn6nGa7Mu/eVMvMOar9rXu2INoKlMWy+YGUbfvksa4DavQpi
ShY/1Q1uwRm1+b+pQirAPyyt1BnRgIEBnlf5UQ2QOiV5mzK+AZvHOXmKNC3w
f65eZzpgxjPl1lzhZjPEdfgekAfUYU/lk1W8fvmQnb60mn/KgMXmlUXCERcg
EQK9FeElmLNhXbUTfoAXr50N5R07g33e3a8Vzj8P51offatcdQE/vTf0V5XQ
Bv3/Eap3Su+jm+rzIv4pC5y7cexDR/BdNr9z+0ZGmnruYLzkreWOj3rf65Qv
qj52TDVB1DK3MbLf2xnfq57FSRz6Nvzv7HSJI6+WzX/NnWHDFZerYeOb2/OF
F+1sfude6+m0J7egfNnEImFgNZt//ci3WpyLK0G7xGeRIKKJ9evue8WD1TMb
USQ+NliWfIvNf2PPikxphw6qEq9uVz6vZ/N8pfKXAYq0OpzvPjpXaC9l8z80
b2V/9XtFIJQEVvAnGPHTUdOeqgosUOiuvyhcWo9HZF6F/Jh62Dpj2GPVg3qm
hyp3nYGfVIWee9yr+FG978vxrjkjZcm54PW1yUMRXo5dsrbbzoZq+M7/Gw91
Uw1ONU0cqAg/CUlZD7xlyRrED44anKBn6y2ZL+vig8X8Mk7FlFEx/qKnuRDl
PjuU16rBSBD+qvK9DgOb1WekP+cz/SfeONFH4XEPI1fmuylGveqvPLSX3+Vt
v8vup6N9f6txRnSw+2h/S6y3Ynoru38Ke4YmaNqa2H0zrmcO8gdZ2XueNX2y
p9q9EfOSws32v9heeb/6hH8s4u2xsfvAMa3JSzGqlumpKPtiMd9Rh5XJpdNF
KyysH1TfB8ZVv6vWmJk+oqf+/IXpQDVaEvMy5AHVjG+qd2NB7Clph4H1e0RM
4gpHhg7v+p08LbaVMn9C9Tz5dEcZn69l/issv1LiyMjBNz27tmqCrjA/Nv+F
brDCdOIV/+P115mtOqkKj8ffFwp22oDf7s+TnbVhxvidzfZlZsi3KgYqRtXh
7OFeB5SZBpi1+OlT3ekqjFw89y1JiwG8OlcsEHRX4bowq4+sogQWBTX6SYpu
4Iy4/RGON7UQ0fmh0Tm5FDcW+mn4ehWMX6vcYhKfxwUDKuKUI6ygulm6xBFl
xQr58A0mQS3ISzbJlZ5/+PcfvQSi3D/+T0wrDhN8XomF3+QOVK8pAH/J4f5q
3yKsr6k4LRUchBdlskKh4hCmfP1ro134NUzo8p0pUGdi+qgvFgmmK2F36Ns7
NfIj+K3P6a3K571+1G2izzalRg3ey3GzqbKA+c+2yVqpRp6FPtGPQgTqNOZH
z3nH2JzOw5D62riHOukl9NWHDFCYTsLCzMxUqeAsKnd7L+a1nmB8k98ccegd
PV+fw/xqzvrre+WOa3ipzHO9RnId3nlWMkity2f9yLywXS1ceh0fPuhb5nSe
fcW/fjX6O57CdBxDllmjNVoNTLkVG+aw3GJ+dd2/pc1OrGT++eOikByxrRD/
dXinQCTr9cO7VRf2yPkN8L3vlmxxUDea/R/V2P/0f5X8rc/hGQ9UId1sHk7d
F6iFiffx+Lfj7LrBr/pf+Sf9T4h31GNUcnABv7MevDYsfKRacxvnPk5I0Bwv
gFM66U5NZDXzazOv+BUIl/b6WRQHpMkDjNg/c2m8xs/I5i20rRuFfY0QqB4z
RPHYiJKQZ2Nli3Ige4/pI4ellOl/Xlhqq/17LTqn8D3UvpeY/wua8uLvEtEV
Nj/khzf/UrVLOVvP7ge/KfVxSs8KdPyU3q4bXgE+e/zm8YS3cOSJjUsdseUw
8uBXSnHWTfZ+bov6jCdLVmG4td8VsU3J/k/U8KcdFv/TBk/dVCb7FhvzK8Gz
xmzQaK0Yv/J9u32RCRI2/fCZabwZw9ZPDxLl1jI/QP7F0neWpyLNxPSzfWyK
l6y1Aocc+bGfIvwq8+cZcw4mauIrYdKR90GUbMAuVXUeP+kW8w/kd0Jnx2XJ
hxlw9pCESTKZgfmbqMzmTvv3RZB6N6XdvqUEBwy/sZy3tpD5C+qXYsWToYrw
YlxgUax2ZJQwfm3tCzt139TDrpk/pEsHdOHoQba3RQPNkLKu5LT4Zgf2aVqY
Lk+pgZ7m4Uel+1qxLPtCk3OyAWI2R10WBzVjY8qk8ZJDZfB6cEqZU21F+yVD
qKC7GK7lRkgcllqMva31F+nqIOne9l3K9Z3oWafdq1xYC/PmzZIrX2/H4w5z
svJ2FfRw71QLBp8XCAXdN2H+2o4z0n2N2Lz3daMTSmFr6jubNKEW7Hlu3idf
YoXyOFWZ86d7+D/30azZ
    "], {{{
       {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[0.25], EdgeForm[None],
         GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNlXds1lUUhk+BUsooo1KgshUK4kRRlKHVamUIUgWxWqhQZi2VoZVC3Xvv
vXccMcZtjBq3RmOcuKNxa9QYJ+73zXkI/ePJd79z7z2/c95z7r3DFjTXrOgQ
ERtFR7GnmCyGiFpsnUWJ6CKKxeHiMDFUzBfzxDCxQBwhhos6Ucj6roztZztR
IUpFPT57iBpRLfow1x37ItEgthI92/mbIfYirsWit+gnthUjWLtULBFbi4X4
tP/lYpkYia0U+yQxUYwSO4gxolxsL0bjf5zYUWzDfBVrComrGG1qsc0W00QZ
2tTzzWJiLCGPUvJtINbeaFOCfSY5O7eD0KuC/Bbjv5oYe5PfNGKbQxzOYS45
OvZGaug4m6ihv9km1pNbKd+xPqvRsozYRxBfc2TNnddKauUYdkPLQeIANC3H
r78/QOwd2ROl/I7le/2I198aj+YDqe9OfHsKtfHaoyN7tiNrd6ZGE8SujHcn
pkFoMIkYpmIfyO94xqNYNwgfe4jB+J4Qm3tgIn78/cntYhiHn001dh0rGW/B
Wp+3AmyV6FCJLh77bNVRl32Y89590dHfdc+0RvZNG3MjqVk1tfDv/mg1nXqU
Y/Ncf8ZT2q1x/2yJJlPRYzX2vuLgyF6swDYdnzXY7XNWZO+OgBnt9JhBLp4/
kHEF+/tQ51nsq8ben30zWT+WOCrQyFr5bLnf5xD/IYxHg+fKqNtc6rs28nwW
RZ4Hn1/fV4eyZgw5zsbn0MhzXsiv70Tfo8OomWM5NvKMOaYW1nXA7jWdIs9M
fWRv2DYfu+NpYm44sXXndwFxTqMeZdR4Ibr5/DVg83ldwpp1jHsx9lnddHf4
13VvZW83fhcx9r6l7K0jr0Ji8F3Tl9/ljOuJ3zqsZ66cfUei3wrWFGFrJPcm
5qzlUZH3Szfya0aHVcTfi9hXkm8ze4ZjW4UercwtRLM1aLOG/475mMh7xDWq
ZdyRX88NoYYtzDdSy06saWHvPOx11Gstevhc7hd5NpuwFxFXKzm24KuW+NeR
4zJ09N7fxV+RZ/Il8WLkfXO5eCPyfrpA3Mzel8WXkffX+eIGvvWnuCfyXJ8r
riKX98WFkefvGfF05D3bRRdV14I8SxeLVyPP30ZicjzFmn878oycJ64lx+fF
c5FvgP29hs+LxG3o7/nXWXOp+CPy/uwmn89GnuNzxAPo3En2tyLvhLvFz+hb
hVbut9vFrdT6C/FB5L38r/g78s76UXwXeRd7Xxs6F8n/V5HvxG/il8g78hZx
U2Rf3Siuj+y3y8R/kW/EFeKH4E2Sn8KCvBNPE78S8xLq6/69WlwZeS6uE9dE
9v994l2xi3gQv/bpR+PjyHfpEnFX5FvQQ/Z3Iu+009HRGp7KugFo8A06HIem
1tO5fk2+34rPIt/Mj8QGYjiTPAcT14fYrd/3aPiUeDLyPXcfvRLZS/Z3Pz5P
jOxF9+EJkb3iPjk+shfdh5+IeyPfWef6KfmeHNk37pnHHXtBvh8nRfZ9L+rz
KDV6U5wSm99N17eKuj1C7dyzZ0T2rfU7Cw39/c+JwfP/sOYncWfkm+z+eiyy
x3oqlhci343uGpcU5Pvxnjgb3TZQV+vm89e5IM+g6/8QPXCHeCKyD93j7hv3
jPvi4cje+B8LifJt
           "]], PolygonBox[CompressedData["
1:eJwt1FmIzmEUx/HzH8Ng7MY6tkGy72YwSYjMIGuWUmpKSdNrmiaXjGUSLl1M
ERHZk+z7EtmN7YpMmBCTfcvO93R+F5/OnPf9/5/3Oec5z+QULZmRSjOzSUjH
VTRKzOYS5+EmniAX+TiBFnxfROyKQ7iOgRiOA7iE/ijAeWzAYPTDHVShl545
juast4CYg1PIIl9E7I5jaEY+n9gFJ9GSfCGxG44gm3wp0eu4h7vogwHYiw8Y
g3E4iCv6bgrOoRXvLyb20N4yyedoj+35e5f2UobneIFh6I3LqM8zsy3e8VqW
q5deUxPyxuho0VPfyx6M1Z68tmXau9f4Du8xGp3V63JihkXP25BvUa9SaE2+
Sb0pRlvybTqbErQj36FelaIheQNkW+zZe7nCa7bo6Wk8wiD0xWusQQfVXKMz
97POwzVUYohmwGflBkZqZp7hqXrl+WOsRScMxUs8VO7vvEKF7xujsB7Vetaf
eYs3SNSjdajFCIse37eY2Xztyc92lUeLM/bZWul9t5ixeuQZSfxWTxxWjXla
c6N6XKwz9dlqmsTd8Bnbqp6XqIebdUYpnZmf9QWL2fczX42PFrOYhbNeC89P
JU7HTouZK9Oet+sMS7XnffiE8eqRv3uGOM1ijTTyB1rbP/tn0axc9e87fqBQ
Z/oLP1V7odbejwn6ja/4holeJ35b3CG/O5PxxeLOF+iZz9htcZd8jVuq0Wvz
mbqIOuxnJnEW6vJ3ehJr+2d/8Fdr+4ze1jv+rP8P8bt+1OJu+J3/D/kyenk=

           "]]}]}}, {}, {}, {}, {}}}], GraphicsComplexBox[CompressedData["
1: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
pcSlrgD+B5XUCiY=
    "], {{{
       {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[0.25], EdgeForm[None],
         GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwBgQJ+/SFib1JiAgAAANAAAAADAAAAFwEGCAIDBwECLhoEXQYKX14YCwYH
Hh0IHAkNIiELDgkKYmEgJCMOYA0RTRATTk0SJhMQKSgTSS0qLCsVAQcGGggD
AggHXl0JBgsKHQsHCQ4NHxwMIQ4KIxENYWAQJyYRayUSaygVQyILMBgJZBcG
FxkBOC8aBBoDUkAbQjAcaRwNOTEdCB0HQR4IaGdTOh8MCyEKSC0WSisWDiMN
RCQOPDMjbWxWPTUmESYQRScREygSPjYoWlAqRikTVisURywVPzcrOzIhQC4E
Gi8IHDAJIzMRITIOJTQSLD8rJjUTHTELKDYVKzcWHjkdJDwjKT4oJz0mLjga
G0AEIjshL0EIK0oUMkQOMUMLM0URNkcVNUYTN0gWXEkqHGkMTEsWSUwWY1NN
Ek0TS0oWH0IcT04SY04PNE8SaFQgTVMQVFUgK1YVV1YUbVclV1glUFkqQlsw
LVoqZmRdGF4JCV0KZl4FVFMPXl8FEGARamEMYWIMU2MPTmNNamlgZ2EQVGhT
ZWQFZGUXXmZdZGYFYWcgZ2ggU2cQXWQGLUkWYGkNeu5Q2rVcdH8PxNJObnsF
se00uLc6f5MP0XQP1tdZb9wve6cFq+wubG0lmugnn+kp4bAzu7E0cN0xluck
qIYX5LY33KwvVmwV5pAia2wlbGsVYWpgKGsS4K8y4rM15YselNBV47Q2yIcY
ubwZ7bI07sdQ3a0x3nEfkeYio+osc+Ayh6kYx8ZQiMgY6qIsgpwUjOUe55Uk
6Jkn2NlbaWoMd4IUwXcUy8xRvsJK6Z4p1aEqwL9LpqUtndRYV21Wzs1Sj64g
jt4f7KoueeQ3eOM2deEzduI16im6VQ==
           "]], 
          PolygonBox[{{132, 121, 55, 63}, {160, 163, 44, 71}, {129, 118, 53, 
           61}, {170, 124, 56, 46}, {169, 219, 95, 24}, {164, 166, 45, 72}, {
           131, 120, 54, 62}, {202, 206, 82, 27}, {167, 235, 101, 5}, {114, 
           184, 58, 12}, {125, 112, 49, 57}, {146, 150, 36, 68}, {126, 115, 
           50, 59}, {139, 125, 57, 30}, {195, 192, 75, 76}, {151, 154, 39, 
           69}, {155, 159, 41, 70}, {128, 117, 51, 60}, {197, 196, 78, 79}, {
           124, 111, 47, 56}, {156, 211, 87, 20}, {191, 190, 74, 75}, {147, 
           207, 84, 15}, {144, 126, 59, 34}, {174, 223, 98, 32}, {149, 128, 
           60, 36}, {134, 185, 25, 23}, {153, 129, 61, 39}, {205, 137, 64, 
           82}, {175, 146, 68, 50}, {176, 151, 69, 51}, {172, 138, 65, 47}, {
           158, 131, 62, 41}, {162, 132, 63, 44}, {152, 187, 52, 37}, {194, 
           193, 20, 74}, {189, 195, 76, 73}, {178, 197, 79, 52}, {133, 122, 
           80, 90}, {182, 164, 72, 55}, {113, 186, 66, 31}, {179, 155, 70, 
           53}, {180, 160, 71, 54}, {201, 136, 24, 48}, {173, 141, 67, 49}, {
           207, 148, 85, 84}, {217, 201, 48, 91}, {181, 189, 73, 92}, {165, 
           133, 90, 45}, {137, 171, 46, 64}, {141, 145, 34, 67}, {138, 140, 
           30, 65}, {183, 142, 31, 58}, {186, 216, 91, 66}, {219, 110, 5, 
           95}, {198, 214, 89, 80}, {235, 168, 23, 101}, {223, 114, 12, 98}, {
           208, 143, 32, 85}, {212, 152, 37, 88}, {211, 157, 88, 87}, {204, 
           202, 27, 81}, {215, 213, 42, 89}, {161, 218, 92, 42}, {210, 209, 
           15, 78}}]}]}}, {}, {}, {}, {}}}], 
   GraphicsComplexBox[CompressedData["
1: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
    
    "], {{{}, {}, {}, {}, {}}, {{
       {GrayLevel[0], Thickness[Large], LineBox[CompressedData["
1:eJwt00VTFQAQAOAnyImTN49684SEiYUSFhiYKBYiKgbYiN3dLY2iqBjYLXZ3
o9iK9SP83oyHb2Zndmd2dme3aUZO6uQGgUCglhCCcQXTBcFEZ4byiyG0I4Iv
pNOFNcSzlle8JIfmfCWBbCYQyTeGkch6urKOJNoTxQY2Mp8FjOA3w8mlG5vp
wSa604FotrCVhSxiMTF8ZyQ92cYOtvOaKbTgB8lMpCMt2UkKS1hKBn8YxW56
sYveFJBJEX0opC/FjOENpZRRwh7KeUslB9jPIQ7ynuOcoJpTnOQDZzjLac5z
jo9c5gqXuEoNn7jBTa5zm1t85j4PuMcjHvKcUC66hQIKKaKYEkopo5wX6p7y
jMek8YTx3GUwdxjEOH4Sy2pWsZKBXKMtK1jOsmB/LtCGOCYxgHpaM5U6jnKM
Ko5wmFresY/+7KUfFWTxl7HMJo9U5jKPWcxkBnPIpxWdmMbo4G7NnkI8sUTR
jCY0phHhhNGQ0P8/9g8W3HUi
         "]]}}}}]},
  AspectRatio->1,
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{Automatic, Automatic},
  BaseStyle->{FontFamily -> "Helvetica", FontSize -> 14},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->{{
     GrayLevel[0], 
     Thickness[0.006]}, {
     GrayLevel[0], 
     Thickness[0.006]}, {
     GrayLevel[0], 
     Thickness[0.006]}, {
     GrayLevel[0], 
     Thickness[0.006]}},
  FrameTicks->{{{0., 
      FormBox["0.`", TraditionalForm], {0, 0.01}}, {0.25, 
      FormBox["0.25`", TraditionalForm], {0, 0.01}}, {0.5, 
      FormBox["0.5`", TraditionalForm], {0, 0.01}}}, {{-1., 
      FormBox[
       RowBox[{"-", "1.`"}], TraditionalForm], {0, 0.01}}, {-0.5, 
      FormBox[
       RowBox[{"-", "0.5`"}], TraditionalForm], {0, 0.01}}, {0., 
      FormBox["0.`", TraditionalForm], {0, 0.01}}}, None, None},
  FrameTicksStyle->{{
     Directive[
      GrayLevel[0], 
      Thickness[0.006]], 
     Directive[
      GrayLevel[0], 
      Thickness[0.006]]}, {
     Directive[
      GrayLevel[0], 
      Thickness[0.006]], 
     Directive[
      GrayLevel[0], 
      Thickness[0.006], FontColor -> GrayLevel[1]]}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->{{50, 10}, {50, 10}},
  ImageSize->{360, 360},
  Method->{
   "ScalingFunctions" -> None, "TransparentPolygonMesh" -> True, 
    "AxesInFront" -> True},
  PlotRange->{{0, 0.5}, {-1, 0}},
  PlotRangeClipping->True,
  PlotRangePadding->0,
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7082679901832733`*^9, {3.708268037786875*^9, 3.70826807723018*^9}, 
   3.7082681228144617`*^9, 3.7082683686172113`*^9, 3.708290720489683*^9, {
   3.708350293871221*^9, 3.7083503157667017`*^9}, {3.708350363409504*^9, 
   3.7083504099400377`*^9}, {3.708352826814301*^9, 3.708352833894183*^9}, {
   3.70835287316109*^9, 3.708353069770844*^9}, {3.7083531157038727`*^9, 
   3.708353194494418*^9}, {3.708353389457487*^9, 3.708353422653029*^9}, 
   3.708353472231934*^9, 3.708353557618922*^9, {3.708353602057424*^9, 
   3.708353628678946*^9}, 3.7108692387842627`*^9, 3.710870117824407*^9, 
   3.711371299355803*^9, 3.711372421876944*^9, 3.711372533472704*^9, 
   3.711372773677491*^9, 3.711372933319132*^9, 3.7113733622092047`*^9, 
   3.711374699755022*^9, 3.711374752552959*^9, {3.711374814608631*^9, 
   3.7113748350086946`*^9}, {3.711374868816112*^9, 3.711374896307176*^9}, 
   3.711375109926654*^9, 3.711375299765567*^9, 3.711382185680716*^9, 
   3.711387242885256*^9, 3.711387403559289*^9, 3.711391355912635*^9, {
   3.7114752261757383`*^9, 3.7114752387282343`*^9}, {3.711475535139833*^9, 
   3.711475545145396*^9}, {3.711475577264015*^9, 3.711475580853435*^9}, {
   3.711475616976709*^9, 3.711475620099489*^9}, {3.71147565810998*^9, 
   3.711475662743082*^9}, 3.711475705751689*^9, {3.711475746612671*^9, 
   3.711475802948635*^9}, {3.7114758467755623`*^9, 3.711475854574589*^9}, 
   3.7117962258263187`*^9, 3.711796814316484*^9, 3.711797020173929*^9, 
   3.712482967150958*^9, 3.712559328036532*^9, 3.712560450678878*^9, 
   3.712561243217821*^9, 3.712573569915584*^9, 3.7130126517152977`*^9, 
   3.713012688137144*^9, 3.7130127517224607`*^9, 3.713012801719905*^9, 
   3.713012906977214*^9, 3.7130130803967247`*^9, 3.713013172337055*^9, 
   3.713013219974084*^9, {3.713014552123434*^9, 3.713014594551928*^9}, 
   3.71308000553202*^9, 3.713080225697102*^9, 3.713083397435577*^9, 
   3.713083476396447*^9, 3.7131780193671303`*^9, 
   3.7131791020657463`*^9},ExpressionUUID->"81051848-7d49-4a15-a3c0-\
eb2b7e909c1b"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Parameters - female gametic competition", "Subsubsection",
 CellChangeTimes->{{3.708264596129162*^9, 3.70826465145201*^9}, 
   3.7082655994495697`*^9, 3.7082656864074907`*^9, {3.7082871550004168`*^9, 
   3.7082871556906557`*^9}, {3.71137068020173*^9, 3.7113706859365587`*^9}, 
   3.711372159008786*^9, {3.7113750419844513`*^9, 3.711375060592574*^9}, 
   3.7113751601780663`*^9, {3.7113869231866426`*^9, 3.7113869323293343`*^9}, {
   3.711475974883295*^9, 3.711475978849615*^9}, 3.711796875678649*^9, {
   3.712487753555662*^9, 3.712487756828652*^9}, {3.713011844772447*^9, 
   3.71301185427815*^9}, {3.713014683170349*^9, 3.713014685342834*^9}, {
   3.713079589451846*^9, 
   3.71307958953589*^9}},ExpressionUUID->"e38d6cff-94ee-4175-bcd5-\
da9683b2f12d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"someparams", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      SubscriptBox["wHap", 
       RowBox[{"A", ",", "female"}]], "\[Rule]", 
      RowBox[{"1", "+", "t"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["wHap", 
       RowBox[{"A", ",", "male"}]], "\[Rule]", "1"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["wHap", 
       RowBox[{"a", ",", "sex_"}]], "\[Rule]", "1"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["\[Alpha]", "sex_"], "\[Rule]", 
      RowBox[{"1", "/", "2"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["wDip", 
       RowBox[{"A", ",", "A", ",", "sex_"}]], "\[Rule]", 
      RowBox[{"1", "+", "s"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["wDip", 
       RowBox[{"a", ",", "A", ",", "sex_"}]], "\[Rule]", 
      RowBox[{"1", "+", 
       RowBox[{"h", " ", "s"}]}]}], ",", 
     RowBox[{
      SubscriptBox["wDip", 
       RowBox[{"A", ",", "a", ",", "sex_"}]], "\[Rule]", 
      RowBox[{"1", "+", " ", 
       RowBox[{"h", " ", "s"}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["wDip", 
       RowBox[{"a", ",", "a", ",", "sex_"}]], "\[Rule]", "1"}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"moreparams", "=", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"h", "\[Rule]", 
       RowBox[{"1", "/", "4"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"recAMnotAX", "\[Rule]", "0"}]}], "\[IndentingNewLine]", 
     "}"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{"charpolyYAXAar0", "/.", "someparams"}], ",", "posassumps"}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"intYAXAar0", "=", 
    RowBox[{
     RowBox[{"\[Lambda]", "/.", 
      RowBox[{"Solve", "[", 
       RowBox[{
        RowBox[{"%", "\[Equal]", "0"}], ",", "\[Lambda]"}], "]"}]}], "//", 
     "Flatten"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{"charpolyYaXAar0", "/.", "someparams"}], ",", "posassumps"}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"intYaXAar0", "=", 
   RowBox[{
    RowBox[{"\[Lambda]", "/.", 
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{"%", "\[Equal]", "0"}], ",", "\[Lambda]"}], "]"}]}], "//", 
    "Flatten"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.69791419088354*^9, 3.697914204107209*^9}, {
   3.69791423675738*^9, 3.697914267442163*^9}, {3.697914332513447*^9, 
   3.697914344706374*^9}, {3.6979210568048067`*^9, 3.697921086163679*^9}, {
   3.697921161278735*^9, 3.69792116307207*^9}, {3.697923698797831*^9, 
   3.6979237516937227`*^9}, {3.69792439200351*^9, 3.697924448790558*^9}, {
   3.697924546414797*^9, 3.697924651712484*^9}, 3.6979249626931677`*^9, {
   3.6979252361103277`*^9, 3.6979252781015997`*^9}, {3.697925865210726*^9, 
   3.697925906632759*^9}, {3.6979259919838133`*^9, 3.69792599286863*^9}, {
   3.697926282493573*^9, 3.697926298691634*^9}, {3.69792633000852*^9, 
   3.697926363936458*^9}, {3.6979265871865673`*^9, 3.697926593914707*^9}, 
   3.697989793786848*^9, {3.697989884811812*^9, 3.6979899000758*^9}, {
   3.69799030526079*^9, 3.697990455812793*^9}, {3.697990878903956*^9, 
   3.697990879016015*^9}, {3.698505224191556*^9, 3.698505279118783*^9}, {
   3.6985884845824614`*^9, 3.698588563629053*^9}, 3.698588615905355*^9, {
   3.6985886754283657`*^9, 3.698588780187793*^9}, {3.698589304512279*^9, 
   3.698589318027289*^9}, {3.698589833723196*^9, 3.698589850157795*^9}, {
   3.6986037137243843`*^9, 3.698603713821808*^9}, {3.698613813894794*^9, 
   3.698613813976364*^9}, {3.69875804231399*^9, 3.6987580952477293`*^9}, {
   3.708264756710517*^9, 3.70826486735957*^9}, {3.708264901408318*^9, 
   3.708265012641108*^9}, {3.7082650747312317`*^9, 3.708265158807321*^9}, {
   3.708265357326613*^9, 3.7082654072179003`*^9}, {3.708265688150424*^9, 
   3.708265688964964*^9}, {3.708266698979836*^9, 3.7082668815205307`*^9}, {
   3.7113707457391863`*^9, 3.711370746006536*^9}, {3.711372444673503*^9, 
   3.711372470970936*^9}, {3.711375074476313*^9, 3.711375105762352*^9}, {
   3.711375171651992*^9, 3.711375177717349*^9}, {3.7113912010190487`*^9, 
   3.711391206270217*^9}, {3.71139124623836*^9, 3.7113912466140957`*^9}, {
   3.711474858918627*^9, 3.7114748591022863`*^9}, {3.7124825822801332`*^9, 
   3.712482626916399*^9}, {3.712492712070631*^9, 3.712492712215355*^9}, {
   3.712559688942739*^9, 3.7125596890200987`*^9}, {3.712559732337173*^9, 
   3.712559734481785*^9}, {3.712560207989962*^9, 3.7125602347713223`*^9}, {
   3.712561017124344*^9, 3.712561018345109*^9}, 3.7130118306370897`*^9, {
   3.7130121369433813`*^9, 3.7130121478791523`*^9}, 3.713012812008912*^9, {
   3.7130129837575293`*^9, 3.713012984270946*^9}, {3.7130147014936457`*^9, 
   3.713014732172743*^9}, {3.7130148491286917`*^9, 3.713014850499349*^9}, {
   3.713015020440887*^9, 3.7130150314500523`*^9}, {3.713079666392715*^9, 
   3.713079668899569*^9}, {3.713083496121367*^9, 3.713083497876712*^9}},
 ExpressionUUID -> "bca63833-95fc-4d12-b89a-f013bb3a0126"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.715112804502236*^9}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.715112804558269*^9}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.715112804723103*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Flatten", "::", "normal"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Nonatomic expression expected at position \
\[NoBreak]\\!\\(1\\)\[NoBreak] in \[NoBreak]\\!\\(Flatten[\[Lambda]]\\)\
\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/normal\\\", ButtonNote -> \
\\\"Flatten::normal\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.715112804802622*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"bothfixedA", "=", "\[IndentingNewLine]", 
    RowBox[{"RegionPlot", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Max", "[", 
          RowBox[{"Abs", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"\[Lambda]", "/.", "YaXAEigs"}], "/.", "someparams"}], "/.",
              "moreparams"}], "//", "Flatten"}], "]"}], "]"}], "<", "1"}], 
        ")"}], "&&", 
       RowBox[{"(*", 
        RowBox[{"internally", " ", "stable"}], "*)"}], "\[IndentingNewLine]", 
       
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"\[Lambda]WA", ">", "1"}], "/.", "eqr0YaXA"}], "/.", 
          "someparams"}], "/.", "moreparams"}], ")"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"t", ",", 
        RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"s", ",", 
        RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Gray", ",", 
         RowBox[{"Opacity", "[", "0.25", "]"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"BoundaryStyle", "\[Rule]", "None"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"MaxRecursion", "\[Rule]", "2"}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"bothfixeda", "=", "\[IndentingNewLine]", 
    RowBox[{"RegionPlot", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Max", "[", 
          RowBox[{"Abs", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"\[Lambda]", "/.", "YaXAEigs"}], "/.", "someparams"}], "/.",
              "moreparams"}], "//", "Flatten"}], "]"}], "]"}], "<", "1"}], 
        ")"}], "&&", 
       RowBox[{"(*", 
        RowBox[{"internally", " ", "stable"}], "*)"}], "\[IndentingNewLine]", 
       
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"\[Lambda]Wa", ">", "1"}], "/.", "eqr0YaXA"}], "/.", 
          "someparams"}], "/.", "moreparams"}], ")"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"t", ",", 
        RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"s", ",", 
        RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Gray", ",", 
         RowBox[{"Opacity", "[", "0.25", "]"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"BoundaryStyle", "\[Rule]", "None"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"MaxRecursion", "\[Rule]", "2"}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"XpolymorphicA", "=", "\[IndentingNewLine]", 
    RowBox[{"RegionPlot", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Max", "[", 
          RowBox[{"Abs", "[", 
           RowBox[{"intYaXAar0", "/.", "moreparams"}], "]"}], "]"}], "<", 
         "1"}], ")"}], "&&", 
       RowBox[{"(*", 
        RowBox[{"internally", " ", "stable"}], "*)"}], "\[IndentingNewLine]", 
       
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"\[Lambda]WA", ">", "1"}], "/.", "eqr0YaXAa"}], "/.", 
          "someparams"}], "/.", "moreparams"}], ")"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"t", ",", 
        RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"s", ",", 
        RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Gray", ",", 
         RowBox[{"Opacity", "[", "0.25", "]"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"BoundaryStyle", "\[Rule]", "None"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"MaxRecursion", "\[Rule]", "2"}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Xpolymorphica", "=", "\[IndentingNewLine]", 
   RowBox[{"RegionPlot", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Max", "[", 
         RowBox[{"Abs", "[", 
          RowBox[{"intYaXAar0", "/.", "moreparams"}], "]"}], "]"}], "<", 
        "1"}], ")"}], "&&", 
      RowBox[{"(*", 
       RowBox[{"internally", " ", "stable"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"\[Lambda]Wa", ">", "1"}], "/.", "eqr0YaXAa"}], "/.", 
         "someparams"}], "/.", "moreparams"}], ")"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"s", ",", 
       RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Gray", ",", 
        RowBox[{"Opacity", "[", "0.25", "]"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"BoundaryStyle", "\[Rule]", "None"}], ",", "\[IndentingNewLine]", 
     RowBox[{"MaxRecursion", "\[Rule]", "2"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.69791419088354*^9, 3.697914204107209*^9}, {
   3.69791423675738*^9, 3.697914267442163*^9}, {3.697914332513447*^9, 
   3.697914344706374*^9}, {3.6979210568048067`*^9, 3.697921086163679*^9}, {
   3.697921161278735*^9, 3.69792116307207*^9}, {3.697923698797831*^9, 
   3.6979237516937227`*^9}, {3.69792439200351*^9, 3.697924448790558*^9}, {
   3.697924546414797*^9, 3.697924651712484*^9}, 3.6979249626931677`*^9, {
   3.6979252361103277`*^9, 3.6979252781015997`*^9}, {3.697925865210726*^9, 
   3.697925906632759*^9}, {3.6979259919838133`*^9, 3.69792599286863*^9}, {
   3.697926282493573*^9, 3.697926298691634*^9}, {3.69792633000852*^9, 
   3.697926363936458*^9}, {3.6979265871865673`*^9, 3.697926593914707*^9}, 
   3.697989793786848*^9, {3.697989884811812*^9, 3.6979899000758*^9}, {
   3.69799030526079*^9, 3.697990455812793*^9}, {3.697990878903956*^9, 
   3.697990879016015*^9}, {3.698505224191556*^9, 3.698505279118783*^9}, {
   3.6985884845824614`*^9, 3.698588563629053*^9}, 3.698588615905355*^9, {
   3.6985886754283657`*^9, 3.698588780187793*^9}, {3.698589304512279*^9, 
   3.698589318027289*^9}, {3.698589833723196*^9, 3.698589850157795*^9}, {
   3.6986037137243843`*^9, 3.698603713821808*^9}, {3.698613813894794*^9, 
   3.698613813976364*^9}, {3.69875804231399*^9, 3.6987580952477293`*^9}, {
   3.708264756710517*^9, 3.70826486735957*^9}, {3.708264901408318*^9, 
   3.708265012641108*^9}, {3.7082650747312317`*^9, 3.708265158807321*^9}, {
   3.708265357326613*^9, 3.7082654072179003`*^9}, {3.708265688150424*^9, 
   3.708265688964964*^9}, {3.708266698979836*^9, 3.7082668815205307`*^9}, {
   3.708267185586544*^9, 3.708267196826241*^9}, {3.7082675323948603`*^9, 
   3.708267532985468*^9}, {3.7082675734459543`*^9, 3.708267576453854*^9}, {
   3.7082682937576733`*^9, 3.708268295680781*^9}, {3.7113707155192127`*^9, 
   3.711370729731615*^9}, {3.711370792225245*^9, 3.711370828115415*^9}, {
   3.711371063092106*^9, 3.711371063757251*^9}, {3.711372144469955*^9, 
   3.7113721753248243`*^9}, {3.7113723412610397`*^9, 3.711372350993482*^9}, {
   3.711372826645961*^9, 3.711372834477874*^9}, {3.7113743080460997`*^9, 
   3.7113743149408293`*^9}, {3.711374982870043*^9, 3.7113749857732067`*^9}, {
   3.711386976094173*^9, 3.7113871196229973`*^9}, {3.71138730852668*^9, 
   3.7113873209295588`*^9}, {3.711391212371595*^9, 3.7113912239549627`*^9}, {
   3.711474886567898*^9, 3.711474904791568*^9}, {3.7114750103602667`*^9, 
   3.711475036828904*^9}, {3.711475085124415*^9, 3.711475099411407*^9}, {
   3.7130121953925467`*^9, 3.7130122038152847`*^9}, {3.713012634133914*^9, 
   3.71301263824895*^9}, {3.713012700596148*^9, 3.713012700690166*^9}, {
   3.713012779031542*^9, 3.713012791717905*^9}, {3.7130147419687767`*^9, 
   3.71301475673291*^9}},
 ExpressionUUID -> "93b0b490-684d-411f-b103-934e7bfd0414"],

Cell[BoxData[
 RowBox[{
  RowBox[{"YaIntStable", "=", 
   RowBox[{"RegionPlot", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Max", "[", 
         RowBox[{"Abs", "[", 
          RowBox[{"intYaXAar0", "/.", "moreparams"}], "]"}], "]"}], "<", 
        "1"}], ")"}], "||", 
      RowBox[{"(*", 
       RowBox[{"internally", " ", "stable"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Max", "[", 
         RowBox[{"Abs", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"\[Lambda]", "/.", "YaXAEigs"}], "/.", "someparams"}], "/.",
             "moreparams"}], "//", "Flatten"}], "]"}], "]"}], "<", "1"}], 
       ")"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"s", ",", 
       RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotStyle", "\[Rule]", "None"}], ",", "\[IndentingNewLine]", 
     RowBox[{"BoundaryStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Black", ",", "Thick"}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"MaxRecursion", "\[Rule]", "2"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.711474925092482*^9, 3.71147496716144*^9}, {
   3.711475038965263*^9, 3.711475062759836*^9}, {3.7114753145796022`*^9, 
   3.711475322770665*^9}, {3.711475370926453*^9, 3.7114754140461817`*^9}, {
   3.711475452043969*^9, 3.711475500965314*^9}, 3.713012207087121*^9, 
   3.713012638998308*^9, 3.713014765882523*^9},
 ExpressionUUID -> "b00dbb68-2757-4318-b701-f04daf44a73c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plot", "Subsubsection",
 CellChangeTimes->{{3.708291374414747*^9, 
  3.7082913765974817`*^9}},ExpressionUUID->"12607da3-d3ae-41ea-b81e-\
288d91e823f7"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"plot4A", "=", 
   RowBox[{"Show", "[", "\[IndentingNewLine]", 
    RowBox[{
    "bothfixedA", ",", "\[IndentingNewLine]", "XpolymorphicA", ",", 
     "\[IndentingNewLine]", "bothfixeda", ",", "\[IndentingNewLine]", 
     "Xpolymorphica", ",", "\[IndentingNewLine]", "YaIntStable", ",", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0.5"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Frame", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"True", ",", "True", ",", "True", ",", "True"}], "}"}]}], 
       ","}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"ImageSize", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"xsize", ",", "xsize"}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotRangePadding", "\[Rule]", "0"}], ",", "\[IndentingNewLine]", 
     RowBox[{"FrameTicks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"x", ",", "x", ",", "ticksize"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "0", ",", "0.5", ",", "0.25"}], "}"}]}], "]"}], 
        ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"y", ",", "y", ",", "ticksize"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"y", ",", 
            RowBox[{"-", "1"}], ",", "0", ",", "0.5"}], "}"}]}], "]"}], ",", 
        "None", ",", "None"}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"FrameTicksStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Directive", "[", 
           RowBox[{"Black", ",", 
            RowBox[{"Thickness", "[", "lwd", "]"}]}], "]"}], ",", 
          RowBox[{"Directive", "[", 
           RowBox[{"Black", ",", 
            RowBox[{"Thickness", "[", "lwd", "]"}]}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Directive", "[", 
           RowBox[{"Black", ",", 
            RowBox[{"Thickness", "[", "lwd", "]"}]}], "]"}], ",", 
          RowBox[{"Directive", "[", 
           RowBox[{"Black", ",", 
            RowBox[{"Thickness", "[", "lwd", "]"}], ",", 
            RowBox[{"FontColor", "\[Rule]", "White"}]}], "]"}]}], "}"}]}], 
       "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"FrameStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Black", ",", 
          RowBox[{"Thickness", "[", "lwd", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Black", ",", 
          RowBox[{"Thickness", "[", "lwd", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Black", ",", 
          RowBox[{"Thickness", "[", "lwd", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Black", ",", 
          RowBox[{"Thickness", "[", "lwd", "]"}]}], "}"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<Relative fitness of \!\(\*
StyleBox[\"aa\",
FontSlant->\"Italic\"]\) males\>\"", ",", "\"\<\>\""}], "}"}]}], ","}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"BaseStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], ",", 
        RowBox[{"FontSize", "\[Rule]", "14"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ImagePadding", "\[Rule]", "Pad"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Epilog", "\[Rule]", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Text", "[", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{"\"\<A\>\"", ",", "14", ",", "Bold"}], "]"}], ",", 
            RowBox[{"Scaled", "@", 
             RowBox[{"{", 
              RowBox[{"0.05", ",", "0.95"}], "}"}]}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Text", "[", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{"\"\<\!\(\*
StyleBox[SubscriptBox[\"\[Lambda]\", \"WA\"],
FontSlant->\"Italic\"]\)>1\>\"", ",", "14"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"1.29", ",", "0.5"}], "}"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Text", "[", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{"\"\<\!\(\*
StyleBox[SubscriptBox[\"\[Lambda]\", \"WA\"],
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"<\",
FontSlant->\"Italic\"]\)1 & \!\(\*
StyleBox[SubscriptBox[\"\[Lambda]\", \"Wa\"],
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"<\",
FontSlant->\"Italic\"]\)1\>\"", ",", "14"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.5", ",", "0.5"}], "}"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Text", "[", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{"\"\<Ya equilibrium unstable\>\"", ",", "14"}], "]"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"0.5", ",", "1.25"}], "}"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Text", "[", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{"\"\<*\>\"", ",", "18"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"1.2", ",", "0.85"}], "}"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Rotate", "[", 
           RowBox[{
            RowBox[{"Text", "[", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{"\"\<Relative fitness of \!\(\*
StyleBox[\"AA\",
FontSlant->\"Italic\"]\) males\>\"", ",", "14"}], "]"}], ",", 
              RowBox[{"Scaled", "@", "ylabpos"}]}], "]"}], ",", 
            RowBox[{"90", " ", "Degree"}]}], "]"}]}], "\[IndentingNewLine]", 
         "}"}]}], ","}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"PlotRangeClipping", "\[Rule]", "True"}]}], 
    "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{"plotdir", "<>", "\"\<regionplot_2_Female_A.pdf\>\""}], ",", 
      "%"}], "]"}], ";"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.708267985099811*^9, 3.708267989570319*^9}, {
   3.708268041250675*^9, 3.7082680810425158`*^9}, {3.708268118487771*^9, 
   3.708268121126305*^9}, {3.708268268066489*^9, 3.70826827554463*^9}, {
   3.708350249357357*^9, 3.70835026123699*^9}, {3.708350297167807*^9, 
   3.708350409763027*^9}, {3.708352686831295*^9, 3.7083528333666773`*^9}, {
   3.708352868657325*^9, 3.7083530692688217`*^9}, {3.708353115276188*^9, 
   3.708353194253536*^9}, {3.708353379246372*^9, 3.708353388550728*^9}, {
   3.7083535989918137`*^9, 3.7083536283355227`*^9}, {3.710868251778583*^9, 
   3.7108682622771273`*^9}, {3.71087011391715*^9, 3.710870115771612*^9}, {
   3.711370865703402*^9, 3.711370878260462*^9}, {3.711372412223158*^9, 
   3.711372419799553*^9}, {3.711373360079027*^9, 3.711373360965246*^9}, {
   3.7113746969426537`*^9, 3.71137469708457*^9}, {3.711374799783164*^9, 
   3.711374891781783*^9}, {3.711375236683269*^9, 3.711375236783635*^9}, {
   3.711382181849908*^9, 3.711382184798916*^9}, {3.7113871694311666`*^9, 
   3.7113871979430637`*^9}, {3.711391233801846*^9, 3.71139123556815*^9}, 
   3.711475237620105*^9, {3.7114755423254843`*^9, 3.711475801569694*^9}, {
   3.71147583434204*^9, 3.711475854172817*^9}, {3.711796289334046*^9, 
   3.7117962951713543`*^9}, {3.7124873313285503`*^9, 3.712487333930496*^9}, {
   3.712559052738544*^9, 3.712559054305307*^9}, {3.7130126612291718`*^9, 
   3.7130126873941603`*^9}, {3.71301274872731*^9, 3.713012750877109*^9}, {
   3.713014542230651*^9, 3.713014594286989*^9}, {3.713014772557486*^9, 
   3.713014773178067*^9}, {3.713014820514689*^9, 3.713014822114974*^9}, {
   3.713014916385593*^9, 3.713014918925579*^9}, {3.71301522537064*^9, 
   3.7130152296315727`*^9}, {3.713015320430455*^9, 3.713015320641542*^9}, {
   3.713075390716559*^9, 3.713075390796854*^9}, 3.713079568158252*^9, {
   3.713079679066378*^9, 3.713079679207917*^9}, 3.7130835177475452`*^9, {
   3.713083680947362*^9, 
   3.713083702712523*^9}},ExpressionUUID->"1f2cad9a-687f-46a3-9b97-\
40f65a161900"],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1: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
4Is1oboJNtLzzbgWX5eF/h9j9N72
    "], {{{
       {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[0.25], EdgeForm[None],
         GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwBtwJI/SFib1JiAgAAAOIAAAADAAAAamkibm0/cG9BJAQLdHNDcgYNDgYH
DwcIJwkRd3ZrdQsTFAsMFQwNFg0OFw4PKhAaSREbTRIcURMdWRUfDBUUXRYg
JSIFaT8GVRQebUEHKCQKQwsEBg4NBw8OCxQTKScQdnUSc3IMaxEJYRchDRYV
NisZLCoZSRoQTRsRURwSVR0TWR4UXR8VYSAWeCIGRiMDMi0keiQLSCUFcWwm
My4nECcRcSgKaDAvNC8qDhcWOSoaKywZJC0EMCkQJy4JKi8QLzAQKDIkKTMn
ODYZLDQqPDYYJTEiPTUYNjcYPjgZKjkZOToZdEQFNjwrOj4ZQD8BOzkaNz0Y
Bj8HQkECcEIDREMEC0MMR0QEB0EIbkACeXhyZUUCZkcEEUkQQkYDSkkbTEob
SksaREgFEk0RTk0cTU4bTk8bE1ESRUICUlEdVFIdUE4cUVIcUlMcFFUTVlUe
VlcdFVkUWlkfWVoeWlseWFYeXFofFl0VYWIgXV4fYF4gZGIhXl8fYmEhXl0g
F2EWbHEKYmMgQG4/VVYdaWoBEWsSJmwJbGsJP2kBImkGd2wKP20HQW8Ib3AD
NGcvQnBBbW4CQW0CKHEmSUoaDHINs/4u3qNU4aVYuLkx6qtk56lgIngF5Kdc
fIsB68wByexA7a1l98Y8e3YKk/wlkfsjlv0pxvk8+Jcr7q5mcngGeHkFc3QF
RHRDeXMFe3p1dnt1ensKzclAa3YSdncKmb41c3lyJHoKbHdr77AtdXoL/rQu
1Jgr0pUm26FQ9fRosLUtQ3MMwps4xZ07l9QrtLYu/H4lj/YYspQmjrEJ+30j
1YIslNImntdLnMQ6zpBFoNpPot1TpOBXpuNb0JJHmsE3r+8t038oEnUTgY8Y
qulj2J9Mvr81i+sBqOZf/YAp8vNnuvAyvZk1jh3TAQ==
           "]], 
          PolygonBox[{{132, 216, 76, 27}, {182, 142, 9, 46}, {200, 194, 56, 
           62}, {133, 219, 80, 28}, {187, 179, 46, 51}, {131, 197, 59, 26}, {
           174, 208, 71, 102}, {183, 150, 41, 48}, {167, 226, 90, 92}, {171, 
           232, 98, 100}, {240, 175, 45, 50}, {181, 141, 4, 45}, {173, 206, 
           69, 101}, {207, 145, 35, 70}, {177, 178, 38, 9}, {209, 147, 37, 
           72}, {138, 234, 100, 33}, {199, 189, 53, 61}, {134, 222, 84, 29}, {
           136, 228, 92, 31}, {159, 214, 74, 76}, {126, 184, 49, 37}, {185, 
           172, 34, 49}, {141, 238, 102, 4}, {127, 186, 50, 40}, {128, 187, 
           51, 41}, {191, 129, 24, 53}, {218, 132, 27, 79}, {217, 160, 79, 
           78}, {130, 188, 52, 44}, {192, 154, 55, 54}, {243, 241, 47, 103}, {
           244, 183, 48, 104}, {152, 213, 44, 43}, {195, 156, 58, 57}, {196, 
           200, 62, 58}, {204, 205, 64, 1}, {193, 199, 61, 55}, {249, 248, 43,
            60}, {202, 207, 70, 66}, {214, 158, 75, 74}, {215, 131, 26, 75}, {
           203, 209, 72, 68}, {149, 211, 40, 38}, {157, 195, 57, 59}, {188, 
           242, 103, 52}, {250, 124, 1, 106}, {146, 203, 68, 71}, {241, 245, 
           104, 47}, {172, 250, 106, 34}, {169, 229, 94, 96}, {144, 202, 66, 
           69}, {155, 192, 54, 56}, {161, 217, 78, 80}, {163, 220, 82, 84}, {
           165, 223, 86, 88}, {135, 225, 88, 30}, {246, 247, 60, 24}, {137, 
           231, 96, 32}, {230, 136, 31, 95}, {224, 134, 29, 87}, {226, 166, 
           91, 90}, {140, 237, 101, 2}, {223, 164, 87, 86}, {221, 133, 28, 
           83}, {220, 162, 83, 82}, {232, 170, 99, 98}, {233, 137, 32, 99}, {
           227, 135, 30, 91}, {229, 168, 95, 94}, {236, 140, 2, 
           64}}]}]}}, {}, {}, {}, {}}}], GraphicsComplexBox[CompressedData["
1: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
of6zjcJI+h/kLbsz
    "], {{{
       {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[0.25], EdgeForm[None],
         GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNmHec1sURxndeUNrR5DjaUU46ggoiIl24nBQBKVJEFBExiaEqSigiEYmY
oCIhVgSlKIoiKsSgRlDALkSwYNdgATWUIAZDyXyd5/3c/TE3+9vf/GZ3Z+d5
Zt4rGD1h4PhMSqmz/ynl+tcu5lLGpazGvK+s53Iu5VPYlnapIH2Syz6Xf7v8
RnYZ2VUq4e8HjSu65LtUc8l1qStd3eVql5wS73JkX1Vrs2ae/LKvGtJVXGpK
V5XO7ne//NVxOehywGWc1qsoX/X0jO9bXaa4NHP5j/w24HsPSK7LeB83dKkt
n42kOdNhnaexyyrZnOpyi8tEl/ouc10maM2zXc50aa13eTrTPJfJ8v2py2qX
pi67XDZr/UdcHna51uV6l1byVdb3WMZlDee2WJ+z/F7v27occ/naZa3LWJdL
XS5LceknXI1yWeaywGWay3R9dy7ncZsOrru5dNQZ2rl0kj7HpbN0+xS2bWU3
Uz66uqxw+YvLDJenXYpc+rr00/h8lx7yi7/tLttcurh019q8y7PYC/Y9ta/z
XHpJd5fuoG/6yG+hS2+976G9cw9tXPqX8EdchroMcxkgv3w3XM8DXdZr74Nd
LipxjiHS/WXXW+vj60J9P1TveS7wszRwqWXx3FPrjZTfIbqrIfrukhJrjpJf
9rXBZYTLaJcrNMb2WdnzfKX84m+M3vOc72vXcLkhBQeA3TKKR3+dB2yDLTD2
uxS4PSUFB4DzHH0DtirKR2U9Z7mjvKQkXqvIDtyBB7DwaAosFeh7MFI9FeM/
T2swB2eAbzAP9sA9uKyTirkmX/vL1fs8rZXlgHqyy3JKDfkCc2AJDJHL5DR4
bySfn6XAKtzxYgqcg3k4AxyCX7DbTH7ggMZa6/EUGG/h8mEKnIP/LK46pmKu
YR/gG+ySr+B4aoq8XaP9tdK7dtor+dRONuQXmAafX6bgkOtkxzpZvKLBKnXh
t6m4HpTTfcIDXWWDLRjrlgJP5Hkv7b2H5rZpDJbJL3BbpDWzGM3iNotjNHkH
nshxcjeLK56fScEdF6Tw1U+2s1LgrFA+wFJ/+R6gZ/Y4UM89ZM/c31LgeZDL
jbLpk4p5rZN8DdU+wAxYGiNf4G+YZFQK/vh7CuxdrDOAtRE6w0g9z9a3A+Wb
77JYv1R2M7SH9jrDMNniC5yPlq8xen4uBRdcLh9jtdcTGrOGWVzuTa7+oD2z
jzkp6jlYyVjkAZheqndgvqqFBkf3peACeKC6z29MUSur+Liyy/M+/snlmhR5
DM7AAPl/v8sf9dxZ54TnD7lMSoFPZKK+43vwARb+lKIGtnRZmKJWkZN1fc3a
FtiYn6JGgg3wB0bB4x0p6iL5fnsKXJzlciQFJsDjG7KbrhyYpvjj/zbZ36k9
t5e/+VqrptvsSMGlK10WaXxvingT67+myFdy9a4UOddHttRLMHZ3ivwgN9bp
Gbu3dOaZuo85ui/O+ucUPDBBsW2s+M1VDOlnbk7Bq8T4FsWY+5mnGL+vu+Gb
BxVr4rw1RZ9ELO9JkTfkzEOKIzF5LAV3FyhmCxSf6YonMafWLNIZlyuO2Ox1
eVNne0cxKlSM6Rm66MwLddffu7ytmM1SHPsoBksUh9na63Cdb3GKHJqrM07Q
mR5IkR/k6n8VjxsVc+JPji9VvG/TmTnvHpfXdTZisEzn5kwrtHdyCr4lr67V
mHj+T7GqpblHZPOJxti+myKHyJ96FjXxVH0LtlYpxssVw5t1B8T/qRT14nSX
oynqTROXJzRuofmNKerQkylqSbanZEw9OaL3p6XoM5+Uz1f1TbbusBa15jWt
jc0xjc9wKWfB23B1jgU/wrflLd7BvxWkB2seXobnj6fg/V+5VLTg1RHyU0HP
m1xeSsE/5OzLimElC06Eh19Q3Ig5/AhPwp/wFe/GyeYfGm9SfJrID2tv0Nwm
rbVaz011H/jP9g6bdV/fufwzRQ4ztyUFjshdcnim5rZq/l+KL7H9SjElnq/I
rnkKHICXLLbIQ3hoqct7KXhhi9bDnlpMP12ovWzXfnroXaHm3tF4ZwoeI+ZP
a1ykb7DvLBty9Aa936nxcT3zHX0RnDJXe9ml/aA/1HiynokZ/RR9Ffn2sWwm
S38ke/h5j869Wt9gv1jfYD9F89zLF/LJHL3TNylqxBLFmjiDQXqjlrL9XD7J
8d2K/27dB+MH5HeK/OGXPF+rcRvNf6u14O29ujd494MU3HyyRa2lh6Zm0suS
P9Rheusc2TA+WXP7NOYd31XUN/TA9IynWNRpnuEPuHKR5vFPvabPpeem12Xu
oOYPab6BNM/UCHgRfqSm/Kh5bKjl9MT5muPdJM1h30j6sL6lblALR+nu4Be4
qIU3mmdZ8ChcV9+Cx+ij6+k3LT0nPSj8nyubavrtRI9LrV6l77M1iHm4uqHF
t918/IzroRb7PKC4ECt61EbqUxtq3FVrNtS4te9zuupo1g6f9B11tRZrFmhc
X/tnn/Rf9GFXpeAzcAJG4Fr6e3gU/oDfayk2P6eoIeQIeXCy1irQuZkvpV6t
lJ6x4f45F3dK30G/N0rrM74qFT9n/w9gmv9B65VR3uTrt2GRzkx/3khn5/lN
1swEz3bETyZq5yvsLRNcn3HdyYLzJ7t+zSIXTrjuYMHznV2XzkTNnuTjzRY1
/CSf62LB4Uddt7fgpXNdH7eo/de4fls9bY7bF1pgrCvnyETOvWTplx801JWH
fdxG/Ry/k2opf2orruC3qfIPTqavIz+KdKe5yjE0vS+1YGOKcVPpXI1Zg9yY
qrjVUC7tkN8i5V5NxXmq9tFGNuQJ5+XOayuvyL86Wpdv8+WTNetob/td77Pg
y0eVV+CD+n9U+Jvl7ytngluX+HiacruZ6+4WeVjk+m4Lfv3A9UwLDruJO7To
oU7jTixq5Teu51n0YnPIwYz41PUCi56llY8XWvR23Vz3s6jJjV2fpxyu6Ta1
MsG75/vcPRa8u5d8t6h3nxIzi/7uPtf3W/D6YtdPWPyObeg+mlj0cRe53mFR
4y92/ZFF3zDM9S4LTrjE9WcWfeDXrsdY9NejXd9rgcc1rpdb9Mjt3P+tOm9j
H8+w6L/nu66biRpwvY/7C6fbXV9owfGfux5p0as0d9vblZPPuX7eord9kf1a
cAb8QJ2oLU3vku1bGPM++zsN7NOv0LfQLx3QN9iDSfoneqdnZQO+wDC9Dt9R
x+jhqGtPaUx9+6UWWfAEz3AXNXG/1q0mf5Xkk/dlZQPflRPeqa3Mw39gfYvw
/qoFd7BHeOJ1C654y4Jr2CNY32aB95ctsA2uvyN+Fr/Hang8q2Wirq8jBrpT
ekbODhet1376Cr/goonmymuf2d50kGLFmB6V9bDh/QHXBy16MnKfnCAf2Mu3
2s/3xMyiVzvd359j8TsH/uutteC2XqZeNxPYA3fkXV4mcu8FC+6D93qC90zc
UUvXZ1v8/sj18QqLfmaZ6zMs+pl2FtgDd8SmuuIDdocLvw14b9G3fmyBbea3
WnA0/Aw+1imeX7j+0qLnXu/6EwuOGQRGlW8DLPKenC/r/stlok99iLyw6OvA
xFTZwA2PWeyTeIxXTMDWg8LXUs5n0Vd85foKi755JVi0iAkYvVw4pSZUyERd
2ACGMpHXxG+l7NvQh7iUBhvklMVvpistuAAe4P2ZFjbwJT0BnAlfDrbgTO72
Z93vOAs8g+UfXR+y6AfbZmI9/BxxudqiNyevpyi3qf/0AdwdHHBMPABX0cfA
V2tdv2vB8RNdb7T4/brH9ViL3w+HXf9k8XvjfdfvWfTmu11fZvHbYqcF77P/
x12vtugfyaPWyqU7LHo1+rSBFtwKr8LZ11nw9ibXfSz+b9HWxPvwk+vZFr9x
7yI2Fv9DutMid8nbNyxqNvV6kQVOiCG1Gn6EG+kjLhAem1twLvlAj9DXgnP+
DzU+yQU=
           "]], PolygonBox[CompressedData["
1:eJwtlWnQT2UYxp/7eImUZLRoKjS81qKRvpjxpTEaxKCyFCFr8SJbxqDXkj3L
IGUnpaJFCim8DJWWyW5Q9rG3KNmKftdc/w/XnN99nnOe8zz3c933qdylb6uC
LKU0BuWhvyKlS+hHeDiqz+DrxJPg4lxfRlfQz8Q70HPwr2gCPABVg99Ec+Fy
6DjcEW2Dt6LJ8P3MeQqugzoQlyX+BR6IJhGfQd/BJ9Ex+Eh4bEvyWo6GWWsa
D59E3+pb6GF4LfoIrokqMvefxD/AZ9FieBGqCo9Dj8An0DdwjeS1jkYTk9e8
Bv4CrUyeszZcjTmvJM9RAi6O2sPrUSfGHyPOC+frFniA5mTsbZSIbxI309yo
uXIdfrezcgJX55lrcC3UjvgAKoLz0Sr4U/QB/CF6SntH65LX0Ey5Cc/dGg2C
6zBf5NbwNNed6Gu4gnIE5zN+Ca6EisFZ5nc153bGvw+vfRSaDbdCvZPP+Am4
RjiX81BveBaaDe9EveBpaCq8BO2Bd4e/rT0Uwp+g5cke6Ky5cn5bjP6D/0WN
4NV6Bj4UzoXOZFg4J8rFWPSV9iYPwiPRfezlybDXVqFrcJ/wmNZ4A+6HXkt+
J3i+P3EhPAe9qNxqjckeexV+iGd+197QaeJuaAg8Bb0Ez5Dgd1B3+Mvwt+Xp
oXAV3r8I90FNiDeG9yZP5DH2SjjXb6EXwjWk2pFHf4P/0Jlo7/KAvIAawjOT
z/YZtCH5jJXLTjkvKqf6tmpUtak16OzbEvdP9oC8/Xy4luVxebEL8eBkT8pL
A4l7JHuqbrhHaH55vi48hGtPeSmXq6pcSyTnbAfcMpw79Zx54RpW7S7UnuGx
qnF4AbqL98uj2uoF6G74nsysNc3R2ckT8Hx0J2Nj1DPgw2i56hFNh5eiyoz/
Q/wTfB5dDvc89TrduxjOsXKrntETPhc+26HoQd4/T7wdPoMuwGfDY7pXhvGR
xAfhA+gO4iXh3qJ7C+CS3NsLL0J7iW8l3gdvTO6tqiHVjnrsCPj2zHtTjx1O
fBvxfng8Kg1/Jg8n37sO90V74N2oVOacK9f6pp7dF/6W3inH+NJwr1HOlEvt
QWtXTrU21bhqW2tsCjcI18bnaBTcOHxW6pnvw4+HvbhMnoSvhv8V59Cj8Mfh
2taZyruVMo/Jw+oF6uHq3eoJBeE9aS/qAYNzHiuW89Qurq3DtSTPH4SfRQXw
ZtQG3h/OlTyuXto+PFaENsFF4b2oB/SA30NvqNbR1HAPU+/SvXphT8lL6mkP
ZH5Hz56Wx8MekTdUo3+H/0H69+ifql5yL/GJ5J6yIuxJefHd5H/jlPBc+kdW
yPxP1L9Q73SFT6HJyT1HtSLPy+uqmenhHqTeI8/XD5+JzkI9Sd5YGf6WPDIR
nhuuPc2ZH/aovKker1wuDPdW5bQFPF/fSK7xrfC2cK8qRP8Db0sggg==
           
           "]]}]}}, {}, {}, {}, {}}}], {}, {}, 
   GraphicsComplexBox[CompressedData["
1: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
12HYf6tuh7ZRCM7y/fY/fcOCvQ==
    "], {{{}, {}, {}, {}, {}}, {{
       {GrayLevel[0], Thickness[Large], LineBox[CompressedData["
1:eJwl03V0lmUYwOGxMVA6HJ0qMBDOoWN0iwjCAKWkSxBGdw82WgGlQaQVkZSS
LqVBSrq7u+P6Dn9c+93P/Xzvd3bOu2VtFhXZIU5QUFCYH8EamEeywDCdBgwj
3GWsfkVeMjoP14bs5lv2kMo+jBnmfGQyN9IpTCU/me1GaGP20ZS9NKEGBdjP
ARbyB6PI6bmR+gvN+I8WHKQ5NSnIIQ6ziD9ZTCGyeH60tuQIxzhKavuZWpis
5lY6jUiKcJzW/E9R8vjMEs2tS7UWy1jOX6zgB3K5H6MnacMJvuMU43hGL57y
guek9cwrfc1L3vKGdPZxCA68JOISQgbmuZ/PQD5wHqB1qMSHzglYY17L13xO
IrvErDdvoC5fkNQuGVvMW6nHl6SwS8k/5n+pT3UG+3WiGcJQYohlWODsPodn
YnQXOxnCR3bVdAfb2UY0ye2r6mY2sTHw/SSxr6LfsI6/GURC+8q6mlWspD/x
7Stqdp2s/Qg199V4OknT6xydy0SyOVfQ2ZTnU+cJ2oef+cS5nM6iLB87/6S9
SWMer7/xO78S+Kcay2fuftRLnKc25zjDWYpxgbacph0XieAK33OZ9lylONeJ
4hoduUEJbtGJm3TmNiW5Sxfu0JV7lOIB3bhPdx5Smsf04BE9eUIZqnmn5Ykg
H+FkIQ3JSUgocQl5/2ca9A7LxYfP
         "]]}}}}]},
  AspectRatio->1,
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{Automatic, Automatic},
  BaseStyle->{FontFamily -> "Helvetica", FontSize -> 14},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->{{
     GrayLevel[0], 
     Thickness[0.006]}, {
     GrayLevel[0], 
     Thickness[0.006]}, {
     GrayLevel[0], 
     Thickness[0.006]}, {
     GrayLevel[0], 
     Thickness[0.006]}},
  FrameTicks->{{{0., 
      FormBox["0.`", TraditionalForm], {0, 0.01}}, {0.25, 
      FormBox["0.25`", TraditionalForm], {0, 0.01}}, {0.5, 
      FormBox["0.5`", TraditionalForm], {0, 0.01}}}, {{-1., 
      FormBox[
       RowBox[{"-", "1.`"}], TraditionalForm], {0, 0.01}}, {-0.5, 
      FormBox[
       RowBox[{"-", "0.5`"}], TraditionalForm], {0, 0.01}}, {0., 
      FormBox["0.`", TraditionalForm], {0, 0.01}}}, None, None},
  FrameTicksStyle->{{
     Directive[
      GrayLevel[0], 
      Thickness[0.006]], 
     Directive[
      GrayLevel[0], 
      Thickness[0.006]]}, {
     Directive[
      GrayLevel[0], 
      Thickness[0.006]], 
     Directive[
      GrayLevel[0], 
      Thickness[0.006], FontColor -> GrayLevel[1]]}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->{{40, 20}, {50, 30}},
  ImageSize->{360, 360},
  Method->{
   "ScalingFunctions" -> None, "TransparentPolygonMesh" -> True, 
    "AxesInFront" -> True},
  PlotRange->{{0, 0.5}, {-1, 0}},
  PlotRangeClipping->True,
  PlotRangePadding->0,
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7082679901832733`*^9, {3.708268037786875*^9, 3.70826807723018*^9}, 
   3.7082681228144617`*^9, 3.7082683686172113`*^9, 3.708290720489683*^9, {
   3.708350293871221*^9, 3.7083503157667017`*^9}, {3.708350363409504*^9, 
   3.7083504099400377`*^9}, {3.708352826814301*^9, 3.708352833894183*^9}, {
   3.70835287316109*^9, 3.708353069770844*^9}, {3.7083531157038727`*^9, 
   3.708353194494418*^9}, {3.708353389457487*^9, 3.708353422653029*^9}, 
   3.708353472231934*^9, 3.708353557618922*^9, {3.708353602057424*^9, 
   3.708353628678946*^9}, 3.7108692387842627`*^9, 3.710870117824407*^9, 
   3.711371299355803*^9, 3.711372421876944*^9, 3.711372533472704*^9, 
   3.711372773677491*^9, 3.711372933319132*^9, 3.7113733622092047`*^9, 
   3.711374699755022*^9, 3.711374752552959*^9, {3.711374814608631*^9, 
   3.7113748350086946`*^9}, {3.711374868816112*^9, 3.711374896307176*^9}, 
   3.711375109926654*^9, 3.711375299765567*^9, 3.711382185680716*^9, 
   3.711387242885256*^9, 3.711387403559289*^9, 3.711391355912635*^9, {
   3.7114752261757383`*^9, 3.7114752387282343`*^9}, {3.711475535139833*^9, 
   3.711475545145396*^9}, {3.711475577264015*^9, 3.711475580853435*^9}, {
   3.711475616976709*^9, 3.711475620099489*^9}, {3.71147565810998*^9, 
   3.711475662743082*^9}, 3.711475705751689*^9, {3.711475746612671*^9, 
   3.711475802948635*^9}, {3.7114758467755623`*^9, 3.711475854574589*^9}, 
   3.7117962258263187`*^9, 3.711796814316484*^9, 3.711797020173929*^9, 
   3.712482967150958*^9, 3.712559328036532*^9, 3.712560450678878*^9, 
   3.712561243217821*^9, 3.712573569915584*^9, 3.7130126517152977`*^9, 
   3.713012688137144*^9, 3.7130127517224607`*^9, 3.713012801719905*^9, 
   3.713012906977214*^9, 3.7130130803967247`*^9, 3.713013172337055*^9, 
   3.713013219974084*^9, {3.713014552123434*^9, 3.713014594551928*^9}, {
   3.713014814651188*^9, 3.713014822585209*^9}, 3.7130149300475082`*^9, 
   3.7130151994055243`*^9, 3.7130152300667143`*^9, 3.713015321974635*^9, 
   3.7130753912724953`*^9, 3.713083599610035*^9, {3.713083682902419*^9, 
   3.7130837030860853`*^9}},ExpressionUUID->"2c616939-ff9b-4dc9-ab7f-\
c993f4d70926"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Recursions (written as in appendix, generic loci order) [Enter]\
\>", "Section",
 CellChangeTimes->{{3.6756910197792797`*^9, 3.675691024113359*^9}, {
   3.67569412935745*^9, 3.6756941314240303`*^9}, {3.675707349839982*^9, 
   3.675707351884247*^9}, {3.675709974013658*^9, 3.675709982915987*^9}, {
   3.6757923469668207`*^9, 3.675792350124728*^9}, 3.676676690696854*^9, {
   3.677350035605269*^9, 3.67735004069977*^9}, 3.677358409575016*^9, {
   3.678845319012044*^9, 3.678845320057397*^9}, 3.692607135315508*^9, {
   3.6926071764577847`*^9, 3.692607187122102*^9}, {3.693550212113646*^9, 
   3.693550235766447*^9}, {3.693554320708564*^9, 3.6935543247324944`*^9}, 
   3.693559930483079*^9, {3.69728435513507*^9, 
   3.697284356882052*^9}},ExpressionUUID->"aef16354-572a-4803-81da-\
b6749954151b"],

Cell[CellGroupData[{

Cell["Haploid selection", "Subsection",
 CellChangeTimes->{{3.676680390552682*^9, 
  3.676680393224043*^9}},ExpressionUUID->"7d5ea815-1d7d-4a04-bfff-\
f1514e3d73a8"],

Cell["\<\
We start with haploid selection, which occurs in sperm/pollen only. We assume \
male sperm/pollen compete for eggs, and that the allele at the autosomal \
locus determines their competitive ability (with relative fitnesses wA and \
wa). After selection on male gametes/pollen the frequencies of gametes in \
each sex are\
\>", "Text",
 CellChangeTimes->{{3.675646210075425*^9, 3.6756462139879293`*^9}, {
  3.675692881948024*^9, 3.675692905462323*^9}, {3.675702634397826*^9, 
  3.6757026600570383`*^9}, {3.675710000498989*^9, 3.675710437600037*^9}, {
  3.6757106247367887`*^9, 3.675710626158669*^9}, {3.675792380024247*^9, 
  3.6757924424434967`*^9}, {3.6766767101519136`*^9, 3.676676821916243*^9}, {
  3.676676854671156*^9, 3.676676936090798*^9}, {3.676676969927855*^9, 
  3.6766771026976233`*^9}, {3.6766771405687523`*^9, 3.676677267000321*^9}, {
  3.6766773144445467`*^9, 3.676677512953319*^9}, {3.676677557552327*^9, 
  3.676677565011045*^9}, {3.676677607075321*^9, 3.676677629948578*^9}, {
  3.676677676927281*^9, 3.6766777279544153`*^9}, {3.6766803851556997`*^9, 
  3.676680387344873*^9}, {3.676718778719702*^9, 3.676718805041526*^9}, {
  3.6767190397373533`*^9, 
  3.676719075005002*^9}},ExpressionUUID->"54f21f15-ce76-43c7-bbfa-\
00ff97911c57"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"mean", " ", "fitness", " ", "of", " ", "female", " ", "gametes"}],
    "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"wbarHapFemale", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"wAf", " ", "XAMf"}], "+", 
        RowBox[{"waf", " ", "XaMf"}], "+", 
        RowBox[{"wAf", " ", "XAmf"}], "+", 
        RowBox[{"waf", " ", "Xamf"}]}], ")"}], "+", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"wAf", " ", "YAMf"}], "+", 
        RowBox[{"waf", " ", "YaMf"}], "+", 
        RowBox[{"wAf", " ", "YAmf"}], "+", 
        RowBox[{"waf", " ", "Yamf"}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"non", "-", 
     RowBox[{"mutant", " ", "eggs"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XAMfs", "=", 
     RowBox[{"wAf", " ", 
      RowBox[{"XAMf", "/", "wbarHapFemale"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XaMfs", "=", 
     RowBox[{"waf", " ", 
      RowBox[{"XaMf", "/", "wbarHapFemale"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"YAMfs", "=", 
     RowBox[{"wAf", " ", 
      RowBox[{"YAMf", "/", "wbarHapFemale"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"YaMfs", "=", 
     RowBox[{"waf", " ", 
      RowBox[{"YaMf", "/", "wbarHapFemale"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"mutant", " ", "eggs"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XAmfs", "=", 
     RowBox[{"wAf", " ", 
      RowBox[{"XAmf", "/", "wbarHapFemale"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Xamfs", "=", 
     RowBox[{"waf", " ", 
      RowBox[{"Xamf", "/", "wbarHapFemale"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"YAmfs", "=", 
     RowBox[{"wAf", " ", 
      RowBox[{"YAmf", "/", "wbarHapFemale"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Yamfs", "=", 
     RowBox[{"waf", " ", 
      RowBox[{"Yamf", "/", "wbarHapFemale"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"mean", " ", "fitness", " ", "of", " ", "male", " ", "gametes"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"wbarHapMale", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"wAm", " ", "XAMm"}], "+", 
        RowBox[{"wam", " ", "XaMm"}], "+", 
        RowBox[{"wAm", " ", "XAmm"}], "+", 
        RowBox[{"wam", " ", "Xamm"}]}], ")"}], "+", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"wAm", " ", "YAMm"}], "+", 
        RowBox[{"wam", " ", "YaMm"}], "+", 
        RowBox[{"wAm", " ", "YAmm"}], "+", 
        RowBox[{"wam", " ", "Yamm"}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"non", "-", 
     RowBox[{"mutant", " ", "male", " ", "gametes"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XAMms", "=", 
     RowBox[{"wAm", " ", 
      RowBox[{"XAMm", "/", "wbarHapMale"}]}]}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"XaMms", "=", 
     RowBox[{"wam", " ", 
      RowBox[{"XaMm", "/", "wbarHapMale"}]}]}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"YAMms", "=", " ", 
     RowBox[{"wAm", " ", 
      RowBox[{"YAMm", "/", "wbarHapMale"}]}]}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"YaMms", "=", " ", 
     RowBox[{"wam", " ", 
      RowBox[{"YaMm", "/", "wbarHapMale"}]}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"mutant", " ", "male", " ", "gametes"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XAmms", "=", 
     RowBox[{"wAm", " ", 
      RowBox[{"XAmm", "/", "wbarHapMale"}]}]}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"Xamms", "=", 
     RowBox[{"wam", " ", 
      RowBox[{"Xamm", "/", "wbarHapMale"}]}]}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"YAmms", "=", " ", 
     RowBox[{"wAm", " ", 
      RowBox[{"YAmm", "/", "wbarHapMale"}]}]}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"Yamms", "=", " ", 
     RowBox[{"wam", " ", 
      RowBox[{"Yamm", "/", "wbarHapMale"}]}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.675887851245193*^9, 3.675887867834023*^9}, {
  3.676677282192428*^9, 3.6766773057008953`*^9}, {3.676677524747307*^9, 
  3.676677542756909*^9}, {3.676677580215856*^9, 3.676677603744999*^9}, {
  3.676677734415629*^9, 3.676677763178328*^9}, {3.6766778776357307`*^9, 
  3.676677877865404*^9}, {3.676682591464239*^9, 3.67668260166063*^9}, {
  3.6773500606735477`*^9, 3.677350123171657*^9}, {3.677355257334691*^9, 
  3.677355296629312*^9}, {3.6773554239368267`*^9, 3.6773554527034492`*^9}, {
  3.677355492352109*^9, 3.677355517767782*^9}, {3.678642619660035*^9, 
  3.678642623154952*^9}, {3.6926071163235397`*^9, 3.6926071425481377`*^9}, {
  3.69260720024391*^9, 3.6926074073917637`*^9}, {3.693574914336934*^9, 
  3.6935749518323307`*^9}},ExpressionUUID->"ba51cef9-8c7d-4d7d-8457-\
1debe9a84dfb"],

Cell["\<\
Check that frequencies sum to one in each sex after haploid selection:\
\>", "Text",
 CellChangeTimes->{{3.675691241028049*^9, 3.675691262904736*^9}, {
   3.675691499842326*^9, 3.675691508954028*^9}, {3.6757021446730413`*^9, 
   3.6757021466313477`*^9}, 3.67570266834774*^9, {3.675710454342794*^9, 
   3.675710458811872*^9}, {3.675711308941972*^9, 3.6757113347037287`*^9}, {
   3.676677885608522*^9, 3.6766778886629477`*^9}, {3.6766794933148947`*^9, 
   3.6766794941177*^9}, {3.676718813892243*^9, 3.676718822513054*^9}, {
   3.676719082993588*^9, 
   3.676719084080762*^9}},ExpressionUUID->"4ddaeb6e-a0f0-4972-b0d8-\
d82a4fe22177"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"1", "==", 
    RowBox[{
    "XAMms", "+", "XaMms", "+", "YAMms", "+", "YaMms", "+", "XAmms", "+", 
     "Xamms", "+", "YAmms", "+", "Yamms"}]}], "//", "Factor"}], " ", 
  RowBox[{"(*", 
   RowBox[{"male", " ", "gametes"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"1", "==", 
   RowBox[{
   "XAMfs", "+", "XaMfs", "+", "XAmfs", "+", "Xamfs", "+", "YAMfs", "+", 
    "YaMfs", "+", "YAmfs", "+", "Yamfs"}]}], "//", "Factor", " ", 
  RowBox[{"(*", "eggs", "*)"}]}]}], "Input",
 CellChangeTimes->{{3.6757273549842978`*^9, 3.675727390607794*^9}, {
  3.6757276397063427`*^9, 3.6757276468903522`*^9}, {3.675792572534343*^9, 
  3.675792597101988*^9}, {3.676677804145811*^9, 3.676677826030532*^9}, {
  3.676677900791519*^9, 3.67667797831069*^9}, {3.676678537684183*^9, 
  3.676678542015664*^9}, {3.6767181309369173`*^9, 3.676718177588006*^9}, {
  3.677350126505292*^9, 3.677350150283494*^9}, {3.6773553518299723`*^9, 
  3.677355387456687*^9}, {3.677355471013707*^9, 3.677355472108779*^9}, {
  3.677355541534996*^9, 3.677355542975457*^9}, {3.69260741724226*^9, 
  3.692607474759425*^9}},ExpressionUUID->"f1ae0025-2dc7-4fd0-bbef-\
c7b783372f01"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.675727347436596*^9, 3.675727390939782*^9}, {
   3.67572744294584*^9, 3.675727451121879*^9}, {3.6757276407275457`*^9, 
   3.675727647216401*^9}, 3.6757851712882767`*^9, 3.675785213984146*^9, {
   3.675792579770925*^9, 3.675792597332528*^9}, 3.6758682510725803`*^9, 
   3.675884051627248*^9, 3.67588787251865*^9, 3.675894802110652*^9, 
   3.676652893924481*^9, {3.6766777919311743`*^9, 3.676677818579338*^9}, {
   3.6766779043654737`*^9, 3.676677939916746*^9}, 3.676678542469659*^9, 
   3.676718143248888*^9, 3.6767181780486*^9, 3.6767307837164783`*^9, 
   3.676747303149987*^9, 3.677350150768147*^9, 3.677355342848761*^9, 
   3.677355388467477*^9, {3.67735547297444*^9, 3.677355497450495*^9}, {
   3.677355546467103*^9, 3.6773555682275133`*^9}, 3.677426219410788*^9, 
   3.677426529389955*^9, 3.677594772995286*^9, 3.677872448191378*^9, 
   3.677875703002388*^9, 3.6779381420772877`*^9, 3.6779577346097593`*^9, 
   3.678208859261462*^9, 3.6785428903292437`*^9, 3.678546796002295*^9, 
   3.678653987884425*^9, 3.678793240520035*^9, 3.67883999201215*^9, 
   3.692607254918138*^9, 3.6926072910070963`*^9, {3.692607446380959*^9, 
   3.692607475628792*^9}, 3.6932315591368847`*^9, 3.693550498161333*^9, 
   3.693565826892425*^9, 3.693574255316889*^9, 3.69357495594132*^9, 
   3.693575035375576*^9, 3.6936330351289177`*^9, 3.6948921887180443`*^9, 
   3.694953690283082*^9, 3.694976020552416*^9, 3.696709772459976*^9, 
   3.6967154878228607`*^9, 3.696726690791709*^9, 3.696726804597472*^9, 
   3.697046039714761*^9, 3.697207856886569*^9, 3.697284191813217*^9, 
   3.6972848804434547`*^9, 3.6973026475206423`*^9, 3.6973027268895063`*^9, 
   3.6974061952463083`*^9, 3.6986096870723057`*^9, 3.699817960726974*^9, 
   3.710178234151326*^9, 3.7101868785377493`*^9, 3.710437887609675*^9, 
   3.7104379234186077`*^9, 3.711528083140976*^9, 3.7116916721389008`*^9, 
   3.7117044252340918`*^9, 3.711704525013748*^9, 3.7117783825042257`*^9, 
   3.7117880143755417`*^9, 3.711788650602002*^9, 3.712582192076309*^9, 
   3.7130754440602703`*^9},ExpressionUUID->"e9cb486a-75f6-46bc-b6c5-\
5f4e40c642f1"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.675727347436596*^9, 3.675727390939782*^9}, {
   3.67572744294584*^9, 3.675727451121879*^9}, {3.6757276407275457`*^9, 
   3.675727647216401*^9}, 3.6757851712882767`*^9, 3.675785213984146*^9, {
   3.675792579770925*^9, 3.675792597332528*^9}, 3.6758682510725803`*^9, 
   3.675884051627248*^9, 3.67588787251865*^9, 3.675894802110652*^9, 
   3.676652893924481*^9, {3.6766777919311743`*^9, 3.676677818579338*^9}, {
   3.6766779043654737`*^9, 3.676677939916746*^9}, 3.676678542469659*^9, 
   3.676718143248888*^9, 3.6767181780486*^9, 3.6767307837164783`*^9, 
   3.676747303149987*^9, 3.677350150768147*^9, 3.677355342848761*^9, 
   3.677355388467477*^9, {3.67735547297444*^9, 3.677355497450495*^9}, {
   3.677355546467103*^9, 3.6773555682275133`*^9}, 3.677426219410788*^9, 
   3.677426529389955*^9, 3.677594772995286*^9, 3.677872448191378*^9, 
   3.677875703002388*^9, 3.6779381420772877`*^9, 3.6779577346097593`*^9, 
   3.678208859261462*^9, 3.6785428903292437`*^9, 3.678546796002295*^9, 
   3.678653987884425*^9, 3.678793240520035*^9, 3.67883999201215*^9, 
   3.692607254918138*^9, 3.6926072910070963`*^9, {3.692607446380959*^9, 
   3.692607475628792*^9}, 3.6932315591368847`*^9, 3.693550498161333*^9, 
   3.693565826892425*^9, 3.693574255316889*^9, 3.69357495594132*^9, 
   3.693575035375576*^9, 3.6936330351289177`*^9, 3.6948921887180443`*^9, 
   3.694953690283082*^9, 3.694976020552416*^9, 3.696709772459976*^9, 
   3.6967154878228607`*^9, 3.696726690791709*^9, 3.696726804597472*^9, 
   3.697046039714761*^9, 3.697207856886569*^9, 3.697284191813217*^9, 
   3.6972848804434547`*^9, 3.6973026475206423`*^9, 3.6973027268895063`*^9, 
   3.6974061952463083`*^9, 3.6986096870723057`*^9, 3.699817960726974*^9, 
   3.710178234151326*^9, 3.7101868785377493`*^9, 3.710437887609675*^9, 
   3.7104379234186077`*^9, 3.711528083140976*^9, 3.7116916721389008`*^9, 
   3.7117044252340918`*^9, 3.711704525013748*^9, 3.7117783825042257`*^9, 
   3.7117880143755417`*^9, 3.711788650602002*^9, 3.712582192076309*^9, 
   3.7130754440713453`*^9},ExpressionUUID->"8cf912dd-fff0-46f2-9773-\
560634ca6bd6"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Random mating", "Subsection",
 CellChangeTimes->{{3.676680401113572*^9, 3.676680402700843*^9}, {
  3.676680492557345*^9, 
  3.676680499967092*^9}},ExpressionUUID->"9c7fa3e7-1a56-425f-88f4-\
016ab13bd280"],

Cell["\<\
After random mating, the frequencies of the diploid genotypes are\
\>", "Text",
 CellChangeTimes->{{3.675646094888542*^9, 3.675646099390658*^9}, {
  3.675646217785323*^9, 3.675646250704771*^9}, {3.67570268816877*^9, 
  3.6757027045136023`*^9}, {3.676678026615859*^9, 
  3.676678026799192*^9}},ExpressionUUID->"ce47e97b-c85c-4b47-b747-\
8e9692621e1b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"MM", " ", "Homozygotes"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"XM", "-", 
    RowBox[{"XM", " ", "females"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"XAMXAMfemale", "=", 
     RowBox[{"kXX", " ", 
      RowBox[{"(", 
       RowBox[{"XAMfs", " ", "XAMms"}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XAMXaMfemale", "=", 
     RowBox[{"kXX", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"XAMfs", " ", "XaMms"}], "+", 
        RowBox[{"XaMfs", " ", "XAMms"}]}], " ", ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XaMXaMfemale", "=", 
     RowBox[{"kXX", 
      RowBox[{"(", 
       RowBox[{"XaMfs", " ", "XaMms"}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"XM", "-", 
     RowBox[{"XM", " ", "males"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XAMXAMmale", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "kXX"}], ")"}], 
      RowBox[{"(", 
       RowBox[{"XAMfs", " ", "XAMms"}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XAMXaMmale", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "kXX"}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"XAMfs", " ", "XaMms"}], "+", 
        RowBox[{"XaMfs", " ", "XAMms"}]}], " ", ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XaMXaMmale", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "kXX"}], ")"}], 
      RowBox[{"(", 
       RowBox[{"XaMfs", " ", "XaMms"}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"XM", "-", 
     RowBox[{"YM", " ", "females"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XAMYAMfemale", "=", 
     RowBox[{"kXY", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"XAMfs", " ", "YAMms"}], "+", 
        RowBox[{"YAMfs", " ", "XAMms"}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XAMYaMfemale", "=", 
     RowBox[{"kXY", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"XAMfs", " ", "YaMms"}], "+", 
        RowBox[{"YaMfs", " ", "XAMms"}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XaMYAMfemale", "=", 
     RowBox[{"kXY", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"XaMfs", " ", "YAMms"}], "+", 
        RowBox[{"YAMfs", " ", "XaMms"}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XaMYaMfemale", "=", 
     RowBox[{"kXY", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"XaMfs", " ", "YaMms"}], "+", 
        RowBox[{"YaMfs", " ", "XaMms"}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"XM", "-", 
     RowBox[{"YM", " ", "males"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XAMYAMmale", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "kXY"}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"XAMfs", " ", "YAMms"}], "+", 
        RowBox[{"YAMfs", " ", "XAMms"}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XAMYaMmale", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "kXY"}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"XAMfs", " ", "YaMms"}], "+", 
        RowBox[{"YaMfs", " ", "XAMms"}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XaMYAMmale", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "kXY"}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"XaMfs", " ", "YAMms"}], "+", 
        RowBox[{"YAMfs", " ", "XaMms"}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XaMYaMmale", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "kXY"}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"XaMfs", " ", "YaMms"}], "+", 
        RowBox[{"YaMfs", " ", "XaMms"}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"YM", "-", 
     RowBox[{"YM", " ", "females"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"YAMYAMfemale", "=", 
     RowBox[{"kYY", 
      RowBox[{"(", 
       RowBox[{"YAMfs", " ", "YAMms"}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"YAMYaMfemale", "=", 
     RowBox[{"kYY", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"YAMfs", " ", "YaMms"}], "+", 
        RowBox[{"YaMfs", " ", "YAMms"}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"YaMYaMfemale", "=", 
     RowBox[{"kYY", 
      RowBox[{"(", 
       RowBox[{"YaMfs", " ", "YaMms"}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"YM", "-", 
     RowBox[{"YM", " ", "males"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"YAMYAMmale", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "kYY"}], ")"}], 
      RowBox[{"(", 
       RowBox[{"YAMfs", " ", "YAMms"}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"YAMYaMmale", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "kYY"}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"YAMfs", " ", "YaMms"}], "+", 
        RowBox[{"YaMfs", " ", "YAMms"}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"YaMYaMmale", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "kYY"}], ")"}], 
      RowBox[{"(", 
       RowBox[{"YaMfs", " ", "YaMms"}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Mm", " ", "heterozygotes"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"XM", "-", 
     RowBox[{"Xm", " ", "females"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XAmXAMfemale", "=", 
     RowBox[{"kMmXX", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"XAmfs", " ", "XAMms"}], "+", 
        RowBox[{"XAMfs", " ", "XAmms"}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XAmXaMfemale", "=", 
     RowBox[{"kMmXX", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"XAmfs", " ", "XaMms"}], "+", 
        RowBox[{"XaMfs", " ", "XAmms"}]}], " ", ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XAMXamfemale", "=", 
     RowBox[{"kMmXX", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"XAMfs", " ", "Xamms"}], "+", 
        RowBox[{"Xamfs", " ", "XAMms"}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XamXaMfemale", "=", 
     RowBox[{"kMmXX", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Xamfs", " ", "XaMms"}], "+", 
        RowBox[{"XaMfs", " ", "Xamms"}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"XM", "-", 
     RowBox[{"Xm", " ", "males"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XAmXAMmale", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "kMmXX"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"XAmfs", " ", "XAMms"}], "+", 
        RowBox[{"XAMfs", " ", "XAmms"}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XAmXaMmale", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "kMmXX"}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"XAmfs", " ", "XaMms"}], "+", 
        RowBox[{"XaMfs", " ", "XAmms"}]}], " ", ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XAMXammale", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "kMmXX"}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"XAMfs", " ", "Xamms"}], "+", 
        RowBox[{"Xamfs", " ", "XAMms"}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XamXaMmale", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "kMmXX"}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Xamfs", " ", "XaMms"}], "+", 
        RowBox[{"XaMfs", " ", "Xamms"}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Xm", "-", 
     RowBox[{"YM", " ", "females"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XAmYAMfemale", "=", 
     RowBox[{"kMmXY", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"XAmfs", " ", "YAMms"}], "+", 
        RowBox[{"YAMfs", " ", "XAmms"}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XAmYaMfemale", "=", 
     RowBox[{"kMmXY", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"XAmfs", " ", "YaMms"}], "+", 
        RowBox[{"YaMfs", " ", "XAmms"}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XamYAMfemale", "=", 
     RowBox[{"kMmXY", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Xamfs", " ", "YAMms"}], "+", 
        RowBox[{"YAMfs", " ", "Xamms"}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XamYaMfemale", "=", 
     RowBox[{"kMmXY", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Xamfs", " ", "YaMms"}], "+", 
        RowBox[{"YaMfs", " ", "Xamms"}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Xm", "-", 
     RowBox[{"YM", " ", "males"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XAmYAMmale", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "kMmXY"}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"XAmfs", " ", "YAMms"}], "+", 
        RowBox[{"YAMfs", " ", "XAmms"}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XAmYaMmale", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "kMmXY"}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"XAmfs", " ", "YaMms"}], "+", 
        RowBox[{"YaMfs", " ", "XAmms"}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XamYAMmale", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "kMmXY"}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Xamfs", " ", "YAMms"}], "+", 
        RowBox[{"YAMfs", " ", "Xamms"}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XamYaMmale", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "kMmXY"}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Xamfs", " ", "YaMms"}], "+", 
        RowBox[{"YaMfs", " ", "Xamms"}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"XM", "-", 
     RowBox[{"Ym", " ", "females"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XAMYAmfemale", "=", 
     RowBox[{"kMmXY", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"XAMfs", " ", "YAmms"}], "+", 
        RowBox[{"YAmfs", " ", "XAMms"}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XAMYamfemale", "=", 
     RowBox[{"kMmXY", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"XAMfs", " ", "Yamms"}], "+", 
        RowBox[{"Yamfs", " ", "XAMms"}]}], " ", ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XaMYAmfemale", "=", 
     RowBox[{"kMmXY", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"XaMfs", " ", "YAmms"}], "+", 
        RowBox[{"YAmfs", " ", "XaMms"}]}], " ", ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XaMYamfemale", "=", 
     RowBox[{"kMmXY", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"XaMfs", " ", "Yamms"}], "+", 
        RowBox[{"Yamfs", " ", "XaMms"}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"XM", "-", 
     RowBox[{"Ym", " ", "females"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XAMYAmmale", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "kMmXY"}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"XAMfs", " ", "YAmms"}], "+", 
        RowBox[{"YAmfs", " ", "XAMms"}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XAMYammale", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "kMmXY"}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"XAMfs", " ", "Yamms"}], "+", 
        RowBox[{"Yamfs", " ", "XAMms"}]}], " ", ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XaMYAmmale", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "kMmXY"}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"XaMfs", " ", "YAmms"}], "+", 
        RowBox[{"YAmfs", " ", "XaMms"}]}], " ", ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XaMYammale", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "kMmXY"}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"XaMfs", " ", "Yamms"}], "+", 
        RowBox[{"Yamfs", " ", "XaMms"}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Ym", "-", 
     RowBox[{"YM", " ", "females"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"YAmYAMfemale", "=", 
     RowBox[{"kMmYY", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"YAmfs", " ", "YAMms"}], "+", 
        RowBox[{"YAMfs", " ", "YAmms"}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"YAmYaMfemale", "=", 
     RowBox[{"kMmYY", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"YAmfs", " ", "YaMms"}], "+", 
        RowBox[{"YaMfs", " ", "YAmms"}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"YamYAMfemale", "=", 
     RowBox[{"kMmYY", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Yamfs", " ", "YAMms"}], "+", 
        RowBox[{"YAMfs", " ", "Yamms"}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"YamYaMfemale", "=", 
     RowBox[{"kMmYY", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Yamfs", " ", "YaMms"}], "+", 
        RowBox[{"YaMfs", " ", "Yamms"}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Ym", "-", 
     RowBox[{"YM", " ", "males"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"YAmYAMmale", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "kMmYY"}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"YAmfs", " ", "YAMms"}], "+", 
        RowBox[{"YAMfs", " ", "YAmms"}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"YAmYaMmale", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "kMmYY"}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"YAmfs", " ", "YaMms"}], "+", 
        RowBox[{"YaMfs", " ", "YAmms"}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"YamYAMmale", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "kMmYY"}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Yamfs", " ", "YAMms"}], "+", 
        RowBox[{"YAMfs", " ", "Yamms"}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"YamYaMmale", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "kMmYY"}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Yamfs", " ", "YaMms"}], "+", 
        RowBox[{"YaMfs", " ", "Yamms"}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"mm", " ", "heterozygotes"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Xm", "-", 
     RowBox[{"Xm", " ", "females"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XAmXAmfemale", "=", 
     RowBox[{"kmm", 
      RowBox[{"(", 
       RowBox[{"XAmfs", " ", "XAmms"}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XAmXamfemale", "=", 
     RowBox[{"kmm", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"XAmfs", " ", "Xamms"}], "+", 
        RowBox[{"Xamfs", " ", "XAmms"}]}], " ", ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XamXamfemale", "=", 
     RowBox[{"kmm", 
      RowBox[{"(", 
       RowBox[{"Xamfs", " ", "Xamms"}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Xm", "-", 
     RowBox[{"Xm", " ", "males"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XAmXAmmale", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "kmm"}], ")"}], 
      RowBox[{"(", 
       RowBox[{"XAmfs", " ", "XAmms"}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XAmXammale", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "kmm"}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"XAmfs", " ", "Xamms"}], "+", 
        RowBox[{"Xamfs", " ", "XAmms"}]}], " ", ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XamXammale", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "kmm"}], ")"}], 
      RowBox[{"(", 
       RowBox[{"Xamfs", " ", "Xamms"}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Xm", "-", 
     RowBox[{"Ym", " ", "females"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XAmYAmfemale", "=", 
     RowBox[{"kmm", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"XAmfs", " ", "YAmms"}], "+", 
        RowBox[{"YAmfs", " ", "XAmms"}]}], " ", ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XAmYamfemale", "=", 
     RowBox[{"kmm", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"XAmfs", " ", "Yamms"}], "+", 
        RowBox[{"Yamfs", " ", "XAmms"}]}], " ", ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XamYAmfemale", "=", 
     RowBox[{"kmm", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Xamfs", " ", "YAmms"}], "+", 
        RowBox[{"YAmfs", " ", "Xamms"}]}], " ", ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XamYamfemale", "=", 
     RowBox[{"kmm", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Xamfs", " ", "Yamms"}], "+", 
        RowBox[{"Yamfs", " ", "Xamms"}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Xm", "-", 
     RowBox[{"Ym", " ", "males"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XAmYAmmale", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "kmm"}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"XAmfs", " ", "YAmms"}], "+", 
        RowBox[{"YAmfs", " ", "XAmms"}]}], " ", ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XAmYammale", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "kmm"}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"XAmfs", " ", "Yamms"}], "+", 
        RowBox[{"Yamfs", " ", "XAmms"}]}], " ", ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XamYAmmale", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "kmm"}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Xamfs", " ", "YAmms"}], "+", 
        RowBox[{"YAmfs", " ", "Xamms"}]}], " ", ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XamYammale", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "kmm"}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Xamfs", " ", "Yamms"}], "+", 
        RowBox[{"Yamfs", " ", "Xamms"}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Ym", "-", 
     RowBox[{"Ym", " ", "females"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"YAmYAmfemale", "=", 
     RowBox[{"kmm", 
      RowBox[{"(", 
       RowBox[{"YAmfs", " ", "YAmms"}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"YAmYamfemale", "=", 
     RowBox[{"kmm", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"YAmfs", " ", "Yamms"}], "+", 
        RowBox[{"Yamfs", " ", "YAmms"}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"YamYamfemale", "=", 
     RowBox[{"kmm", 
      RowBox[{"(", 
       RowBox[{"Yamfs", " ", "Yamms"}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Ym", "-", 
     RowBox[{"Ym", " ", "males"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"YAmYAmmale", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "kmm"}], ")"}], 
      RowBox[{"(", 
       RowBox[{"YAmfs", " ", "YAmms"}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"YAmYammale", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "kmm"}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"YAmfs", " ", "Yamms"}], "+", 
        RowBox[{"Yamfs", " ", "YAmms"}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"YamYammale", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "kmm"}], ")"}], 
      RowBox[{"(", 
       RowBox[{"Yamfs", " ", "Yamms"}], ")"}]}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.675646256909181*^9, 3.675646272815617*^9}, {
   3.675646370257011*^9, 3.67564637079287*^9}, {3.675646404699778*^9, 
   3.675646517567526*^9}, {3.675646573911735*^9, 3.675646591557143*^9}, {
   3.675646627619878*^9, 3.67564663177063*^9}, {3.675646667841331*^9, 
   3.675646747122738*^9}, {3.675691396390801*^9, 3.675691472391663*^9}, {
   3.675691536695323*^9, 3.675691538414453*^9}, {3.675691639085917*^9, 
   3.675691650195237*^9}, {3.675691682513646*^9, 3.675691696533524*^9}, {
   3.675691755294464*^9, 3.6756917629827957`*^9}, {3.675691824386702*^9, 
   3.675691852603437*^9}, {3.675692700413486*^9, 3.675692712195026*^9}, {
   3.67569296671769*^9, 3.675692967464675*^9}, {3.6756930389284983`*^9, 
   3.675693095368285*^9}, {3.675693137308187*^9, 3.675693184356132*^9}, {
   3.675693221908244*^9, 3.6756932234970217`*^9}, {3.675693268122773*^9, 
   3.675693270392726*^9}, {3.675693410576119*^9, 3.675693460007984*^9}, {
   3.675693492300033*^9, 3.675693533360964*^9}, 3.675693600152028*^9, {
   3.675702177145516*^9, 3.675702196152766*^9}, {3.6757023129704742`*^9, 
   3.675702317051364*^9}, {3.675792623150811*^9, 3.675792640133086*^9}, {
   3.675792682078307*^9, 3.675792755658676*^9}, {3.676678000228277*^9, 
   3.676678010863949*^9}, {3.6766780462191133`*^9, 3.676678234810701*^9}, 
   3.676678754031591*^9, {3.6766789631458273`*^9, 3.6766789866065598`*^9}, {
   3.6773501706938*^9, 3.677350364151083*^9}, {3.6773554003020287`*^9, 
   3.677355411423438*^9}, {3.677355555521697*^9, 3.6773556751155987`*^9}, 
   3.677355718800969*^9, {3.67735575116963*^9, 3.677356038432816*^9}, {
   3.677356069249213*^9, 3.677356231234989*^9}, {3.677356275573696*^9, 
   3.6773563630366507`*^9}, {3.677356569358673*^9, 3.677356580776696*^9}, {
   3.6773566473523827`*^9, 3.6773566482388144`*^9}, {3.6773569221392736`*^9, 
   3.677356990418913*^9}, 3.677357110694276*^9, {3.677357168972973*^9, 
   3.677357178988896*^9}, {3.6773572464786158`*^9, 3.677357256973176*^9}, {
   3.692607482918594*^9, 3.692607562022428*^9}, {3.692607677844507*^9, 
   3.692607684925638*^9}, {3.692607759761586*^9, 3.6926077850809317`*^9}, {
   3.692607998613825*^9, 3.6926080004600487`*^9}, {3.692608070452877*^9, 
   3.692608147633994*^9}, {3.692608481077488*^9, 3.692608642425398*^9}, {
   3.692608677460805*^9, 3.69260873674555*^9}, {3.6932296102697573`*^9, 
   3.69322968247619*^9}, {3.693229718613497*^9, 3.693229720555057*^9}, {
   3.6932297511799517`*^9, 3.693229751928891*^9}, {3.6932298389055443`*^9, 
   3.693229854105813*^9}, {3.6932301198254623`*^9, 3.693230351656516*^9}, 
   3.693230443086404*^9, {3.693230844018053*^9, 3.69323092471837*^9}, {
   3.693231006361135*^9, 3.693231157787734*^9}, {3.693231200385848*^9, 
   3.693231265848288*^9}, {3.693231335040118*^9, 3.693231354057026*^9}, {
   3.693231392694023*^9, 3.693231544775403*^9}, {3.693551693042326*^9, 
   3.693551931317341*^9}, {3.693554751753791*^9, 
   3.6935548758258*^9}},ExpressionUUID->"2beeb3c5-36f3-4f2a-b8c2-\
19b716850b69"],

Cell["Check that they sum to one", "Text",
 CellChangeTimes->{{3.6766799013673363`*^9, 3.676679909235434*^9}, {
  3.676718082064983*^9, 3.6767180822254133`*^9}, {3.676718201654763*^9, 
  3.676718215366107*^9}},ExpressionUUID->"e2e17977-1fce-4622-9556-\
420748b4c371"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"1", "==", 
   RowBox[{
   "XAMXAMfemale", "+", "XAMXaMfemale", "+", "XaMXaMfemale", "+", 
    "\[IndentingNewLine]", "XAMXAMmale", "+", "XAMXaMmale", "+", "XaMXaMmale",
     "+", "\[IndentingNewLine]", "XAMYAMmale", "+", "XAMYaMmale", "+", 
    "XaMYAMmale", "+", "XaMYaMmale", "+", "\[IndentingNewLine]", 
    "XAMYAMfemale", "+", "XAMYaMfemale", "+", "XaMYAMfemale", "+", 
    "XaMYaMfemale", "+", "\[IndentingNewLine]", "YAMYAMmale", "+", 
    "YAMYaMmale", "+", "YaMYaMmale", "+", "\[IndentingNewLine]", 
    "YAMYAMfemale", "+", "YAMYaMfemale", "+", "YaMYaMfemale", "+", 
    "\[IndentingNewLine]", "XAmXAMfemale", "+", "XAmXaMfemale", "+", 
    "XAMXamfemale", "+", "XamXaMfemale", "+", "\[IndentingNewLine]", 
    "XAmXAMmale", "+", "XAmXaMmale", "+", "XAMXammale", "+", "XamXaMmale", 
    "+", "\[IndentingNewLine]", "XAmYAMfemale", "+", "XAmYaMfemale", "+", 
    "XamYAMfemale", "+", "XamYaMfemale", "+", "\[IndentingNewLine]", 
    "XAmYAMmale", "+", "XAmYaMmale", "+", "XamYAMmale", "+", "XamYaMmale", 
    "+", "\[IndentingNewLine]", "XAMYAmfemale", "+", "XAMYamfemale", "+", 
    "XaMYAmfemale", "+", "XaMYamfemale", "+", "\[IndentingNewLine]", 
    "XAMYAmmale", "+", "XAMYammale", "+", "XaMYAmmale", "+", "XaMYammale", 
    "+", "\[IndentingNewLine]", "YAmYAMfemale", "+", "YAmYaMfemale", "+", 
    "YamYAMfemale", "+", "YamYaMfemale", "+", "\[IndentingNewLine]", 
    "YAmYAMmale", "+", "YAmYaMmale", "+", "YamYAMmale", "+", "YamYaMmale", 
    "+", "\[IndentingNewLine]", "XAmXAmfemale", "+", "XAmXamfemale", "+", 
    "XamXamfemale", "+", "\[IndentingNewLine]", "XAmXAmmale", "+", 
    "XAmXammale", "+", "XamXammale", "+", "\[IndentingNewLine]", 
    "XAmYAmfemale", "+", "XAmYamfemale", "+", "XamYAmfemale", "+", 
    "XamYamfemale", "+", "\[IndentingNewLine]", "XAmYAmmale", "+", 
    "XAmYammale", "+", "XamYAmmale", "+", "XamYammale", "+", 
    "\[IndentingNewLine]", "YAmYAmfemale", "+", "YAmYamfemale", "+", 
    "YamYamfemale", "+", "\[IndentingNewLine]", "YAmYAmmale", "+", 
    "YAmYammale", "+", "YamYammale"}]}], "//", "Factor"}]], "Input",
 CellChangeTimes->{{3.693231615849169*^9, 3.693231864929265*^9}, {
  3.693232035257275*^9, 3.693232118965827*^9}, {3.693551943982243*^9, 
  3.693551973943201*^9}},ExpressionUUID->"6bef1e38-f823-42ab-9c77-\
dc8d01fb18db"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.6932317684020853`*^9, {3.693231849530023*^9, 3.693231865417522*^9}, 
   3.693232048676394*^9, 3.6932321195813427`*^9, 3.693550498613508*^9, 
   3.6935519358551083`*^9, 3.693551975013875*^9, 3.693554808694509*^9, 
   3.693554893614181*^9, 3.693565828580989*^9, 3.693574256568654*^9, 
   3.69357496216392*^9, 3.693575035633862*^9, 3.693633040117939*^9, 
   3.69489219095968*^9, 3.69495369305893*^9, 3.694976022790276*^9, 
   3.6967097742038403`*^9, 3.6967154896204576`*^9, 3.696726692515358*^9, 
   3.696726806349148*^9, 3.697046041507855*^9, 3.6972078587021933`*^9, 
   3.697284193568397*^9, 3.697284882165011*^9, 3.6973026492494164`*^9, 
   3.697302728535775*^9, 3.6974061956586018`*^9, 3.698609688889206*^9, 
   3.699817962407981*^9, 3.710178235952732*^9, 3.7101868803013906`*^9, 
   3.710437889480647*^9, 3.7104379236467047`*^9, 3.7115280859829693`*^9, 
   3.7116916746086187`*^9, 3.711704427799343*^9, 3.711704527614726*^9, 
   3.711778385134837*^9, 3.711788014569173*^9, 3.711788653036216*^9, 
   3.7125821948083887`*^9, 
   3.713075446856255*^9},ExpressionUUID->"433ea71b-29d2-4f40-88de-\
34e67a5f9aa9"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Diploid selection", "Subsection",
 CellChangeTimes->{{3.676680414738653*^9, 
  3.676680417091516*^9}},ExpressionUUID->"11b29bcb-2bc1-472d-a8f6-\
b7dd09371597"],

Cell["\<\
We next model selection in diploids, which can differ among the sexes. Let \
FAA, FAa, and Faa be the relative fitnesses of females homozygous for allele \
A, heterozygous, or homozygous for allele a at the autosomal locus. Similarly \
we use MAA, MAa, and Maa in males. Frequencies after selection in diploid are \
indicated by appending an s to the name. \
\>", "Text",
 CellChangeTimes->{{3.6756467552456417`*^9, 3.67564676342205*^9}, {
  3.675702725992881*^9, 3.67570275267984*^9}, {3.6766799909212923`*^9, 
  3.676680143326602*^9}, {3.6767190998603992`*^9, 3.676719104009471*^9}, {
  3.693233376957206*^9, 
  3.6932333834651117`*^9}},ExpressionUUID->"45fd30f8-fd65-46d7-8315-\
f5144538daed"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"mean", " ", "male", " ", "fitness"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"wbarM", "=", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"MAA", " ", "XAMXAMmale"}], "+", 
      RowBox[{"MAa", " ", "XAMXaMmale"}], "+", 
      RowBox[{"Maa", " ", "XaMXaMmale"}], "+", "\[IndentingNewLine]", 
      RowBox[{"MAA", " ", "XAMYAMmale"}], "+", 
      RowBox[{"MAa", " ", 
       RowBox[{"(", 
        RowBox[{"XAMYaMmale", "+", "XaMYAMmale"}], ")"}]}], "+", 
      RowBox[{"Maa", " ", "XaMYaMmale"}], "+", "\[IndentingNewLine]", 
      RowBox[{"MAA", " ", "YAMYAMmale"}], "+", 
      RowBox[{"MAa", " ", "YAMYaMmale"}], "+", 
      RowBox[{"Maa", " ", "YaMYaMmale"}], "+", "\[IndentingNewLine]", 
      RowBox[{"MAA", " ", "XAmXAMmale"}], "+", 
      RowBox[{"MAa", " ", 
       RowBox[{"(", 
        RowBox[{"XAmXaMmale", "+", "XAMXammale"}], ")"}]}], "+", 
      RowBox[{"Maa", " ", "XamXaMmale"}], "+", "\[IndentingNewLine]", 
      RowBox[{"MAA", " ", "XAmYAMmale"}], "+", 
      RowBox[{"MAa", " ", 
       RowBox[{"(", 
        RowBox[{"XAmYaMmale", "+", "XamYAMmale"}], ")"}]}], "+", 
      RowBox[{"Maa", " ", "XamYaMmale"}], "+", "\[IndentingNewLine]", 
      RowBox[{"MAA", " ", "XAMYAmmale"}], "+", 
      RowBox[{"MAa", 
       RowBox[{"(", 
        RowBox[{"XAMYammale", "+", "XaMYAmmale"}], ")"}]}], "+", 
      RowBox[{"Maa", " ", "XaMYammale"}], "+", "\[IndentingNewLine]", 
      RowBox[{"MAA", " ", "YAmYAMmale"}], "+", 
      RowBox[{"MAa", " ", 
       RowBox[{"(", 
        RowBox[{"YAmYaMmale", "+", "YamYAMmale"}], ")"}]}], "+", 
      RowBox[{"Maa", " ", "YamYaMmale"}], "+", "\[IndentingNewLine]", 
      RowBox[{"MAA", " ", "XAmXAmmale"}], "+", 
      RowBox[{"MAa", " ", "XAmXammale"}], "+", 
      RowBox[{"Maa", " ", "XamXammale"}], "+", "\[IndentingNewLine]", 
      RowBox[{"MAA", " ", "XAmYAmmale"}], "+", 
      RowBox[{"MAa", " ", 
       RowBox[{"(", 
        RowBox[{"XAmYammale", "+", "XamYAmmale"}], ")"}]}], "+", 
      RowBox[{"Maa", " ", "XamYammale"}], "+", "\[IndentingNewLine]", 
      RowBox[{"MAA", " ", "YAmYAmmale"}], "+", 
      RowBox[{"MAa", " ", "YAmYammale"}], "+", 
      RowBox[{"Maa", " ", "YamYammale"}]}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XAMXAMmales", "=", 
     RowBox[{"MAA", " ", 
      RowBox[{"XAMXAMmale", "/", "wbarM"}]}]}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"XAMXaMmales", "=", 
     RowBox[{"MAa", " ", 
      RowBox[{"XAMXaMmale", "/", "wbarM"}]}]}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"XaMXaMmales", "=", 
     RowBox[{"Maa", " ", 
      RowBox[{"XaMXaMmale", "/", "wbarM"}]}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XAMYAMmales", "=", 
     RowBox[{"MAA", " ", 
      RowBox[{"XAMYAMmale", "/", "wbarM"}]}]}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"XAMYaMmales", "=", 
     RowBox[{"MAa", " ", 
      RowBox[{"XAMYaMmale", "/", "wbarM"}]}]}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"XaMYAMmales", "=", 
     RowBox[{"MAa", " ", 
      RowBox[{"XaMYAMmale", "/", "wbarM"}]}]}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"XaMYaMmales", "=", 
     RowBox[{"Maa", " ", 
      RowBox[{"XaMYaMmale", "/", "wbarM"}]}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"YAMYAMmales", "=", 
     RowBox[{"MAA", " ", 
      RowBox[{"YAMYAMmale", "/", "wbarM"}]}]}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"YAMYaMmales", "=", 
     RowBox[{"MAa", " ", 
      RowBox[{"YAMYaMmale", "/", "wbarM"}]}]}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"YaMYaMmales", "=", 
     RowBox[{"Maa", " ", 
      RowBox[{"YaMYaMmale", "/", "wbarM"}]}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XAmXAMmales", "=", 
     RowBox[{"MAA", " ", 
      RowBox[{"XAmXAMmale", "/", "wbarM"}]}]}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"XAmXaMmales", "=", 
     RowBox[{"MAa", " ", 
      RowBox[{"XAmXaMmale", "/", "wbarM"}]}]}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"XAMXammales", "=", 
     RowBox[{"MAa", " ", 
      RowBox[{"XAMXammale", "/", "wbarM"}]}]}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"XamXaMmales", "=", 
     RowBox[{"Maa", " ", 
      RowBox[{"XamXaMmale", "/", "wbarM"}]}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XAmYAMmales", "=", 
     RowBox[{"MAA", " ", 
      RowBox[{"XAmYAMmale", "/", "wbarM"}]}]}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"XAmYaMmales", "=", 
     RowBox[{"MAa", " ", 
      RowBox[{"XAmYaMmale", "/", "wbarM"}]}]}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"XamYAMmales", "=", 
     RowBox[{"MAa", " ", 
      RowBox[{"XamYAMmale", "/", "wbarM"}]}]}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"XamYaMmales", "=", 
     RowBox[{"Maa", " ", 
      RowBox[{"XamYaMmale", "/", "wbarM"}]}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XAMYAmmales", "=", 
     RowBox[{"MAA", " ", 
      RowBox[{"XAMYAmmale", "/", "wbarM"}]}]}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"XAMYammales", "=", 
     RowBox[{"MAa", " ", 
      RowBox[{"XAMYammale", "/", "wbarM"}]}]}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"XaMYAmmales", "=", 
     RowBox[{"MAa", " ", 
      RowBox[{"XaMYAmmale", "/", "wbarM"}]}]}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"XaMYammales", "=", 
     RowBox[{"Maa", " ", 
      RowBox[{"XaMYammale", "/", "wbarM"}]}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"YAmYAMmales", "=", 
     RowBox[{"MAA", " ", 
      RowBox[{"YAmYAMmale", "/", "wbarM"}]}]}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"YAmYaMmales", "=", 
     RowBox[{"MAa", " ", 
      RowBox[{"YAmYaMmale", "/", "wbarM"}]}]}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"YamYAMmales", "=", 
     RowBox[{"MAa", " ", 
      RowBox[{"YamYAMmale", "/", "wbarM"}]}]}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"YamYaMmales", "=", 
     RowBox[{"Maa", " ", 
      RowBox[{"YamYaMmale", "/", "wbarM"}]}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XAmXAmmales", "=", 
     RowBox[{"MAA", " ", 
      RowBox[{"XAmXAmmale", "/", "wbarM"}]}]}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"XAmXammales", "=", 
     RowBox[{"MAa", " ", 
      RowBox[{"XAmXammale", "/", "wbarM"}]}]}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"XamXammales", "=", 
     RowBox[{"Maa", " ", 
      RowBox[{"XamXammale", "/", "wbarM"}]}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XAmYAmmales", "=", 
     RowBox[{"MAA", " ", 
      RowBox[{"XAmYAmmale", "/", "wbarM"}]}]}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"XAmYammales", "=", 
     RowBox[{"MAa", " ", 
      RowBox[{"XAmYammale", "/", "wbarM"}]}]}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"XamYAmmales", "=", 
     RowBox[{"MAa", " ", 
      RowBox[{"XamYAmmale", "/", "wbarM"}]}]}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"XamYammales", "=", 
     RowBox[{"Maa", " ", 
      RowBox[{"XamYammale", "/", "wbarM"}]}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"YAmYAmmales", "=", 
     RowBox[{"MAA", " ", 
      RowBox[{"YAmYAmmale", "/", "wbarM"}]}]}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"YAmYammales", "=", 
     RowBox[{"MAa", " ", 
      RowBox[{"YAmYammale", "/", "wbarM"}]}]}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"YamYammales", "=", 
     RowBox[{"Maa", " ", 
      RowBox[{"YamYammale", "/", "wbarM"}]}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.675646788099258*^9, 3.675646827315172*^9}, {
   3.675646906255657*^9, 3.6756471746197577`*^9}, {3.6756477305962267`*^9, 
   3.675647791098443*^9}, {3.675693609968581*^9, 3.6756936401475143`*^9}, {
   3.675702773030509*^9, 3.675702825109133*^9}, {3.6757958668524837`*^9, 
   3.675796079670739*^9}, {3.675796179417987*^9, 3.675796260462306*^9}, {
   3.675796480404418*^9, 3.675796481420582*^9}, {3.675796553441423*^9, 
   3.67579667834494*^9}, {3.6757967212634993`*^9, 3.67579673565335*^9}, {
   3.675796766370957*^9, 3.675796913595641*^9}, {3.675796952452533*^9, 
   3.675796955994008*^9}, {3.6757970625420837`*^9, 3.675797062966584*^9}, {
   3.675797156973634*^9, 3.675797157898295*^9}, {3.675797509731503*^9, 
   3.6757975122266283`*^9}, 3.6757987828785143`*^9, {3.675798997687969*^9, 
   3.675798999203364*^9}, {3.67668015749852*^9, 3.676680334093931*^9}, {
   3.677350482152772*^9, 3.677350828592389*^9}, {3.677357205327866*^9, 
   3.677357207661775*^9}, {3.677357311911889*^9, 3.677357463801149*^9}, {
   3.67735749619882*^9, 3.677357579598115*^9}, {3.693232202076263*^9, 
   3.693232212574875*^9}, {3.693232268509738*^9, 3.693232297348093*^9}, {
   3.69323246681604*^9, 3.6932325041348553`*^9}, {3.69323254850172*^9, 
   3.693232640999236*^9}, {3.693232845909175*^9, 3.6932330063898907`*^9}, {
   3.6932330576516943`*^9, 3.6932332753086443`*^9}, {3.693553557673321*^9, 
   3.6935535814322844`*^9}, {3.693553634606389*^9, 
   3.693553689562615*^9}},ExpressionUUID->"2f96955c-97ff-4d53-9d9e-\
9ae78f8c055e"],

Cell["Frequency of males after diplod selection should sum to 1", "Text",
 CellChangeTimes->{{3.6932333474170847`*^9, 
  3.693233359512849*^9}},ExpressionUUID->"fac639e9-d710-44e9-a546-\
017552c36b7c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"1", "\[Equal]", 
   RowBox[{
   "XAMXAMmales", "+", "XAMXaMmales", "+", "XaMXaMmales", "+", 
    "\[IndentingNewLine]", "XAMYAMmales", "+", "XAMYaMmales", "+", 
    "XaMYAMmales", "+", "XaMYaMmales", "+", "\[IndentingNewLine]", 
    "YAMYAMmales", "+", "YAMYaMmales", "+", "YaMYaMmales", "+", 
    "\[IndentingNewLine]", "XAmXAMmales", "+", "XAmXaMmales", "+", 
    "XAMXammales", "+", "XamXaMmales", "+", "\[IndentingNewLine]", 
    "XAmYAMmales", "+", "XAmYaMmales", "+", "XamYAMmales", "+", "XamYaMmales",
     "+", "\[IndentingNewLine]", "XAMYAmmales", "+", "XAMYammales", "+", 
    "XaMYAmmales", "+", "XaMYammales", "+", "\[IndentingNewLine]", 
    "YAmYAMmales", "+", "YAmYaMmales", "+", "YamYAMmales", "+", "YamYaMmales",
     "+", "\[IndentingNewLine]", "XAmXAmmales", "+", "XAmXammales", "+", 
    "XamXammales", "+", "\[IndentingNewLine]", "XAmYAmmales", "+", 
    "XAmYammales", "+", "XamYAmmales", "+", "XamYammales", "+", 
    "\[IndentingNewLine]", "YAmYAmmales", "+", "YAmYammales", "+", 
    "YamYammales"}]}], "//", "Factor"}]], "Input",
 CellChangeTimes->{{3.69323329726197*^9, 3.693233344611611*^9}, {
  3.693553698291501*^9, 3.693553729917019*^9}, {3.693553787227764*^9, 
  3.6935538125551043`*^9}},ExpressionUUID->"4608ec6b-65ea-4bdf-881c-\
a9082384cbdf"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.693233323118504*^9, 3.6932333337187967`*^9}, 
   3.693550499348648*^9, 3.693553866971203*^9, 3.6935550262367973`*^9, 
   3.693565829242177*^9, 3.6935742572968473`*^9, 3.693574963036375*^9, 
   3.693575036211216*^9, 3.693633043023019*^9, 3.6948921916801577`*^9, 
   3.694953693955349*^9, 3.694976023506319*^9, 3.696709775063416*^9, 
   3.696715490563642*^9, 3.696726693402095*^9, 3.696726807239265*^9, 
   3.697046042534032*^9, 3.697207859549664*^9, 3.697284194426795*^9, 
   3.6972848830118933`*^9, 3.697302650150304*^9, 3.69730272942745*^9, 
   3.6974061961528177`*^9, 3.698609689731077*^9, 3.699817963331931*^9, 
   3.710178236814434*^9, 3.7101868815903263`*^9, 3.7104379244207153`*^9, 
   3.7115280867889843`*^9, 3.711691675436099*^9, 3.711704428679378*^9, 
   3.711704528402812*^9, 3.711778386002*^9, 3.7117880149265537`*^9, 
   3.7117886538888397`*^9, 3.712582195683236*^9, 
   3.7130754477650223`*^9},ExpressionUUID->"5dd2bff2-a614-46cd-bc2a-\
28b4a9517e91"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"mean", " ", "female", " ", "fitness"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"wbarF", "=", 
     RowBox[{
      RowBox[{"FAA", " ", "XAMXAMfemale"}], "+", 
      RowBox[{"FAa", " ", "XAMXaMfemale"}], "+", 
      RowBox[{"Faa", " ", "XaMXaMfemale"}], "+", "\[IndentingNewLine]", 
      RowBox[{"FAA", " ", "XAMYAMfemale"}], "+", 
      RowBox[{"FAa", " ", 
       RowBox[{"(", 
        RowBox[{"XAMYaMfemale", "+", "XaMYAMfemale"}], ")"}]}], "+", 
      RowBox[{"Faa", " ", "XaMYaMfemale"}], "+", "\[IndentingNewLine]", 
      RowBox[{"FAA", " ", "YAMYAMfemale"}], "+", 
      RowBox[{"FAa", " ", "YAMYaMfemale"}], "+", 
      RowBox[{"Faa", " ", "YaMYaMfemale"}], "+", "\[IndentingNewLine]", 
      RowBox[{"FAA", " ", "XAmXAMfemale"}], "+", 
      RowBox[{"FAa", " ", "XAmXaMfemale"}], "+", 
      RowBox[{"FAa", " ", "XAMXamfemale"}], "+", 
      RowBox[{"Faa", " ", "XamXaMfemale"}], "+", "\[IndentingNewLine]", 
      RowBox[{"FAA", " ", "XAmYAMfemale"}], "+", 
      RowBox[{"FAa", " ", "XAmYaMfemale"}], "+", 
      RowBox[{"FAa", " ", "XamYAMfemale"}], "+", 
      RowBox[{"Faa", " ", "XamYaMfemale"}], "+", "\[IndentingNewLine]", 
      RowBox[{"FAA", " ", "XAMYAmfemale"}], "+", 
      RowBox[{"FAa", " ", "XAMYamfemale"}], "+", 
      RowBox[{"FAa", " ", "XaMYAmfemale"}], "+", 
      RowBox[{"Faa", " ", "XaMYamfemale"}], "+", "\[IndentingNewLine]", 
      RowBox[{"FAA", " ", "YAmYAMfemale"}], "+", 
      RowBox[{"FAa", " ", "YAmYaMfemale"}], "+", 
      RowBox[{"FAa", " ", "YamYAMfemale"}], "+", 
      RowBox[{"Faa", " ", "YamYaMfemale"}], "+", "\[IndentingNewLine]", 
      RowBox[{"FAA", " ", "XAmXAmfemale"}], "+", 
      RowBox[{"FAa", " ", "XAmXamfemale"}], "+", 
      RowBox[{"Faa", " ", "XamXamfemale"}], "+", "\[IndentingNewLine]", 
      RowBox[{"FAA", " ", "XAmYAmfemale"}], "+", 
      RowBox[{"FAa", " ", "XAmYamfemale"}], "+", 
      RowBox[{"FAa", " ", "XamYAmfemale"}], "+", 
      RowBox[{"Faa", " ", "XamYamfemale"}], "+", "\[IndentingNewLine]", 
      RowBox[{"FAA", " ", "YAmYAmfemale"}], "+", 
      RowBox[{"FAa", " ", "YAmYamfemale"}], "+", 
      RowBox[{"Faa", " ", "YamYamfemale"}]}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XAMXAMfemales", "=", 
     RowBox[{"FAA", " ", 
      RowBox[{"XAMXAMfemale", "/", "wbarF"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XAMXaMfemales", "=", 
     RowBox[{"FAa", " ", 
      RowBox[{"XAMXaMfemale", "/", "wbarF"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XaMXaMfemales", "=", 
     RowBox[{"Faa", " ", 
      RowBox[{"XaMXaMfemale", "/", "wbarF"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XAMYAMfemales", "=", 
     RowBox[{"FAA", " ", 
      RowBox[{"XAMYAMfemale", "/", "wbarF"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XAMYaMfemales", "=", 
     RowBox[{"FAa", " ", 
      RowBox[{"XAMYaMfemale", "/", "wbarF"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XaMYAMfemales", "=", 
     RowBox[{"FAa", " ", 
      RowBox[{"XaMYAMfemale", "/", "wbarF"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XaMYaMfemales", "=", 
     RowBox[{"Faa", " ", 
      RowBox[{"XaMYaMfemale", "/", "wbarF"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"YAMYAMfemales", "=", 
     RowBox[{"FAA", " ", 
      RowBox[{"YAMYAMfemale", "/", "wbarF"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"YAMYaMfemales", "=", 
     RowBox[{"FAa", " ", 
      RowBox[{"YAMYaMfemale", "/", "wbarF"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"YaMYaMfemales", "=", 
     RowBox[{"Faa", " ", 
      RowBox[{"YaMYaMfemale", "/", "wbarF"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XAmXAMfemales", "=", 
     RowBox[{"FAA", " ", 
      RowBox[{"XAmXAMfemale", "/", "wbarF"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XAmXaMfemales", "=", 
     RowBox[{"FAa", " ", 
      RowBox[{"XAmXaMfemale", "/", "wbarF"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XAMXamfemales", "=", 
     RowBox[{"FAa", " ", 
      RowBox[{"XAMXamfemale", "/", "wbarF"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XamXaMfemales", "=", 
     RowBox[{"Faa", " ", 
      RowBox[{"XamXaMfemale", "/", "wbarF"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XAmYAMfemales", "=", 
     RowBox[{"FAA", " ", 
      RowBox[{"XAmYAMfemale", "/", "wbarF"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XAmYaMfemales", "=", 
     RowBox[{"FAa", " ", 
      RowBox[{"XAmYaMfemale", "/", "wbarF"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XamYAMfemales", "=", 
     RowBox[{"FAa", " ", 
      RowBox[{"XamYAMfemale", "/", "wbarF"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XamYaMfemales", "=", 
     RowBox[{"Faa", " ", 
      RowBox[{"XamYaMfemale", "/", "wbarF"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XAMYAmfemales", "=", 
     RowBox[{"FAA", " ", 
      RowBox[{"XAMYAmfemale", "/", "wbarF"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XAMYamfemales", "=", 
     RowBox[{"FAa", " ", 
      RowBox[{"XAMYamfemale", "/", "wbarF"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XaMYAmfemales", "=", 
     RowBox[{"FAa", " ", 
      RowBox[{"XaMYAmfemale", "/", "wbarF"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XaMYamfemales", "=", 
     RowBox[{"Faa", " ", 
      RowBox[{"XaMYamfemale", "/", "wbarF"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"YAmYAMfemales", "=", 
     RowBox[{"FAA", " ", 
      RowBox[{"YAmYAMfemale", "/", "wbarF"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"YAmYaMfemales", "=", 
     RowBox[{"FAa", " ", 
      RowBox[{"YAmYaMfemale", "/", "wbarF"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"YamYAMfemales", "=", 
     RowBox[{"FAa", " ", 
      RowBox[{"YamYAMfemale", "/", "wbarF"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"YamYaMfemales", "=", 
     RowBox[{"Faa", " ", 
      RowBox[{"YamYaMfemale", "/", "wbarF"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XAmXAmfemales", "=", 
     RowBox[{"FAA", " ", 
      RowBox[{"XAmXAmfemale", "/", "wbarF"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XAmXamfemales", "=", 
     RowBox[{"FAa", " ", 
      RowBox[{"XAmXamfemale", "/", "wbarF"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XamXamfemales", "=", 
     RowBox[{"Faa", " ", 
      RowBox[{"XamXamfemale", "/", "wbarF"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XAmYAmfemales", "=", 
     RowBox[{"FAA", " ", 
      RowBox[{"XAmYAmfemale", "/", "wbarF"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XAmYamfemales", "=", 
     RowBox[{"FAa", " ", 
      RowBox[{"XAmYamfemale", "/", "wbarF"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XamYAmfemales", "=", 
     RowBox[{"FAa", " ", 
      RowBox[{"XamYAmfemale", "/", "wbarF"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"XamYamfemales", "=", 
     RowBox[{"Faa", " ", 
      RowBox[{"XamYamfemale", "/", "wbarF"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"YAmYAmfemales", "=", 
     RowBox[{"FAA", " ", 
      RowBox[{"YAmYAmfemale", "/", "wbarF"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"YAmYamfemales", "=", 
     RowBox[{"FAa", " ", 
      RowBox[{"YAmYamfemale", "/", "wbarF"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"YamYamfemales", "=", 
     RowBox[{"Faa", " ", 
      RowBox[{"YamYamfemale", "/", "wbarF"}]}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{
  3.693233391133959*^9, {3.693233428523902*^9, 3.693233589851301*^9}, {
   3.693233636261447*^9, 3.693233821385127*^9}, {3.693553756323934*^9, 
   3.693553773765794*^9}, {3.693553816885316*^9, 3.693553837589363*^9}, {
   3.693553960587409*^9, 
   3.693553993653867*^9}},ExpressionUUID->"14cf0cf7-e860-4dc4-abf3-\
059db2a9b01e"],

Cell["Frequency of females after diplod selection should sum to 1", "Text",
 CellChangeTimes->{{3.693233875038472*^9, 3.693233877381901*^9}, {
  3.6935539666618547`*^9, 
  3.693553995291113*^9}},ExpressionUUID->"b2e8c352-492c-4319-863d-\
248870a4ead6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"1", "==", 
   RowBox[{
   "XAMXAMfemales", "+", "XAMXaMfemales", "+", "XaMXaMfemales", "+", 
    "\[IndentingNewLine]", "XAMYAMfemales", "+", "XAMYaMfemales", "+", 
    "XaMYAMfemales", "+", "XaMYaMfemales", "+", "\[IndentingNewLine]", 
    "YAMYAMfemales", "+", "YAMYaMfemales", "+", "YaMYaMfemales", "+", 
    "\[IndentingNewLine]", "XAmXAMfemales", "+", "XAmXaMfemales", "+", 
    "XAMXamfemales", "+", "XamXaMfemales", "+", "\[IndentingNewLine]", 
    "XAmYAMfemales", "+", "XAmYaMfemales", "+", "XamYAMfemales", "+", 
    "XamYaMfemales", "+", "\[IndentingNewLine]", "XAMYAmfemales", "+", 
    "XAMYamfemales", "+", "XaMYAmfemales", "+", "XaMYamfemales", "+", 
    "\[IndentingNewLine]", "YAmYAMfemales", "+", "YAmYaMfemales", "+", 
    "YamYAMfemales", "+", "YamYaMfemales", "+", "\[IndentingNewLine]", 
    "XAmXAmfemales", "+", "XAmXamfemales", "+", "XamXamfemales", "+", 
    "\[IndentingNewLine]", "XAmYAmfemales", "+", "XAmYamfemales", "+", 
    "XamYAmfemales", "+", "XamYamfemales", "+", "\[IndentingNewLine]", 
    "YAmYAmfemales", "+", "YAmYamfemales", "+", "YamYamfemales"}]}], "//", 
  "Factor"}]], "Input",
 CellChangeTimes->{{3.693233406577669*^9, 3.693233420737273*^9}, {
  3.6932338328646803`*^9, 3.693233858880991*^9}, {3.693553852442827*^9, 
  3.693553864056563*^9}},ExpressionUUID->"0a6846d4-e9c0-42d0-8286-\
9b1d9e67da5e"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.693233856866249*^9, 3.693233859452322*^9}, 
   3.6935504995861073`*^9, 3.693553871471888*^9, {3.693553973477713*^9, 
   3.693553996369739*^9}, 3.693555026822012*^9, 3.693565829857457*^9, 
   3.693574262281351*^9, 3.693574963859747*^9, 3.693575036753759*^9, 
   3.693633043911112*^9, 3.694892192307988*^9, 3.6949536947876863`*^9, 
   3.6949760241303997`*^9, 3.696709775804234*^9, 3.696715491424563*^9, 
   3.6967266941970873`*^9, 3.696726807969823*^9, 3.697046043460791*^9, 
   3.697207860252676*^9, 3.697284195131999*^9, 3.697284883676127*^9, 
   3.697302650878549*^9, 3.69730273015222*^9, 3.6974061966607533`*^9, 
   3.698609690453594*^9, 3.699817963977366*^9, 3.7101782374956627`*^9, 
   3.7101868823394423`*^9, 3.710437925332673*^9, 3.711528087544777*^9, 
   3.711691676186451*^9, 3.711704429438054*^9, 3.7117045291387157`*^9, 
   3.711778386706338*^9, 3.711788015188785*^9, 3.711788654607477*^9, 
   3.712582196439571*^9, 
   3.7130754485338287`*^9},ExpressionUUID->"9b2b8c5a-5eb5-4bcc-a599-\
63c527143049"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Meiosis", "Subsection",
 CellChangeTimes->{{3.6932340315333157`*^9, 3.693234039130885*^9}, {
  3.693549911189954*^9, 
  3.693549911590152*^9}},ExpressionUUID->"b9deed6b-0180-4943-8b24-\
4673c7096dfc"],

Cell["\<\
Translate into new notation:

first two letters refer to SDR locus genotype, then numbers ij giving A and M \
locus genotype where 
1-AM
2-aM
3-Am
4-am
then m or f indicating male or female
then s to indicate that these are frequencies after selection
e.g., xy41ms is a male with genotype X-a-m Y-A-M. 
Where i and j are interchangable (in YY and XX individuals) the lowest number \
is given first. \
\>", "Text",
 CellChangeTimes->{{3.693549676252092*^9, 
  3.6935498426544437`*^9}},ExpressionUUID->"8db2203f-d0a9-463c-8b8a-\
5b3858c4f09c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"xx11ms", "=", "XAMXAMmales"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xx12ms", "=", "XAMXaMmales"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"xx22ms", "=", "XaMXaMmales"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xx13ms", "=", "XAmXAMmales"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xx23ms", "=", "XAmXaMmales"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xx14ms", "=", "XAMXammales"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"xx24ms", "=", "XamXaMmales"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xx33ms", "=", "XAmXAmmales"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xx34ms", "=", "XAmXammales"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"xx44ms", "=", "XamXammales"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xy11ms", "=", "XAMYAMmales"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xy12ms", "=", "XAMYaMmales"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xy21ms", "=", "XaMYAMmales"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"xy22ms", "=", "XaMYaMmales"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xy31ms", "=", "XAmYAMmales"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xy32ms", "=", "XAmYaMmales"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xy41ms", "=", "XamYAMmales"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"xy42ms", "=", "XamYaMmales"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xy13ms", "=", "XAMYAmmales"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xy14ms", "=", "XAMYammales"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xy23ms", "=", "XaMYAmmales"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"xy24ms", "=", "XaMYammales"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xy33ms", "=", "XAmYAmmales"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xy34ms", "=", "XAmYammales"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xy43ms", "=", "XamYAmmales"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"xy44ms", "=", "XamYammales"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"yy11ms", "=", "YAMYAMmales"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"yy12ms", "=", "YAMYaMmales"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"yy22ms", "=", "YaMYaMmales"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"yy13ms", "=", "YAmYAMmales"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"yy23ms", "=", "YAmYaMmales"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"yy14ms", "=", "YamYAMmales"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"yy24ms", "=", "YamYaMmales"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"yy33ms", "=", "YAmYAmmales"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"yy34ms", "=", "YAmYammales"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"yy44ms", "=", "YamYammales"}], ";"}]}], "Input",
 CellChangeTimes->{{3.6935462665151367`*^9, 3.693546527048169*^9}, {
  3.693546578207542*^9, 3.6935465965268087`*^9}, {3.693554030057485*^9, 
  3.6935540909999533`*^9}},ExpressionUUID->"33fd5b9c-8af5-4923-8f01-\
d14bbc2c960f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"xx11fs", "=", "XAMXAMfemales"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xx12fs", "=", "XAMXaMfemales"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"xx22fs", "=", "XaMXaMfemales"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xx13fs", "=", "XAmXAMfemales"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xx23fs", "=", "XAmXaMfemales"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xx14fs", "=", "XAMXamfemales"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"xx24fs", "=", "XamXaMfemales"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xx33fs", "=", "XAmXAmfemales"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xx34fs", "=", "XAmXamfemales"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"xx44fs", "=", "XamXamfemales"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xy11fs", "=", "XAMYAMfemales"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xy12fs", "=", "XAMYaMfemales"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xy21fs", "=", "XaMYAMfemales"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"xy22fs", "=", "XaMYaMfemales"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xy31fs", "=", "XAmYAMfemales"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xy32fs", "=", "XAmYaMfemales"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xy41fs", "=", "XamYAMfemales"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"xy42fs", "=", "XamYaMfemales"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xy13fs", "=", "XAMYAmfemales"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xy14fs", "=", "XAMYamfemales"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xy23fs", "=", "XaMYAmfemales"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"xy24fs", "=", "XaMYamfemales"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xy33fs", "=", "XAmYAmfemales"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xy34fs", "=", "XAmYamfemales"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xy43fs", "=", "XamYAmfemales"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"xy44fs", "=", "XamYamfemales"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"yy11fs", "=", "YAMYAMfemales"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"yy12fs", "=", "YAMYaMfemales"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"yy22fs", "=", "YaMYaMfemales"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"yy13fs", "=", "YAmYAMfemales"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"yy23fs", "=", "YAmYaMfemales"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"yy14fs", "=", "YamYAMfemales"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"yy24fs", "=", "YamYaMfemales"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"yy33fs", "=", "YAmYAmfemales"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"yy34fs", "=", "YAmYamfemales"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"yy44fs", "=", "YamYamfemales"}], ";"}]}], "Input",
 CellChangeTimes->{{3.69354708715689*^9, 3.693547177019068*^9}, {
   3.6935477065760717`*^9, 3.693547711735938*^9}, {3.69354888761584*^9, 
   3.6935489716086903`*^9}, {3.6935490095348988`*^9, 3.693549010116597*^9}, {
   3.6935491509681473`*^9, 3.6935491931821547`*^9}, {3.6935492516091423`*^9, 
   3.693549251729101*^9}, {3.693549302725135*^9, 3.693549352349843*^9}, 
   3.6935496525570507`*^9, {3.693554105576215*^9, 
   3.693554139483643*^9}},ExpressionUUID->"a2f87565-7f94-4e8e-811e-\
9f98df44f496"],

Cell["First, we consider female gametes ", "Text",
 CellChangeTimes->{{3.693549918982011*^9, 
  3.693549935045683*^9}},ExpressionUUID->"3440a960-a74b-4b3b-a8ed-\
aa05ec1b106f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"X", " ", "bearing", " ", "ovules"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"nextXAMf", "=", 
     RowBox[{"xx11fs", "+", 
      RowBox[{"xx13fs", "/", "2"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"xx12fs", "+", 
         RowBox[{"xx14fs", "*", 
          RowBox[{"(", 
           RowBox[{"1", "-", "Rf"}], ")"}]}], "+", 
         RowBox[{"xx23fs", "*", "Rf"}]}], ")"}], "\[Alpha]f"}], "+", 
      "\[IndentingNewLine]", 
      RowBox[{"xy11fs", "/", "2"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"xy12fs", 
          RowBox[{"(", 
           RowBox[{"1", "-", "rMMf"}], ")"}]}], "+", 
         RowBox[{"xy21fs", " ", 
          RowBox[{"(", "rMMf", ")"}]}]}], ")"}], "\[Alpha]f"}], "+", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"xy13fs", 
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Chi]f"}], ")"}]}], "+", 
         RowBox[{"xy31fs", " ", 
          RowBox[{"(", "\[Chi]f", ")"}]}]}], ")"}], "/", "2"}], "+", 
      "\[IndentingNewLine]", 
      RowBox[{"xy14fs", " ", "*", "\[Alpha]f"}], "+", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"xy14fs", " ", 
          RowBox[{"(", 
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{"Rf", "+", "rMmf", "+", "\[Chi]f"}], ")"}]}], ")"}]}], 
         "+", " ", "\[IndentingNewLine]", 
         RowBox[{"xy41fs", 
          RowBox[{"(", 
           RowBox[{"rMmf", "+", "\[Chi]f", "-", "Rf"}], ")"}]}], "+", 
         "\[IndentingNewLine]", 
         RowBox[{"xy23fs", 
          RowBox[{"(", 
           RowBox[{"Rf", "+", "rMmf", "-", "\[Chi]f"}], ")"}]}], "+", 
         "\[IndentingNewLine]", 
         RowBox[{"xy32fs", 
          RowBox[{"(", 
           RowBox[{"Rf", "+", "\[Chi]f", "-", "rMmf"}], ")"}]}]}], ")"}], 
       RowBox[{"\[Alpha]f", "/", "2"}]}]}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nextXaMf", "=", 
     RowBox[{"xx22fs", "+", 
      RowBox[{"xx24fs", "/", "2"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"xx12fs", "+", 
         RowBox[{"xx23fs", "*", 
          RowBox[{"(", 
           RowBox[{"1", "-", "Rf"}], ")"}]}], "+", 
         RowBox[{"xx14fs", "*", "Rf"}]}], ")"}], 
       RowBox[{"(", 
        RowBox[{"1", "-", "\[Alpha]f"}], ")"}]}], "+", "\[IndentingNewLine]", 
      
      RowBox[{"xy22fs", "/", "2"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"xy12fs", 
          RowBox[{"(", "rMMf", ")"}]}], "+", 
         RowBox[{"xy21fs", 
          RowBox[{"(", 
           RowBox[{"1", "-", "rMMf"}], ")"}]}]}], ")"}], 
       RowBox[{"(", 
        RowBox[{"1", "-", "\[Alpha]f"}], ")"}]}], "+", "\[IndentingNewLine]", 
      
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"xy24fs", " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Chi]f"}], ")"}]}], "+", 
         RowBox[{"xy42fs", " ", 
          RowBox[{"(", "\[Chi]f", ")"}]}]}], ")"}], "/", "2"}], "+", 
      "\[IndentingNewLine]", 
      RowBox[{"xy23fs", "*", 
       RowBox[{"(", 
        RowBox[{"1", "-", "\[Alpha]f"}], ")"}]}], "+", "\[IndentingNewLine]", 
      
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"xy14fs", 
          RowBox[{"(", 
           RowBox[{"Rf", "+", "rMmf", "-", "\[Chi]f"}], ")"}]}], "+", 
         "\[IndentingNewLine]", 
         RowBox[{"xy41fs", 
          RowBox[{"(", 
           RowBox[{"Rf", "+", "\[Chi]f", "-", "rMmf"}], ")"}]}], "+", 
         "\[IndentingNewLine]", 
         RowBox[{"xy23fs", 
          RowBox[{"(", 
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{"Rf", "+", "rMmf", "+", "\[Chi]f"}], ")"}]}], ")"}]}], 
         "+", "\[IndentingNewLine]", 
         RowBox[{"xy32fs", " ", 
          RowBox[{"(", 
           RowBox[{"rMmf", "+", "\[Chi]f", "-", "Rf"}], ")"}]}]}], ")"}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "\[Alpha]f"}], ")"}], "/", "2"}]}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nextXAmf", "=", 
     RowBox[{"xx33fs", "+", 
      RowBox[{"xx13fs", "/", "2"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"xx23fs", "*", 
          RowBox[{"(", 
           RowBox[{"1", "-", "Rf"}], ")"}]}], "+", 
         RowBox[{"Rf", "*", "xx14fs"}], "+", "xx34fs"}], ")"}], "\[Alpha]f"}],
       "+", "\[IndentingNewLine]", 
      RowBox[{"xy33fs", "/", "2"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"xy34fs", 
          RowBox[{"(", 
           RowBox[{"1", "-", "rmmf"}], ")"}]}], "+", 
         RowBox[{"xy43fs", 
          RowBox[{"(", "rmmf", ")"}]}]}], ")"}], "\[Alpha]f"}], "+", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"xy13fs", 
          RowBox[{"(", "\[Chi]f", ")"}]}], "+", 
         RowBox[{"xy31fs", 
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Chi]f"}], ")"}]}]}], ")"}], "/", "2"}], "+", 
      "\[IndentingNewLine]", 
      RowBox[{"xy32fs", " ", "*", "\[Alpha]f"}], "+", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"xy14fs", 
          RowBox[{"(", 
           RowBox[{"Rf", "+", "\[Chi]f", "-", "rMmf"}], ")"}]}], "+", 
         "\[IndentingNewLine]", 
         RowBox[{"xy41fs", 
          RowBox[{"(", 
           RowBox[{"Rf", "+", "rMmf", "-", "\[Chi]f"}], ")"}]}], "+", 
         "\[IndentingNewLine]", 
         RowBox[{"xy23fs", 
          RowBox[{"(", 
           RowBox[{"rMmf", "+", "\[Chi]f", "-", "Rf"}], ")"}]}], "+", 
         "\[IndentingNewLine]", 
         RowBox[{"xy32fs", " ", 
          RowBox[{"(", 
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{"Rf", "+", "rMmf", "+", "\[Chi]f"}], ")"}]}], ")"}]}]}], 
        ")"}], 
       RowBox[{"\[Alpha]f", "/", "2"}]}]}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nextXamf", "=", 
     RowBox[{"xx44fs", "+", 
      RowBox[{"xx24fs", "/", "2"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"xx14fs", "*", 
          RowBox[{"(", 
           RowBox[{"1", "-", "Rf"}], ")"}]}], "+", 
         RowBox[{"xx23fs", "*", "Rf"}], "+", "xx34fs"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"1", "-", "\[Alpha]f"}], ")"}]}], "+", "\[IndentingNewLine]", 
      
      RowBox[{"xy44fs", "/", "2"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"xy34fs", 
          RowBox[{"(", "rmmf", ")"}]}], "+", 
         RowBox[{"xy43fs", 
          RowBox[{"(", 
           RowBox[{"1", "-", "rmmf"}], ")"}]}]}], ")"}], 
       RowBox[{"(", 
        RowBox[{"1", "-", "\[Alpha]f"}], ")"}]}], "+", "\[IndentingNewLine]", 
      
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"xy24fs", 
          RowBox[{"(", "\[Chi]f", ")"}]}], "+", 
         RowBox[{"xy42fs", 
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Chi]f"}], ")"}]}]}], ")"}], "/", "2"}], "+", 
      "\[IndentingNewLine]", 
      RowBox[{"xy41fs", "*", 
       RowBox[{"(", 
        RowBox[{"1", "-", "\[Alpha]f"}], ")"}]}], "+", "\[IndentingNewLine]", 
      
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"xy14fs", 
          RowBox[{"(", 
           RowBox[{"rMmf", "+", "\[Chi]f", "-", "Rf"}], ")"}]}], "+", 
         "\[IndentingNewLine]", 
         RowBox[{"xy41fs", 
          RowBox[{"(", 
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{"Rf", "+", "rMmf", "+", "\[Chi]f"}], ")"}]}], ")"}]}], 
         "+", "\[IndentingNewLine]", 
         RowBox[{"xy23fs", 
          RowBox[{"(", 
           RowBox[{"Rf", "+", "\[Chi]f", "-", "rMmf"}], ")"}]}], "+", 
         "\[IndentingNewLine]", 
         RowBox[{"xy32fs", 
          RowBox[{"(", 
           RowBox[{"Rf", "+", "rMmf", "-", "\[Chi]f"}], ")"}]}]}], ")"}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "\[Alpha]f"}], ")"}], "/", "2"}]}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Y", " ", "bearing", " ", "ovules"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nextYAMf", "=", 
     RowBox[{"yy11fs", "+", 
      RowBox[{"yy13fs", "/", "2"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"yy12fs", "+", 
         RowBox[{"yy14fs", "*", 
          RowBox[{"(", 
           RowBox[{"1", "-", "Rf"}], ")"}]}], "+", 
         RowBox[{"yy23fs", "*", "Rf"}]}], ")"}], "\[Alpha]f"}], "+", 
      "\[IndentingNewLine]", 
      RowBox[{"xy11fs", "/", "2"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"xy12fs", 
          RowBox[{"(", "rMMf", ")"}]}], "+", 
         RowBox[{"xy21fs", " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", "rMMf"}], ")"}]}]}], ")"}], 
       RowBox[{"(", "\[Alpha]f", ")"}]}], "+", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"xy13fs", 
          RowBox[{"(", "\[Chi]f", ")"}]}], "+", 
         RowBox[{"xy31fs", " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Chi]f"}], ")"}]}]}], ")"}], "/", "2"}], "+", 
      "\[IndentingNewLine]", 
      RowBox[{"xy41fs", "*", "\[Alpha]f"}], "+", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"xy14fs", " ", 
          RowBox[{"(", 
           RowBox[{"rMmf", "+", "\[Chi]f", "-", "Rf"}], ")"}]}], "+", 
         "\[IndentingNewLine]", " ", 
         RowBox[{"xy41fs", 
          RowBox[{"(", 
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{"Rf", "+", "rMmf", "+", "\[Chi]f"}], ")"}]}], ")"}]}], 
         "+", "\[IndentingNewLine]", 
         RowBox[{"xy23fs", 
          RowBox[{"(", 
           RowBox[{"Rf", "+", "\[Chi]f", "-", "rMmf"}], ")"}]}], "+", 
         "\[IndentingNewLine]", 
         RowBox[{"xy32fs", 
          RowBox[{"(", 
           RowBox[{"Rf", "+", "rMmf", "-", "\[Chi]f"}], ")"}]}]}], ")"}], 
       RowBox[{"\[Alpha]f", "/", "2"}]}]}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nextYaMf", " ", "=", 
     RowBox[{"yy22fs", "+", 
      RowBox[{"yy24fs", "/", "2"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"yy12fs", "+", 
         RowBox[{"yy23fs", "*", 
          RowBox[{"(", 
           RowBox[{"1", "-", "Rf"}], ")"}]}], "+", 
         RowBox[{"yy14fs", "*", "Rf"}]}], ")"}], 
       RowBox[{"(", 
        RowBox[{"1", "-", "\[Alpha]f"}], ")"}]}], "+", "\[IndentingNewLine]", 
      
      RowBox[{"xy22fs", "/", "2"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"xy12fs", 
          RowBox[{"(", 
           RowBox[{"1", "-", "rMMf"}], ")"}]}], "+", 
         RowBox[{"xy21fs", 
          RowBox[{"(", "rMMf", ")"}]}]}], ")"}], 
       RowBox[{"(", 
        RowBox[{"1", "-", "\[Alpha]f"}], ")"}]}], "+", "\[IndentingNewLine]", 
      
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"xy24fs", " ", 
          RowBox[{"(", "\[Chi]f", ")"}]}], "+", 
         RowBox[{"xy42fs", " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Chi]f"}], ")"}]}]}], ")"}], "/", "2"}], "+", 
      "\[IndentingNewLine]", 
      RowBox[{"xy32fs", "*", 
       RowBox[{"(", 
        RowBox[{"1", "-", "\[Alpha]f"}], ")"}]}], "+", "\[IndentingNewLine]", 
      
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"xy14fs", 
          RowBox[{"(", 
           RowBox[{"Rf", "+", "\[Chi]f", "-", "rMmf"}], ")"}]}], "+", 
         "\[IndentingNewLine]", 
         RowBox[{"xy41fs", 
          RowBox[{"(", 
           RowBox[{"Rf", "+", "rMmf", "-", "\[Chi]f"}], ")"}]}], "+", 
         "\[IndentingNewLine]", 
         RowBox[{"xy23fs", 
          RowBox[{"(", 
           RowBox[{"rMmf", "+", "\[Chi]f", "-", "Rf"}], ")"}]}], "+", 
         "\[IndentingNewLine]", 
         RowBox[{"xy32fs", " ", 
          RowBox[{"(", 
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{"Rf", "+", "rMmf", "+", "\[Chi]f"}], ")"}]}], ")"}]}]}], 
        ")"}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "\[Alpha]f"}], ")"}], "/", "2"}]}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nextYAmf", " ", "=", 
     RowBox[{"yy33fs", "+", 
      RowBox[{"yy13fs", "/", "2"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"yy23fs", "*", 
          RowBox[{"(", 
           RowBox[{"1", "-", "Rf"}], ")"}]}], "+", 
         RowBox[{"Rf", "*", "yy14fs"}], "+", "yy34fs"}], ")"}], "\[Alpha]f"}],
       "+", "\[IndentingNewLine]", 
      RowBox[{"xy33fs", "/", "2"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"xy34fs", 
          RowBox[{"(", "rmmf", ")"}]}], "+", 
         RowBox[{"xy43fs", 
          RowBox[{"(", 
           RowBox[{"1", "-", "rmmf"}], ")"}]}]}], ")"}], 
       RowBox[{"(", "\[Alpha]f", ")"}]}], "+", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"xy13fs", 
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Chi]f"}], ")"}]}], "+", 
         RowBox[{"xy31fs", 
          RowBox[{"(", "\[Chi]f", ")"}]}]}], ")"}], "/", "2"}], "+", 
      "\[IndentingNewLine]", 
      RowBox[{"xy23fs", "*", "\[Alpha]f"}], "+", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"xy14fs", 
          RowBox[{"(", 
           RowBox[{"Rf", "+", "rMmf", "-", "\[Chi]f"}], ")"}]}], "+", 
         "\[IndentingNewLine]", 
         RowBox[{"xy41fs", 
          RowBox[{"(", 
           RowBox[{"Rf", "+", "\[Chi]f", "-", "rMmf"}], ")"}]}], "+", 
         "\[IndentingNewLine]", 
         RowBox[{"xy23fs", 
          RowBox[{"(", 
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{"Rf", "+", "rMmf", "+", "\[Chi]f"}], ")"}]}], ")"}]}], 
         "+", "\[IndentingNewLine]", 
         RowBox[{"xy32fs", " ", 
          RowBox[{"(", 
           RowBox[{"rMmf", "+", "\[Chi]f", "-", "Rf"}], ")"}]}]}], ")"}], 
       RowBox[{"\[Alpha]f", "/", "2"}]}]}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nextYamf", "=", 
     RowBox[{"yy44fs", "+", 
      RowBox[{"yy24fs", "/", "2"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"yy14fs", "*", 
          RowBox[{"(", 
           RowBox[{"1", "-", "Rf"}], ")"}]}], "+", 
         RowBox[{"yy23fs", "*", "Rf"}], "+", "yy34fs"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"1", "-", "\[Alpha]f"}], ")"}]}], "+", "\[IndentingNewLine]", 
      
      RowBox[{"xy44fs", "/", "2"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"xy34fs", 
          RowBox[{"(", 
           RowBox[{"1", "-", "rmmf"}], ")"}]}], "+", 
         RowBox[{"xy43fs", 
          RowBox[{"(", "rmmf", ")"}]}]}], ")"}], 
       RowBox[{"(", 
        RowBox[{"1", "-", "\[Alpha]f"}], ")"}]}], "+", "\[IndentingNewLine]", 
      
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"xy24fs", 
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Chi]f"}], ")"}]}], "+", 
         RowBox[{"xy42fs", 
          RowBox[{"(", "\[Chi]f", ")"}]}]}], ")"}], "/", "2"}], "+", 
      "\[IndentingNewLine]", 
      RowBox[{"xy14fs", "*", 
       RowBox[{"(", 
        RowBox[{"1", "-", "\[Alpha]f"}], ")"}]}], "+", "\[IndentingNewLine]", 
      
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"xy14fs", 
          RowBox[{"(", 
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{"Rf", "+", "rMmf", "+", "\[Chi]f"}], ")"}]}], ")"}]}], 
         "+", "\[IndentingNewLine]", 
         RowBox[{"xy41fs", 
          RowBox[{"(", 
           RowBox[{"rMmf", "+", "\[Chi]f", "-", "Rf"}], ")"}]}], "+", 
         "\[IndentingNewLine]", 
         RowBox[{"xy23fs", 
          RowBox[{"(", 
           RowBox[{"Rf", "+", "rMmf", "-", "\[Chi]f"}], ")"}]}], "+", 
         "\[IndentingNewLine]", 
         RowBox[{"xy32fs", 
          RowBox[{"(", 
           RowBox[{"Rf", "+", "\[Chi]f", "-", "rMmf"}], ")"}]}]}], ")"}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "\[Alpha]f"}], ")"}], "/", "2"}]}]}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.693309915501526*^9, 3.6933099325077677`*^9}, {
   3.693309994483501*^9, 3.693310111226685*^9}, 3.693310458051482*^9, {
   3.693310504984441*^9, 3.693310571845592*^9}, {3.693310708322699*^9, 
   3.693310965833001*^9}, {3.693311068691226*^9, 3.693311076707844*^9}, {
   3.693311116392437*^9, 3.693311174992943*^9}, {3.693311224910478*^9, 
   3.693311386325416*^9}, {3.693311492371409*^9, 3.693311517729001*^9}, 
   3.693311563059478*^9, {3.693311747119026*^9, 3.6933120753696938`*^9}, {
   3.693312142532003*^9, 3.693312148484177*^9}, {3.693312186677787*^9, 
   3.69331257884744*^9}, {3.693312610467888*^9, 3.693312654396325*^9}, {
   3.693312761967066*^9, 3.6933128469525948`*^9}, {3.693312884107136*^9, 
   3.693312884458653*^9}, {3.693312918963231*^9, 3.693312925162354*^9}, 
   3.693313010915413*^9, {3.6935503161706543`*^9, 3.693550364876738*^9}, {
   3.693550516443318*^9, 3.693550523953898*^9}, {3.693554135658864*^9, 
   3.693554167167574*^9}, 3.69355421954396*^9, {3.693560016281282*^9, 
   3.693560026912613*^9}, {3.6935600600585003`*^9, 3.693560082508367*^9}, {
   3.693560114198065*^9, 3.693560230607451*^9}, {3.69356030620798*^9, 
   3.693560306295227*^9}},ExpressionUUID->"624c8f63-27c3-40d9-ae31-\
2f88ab548db1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Factor", "[", 
  RowBox[{
  "nextXAMf", "+", "nextXaMf", "+", "nextXAmf", "+", "nextXamf", "+", 
   "nextYAMf", "+", "nextYaMf", "+", "nextYAmf", "+", "nextYamf"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.693549017206688*^9, 3.693549019137959*^9}, {
  3.693549104241928*^9, 3.693549105081459*^9}, {3.693549660654559*^9, 
  3.6935496613339853`*^9}, {3.693550370497325*^9, 
  3.6935503967347603`*^9}},ExpressionUUID->"ff380668-f09d-4599-8b32-\
a63ab422a115"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{
  3.693549023915489*^9, 3.69354906973875*^9, 3.693549115183797*^9, 
   3.693549374432523*^9, 3.693549470639276*^9, {3.693549659022702*^9, 
   3.6935496627192717`*^9}, 3.693549953545395*^9, {3.693550506410406*^9, 
   3.693550527360511*^9}, 3.693554175697732*^9, 3.6935542255456247`*^9, 
   3.693554280797245*^9, 3.693555035967455*^9, 3.693560087472206*^9, 
   3.6935602409764442`*^9, 3.69356031629776*^9, 3.693565833215888*^9, 
   3.6935742726174183`*^9, 3.693574976024*^9, 3.693575043180599*^9, 
   3.693633056298645*^9, 3.694892199745048*^9, 3.6949537043199577`*^9, 
   3.694976031748374*^9, 3.696709785904736*^9, 3.696715501284738*^9, 
   3.69672670406532*^9, 3.69672681867863*^9, 3.697046053984345*^9, 
   3.697207870491394*^9, 3.697284205140687*^9, 3.697284893765872*^9, 
   3.697302660994669*^9, 3.697302740520852*^9, 3.69740620188843*^9, 
   3.698609700483387*^9, 3.699817974202713*^9, 3.710178247222172*^9, 
   3.71018689202796*^9, 3.710437935445139*^9, 3.711528096279867*^9, 
   3.711691685257732*^9, 3.71170443800487*^9, 3.711704537513917*^9, 
   3.711778395429556*^9, 3.711788018603689*^9, 3.711788662769384*^9, 
   3.712582205322835*^9, 
   3.713075457470449*^9},ExpressionUUID->"5f04ed41-c720-47da-a1f6-\
e2207a942110"]
}, Open  ]],

Cell["We can consider male gametes similarly", "Text",
 CellChangeTimes->{{3.693544220315609*^9, 
  3.693544232641922*^9}},ExpressionUUID->"e83a19f9-51f1-4c4c-91db-\
d86b18e42c29"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"X", " ", "bearing", " ", "pollen"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"nextXAMm", "=", 
     RowBox[{"xx11ms", "+", 
      RowBox[{"xx13ms", "/", "2"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"xx12ms", "+", 
         RowBox[{"xx14ms", "*", 
          RowBox[{"(", 
           RowBox[{"1", "-", "Rm"}], ")"}]}], "+", 
         RowBox[{"xx23ms", "*", "Rm"}]}], ")"}], "\[Alpha]m"}], "+", 
      "\[IndentingNewLine]", 
      RowBox[{"xy11ms", "/", "2"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"xy12ms", 
          RowBox[{"(", 
           RowBox[{"1", "-", "rMMm"}], ")"}]}], "+", 
         RowBox[{"xy21ms", " ", 
          RowBox[{"(", "rMMm", ")"}]}]}], ")"}], "\[Alpha]m"}], "+", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"xy13ms", 
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Chi]m"}], ")"}]}], "+", 
         RowBox[{"xy31ms", " ", 
          RowBox[{"(", "\[Chi]m", ")"}]}]}], ")"}], "/", "2"}], "+", 
      "\[IndentingNewLine]", 
      RowBox[{"xy14ms", " ", "*", "\[Alpha]m"}], "+", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"xy14ms", " ", 
          RowBox[{"(", 
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{"Rm", "+", "rMmm", "+", "\[Chi]m"}], ")"}]}], ")"}]}], 
         "+", " ", "\[IndentingNewLine]", 
         RowBox[{"xy41ms", 
          RowBox[{"(", 
           RowBox[{"rMmm", "+", "\[Chi]m", "-", "Rm"}], ")"}]}], "+", 
         "\[IndentingNewLine]", 
         RowBox[{"xy23ms", 
          RowBox[{"(", 
           RowBox[{"Rm", "+", "rMmm", "-", "\[Chi]m"}], ")"}]}], "+", 
         "\[IndentingNewLine]", 
         RowBox[{"xy32ms", 
          RowBox[{"(", 
           RowBox[{"Rm", "+", "\[Chi]m", "-", "rMmm"}], ")"}]}]}], ")"}], 
       RowBox[{"\[Alpha]m", "/", "2"}]}]}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nextXaMm", " ", "=", 
     RowBox[{"xx22ms", "+", 
      RowBox[{"xx24ms", "/", "2"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"xx12ms", "+", 
         RowBox[{"xx23ms", "*", 
          RowBox[{"(", 
           RowBox[{"1", "-", "Rm"}], ")"}]}], "+", 
         RowBox[{"xx14ms", "*", "Rm"}]}], ")"}], 
       RowBox[{"(", 
        RowBox[{"1", "-", "\[Alpha]m"}], ")"}]}], "+", "\[IndentingNewLine]", 
      
      RowBox[{"xy22ms", "/", "2"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"xy12ms", 
          RowBox[{"(", "rMMm", ")"}]}], "+", 
         RowBox[{"xy21ms", 
          RowBox[{"(", 
           RowBox[{"1", "-", "rMMm"}], ")"}]}]}], ")"}], 
       RowBox[{"(", 
        RowBox[{"1", "-", "\[Alpha]m"}], ")"}]}], "+", "\[IndentingNewLine]", 
      
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"xy24ms", " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Chi]m"}], ")"}]}], "+", 
         RowBox[{"xy42ms", " ", 
          RowBox[{"(", "\[Chi]m", ")"}]}]}], ")"}], "/", "2"}], "+", 
      "\[IndentingNewLine]", 
      RowBox[{"xy23ms", "*", 
       RowBox[{"(", 
        RowBox[{"1", "-", "\[Alpha]m"}], ")"}]}], "+", "\[IndentingNewLine]", 
      
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"xy14ms", 
          RowBox[{"(", 
           RowBox[{"Rm", "+", "rMmm", "-", "\[Chi]m"}], ")"}]}], "+", 
         "\[IndentingNewLine]", 
         RowBox[{"xy41ms", 
          RowBox[{"(", 
           RowBox[{"Rm", "+", "\[Chi]m", "-", "rMmm"}], ")"}]}], "+", 
         "\[IndentingNewLine]", 
         RowBox[{"xy23ms", 
          RowBox[{"(", 
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{"Rm", "+", "rMmm", "+", "\[Chi]m"}], ")"}]}], ")"}]}], 
         "+", "\[IndentingNewLine]", 
         RowBox[{"xy32ms", " ", 
          RowBox[{"(", 
           RowBox[{"rMmm", "+", "\[Chi]m", "-", "Rm"}], ")"}]}]}], ")"}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "\[Alpha]m"}], ")"}], "/", "2"}]}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nextXAmm", " ", "=", 
     RowBox[{"xx33ms", "+", 
      RowBox[{"xx13ms", "/", "2"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"xx23ms", "*", 
          RowBox[{"(", 
           RowBox[{"1", "-", "Rm"}], ")"}]}], "+", 
         RowBox[{"Rm", "*", "xx14ms"}], "+", "xx34ms"}], ")"}], "\[Alpha]m"}],
       "+", "\[IndentingNewLine]", 
      RowBox[{"xy33ms", "/", "2"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"xy34ms", 
          RowBox[{"(", 
           RowBox[{"1", "-", "rmmm"}], ")"}]}], "+", 
         RowBox[{"xy43ms", 
          RowBox[{"(", "rmmm", ")"}]}]}], ")"}], "\[Alpha]m"}], "+", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"xy13ms", 
          RowBox[{"(", "\[Chi]m", ")"}]}], "+", 
         RowBox[{"xy31ms", 
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Chi]m"}], ")"}]}]}], ")"}], "/", "2"}], "+", 
      "\[IndentingNewLine]", 
      RowBox[{"xy32ms", " ", "*", "\[Alpha]m"}], "+", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"xy14ms", 
          RowBox[{"(", 
           RowBox[{"Rm", "+", "\[Chi]m", "-", "rMmm"}], ")"}]}], "+", 
         "\[IndentingNewLine]", 
         RowBox[{"xy41ms", 
          RowBox[{"(", 
           RowBox[{"Rm", "+", "rMmm", "-", "\[Chi]m"}], ")"}]}], "+", 
         "\[IndentingNewLine]", 
         RowBox[{"xy23ms", 
          RowBox[{"(", 
           RowBox[{"rMmm", "+", "\[Chi]m", "-", "Rm"}], ")"}]}], "+", 
         "\[IndentingNewLine]", 
         RowBox[{"xy32ms", " ", 
          RowBox[{"(", 
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{"Rm", "+", "rMmm", "+", "\[Chi]m"}], ")"}]}], ")"}]}]}], 
        ")"}], 
       RowBox[{"\[Alpha]m", "/", "2"}]}]}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nextXamm", "=", 
     RowBox[{"xx44ms", "+", 
      RowBox[{"xx24ms", "/", "2"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"xx14ms", "*", 
          RowBox[{"(", 
           RowBox[{"1", "-", "Rm"}], ")"}]}], "+", 
         RowBox[{"xx23ms", "*", "Rm"}], "+", "xx34ms"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"1", "-", "\[Alpha]m"}], ")"}]}], "+", "\[IndentingNewLine]", 
      
      RowBox[{"xy44ms", "/", "2"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"xy34ms", 
          RowBox[{"(", "rmmm", ")"}]}], "+", 
         RowBox[{"xy43ms", 
          RowBox[{"(", 
           RowBox[{"1", "-", "rmmm"}], ")"}]}]}], ")"}], 
       RowBox[{"(", 
        RowBox[{"1", "-", "\[Alpha]m"}], ")"}]}], "+", "\[IndentingNewLine]", 
      
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"xy24ms", 
          RowBox[{"(", "\[Chi]m", ")"}]}], "+", 
         RowBox[{"xy42ms", 
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Chi]m"}], ")"}]}]}], ")"}], "/", "2"}], "+", 
      "\[IndentingNewLine]", 
      RowBox[{"xy41ms", "*", 
       RowBox[{"(", 
        RowBox[{"1", "-", "\[Alpha]m"}], ")"}]}], "+", "\[IndentingNewLine]", 
      
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"xy14ms", 
          RowBox[{"(", 
           RowBox[{"rMmm", "+", "\[Chi]m", "-", "Rm"}], ")"}]}], "+", 
         "\[IndentingNewLine]", 
         RowBox[{"xy41ms", 
          RowBox[{"(", 
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{"Rm", "+", "rMmm", "+", "\[Chi]m"}], ")"}]}], ")"}]}], 
         "+", "\[IndentingNewLine]", 
         RowBox[{"xy23ms", 
          RowBox[{"(", 
           RowBox[{"Rm", "+", "\[Chi]m", "-", "rMmm"}], ")"}]}], "+", 
         "\[IndentingNewLine]", 
         RowBox[{"xy32ms", 
          RowBox[{"(", 
           RowBox[{"Rm", "+", "rMmm", "-", "\[Chi]m"}], ")"}]}]}], ")"}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "\[Alpha]m"}], ")"}], "/", "2"}]}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Y", " ", "bearing", " ", "pollen"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nextYAMm", "=", 
     RowBox[{"yy11ms", "+", 
      RowBox[{"yy13ms", "/", "2"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"yy12ms", "+", 
         RowBox[{"yy14ms", "*", 
          RowBox[{"(", 
           RowBox[{"1", "-", "Rm"}], ")"}]}], "+", 
         RowBox[{"yy23ms", "*", "Rm"}]}], ")"}], "\[Alpha]m"}], "+", 
      "\[IndentingNewLine]", 
      RowBox[{"xy11ms", "/", "2"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"xy12ms", 
          RowBox[{"(", "rMMm", ")"}]}], "+", 
         RowBox[{"xy21ms", " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", "rMMm"}], ")"}]}]}], ")"}], 
       RowBox[{"(", "\[Alpha]m", ")"}]}], "+", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"xy13ms", 
          RowBox[{"(", "\[Chi]m", ")"}]}], "+", 
         RowBox[{"xy31ms", " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Chi]m"}], ")"}]}]}], ")"}], "/", "2"}], "+", 
      "\[IndentingNewLine]", 
      RowBox[{"xy41ms", "*", "\[Alpha]m"}], "+", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"xy14ms", " ", 
          RowBox[{"(", 
           RowBox[{"rMmm", "+", "\[Chi]m", "-", "Rm"}], ")"}]}], "+", 
         "\[IndentingNewLine]", " ", 
         RowBox[{"xy41ms", 
          RowBox[{"(", 
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{"Rm", "+", "rMmm", "+", "\[Chi]m"}], ")"}]}], ")"}]}], 
         "+", "\[IndentingNewLine]", 
         RowBox[{"xy23ms", 
          RowBox[{"(", 
           RowBox[{"Rm", "+", "\[Chi]m", "-", "rMmm"}], ")"}]}], "+", 
         "\[IndentingNewLine]", 
         RowBox[{"xy32ms", 
          RowBox[{"(", 
           RowBox[{"Rm", "+", "rMmm", "-", "\[Chi]m"}], ")"}]}]}], ")"}], 
       RowBox[{"\[Alpha]m", "/", "2"}]}]}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nextYaMm", " ", "=", 
     RowBox[{"yy22ms", "+", 
      RowBox[{"yy24ms", "/", "2"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"yy12ms", "+", 
         RowBox[{"yy23ms", "*", 
          RowBox[{"(", 
           RowBox[{"1", "-", "Rm"}], ")"}]}], "+", 
         RowBox[{"yy14ms", "*", "Rm"}]}], ")"}], 
       RowBox[{"(", 
        RowBox[{"1", "-", "\[Alpha]m"}], ")"}]}], "+", "\[IndentingNewLine]", 
      
      RowBox[{"xy22ms", "/", "2"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"xy12ms", 
          RowBox[{"(", 
           RowBox[{"1", "-", "rMMm"}], ")"}]}], "+", 
         RowBox[{"xy21ms", 
          RowBox[{"(", "rMMm", ")"}]}]}], ")"}], 
       RowBox[{"(", 
        RowBox[{"1", "-", "\[Alpha]m"}], ")"}]}], "+", "\[IndentingNewLine]", 
      
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"xy24ms", " ", 
          RowBox[{"(", "\[Chi]m", ")"}]}], "+", 
         RowBox[{"xy42ms", " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Chi]m"}], ")"}]}]}], ")"}], "/", "2"}], "+", 
      "\[IndentingNewLine]", 
      RowBox[{"xy32ms", "*", 
       RowBox[{"(", 
        RowBox[{"1", "-", "\[Alpha]m"}], ")"}]}], "+", "\[IndentingNewLine]", 
      
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"xy14ms", 
          RowBox[{"(", 
           RowBox[{"Rm", "+", "\[Chi]m", "-", "rMmm"}], ")"}]}], "+", 
         "\[IndentingNewLine]", 
         RowBox[{"xy41ms", 
          RowBox[{"(", 
           RowBox[{"Rm", "+", "rMmm", "-", "\[Chi]m"}], ")"}]}], "+", 
         "\[IndentingNewLine]", 
         RowBox[{"xy23ms", 
          RowBox[{"(", 
           RowBox[{"rMmm", "+", "\[Chi]m", "-", "Rm"}], ")"}]}], "+", 
         "\[IndentingNewLine]", 
         RowBox[{"xy32ms", " ", 
          RowBox[{"(", 
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{"Rm", "+", "rMmm", "+", "\[Chi]m"}], ")"}]}], ")"}]}]}], 
        ")"}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "\[Alpha]m"}], ")"}], "/", "2"}]}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nextYAmm", "=", 
     RowBox[{"yy33ms", "+", 
      RowBox[{"yy13ms", "/", "2"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"yy23ms", "*", 
          RowBox[{"(", 
           RowBox[{"1", "-", "Rm"}], ")"}]}], "+", 
         RowBox[{"Rm", "*", "yy14ms"}], "+", "yy34ms"}], ")"}], "\[Alpha]m"}],
       "+", "\[IndentingNewLine]", 
      RowBox[{"xy33ms", "/", "2"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"xy34ms", 
          RowBox[{"(", "rmmm", ")"}]}], "+", 
         RowBox[{"xy43ms", 
          RowBox[{"(", 
           RowBox[{"1", "-", "rmmm"}], ")"}]}]}], ")"}], 
       RowBox[{"(", "\[Alpha]m", ")"}]}], "+", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"xy13ms", 
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Chi]m"}], ")"}]}], "+", 
         RowBox[{"xy31ms", 
          RowBox[{"(", "\[Chi]m", ")"}]}]}], ")"}], "/", "2"}], "+", 
      "\[IndentingNewLine]", 
      RowBox[{"xy23ms", "*", "\[Alpha]m"}], "+", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"xy14ms", 
          RowBox[{"(", 
           RowBox[{"Rm", "+", "rMmm", "-", "\[Chi]m"}], ")"}]}], "+", 
         "\[IndentingNewLine]", 
         RowBox[{"xy41ms", 
          RowBox[{"(", 
           RowBox[{"Rm", "+", "\[Chi]m", "-", "rMmm"}], ")"}]}], "+", 
         "\[IndentingNewLine]", 
         RowBox[{"xy23ms", 
          RowBox[{"(", 
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{"Rm", "+", "rMmm", "+", "\[Chi]m"}], ")"}]}], ")"}]}], 
         "+", "\[IndentingNewLine]", 
         RowBox[{"xy32ms", " ", 
          RowBox[{"(", 
           RowBox[{"rMmm", "+", "\[Chi]m", "-", "Rm"}], ")"}]}]}], ")"}], 
       RowBox[{"\[Alpha]m", "/", "2"}]}]}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nextYamm", "=", 
     RowBox[{"yy44ms", "+", 
      RowBox[{"yy24ms", "/", "2"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"yy14ms", "*", 
          RowBox[{"(", 
           RowBox[{"1", "-", "Rm"}], ")"}]}], "+", 
         RowBox[{"yy23ms", "*", "Rm"}], "+", "yy34ms"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"1", "-", "\[Alpha]m"}], ")"}]}], "+", "\[IndentingNewLine]", 
      
      RowBox[{"xy44ms", "/", "2"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"xy34ms", 
          RowBox[{"(", 
           RowBox[{"1", "-", "rmmm"}], ")"}]}], "+", 
         RowBox[{"xy43ms", 
          RowBox[{"(", "rmmm", ")"}]}]}], ")"}], 
       RowBox[{"(", 
        RowBox[{"1", "-", "\[Alpha]m"}], ")"}]}], "+", "\[IndentingNewLine]", 
      
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"xy24ms", 
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Chi]m"}], ")"}]}], "+", 
         RowBox[{"xy42ms", 
          RowBox[{"(", "\[Chi]m", ")"}]}]}], ")"}], "/", "2"}], "+", 
      "\[IndentingNewLine]", 
      RowBox[{"xy14ms", "*", 
       RowBox[{"(", 
        RowBox[{"1", "-", "\[Alpha]m"}], ")"}]}], "+", "\[IndentingNewLine]", 
      
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"xy14ms", 
          RowBox[{"(", 
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{"Rm", "+", "rMmm", "+", "\[Chi]m"}], ")"}]}], ")"}]}], 
         "+", "\[IndentingNewLine]", 
         RowBox[{"xy41ms", 
          RowBox[{"(", 
           RowBox[{"rMmm", "+", "\[Chi]m", "-", "Rm"}], ")"}]}], "+", 
         "\[IndentingNewLine]", 
         RowBox[{"xy23ms", 
          RowBox[{"(", 
           RowBox[{"Rm", "+", "rMmm", "-", "\[Chi]m"}], ")"}]}], "+", 
         "\[IndentingNewLine]", 
         RowBox[{"xy32ms", 
          RowBox[{"(", 
           RowBox[{"Rm", "+", "\[Chi]m", "-", "rMmm"}], ")"}]}]}], ")"}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "\[Alpha]m"}], ")"}], "/", "2"}]}]}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.693309915501526*^9, 3.6933099325077677`*^9}, {
   3.693309994483501*^9, 3.693310111226685*^9}, 3.693310458051482*^9, {
   3.693310504984441*^9, 3.693310571845592*^9}, {3.693310708322699*^9, 
   3.693310965833001*^9}, {3.693311068691226*^9, 3.693311076707844*^9}, {
   3.693311116392437*^9, 3.693311174992943*^9}, {3.693311224910478*^9, 
   3.693311386325416*^9}, {3.693311492371409*^9, 3.693311517729001*^9}, 
   3.693311563059478*^9, {3.693311747119026*^9, 3.6933120753696938`*^9}, {
   3.693312142532003*^9, 3.693312148484177*^9}, {3.693312186677787*^9, 
   3.69331257884744*^9}, {3.693312610467888*^9, 3.693312654396325*^9}, {
   3.693312761967066*^9, 3.6933128469525948`*^9}, {3.693312884107136*^9, 
   3.693312884458653*^9}, {3.693312918963231*^9, 3.693312925162354*^9}, 
   3.693313010915413*^9, {3.6935442167971992`*^9, 3.693544825708024*^9}, {
   3.6935452106055193`*^9, 3.693545223204241*^9}, {3.69354525530927*^9, 
   3.693545268926076*^9}, {3.693545327726218*^9, 3.693545350520911*^9}, {
   3.693545453241535*^9, 3.693545454792568*^9}, {3.693550402708359*^9, 
   3.693550453171851*^9}, {3.693554228857955*^9, 3.6935542406252203`*^9}, {
   3.6935603219341516`*^9, 
   3.6935604022444057`*^9}},ExpressionUUID->"29afe3f7-ca8c-495c-92e4-\
27d5b6e8aae5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Factor", "[", 
  RowBox[{
  "nextXAMm", "+", "nextXaMm", "+", "nextXAmm", "+", "nextXamm", "+", 
   "nextYAMm", "+", "nextYaMm", "+", "nextYAmm", "+", "nextYamm"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.693546553616716*^9, 3.693546554909905*^9}, {
  3.693550456814139*^9, 
  3.693550484284959*^9}},ExpressionUUID->"662c9960-2668-44ba-9a6c-\
f7e97937e1b9"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGDQBGK+on3tD1teOyp15veB6JKsCwaPgTQH78tSED0lT9Lz
KZDW2XXcF0SrlESsAdFFC6d4vwDSn62mf3wFpJOdlQTfA+k18U2ZIHqTvGUh
iL7NPvUod+trx+ULn04tan/t+OKMxrwJQHrnrCcts4F0758qkVddrx0Tay/e
ewOk13N6hH8C0ma8C1JBNHsev1tf92vHXTdFPe8CaQOrZ31MPa8dTx37/ARE
T7Z8MpEbSH/JOD8bRO/49lLeDkhP5btytLMP6O6Zb/dfn/DaUfmsRtWsJa8d
/3Gv3DQPSD8M0nGXXPraMcdHfqru8teO5pLrS2uB9I0XR9Y3A+nJmgZ7QPSX
l7lnlgPpZbmX6tYAaaELN86DaKU1Bz0MVr52rJoTpKi46rUjAFKstQE=
  
  "],ExpressionUUID->"c4590915-695b-4151-ac32-4ee9b7acd693"]
}, Open  ]],

Cell["\<\
Generally want to at least assume that recombination is not affected by M or \
sex\
\>", "Text",
 CellChangeTimes->{{3.693576509939515*^9, 
  3.6935765257483883`*^9}},ExpressionUUID->"314fbf02-360e-42a3-bb45-\
eab42d7ea90b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SUBSR", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Rm", "\[Rule]", "R"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Rf", "\[Rule]", "R"}], ",", "\[IndentingNewLine]", 
     RowBox[{"rMMm", "\[Rule]", "r"}], ",", "\[IndentingNewLine]", 
     RowBox[{"rMmm", "\[Rule]", "r"}], ",", "\[IndentingNewLine]", 
     RowBox[{"rmmm", "\[Rule]", "r"}], ",", "\[IndentingNewLine]", 
     RowBox[{"rMMf", "\[Rule]", "r"}], ",", "\[IndentingNewLine]", 
     RowBox[{"rMmf", "\[Rule]", "r"}], ",", "\[IndentingNewLine]", 
     RowBox[{"rmmf", "\[Rule]", "r"}], ",", "\[IndentingNewLine]", 
     RowBox[{"\[Chi]m", "\[Rule]", "\[Chi]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"\[Chi]f", "\[Rule]", "\[Chi]"}]}], "\[IndentingNewLine]", 
    "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.693576482311194*^9, 
  3.693576503857477*^9}},ExpressionUUID->"c246cc73-ada9-4a24-8b25-\
8d8e9714ad66"],

Cell["Often also want to assume the following about k:", "Text",
 CellChangeTimes->{{3.693576529436275*^9, 
  3.693576542060069*^9}},ExpressionUUID->"c963a2aa-aaf3-49e8-bf60-\
b687a04d235a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SUBS", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Rm", "\[Rule]", "R"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Rf", "\[Rule]", "R"}], ",", "\[IndentingNewLine]", 
     RowBox[{"rMMm", "\[Rule]", "r"}], ",", "\[IndentingNewLine]", 
     RowBox[{"rMmm", "\[Rule]", "r"}], ",", "\[IndentingNewLine]", 
     RowBox[{"rmmm", "\[Rule]", "r"}], ",", "\[IndentingNewLine]", 
     RowBox[{"rMMf", "\[Rule]", "r"}], ",", "\[IndentingNewLine]", 
     RowBox[{"rMmf", "\[Rule]", "r"}], ",", "\[IndentingNewLine]", 
     RowBox[{"rmmf", "\[Rule]", "r"}], ",", "\[IndentingNewLine]", 
     RowBox[{"\[Chi]m", "\[Rule]", "\[Chi]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"\[Chi]f", "\[Rule]", "\[Chi]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"kXX", "\[Rule]", "1"}], ",", "\[IndentingNewLine]", 
     RowBox[{"kXY", "\[Rule]", "0"}], ",", "\[IndentingNewLine]", 
     RowBox[{"kYY", "\[Rule]", "0"}], ",", "\[IndentingNewLine]", 
     RowBox[{"kMmXX", "\[Rule]", "k"}], ",", "\[IndentingNewLine]", 
     RowBox[{"kMmXY", "\[Rule]", "k"}], ",", "\[IndentingNewLine]", 
     RowBox[{"kMmYY", "\[Rule]", "k"}], ",", "\[IndentingNewLine]", 
     RowBox[{"kmm", "\[Rule]", "k"}], ",", "\[IndentingNewLine]", 
     RowBox[{"kmm", "\[Rule]", "k"}], ",", "\[IndentingNewLine]", 
     RowBox[{"kmm", "\[Rule]", "k"}]}], "\[IndentingNewLine]", "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.693565362409412*^9, 3.693565523507833*^9}, 
   3.693574407062133*^9, {3.693576609329269*^9, 
   3.69357661956073*^9}},ExpressionUUID->"59a03634-adf8-4408-a638-\
5c8244e0af82"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Simulation Recursions [Enter]", "Section",
 CellChangeTimes->{{3.7117880255640287`*^9, 
  3.71178804144541*^9}},ExpressionUUID->"2179384f-512b-4712-9c95-\
443231049fa7"],

Cell[CellGroupData[{

Cell["Equilibrium [ENTER]", "Subsubsection",
 CellChangeTimes->{{3.696720498278593*^9, 
  3.696720501670595*^9}},ExpressionUUID->"ee2663cb-3f25-4f6c-9263-\
aad30f166b3a"],

Cell["\<\
Working in allele frequencies rather than haplotype frequencies:\
\>", "Text",
 CellChangeTimes->{{3.697284283914587*^9, 
  3.697284296792296*^9}},ExpressionUUID->"f027f2dd-1bd3-47cd-b6ad-\
34b44e9a1691"],

Cell[BoxData[
 RowBox[{
  RowBox[{"subequil", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"XAMf", "\[Rule]", "pXf"}], ",", "\[IndentingNewLine]", 
     RowBox[{"XaMf", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{"1", "-", "pXf"}], ")"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"YAMf", "\[Rule]", "0"}], ",", "\[IndentingNewLine]", 
     RowBox[{"YaMf", "\[Rule]", "0"}], ",", "\[IndentingNewLine]", 
     RowBox[{"XAMm", "\[Rule]", 
      RowBox[{"pXm", 
       RowBox[{"(", 
        RowBox[{"1", "-", "freqYm"}], ")"}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"XaMm", "\[Rule]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", "pXm"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"1", "-", "freqYm"}], ")"}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"YAMm", "\[Rule]", 
      RowBox[{"pYm", "*", "freqYm"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"YaMm", "\[Rule]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", "pYm"}], ")"}], "*", "freqYm"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"XAmf", "\[Rule]", "0"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Xamf", "\[Rule]", "0"}], ",", "\[IndentingNewLine]", 
     RowBox[{"XAmm", "\[Rule]", "0"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Xamm", "\[Rule]", "0"}], ",", "\[IndentingNewLine]", 
     RowBox[{"YAmm", "\[Rule]", "0"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Yamm", "\[Rule]", "0"}], ",", "\[IndentingNewLine]", 
     RowBox[{"YAmf", "\[Rule]", "0"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Yamf", "\[Rule]", "0"}]}], "\[IndentingNewLine]", "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.675897631284259*^9, 3.675897659212982*^9}, {
   3.677426392548254*^9, 3.677426471423079*^9}, {3.693574311009759*^9, 
   3.693574356040964*^9}, {3.6935762212992687`*^9, 3.6935762242966833`*^9}, 
   3.696712549032839*^9},ExpressionUUID->"445fb8b7-cb12-4986-a8e1-\
179948ebab4e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"equilA0", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"pXf", "\[Rule]", 
      FractionBox[
       RowBox[{"waf", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Faa", " ", "Maa", " ", "waf", " ", "wam"}], "-", 
          RowBox[{"FAa", " ", "wAf", " ", "\[Alpha]f", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Maa", " ", "wam"}], "+", 
             RowBox[{"2", " ", "MAa", " ", "wAm", " ", "\[Alpha]m"}]}], 
            ")"}]}]}], ")"}]}], 
       RowBox[{
        RowBox[{"Faa", " ", "Maa", " ", 
         SuperscriptBox["waf", "2"], " ", "wam"}], "+", 
        RowBox[{"wAf", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
           "2", " ", "FAA", " ", "MAa", " ", "wAf", " ", "wAm", " ", 
            "\[Alpha]m"}], "-", 
           RowBox[{"FAa", " ", "waf", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Maa", " ", "wam"}], "+", 
              RowBox[{"2", " ", "MAa", " ", "wAm", " ", "\[Alpha]m"}]}], 
             ")"}]}]}], ")"}]}]}]]}], ",", 
     RowBox[{"pXm", "\[Rule]", 
      RowBox[{"-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", " ", "MAa", " ", "\[Alpha]m", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "Faa"}], " ", "Maa", " ", "waf", " ", "wam"}], "+", 
            
            RowBox[{"FAa", " ", "wAf", " ", "\[Alpha]f", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Maa", " ", "wam"}], "+", 
               RowBox[{"2", " ", "MAa", " ", "wAm", " ", "\[Alpha]m"}]}], 
              ")"}]}]}], ")"}]}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "Maa", " ", "MAa", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Faa", " ", "waf", " ", "wam"}], "+", 
             RowBox[{"FAA", " ", "wAf", " ", "wAm"}]}], ")"}], " ", 
           "\[Alpha]m"}], "+", 
          RowBox[{"FAa", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Maa", " ", "wam"}], "+", 
             RowBox[{"2", " ", "MAa", " ", "wAm", " ", "\[Alpha]m"}]}], ")"}],
            " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Maa", " ", "waf", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "\[Alpha]f"}], ")"}]}], "-", 
             RowBox[{
             "2", " ", "MAa", " ", "wAf", " ", "\[Alpha]f", " ", 
              "\[Alpha]m"}]}], ")"}]}]}], ")"}]}]}]}], ",", 
     RowBox[{"pYm", "\[Rule]", "0"}], ",", 
     RowBox[{"freqYm", "\[Rule]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"FAa", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Maa", " ", "waf", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "\[Alpha]f"}], ")"}]}], "+", 
            RowBox[{"2", " ", "MAa", " ", "wAf", " ", "\[Alpha]f", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], ")"}], " ", 
          
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Maa", " ", "wam"}], "+", 
            RowBox[{"2", " ", "MAa", " ", "wAm", " ", "\[Alpha]m"}]}], 
           ")"}]}], "+", 
         RowBox[{"2", " ", "Maa", " ", "MAa", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "Faa"}], " ", "waf", " ", "wam", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}], "+", 
            RowBox[{"FAA", " ", "wAf", " ", "wAm", " ", "\[Alpha]m"}]}], 
           ")"}]}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"FAa", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Maa", " ", "waf", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "\[Alpha]f"}], ")"}]}], "-", 
              RowBox[{"MAa", " ", "wAf", " ", "\[Alpha]f"}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Maa", " ", "wam"}], "+", 
              RowBox[{"2", " ", "MAa", " ", "wAm", " ", "\[Alpha]m"}]}], 
             ")"}]}], "+", 
           RowBox[{"Maa", " ", "MAa", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Faa", " ", "waf", " ", "wam"}], "+", 
              RowBox[{
              "2", " ", "FAA", " ", "wAf", " ", "wAm", " ", "\[Alpha]m"}]}], 
             ")"}]}]}], ")"}]}], ")"}]}]}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.540042956463286*^9, 3.540042972228552*^9}, 
   3.5400439159796457`*^9, 3.5400453527719097`*^9, {3.595717069771029*^9, 
   3.595717070120652*^9}, 3.685222731527663*^9, 3.6888469465129957`*^9, 
   3.6967104432355423`*^9, 3.696712549067419*^9, {3.696713524202671*^9, 
   3.6967135311300373`*^9}, {3.6967135905658283`*^9, 
   3.6967136110299683`*^9}, {3.6967140328691187`*^9, 3.696714060682951*^9}, {
   3.696717369613267*^9, 3.696717378585586*^9}, 
   3.696720548033085*^9},ExpressionUUID->"bb55e0e3-9130-4470-ab1e-\
51e5e5f3680e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"equilAp0", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"pXf", "->", 
      FractionBox[
       RowBox[{"waf", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"FAa", " ", "wAf", " ", "\[Alpha]f", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"MAA", " ", "wAm"}], "-", 
             RowBox[{"2", " ", "MAa", " ", "wam", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], ")"}]}], 
          "+", 
          RowBox[{"2", " ", "Faa", " ", "MAa", " ", "waf", " ", "wam", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], ")"}]}], 
       RowBox[{
        RowBox[{"wAf", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "FAA"}], " ", "MAA", " ", "wAf", " ", "wAm"}], "+", 
           RowBox[{"FAa", " ", "waf", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"MAA", " ", "wAm"}], "-", 
              RowBox[{"2", " ", "MAa", " ", "wam", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], ")"}]}]}],
           ")"}]}], "+", 
        RowBox[{"2", " ", "Faa", " ", "MAa", " ", 
         SuperscriptBox["waf", "2"], " ", "wam", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}]]}], ",", 
     RowBox[{"pXm", "\[Rule]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"MAA", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"FAa", " ", "wAf", " ", "\[Alpha]f", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"MAA", " ", "wAm"}], "-", 
              RowBox[{"2", " ", "MAa", " ", "wam", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], ")"}]}], 
           "+", 
           RowBox[{"2", " ", "Faa", " ", "MAa", " ", "waf", " ", "wam", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], ")"}]}], 
        ")"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "FAa"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "MAA"}], " ", "wAm"}], "+", 
            RowBox[{"2", " ", "MAa", " ", "wam", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], ")"}], " ", 
          
          RowBox[{"(", 
           RowBox[{
            RowBox[{"MAA", " ", "wAf", " ", "\[Alpha]f"}], "+", 
            RowBox[{"2", " ", "MAa", " ", "waf", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "\[Alpha]f"}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], ")"}]}], 
         "+", 
         RowBox[{"2", " ", "MAa", " ", "MAA", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Faa", " ", "waf", " ", "wam"}], "+", 
            RowBox[{"FAA", " ", "wAf", " ", "wAm"}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], ")"}]}]}], ",", 
     RowBox[{"pYm", "\[Rule]", "1"}], ",", 
     RowBox[{"freqYm", "\[Rule]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
         "2", " ", "Faa", " ", "MAa", " ", "MAA", " ", "waf", " ", "wam", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}], "-", 
         RowBox[{
         "2", " ", "FAA", " ", "MAa", " ", "MAA", " ", "wAf", " ", "wAm", " ",
           "\[Alpha]m"}], "+", 
         RowBox[{"FAa", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "MAA"}], " ", "wAm"}], "+", 
            RowBox[{"2", " ", "MAa", " ", "wam", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], ")"}], " ", 
          
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "MAA"}], " ", "wAf", " ", "\[Alpha]f"}], "+", 
            RowBox[{"2", " ", "MAa", " ", "waf", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "\[Alpha]f"}], ")"}], " ", 
             "\[Alpha]m"}]}], ")"}]}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"FAa", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"MAa", " ", "waf", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "\[Alpha]f"}], ")"}]}], "-", 
              RowBox[{"MAA", " ", "wAf", " ", "\[Alpha]f"}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "MAA"}], " ", "wAm"}], "+", 
              RowBox[{"2", " ", "MAa", " ", "wam", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], ")"}]}], 
           "+", 
           RowBox[{"MAa", " ", "MAA", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "FAA"}], " ", "wAf", " ", "wAm"}], "+", 
              RowBox[{"2", " ", "Faa", " ", "waf", " ", "wam", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], ")"}]}]}],
           ")"}]}], ")"}]}]}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.540042956463286*^9, 3.540042966819066*^9}, 
   3.5400452860276613`*^9, 3.6852227478463507`*^9, 3.685223455846169*^9, 
   3.688846917913596*^9, 3.6967104432347527`*^9, 3.6967125490671043`*^9, {
   3.6967135583366747`*^9, 3.696713593422202*^9}, {3.696713886734221*^9, 
   3.696713894003653*^9}, {3.696713928823443*^9, 3.696713948230455*^9}, {
   3.696716525862825*^9, 
   3.696716562908033*^9}},ExpressionUUID->"0e0dadf2-eaa2-4890-9f16-\
ef6c7c152445"],

Cell[BoxData[
 RowBox[{
  RowBox[{"equilB0", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"pXf", "\[Rule]", "1"}], ",", 
     RowBox[{"pXm", "\[Rule]", "1"}], ",", 
     RowBox[{"pYm", "\[Rule]", "0"}], ",", 
     RowBox[{"freqYm", "\[Rule]", 
      RowBox[{"1", "-", "\[Alpha]m"}]}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.540042956463286*^9, 3.540042987902926*^9}, 
   3.540043917252675*^9, {3.540064587435792*^9, 3.540064600581499*^9}, 
   3.595717079222261*^9, 3.6967104432357264`*^9, 3.6967125490675297`*^9, {
   3.696713749166979*^9, 3.696713750712985*^9}, {3.696713801334141*^9, 
   3.6967138088675537`*^9}},ExpressionUUID->"0b598045-58d6-408c-9447-\
0c2351c6c388"],

Cell[BoxData[
 RowBox[{
  RowBox[{"equilBp0", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"pXf", "\[Rule]", "0"}], ",", 
     RowBox[{"pXm", "\[Rule]", "0"}], ",", 
     RowBox[{"pYm", "\[Rule]", "1"}], ",", 
     RowBox[{"freqYm", "\[Rule]", "\[Alpha]m"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.540042956463286*^9, 3.540042987902926*^9}, 
   3.540043917252675*^9, {3.540064585661951*^9, 3.540064592171913*^9}, {
   3.595717075997954*^9, 3.595717076549985*^9}, 3.696710443235899*^9, 
   3.6967125490676327`*^9, {3.696713753087039*^9, 3.696713755023571*^9}, {
   3.69671381111762*^9, 
   3.6967138183249283`*^9}},ExpressionUUID->"90d75c9a-7742-4291-8d2f-\
7090dbb8730e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"equilC0", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"pXf", "\[Rule]", 
      FractionBox[
       RowBox[{"waf", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Maa", " ", "wam"}], "-", 
          RowBox[{"2", " ", "MAa", " ", "wAm", " ", "\[Alpha]m"}]}], ")"}]}], 
       
       RowBox[{
        RowBox[{"Maa", " ", "waf", " ", "wam"}], "+", 
        RowBox[{"MAA", " ", "wAf", " ", "wAm"}], "+", 
        RowBox[{"2", " ", "MAa", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "wAf"}], " ", "wam"}], "+", 
           RowBox[{"wAf", " ", "wam", " ", "\[Alpha]m"}], "-", 
           RowBox[{"waf", " ", "wAm", " ", "\[Alpha]m"}]}], ")"}]}]}]]}], ",", 
     RowBox[{"pXm", "\[Rule]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"wam", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Maa", " ", "wam"}], "-", 
           RowBox[{"2", " ", "MAa", " ", "wAm", " ", "\[Alpha]m"}]}], ")"}], 
         " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "Faa"}], " ", "waf", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"MAA", " ", "wAm"}], "+", 
              RowBox[{"2", " ", "MAa", " ", "wam", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], ")"}]}], 
           "+", 
           RowBox[{"FAa", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Maa", " ", "waf", " ", "wam", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "\[Alpha]f"}], ")"}]}], "+", 
              RowBox[{"MAA", " ", "wAf", " ", "wAm", " ", "\[Alpha]f"}], "+", 
              
              RowBox[{"2", " ", "MAa", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"wAf", " ", "wam", " ", "\[Alpha]f", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}], "-", 
                 RowBox[{"waf", " ", "wAm", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]f"}], ")"}], " ", 
                  "\[Alpha]m"}]}], ")"}]}]}], ")"}]}]}], ")"}]}], ")"}], "/", 
       
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Faa", " ", "waf", " ", "wam"}], "+", 
             RowBox[{"FAA", " ", "wAf", " ", "wAm"}]}], ")"}]}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"MAA", " ", "wAm"}], "+", 
            RowBox[{"2", " ", "MAa", " ", "wam", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], ")"}], " ", 
          
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Maa", " ", "wam"}], "-", 
            RowBox[{"2", " ", "MAa", " ", "wAm", " ", "\[Alpha]m"}]}], 
           ")"}]}], "+", 
         RowBox[{"FAa", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Maa", " ", "waf", " ", "wam", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "\[Alpha]f"}], ")"}]}], "+", 
            RowBox[{"MAA", " ", "wAf", " ", "wAm", " ", "\[Alpha]f"}], "+", 
            RowBox[{"2", " ", "MAa", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"wAf", " ", "wam", " ", "\[Alpha]f", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}], "-", 
               RowBox[{"waf", " ", "wAm", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "\[Alpha]f"}], ")"}], " ", 
                "\[Alpha]m"}]}], ")"}]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Maa", " ", 
             SuperscriptBox["wam", "2"]}], "-", 
            RowBox[{"wAm", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"MAA", " ", "wAm"}], "+", 
               RowBox[{"2", " ", "MAa", " ", "wam", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  RowBox[{"2", " ", "\[Alpha]m"}]}], ")"}]}]}], ")"}]}]}], 
           ")"}]}]}], ")"}]}]}], ",", 
     RowBox[{"pYm", "\[Rule]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"wam", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "Faa"}], " ", "Maa", " ", "waf", " ", "wam", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"MAA", " ", "wAm"}], "+", 
              RowBox[{"2", " ", "MAa", " ", "wam", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], ")"}]}], 
           "+", 
           RowBox[{
           "2", " ", "FAA", " ", "MAa", " ", "wAf", " ", "wAm", " ", 
            "\[Alpha]m", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Maa", " ", "wam"}], "-", 
              RowBox[{"2", " ", "MAa", " ", "wAm", " ", "\[Alpha]m"}]}], 
             ")"}]}], "+", 
           RowBox[{"FAa", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Maa", " ", "wam"}], "+", 
              RowBox[{"2", " ", "MAa", " ", "wAm", " ", "\[Alpha]m"}]}], 
             ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Maa", " ", "waf", " ", "wam", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "\[Alpha]f"}], ")"}]}], "+", 
              RowBox[{"MAA", " ", "wAf", " ", "wAm", " ", "\[Alpha]f"}], "+", 
              
              RowBox[{"2", " ", "MAa", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"wAf", " ", "wam", " ", "\[Alpha]f", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}], "-", 
                 RowBox[{"waf", " ", "wAm", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]f"}], ")"}], " ", 
                  "\[Alpha]m"}]}], ")"}]}]}], ")"}]}]}], ")"}]}], ")"}], "/", 
       
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "Faa"}], " ", "waf", " ", "wam", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"MAA", " ", "wAm"}], "+", 
            RowBox[{"2", " ", "MAa", " ", "wam", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], ")"}], " ", 
          
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Maa", " ", "wam"}], "+", 
            RowBox[{"2", " ", "MAa", " ", "wAm", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], ")"}]}], 
         "+", 
         RowBox[{"FAA", " ", "wAf", " ", "wAm", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"MAA", " ", "wAm"}], "-", 
            RowBox[{"2", " ", "MAa", " ", "wam", " ", "\[Alpha]m"}]}], ")"}], 
          " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "Maa"}], " ", "wam"}], "+", 
            RowBox[{"2", " ", "MAa", " ", "wAm", " ", "\[Alpha]m"}]}], 
           ")"}]}], "+", 
         RowBox[{"FAa", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Maa", " ", 
             SuperscriptBox["wam", "2"]}], "-", 
            RowBox[{"wAm", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"MAA", " ", "wAm"}], "+", 
               RowBox[{"MAa", " ", "wam", " ", 
                RowBox[{"(", 
                 RowBox[{"2", "-", 
                  RowBox[{"4", " ", "\[Alpha]m"}]}], ")"}]}]}], ")"}]}]}], 
           ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Maa", " ", "waf", " ", "wam", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "\[Alpha]f"}], ")"}]}], "+", 
            RowBox[{"MAA", " ", "wAf", " ", "wAm", " ", "\[Alpha]f"}], "+", 
            RowBox[{"2", " ", "MAa", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"wAf", " ", "wam", " ", "\[Alpha]f", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}], "-", 
               RowBox[{"waf", " ", "wAm", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "\[Alpha]f"}], ")"}], " ", 
                "\[Alpha]m"}]}], ")"}]}]}], ")"}]}]}], ")"}]}]}], ",", 
     RowBox[{"freqYm", "->", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Faa", " ", "waf", " ", "wam", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"MAA", " ", "wAm"}], "+", 
            RowBox[{"2", " ", "MAa", " ", "wam", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], ")"}], " ", 
          
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Maa", " ", "wam"}], "+", 
            RowBox[{"2", " ", "MAa", " ", "wAm", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], ")"}]}], 
         "+", 
         RowBox[{"FAA", " ", "wAf", " ", "wAm", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"MAA", " ", "wAm"}], "-", 
            RowBox[{"2", " ", "MAa", " ", "wam", " ", "\[Alpha]m"}]}], ")"}], 
          " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Maa", " ", "wam"}], "-", 
            RowBox[{"2", " ", "MAa", " ", "wAm", " ", "\[Alpha]m"}]}], 
           ")"}]}], "-", 
         RowBox[{"FAa", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Maa", " ", 
             SuperscriptBox["wam", "2"]}], "-", 
            RowBox[{"wAm", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"MAA", " ", "wAm"}], "+", 
               RowBox[{"MAa", " ", "wam", " ", 
                RowBox[{"(", 
                 RowBox[{"2", "-", 
                  RowBox[{"4", " ", "\[Alpha]m"}]}], ")"}]}]}], ")"}]}]}], 
           ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Maa", " ", "waf", " ", "wam", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "\[Alpha]f"}], ")"}]}], "+", 
            RowBox[{"MAA", " ", "wAf", " ", "wAm", " ", "\[Alpha]f"}], "+", 
            RowBox[{"2", " ", "MAa", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"wAf", " ", "wam", " ", "\[Alpha]f", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}], "-", 
               RowBox[{"waf", " ", "wAm", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "\[Alpha]f"}], ")"}], " ", 
                "\[Alpha]m"}]}], ")"}]}]}], ")"}]}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Faa", " ", "waf", " ", "wam", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Maa", " ", "wam"}], "-", 
              RowBox[{"MAa", " ", "wAm"}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"MAA", " ", "wAm"}], "+", 
              RowBox[{"2", " ", "MAa", " ", "wam", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], ")"}]}], 
           "+", 
           RowBox[{"FAA", " ", "wAf", " ", "wAm", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"MAa", " ", "wam"}], "-", 
              RowBox[{"MAA", " ", "wAm"}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "Maa"}], " ", "wam"}], "+", 
              RowBox[{"2", " ", "MAa", " ", "wAm", " ", "\[Alpha]m"}]}], 
             ")"}]}], "-", 
           RowBox[{"FAa", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Maa", " ", 
               SuperscriptBox["wam", "2"]}], "-", 
              RowBox[{"MAA", " ", 
               SuperscriptBox["wAm", "2"]}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Maa", " ", "waf", " ", "wam", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "\[Alpha]f"}], ")"}]}], "+", 
              RowBox[{"MAA", " ", "wAf", " ", "wAm", " ", "\[Alpha]f"}], "+", 
              
              RowBox[{"2", " ", "MAa", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"wAf", " ", "wam", " ", "\[Alpha]f", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}], "-", 
                 RowBox[{"waf", " ", "wAm", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]f"}], ")"}], " ", 
                  "\[Alpha]m"}]}], ")"}]}]}], ")"}]}]}], ")"}]}], ")"}]}]}]}],
     "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.540042956463286*^9, 3.540042987902926*^9}, 
   3.540043917252675*^9, 3.685222602022561*^9, {3.685222667954132*^9, 
   3.685222680019909*^9}, {3.6888469647717733`*^9, 3.6888469975272093`*^9}, 
   3.696710443237338*^9, 3.696712549068124*^9, {3.696713651185458*^9, 
   3.696713719025856*^9}},ExpressionUUID->"a3c9147a-6364-41ad-9224-\
c6b0c6bcdd06"],

Cell["\<\
Factor[differenceEqs /. r -> 0 /. {equilA0, equilAp0, equilB0, equilBp0, \
equilC0}]\
\>", "Text",
 CellChangeTimes->{{3.6967137609668417`*^9, 3.696713790077125*^9}, {
   3.6967138276602383`*^9, 3.696713835434763*^9}, {3.696716263527668*^9, 
   3.6967162684385147`*^9}, {3.6967165382480783`*^9, 
   3.6967165384157343`*^9}, {3.696717386552535*^9, 3.696717413552878*^9}, 
   3.69672051369454*^9},ExpressionUUID->"6fb15957-408e-4272-b84d-\
ac65d269d1a0"],

Cell["\<\
{{0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}}\
\>", "Text",
 CellChangeTimes->{{3.696713762916744*^9, 3.696713790439035*^9}, {
   3.696713825547484*^9, 3.696713835869782*^9}, 3.6967138979899387`*^9, 
   3.6967139521280823`*^9, {3.6967140639074574`*^9, 3.6967140785180893`*^9}, 
   3.696714133042803*^9, {3.696716252220895*^9, 3.696716270731922*^9}, {
   3.696716539285933*^9, 3.696716558347484*^9}, {3.696717384563642*^9, 
   3.69671741539956*^9}, 3.696720480704103*^9, 
   3.696720513695153*^9},ExpressionUUID->"503ab3bd-f256-429d-ac81-\
5475b968a669"],

Cell["\<\
To be relevant, this last equilibrium equilC0 requires that the numerators of \
the frequency of A and a in females are both positive or both negative (they \
share the same denominator, which is the sum of the numerators):\
\>", "Text",
 CellChangeTimes->{{3.540042990631012*^9, 3.540043014468795*^9}, {
   3.5439237750993223`*^9, 3.543923777960609*^9}, {3.6852225391799183`*^9, 
   3.685222589104192*^9}, 3.696710443234017*^9, 3.6967125490668287`*^9, {
   3.696713630851096*^9, 3.696713632264328*^9}, {3.69671751029823*^9, 
   3.696717523255658*^9}, {3.696717553944354*^9, 
   3.696717582980744*^9}},ExpressionUUID->"ab550143-9c82-412b-a179-\
5b35dafcd2c9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"pXf", ",", 
     RowBox[{"1", "-", "pXf"}]}], "}"}], "/.", "equilC0"}], "//", 
  "Factor"}]], "Input",
 CellChangeTimes->{{3.696717434928327*^9, 
  3.6967174995414667`*^9}},ExpressionUUID->"9a95633c-42cf-40a2-99b0-\
a6f79bad1d61"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{"waf", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Maa", " ", "wam"}], "-", 
       RowBox[{"2", " ", "MAa", " ", "wAm", " ", "\[Alpha]m"}]}], ")"}]}], 
    RowBox[{
     RowBox[{"Maa", " ", "waf", " ", "wam"}], "-", 
     RowBox[{"2", " ", "MAa", " ", "wAf", " ", "wam"}], "+", 
     RowBox[{"MAA", " ", "wAf", " ", "wAm"}], "+", 
     RowBox[{"2", " ", "MAa", " ", "wAf", " ", "wam", " ", "\[Alpha]m"}], "-", 
     RowBox[{"2", " ", "MAa", " ", "waf", " ", "wAm", " ", "\[Alpha]m"}]}]], 
   ",", 
   FractionBox[
    RowBox[{"wAf", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", "MAa", " ", "wam"}], "+", 
       RowBox[{"MAA", " ", "wAm"}], "+", 
       RowBox[{"2", " ", "MAa", " ", "wam", " ", "\[Alpha]m"}]}], ")"}]}], 
    RowBox[{
     RowBox[{"Maa", " ", "waf", " ", "wam"}], "-", 
     RowBox[{"2", " ", "MAa", " ", "wAf", " ", "wam"}], "+", 
     RowBox[{"MAA", " ", "wAf", " ", "wAm"}], "+", 
     RowBox[{"2", " ", "MAa", " ", "wAf", " ", "wam", " ", "\[Alpha]m"}], "-", 
     RowBox[{"2", " ", "MAa", " ", "waf", " ", "wAm", " ", "\[Alpha]m"}]}]]}],
   "}"}]], "Output",
 CellChangeTimes->{{3.69671745158223*^9, 3.696717499903451*^9}, 
   3.6967204808862457`*^9, {3.696720540845518*^9, 3.696720550679497*^9}, 
   3.6967267146890574`*^9, 3.696726744776251*^9, 3.6967268295540247`*^9, 
   3.697046065265527*^9, 3.697207881151664*^9, 3.6972842162622538`*^9, 
   3.697284904161531*^9, 3.697288372798655*^9, 3.697302671774295*^9, 
   3.6973027511524267`*^9, 3.697406207683297*^9, 3.6986097111245213`*^9, 
   3.69981798433832*^9, 3.710178348459916*^9, 3.710186901839871*^9, 
   3.710437946419394*^9, 3.71152810568106*^9, 3.711691693835935*^9, 
   3.711704456690339*^9, 3.711704545760483*^9, 3.7117784037570057`*^9, 
   3.7117886710734873`*^9, 3.712582214357953*^9, 3.7130754670392227`*^9, 
   3.713095470718346*^9},ExpressionUUID->"83336537-03de-4d83-b1c4-\
cbc21998f777"]
}, Open  ]],

Cell["\<\
Hence, either 2(1-\[Alpha]m) MAa wam > MAA wAm and 2 \[Alpha]m MAa wAm > Maa \
wam (akin to heterozygous advantage without pollen selection) or \
2(1-\[Alpha]m) MAa wam < MAA wAm and 2 \[Alpha]m MAa wAm < Maa wam (akin to \
heterozygous disadvantage) otherwise pXf won\[CloseCurlyQuote]t lie between 0 \
and 1.\
\>", "Text",
 CellChangeTimes->{
  3.696717546259141*^9, {3.696717585720707*^9, 3.69671759995354*^9}, {
   3.696717634334737*^9, 
   3.696717763780727*^9}},ExpressionUUID->"94b75799-8f85-4499-9838-\
6179b14ec7e1"],

Cell["\<\
equilC0 will be shown later to not be internally stable when it exists, so \
this equilibrium can be ignored when examining the evolution of recombination.\
\>", "Text",
 CellChangeTimes->{{3.543923794671749*^9, 3.543923822304446*^9}, 
   3.6967104432375*^9, 
   3.69671254906824*^9},ExpressionUUID->"55bcd172-c8fa-43cd-a4e6-\
8d69a69ad765"],

Cell["\<\
The next order terms in the recombination rate, r (used in the weak selection \
approximations to assess the effect of r):\
\>", "Text",
 CellChangeTimes->{{3.697285373850758*^9, 
  3.6972853975924873`*^9}},ExpressionUUID->"271c961d-7b05-44c3-9516-\
38615d0275fe"],

Cell[BoxData[
 RowBox[{
  RowBox[{"equilA1", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"pXfsm", "\[Rule]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
        "2", " ", "MAa", " ", "r", " ", "waf", " ", "wAf", " ", "wam", " ", 
         "wAm", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Faa", " ", "waf", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"FAA", " ", "wAf"}], "+", 
              RowBox[{"FAa", " ", "waf", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "\[Alpha]f"}], ")"}]}]}], ")"}]}], 
           "-", 
           RowBox[{"FAa", " ", "FAA", " ", 
            SuperscriptBox["wAf", "2"], " ", "\[Alpha]f"}]}], ")"}], " ", 
         "\[Alpha]m", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"FAa", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Maa", " ", "waf", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]f"}], ")"}]}], "+", 
                 RowBox[{"2", " ", "MAa", " ", "wAf", " ", "\[Alpha]f", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], ")"}], 
               " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Maa", " ", "wam"}], "+", 
                 RowBox[{"2", " ", "MAa", " ", "wAm", " ", "\[Alpha]m"}]}], 
                ")"}]}], "+", 
              RowBox[{"2", " ", "Maa", " ", "MAa", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "Faa"}], " ", "waf", " ", "wam", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}], "+", 
                 RowBox[{"FAA", " ", "wAf", " ", "wAm", " ", "\[Alpha]m"}]}], 
                ")"}]}]}], ")"}], "/", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
              "2", " ", "FAA", " ", "MAa", " ", "wAf", " ", "wAm", " ", 
               "\[Alpha]m"}], "+", 
              RowBox[{"FAa", " ", "waf", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "\[Alpha]f"}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Maa", " ", "wam"}], "+", 
                 RowBox[{"2", " ", "MAa", " ", "wAm", " ", "\[Alpha]m"}]}], 
                ")"}]}]}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"wAm", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Maa", " ", "MAA"}], "+", 
                RowBox[{"4", " ", 
                 SuperscriptBox["MAa", "2"], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}], " ", 
                 "\[Alpha]m"}]}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "Faa"}], " ", "Maa", " ", "waf", " ", "wam"}], 
                "+", 
                RowBox[{"FAa", " ", "wAf", " ", "\[Alpha]f", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"Maa", " ", "wam"}], "+", 
                   RowBox[{"2", " ", "MAa", " ", "wAm", " ", "\[Alpha]m"}]}], 
                  ")"}]}]}], ")"}]}], ")"}], "/", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "Faa"}], " ", "Maa", " ", "waf", " ", "wam", " ", 
               
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"MAA", " ", "wAm"}], "+", 
                 RowBox[{"2", " ", "MAa", " ", "wam", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], 
                ")"}]}], "+", 
              RowBox[{
              "2", " ", "FAA", " ", "MAa", " ", "wAf", " ", "wAm", " ", 
               "\[Alpha]m", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Maa", " ", "wam"}], "-", 
                 RowBox[{"2", " ", "MAa", " ", "wAm", " ", "\[Alpha]m"}]}], 
                ")"}]}], "+", 
              RowBox[{"FAa", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Maa", " ", "wam"}], "+", 
                 RowBox[{"2", " ", "MAa", " ", "wAm", " ", "\[Alpha]m"}]}], 
                ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Maa", " ", "waf", " ", "wam", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]f"}], ")"}]}], "+", 
                 RowBox[{"MAA", " ", "wAf", " ", "wAm", " ", "\[Alpha]f"}], 
                 "+", 
                 RowBox[{"2", " ", "MAa", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"wAf", " ", "wam", " ", "\[Alpha]f", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}], "-", 
                    RowBox[{"waf", " ", "wAm", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]f"}], ")"}], " ", 
                    "\[Alpha]m"}]}], ")"}]}]}], ")"}]}]}], ")"}]}]}], ")"}]}],
         ")"}], "/", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Faa", " ", "Maa", " ", 
           SuperscriptBox["waf", "2"], " ", "wam"}], "+", 
          RowBox[{"wAf", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
             "2", " ", "FAA", " ", "MAa", " ", "wAf", " ", "wAm", " ", 
              "\[Alpha]m"}], "-", 
             RowBox[{"FAa", " ", "waf", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Maa", " ", "wam"}], "+", 
                RowBox[{"2", " ", "MAa", " ", "wAm", " ", "\[Alpha]m"}]}], 
               ")"}]}]}], ")"}]}]}], ")"}], "2"]}]}], ",", 
     RowBox[{"pXmsm", "\[Rule]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
        "2", " ", "FAa", " ", "MAa", " ", "r", " ", "\[Alpha]m", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "Faa"}], " ", 
            SuperscriptBox["Maa", "2"], " ", 
            SuperscriptBox["waf", "2"], " ", 
            SuperscriptBox["wam", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Alpha]f"}], ")"}]}], "+", 
           RowBox[{"wAf", " ", "\[Alpha]f", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"4", " ", "FAA", " ", 
               SuperscriptBox["MAa", "2"], " ", "wAf", " ", 
               SuperscriptBox["wAm", "2"], " ", 
               SuperscriptBox["\[Alpha]m", "2"]}], "+", 
              RowBox[{"FAa", " ", "waf", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "\[Alpha]f"}], ")"}], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Maa", " ", "wam"}], "+", 
                  RowBox[{"2", " ", "MAa", " ", "wAm", " ", "\[Alpha]m"}]}], 
                 ")"}], "2"]}]}], ")"}]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"FAa", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Maa", " ", "waf", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]f"}], ")"}]}], "+", 
                 RowBox[{"2", " ", "MAa", " ", "wAf", " ", "\[Alpha]f", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], ")"}], 
               " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Maa", " ", "wam"}], "+", 
                 RowBox[{"2", " ", "MAa", " ", "wAm", " ", "\[Alpha]m"}]}], 
                ")"}]}], "+", 
              RowBox[{"2", " ", "Maa", " ", "MAa", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "Faa"}], " ", "waf", " ", "wam", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}], "+", 
                 RowBox[{"FAA", " ", "wAf", " ", "wAm", " ", "\[Alpha]m"}]}], 
                ")"}]}]}], ")"}], "/", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
              "2", " ", "FAA", " ", "MAa", " ", "wAf", " ", "wAm", " ", 
               "\[Alpha]m"}], "+", 
              RowBox[{"FAa", " ", "waf", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "\[Alpha]f"}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Maa", " ", "wam"}], "+", 
                 RowBox[{"2", " ", "MAa", " ", "wAm", " ", "\[Alpha]m"}]}], 
                ")"}]}]}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"wAm", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Maa", " ", "MAA"}], "+", 
                RowBox[{"4", " ", 
                 SuperscriptBox["MAa", "2"], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}], " ", 
                 "\[Alpha]m"}]}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "Faa"}], " ", "Maa", " ", "waf", " ", "wam"}], 
                "+", 
                RowBox[{"FAa", " ", "wAf", " ", "\[Alpha]f", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"Maa", " ", "wam"}], "+", 
                   RowBox[{"2", " ", "MAa", " ", "wAm", " ", "\[Alpha]m"}]}], 
                  ")"}]}]}], ")"}]}], ")"}], "/", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "Faa"}], " ", "Maa", " ", "waf", " ", "wam", " ", 
               
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"MAA", " ", "wAm"}], "+", 
                 RowBox[{"2", " ", "MAa", " ", "wam", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], 
                ")"}]}], "+", 
              RowBox[{
              "2", " ", "FAA", " ", "MAa", " ", "wAf", " ", "wAm", " ", 
               "\[Alpha]m", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Maa", " ", "wam"}], "-", 
                 RowBox[{"2", " ", "MAa", " ", "wAm", " ", "\[Alpha]m"}]}], 
                ")"}]}], "+", 
              RowBox[{"FAa", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Maa", " ", "wam"}], "+", 
                 RowBox[{"2", " ", "MAa", " ", "wAm", " ", "\[Alpha]m"}]}], 
                ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Maa", " ", "waf", " ", "wam", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]f"}], ")"}]}], "+", 
                 RowBox[{"MAA", " ", "wAf", " ", "wAm", " ", "\[Alpha]f"}], 
                 "+", 
                 RowBox[{"2", " ", "MAa", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"wAf", " ", "wam", " ", "\[Alpha]f", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}], "-", 
                    RowBox[{"waf", " ", "wAm", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]f"}], ")"}], " ", 
                    "\[Alpha]m"}]}], ")"}]}]}], ")"}]}]}], ")"}]}]}], ")"}]}],
         ")"}], "/", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "Maa", " ", "MAa", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Faa", " ", "waf", " ", "wam"}], "+", 
             RowBox[{"FAA", " ", "wAf", " ", "wAm"}]}], ")"}], " ", 
           "\[Alpha]m"}], "+", 
          RowBox[{"FAa", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Maa", " ", "wam"}], "+", 
             RowBox[{"2", " ", "MAa", " ", "wAm", " ", "\[Alpha]m"}]}], ")"}],
            " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Maa", " ", "waf", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "\[Alpha]f"}], ")"}]}], "-", 
             RowBox[{
             "2", " ", "MAa", " ", "wAf", " ", "\[Alpha]f", " ", 
              "\[Alpha]m"}]}], ")"}]}]}], ")"}], "2"]}]}], ",", 
     RowBox[{"pYmsm", "\[Rule]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
        "2", " ", "MAa", " ", "r", " ", "wam", " ", "\[Alpha]m", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "Faa"}], " ", "Maa", " ", "waf", " ", "wam"}], "+", 
           RowBox[{"FAa", " ", "wAf", " ", "\[Alpha]f", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Maa", " ", "wam"}], "+", 
              RowBox[{"2", " ", "MAa", " ", "wAm", " ", "\[Alpha]m"}]}], 
             ")"}]}]}], ")"}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Faa", " ", "Maa", " ", "waf", " ", "wam", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"MAA", " ", "wAm"}], "+", 
            RowBox[{"2", " ", "MAa", " ", "wam", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], ")"}]}], 
         "+", 
         RowBox[{
         "2", " ", "FAA", " ", "MAa", " ", "wAf", " ", "wAm", " ", 
          "\[Alpha]m", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "Maa"}], " ", "wam"}], "+", 
            RowBox[{"2", " ", "MAa", " ", "wAm", " ", "\[Alpha]m"}]}], 
           ")"}]}], "-", 
         RowBox[{"FAa", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Maa", " ", "wam"}], "+", 
            RowBox[{"2", " ", "MAa", " ", "wAm", " ", "\[Alpha]m"}]}], ")"}], 
          " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Maa", " ", "waf", " ", "wam", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "\[Alpha]f"}], ")"}]}], "+", 
            RowBox[{"MAA", " ", "wAf", " ", "wAm", " ", "\[Alpha]f"}], "+", 
            RowBox[{"2", " ", "MAa", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"wAf", " ", "wam", " ", "\[Alpha]f", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}], "-", 
               RowBox[{"waf", " ", "wAm", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "\[Alpha]f"}], ")"}], " ", 
                "\[Alpha]m"}]}], ")"}]}]}], ")"}]}]}], ")"}]}]}], ",", 
     RowBox[{"freqYmsm", "\[Rule]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"MAa", " ", "r", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"2", " ", "\[Alpha]m"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"Maa", " ", "MAa", " ", "wam", " ", "wAm", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Faa", " ", "waf", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"FAA", " ", "wAf"}], "+", 
                    RowBox[{"FAa", " ", "waf", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]f"}], ")"}]}]}], 
                   ")"}]}], "-", 
                 RowBox[{"FAa", " ", "FAA", " ", 
                  SuperscriptBox["wAf", "2"], " ", "\[Alpha]f"}]}], ")"}], 
               " ", "\[Alpha]m", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"FAa", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"Maa", " ", "waf", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]f"}], ")"}]}], "+", 
                    RowBox[{
                    "2", " ", "MAa", " ", "wAf", " ", "\[Alpha]f", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], ")"}], 
                  " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"Maa", " ", "wam"}], "+", 
                    RowBox[{"2", " ", "MAa", " ", "wAm", " ", "\[Alpha]m"}]}],
                    ")"}]}], "+", 
                 RowBox[{"2", " ", "Maa", " ", "MAa", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", "Faa"}], " ", "waf", " ", "wam", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}], "+", 
                    RowBox[{
                    "FAA", " ", "wAf", " ", "wAm", " ", "\[Alpha]m"}]}], 
                   ")"}]}]}], ")"}]}], ")"}], "/", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
               "2", " ", "FAA", " ", "MAa", " ", "wAf", " ", "wAm", " ", 
                "\[Alpha]m"}], "+", 
               RowBox[{"FAa", " ", "waf", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "\[Alpha]f"}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Maa", " ", "wam"}], "+", 
                  RowBox[{"2", " ", "MAa", " ", "wAm", " ", "\[Alpha]m"}]}], 
                 ")"}]}]}], ")"}]}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Faa", " ", "Maa", " ", "waf", " ", "wam"}], "-", 
              RowBox[{"FAa", " ", "wAf", " ", "\[Alpha]f", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Maa", " ", "wam"}], "+", 
                 RowBox[{"2", " ", "MAa", " ", "wAm", " ", "\[Alpha]m"}]}], 
                ")"}]}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"FAa", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Maa", " ", "waf", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]f"}], ")"}]}], "-", 
                 RowBox[{"MAa", " ", "wAf", " ", "\[Alpha]f"}]}], ")"}], " ", 
               
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Maa", " ", "wam"}], "+", 
                 RowBox[{"2", " ", "MAa", " ", "wAm", " ", "\[Alpha]m"}]}], 
                ")"}]}], "+", 
              RowBox[{"Maa", " ", "MAa", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Faa", " ", "waf", " ", "wam"}], "+", 
                 RowBox[{
                 "2", " ", "FAA", " ", "wAf", " ", "wAm", " ", 
                  "\[Alpha]m"}]}], ")"}]}]}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"MAa", " ", "wam", " ", "wAm", " ", "\[Alpha]m", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Faa", " ", "Maa", " ", "waf", " ", "wam"}], "-", 
                RowBox[{"FAa", " ", "wAf", " ", "\[Alpha]f", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"Maa", " ", "wam"}], "+", 
                   RowBox[{"2", " ", "MAa", " ", "wAm", " ", "\[Alpha]m"}]}], 
                  ")"}]}]}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "Maa"}], " ", "wAm", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"Faa", " ", "waf", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"FAA", " ", "wAf"}], "+", 
                    RowBox[{"FAa", " ", "waf", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]f"}], ")"}]}]}], 
                    ")"}]}], "-", 
                   RowBox[{"FAa", " ", "FAA", " ", 
                    SuperscriptBox["wAf", "2"], " ", "\[Alpha]f"}]}], ")"}], 
                 " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"Maa", " ", "MAA"}], "+", 
                   RowBox[{"4", " ", 
                    SuperscriptBox["MAa", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}], " ", 
                    "\[Alpha]m"}]}], ")"}]}], "-", 
                RowBox[{
                 RowBox[{"1", "/", "wam"}], 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    SuperscriptBox["FAa", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Maa", " ", 
                    SuperscriptBox["waf", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]f"}], ")"}], "2"]}], 
                    "+", 
                    RowBox[{"wAf", " ", "\[Alpha]f", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", "MAa", " ", "waf", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]f"}], ")"}]}], "+", 
                    RowBox[{"MAA", " ", "wAf", " ", "\[Alpha]f"}]}], 
                    ")"}]}]}], ")"}], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Maa", " ", "wam"}], "+", 
                    RowBox[{"2", " ", "MAa", " ", "wAm", " ", "\[Alpha]m"}]}],
                     ")"}], "2"]}], "+", 
                   RowBox[{"2", " ", "FAa", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Maa", " ", "wam"}], "+", 
                    RowBox[{"2", " ", "MAa", " ", "wAm", " ", "\[Alpha]m"}]}],
                     ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Faa", " ", "Maa", " ", "waf", " ", "wam", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MAa", " ", "waf", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]f"}], ")"}]}], "-", 
                    RowBox[{"MAA", " ", "wAf", " ", "\[Alpha]f"}]}], ")"}]}], 
                    "-", 
                    RowBox[{
                    "2", " ", "FAA", " ", "MAa", " ", "wAf", " ", "wAm", " ", 
                    
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MAa", " ", "wAf", " ", "\[Alpha]f"}], "+", 
                    RowBox[{"Maa", " ", 
                    RowBox[{"(", 
                    RowBox[{"waf", "-", 
                    RowBox[{"waf", " ", "\[Alpha]f"}]}], ")"}]}]}], ")"}], 
                    " ", "\[Alpha]m"}]}], ")"}]}], "+", 
                   RowBox[{"Maa", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["Faa", "2"], " ", "Maa", " ", "MAA", " ", 
                    SuperscriptBox["waf", "2"], " ", 
                    SuperscriptBox["wam", "2"]}], "+", 
                    RowBox[{"4", " ", "Faa", " ", "FAA", " ", 
                    SuperscriptBox["MAa", "2"], " ", "waf", " ", "wAf", " ", 
                    "wam", " ", "wAm", " ", "\[Alpha]m"}], "+", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["FAA", "2"], " ", 
                    SuperscriptBox["MAa", "2"], " ", 
                    SuperscriptBox["wAf", "2"], " ", 
                    SuperscriptBox["wAm", "2"], " ", 
                    SuperscriptBox["\[Alpha]m", "2"]}]}], ")"}]}]}], 
                  ")"}]}]}], ")"}]}], ")"}], "/", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Faa", " ", "Maa", " ", "waf", " ", "wam", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"MAA", " ", "wAm"}], "+", 
                 RowBox[{"2", " ", "MAa", " ", "wam", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], 
                ")"}]}], "+", 
              RowBox[{
              "2", " ", "FAA", " ", "MAa", " ", "wAf", " ", "wAm", " ", 
               "\[Alpha]m", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "Maa"}], " ", "wam"}], "+", 
                 RowBox[{"2", " ", "MAa", " ", "wAm", " ", "\[Alpha]m"}]}], 
                ")"}]}], "-", 
              RowBox[{"FAa", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Maa", " ", "wam"}], "+", 
                 RowBox[{"2", " ", "MAa", " ", "wAm", " ", "\[Alpha]m"}]}], 
                ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Maa", " ", "waf", " ", "wam", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]f"}], ")"}]}], "+", 
                 RowBox[{"MAA", " ", "wAf", " ", "wAm", " ", "\[Alpha]f"}], 
                 "+", 
                 RowBox[{"2", " ", "MAa", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"wAf", " ", "wam", " ", "\[Alpha]f", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}], "-", 
                    RowBox[{"waf", " ", "wAm", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]f"}], ")"}], " ", 
                    "\[Alpha]m"}]}], ")"}]}]}], ")"}]}]}], ")"}]}]}], ")"}]}],
         ")"}], "/", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"FAa", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Maa", " ", "waf", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "\[Alpha]f"}], ")"}]}], "-", 
             RowBox[{"MAa", " ", "wAf", " ", "\[Alpha]f"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Maa", " ", "wam"}], "+", 
             RowBox[{"2", " ", "MAa", " ", "wAm", " ", "\[Alpha]m"}]}], 
            ")"}]}], "+", 
          RowBox[{"Maa", " ", "MAa", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Faa", " ", "waf", " ", "wam"}], "+", 
             RowBox[{
             "2", " ", "FAA", " ", "wAf", " ", "wAm", " ", "\[Alpha]m"}]}], 
            ")"}]}]}], ")"}], "2"]}]}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6972883643517733`*^9, 
  3.697288368928295*^9}},ExpressionUUID->"48cf5d26-0cb9-4ef5-9ac9-\
6fa8db242fef"],

Cell[BoxData[
 RowBox[{
  RowBox[{"equilAp1", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"pXfsm", "\[Rule]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
        "2", " ", "MAa", " ", "r", " ", "waf", " ", "wAf", " ", "wam", " ", 
         "wAm", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Faa", " ", "waf", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"FAA", " ", "wAf"}], "+", 
              RowBox[{"FAa", " ", "waf", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "\[Alpha]f"}], ")"}]}]}], ")"}]}], 
           "-", 
           RowBox[{"FAa", " ", "FAA", " ", 
            SuperscriptBox["wAf", "2"], " ", "\[Alpha]f"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox["FAa", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Alpha]f"}], ")"}], " ", "\[Alpha]f",
             " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"MAA", " ", "wAm"}], "-", 
               RowBox[{"2", " ", "MAa", " ", "wam", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], ")"}], 
             "2"]}], "-", 
           RowBox[{
           "2", " ", "Faa", " ", "FAA", " ", "MAa", " ", "MAA", " ", "wam", 
            " ", "wAm", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"FAa", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "MAA"}], " ", "wAm"}], "+", 
              RowBox[{"2", " ", "MAa", " ", "wam", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], ")"}], 
            " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"MAA", " ", "wAf", " ", "\[Alpha]f"}], "+", 
              RowBox[{"2", " ", "MAa", " ", "waf", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "\[Alpha]f"}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], ")"}]}], 
           "-", 
           RowBox[{"2", " ", "MAa", " ", "MAA", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Faa", " ", "waf", " ", "wam"}], "+", 
              RowBox[{"FAA", " ", "wAf", " ", "wAm"}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], " ", "MAa", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"FAA", " ", "MAA", " ", "wAf", " ", "wAm"}], "+", 
               RowBox[{"FAa", " ", "waf", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "\[Alpha]f"}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"MAA", " ", "wAm"}], "-", 
                  RowBox[{"2", " ", "MAa", " ", "wam", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], 
                 ")"}]}]}], ")"}], "2"], " ", "\[Alpha]m", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
              "2", " ", "Faa", " ", "MAa", " ", "waf", " ", "wam", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"MAA", " ", "wAm"}], "+", 
                 RowBox[{"2", " ", "MAa", " ", "wam", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], ")"}], 
               " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}], "+", 
              RowBox[{"FAA", " ", "MAA", " ", "wAf", " ", "wAm", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Maa", " ", "wam"}], "-", 
                 RowBox[{"2", " ", "MAa", " ", "wAm", " ", "\[Alpha]m"}]}], 
                ")"}]}], "-", 
              RowBox[{"FAa", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "MAA"}], " ", "wAm"}], "+", 
                 RowBox[{"2", " ", "MAa", " ", "wam", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], ")"}], 
               " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Maa", " ", "waf", " ", "wam", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]f"}], ")"}]}], "+", 
                 RowBox[{"MAA", " ", "wAf", " ", "wAm", " ", "\[Alpha]f"}], 
                 "+", 
                 RowBox[{"2", " ", "MAa", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"wAf", " ", "wam", " ", "\[Alpha]f", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}], "-", 
                    RowBox[{"waf", " ", "wAm", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]f"}], ")"}], " ", 
                    "\[Alpha]m"}]}], ")"}]}]}], ")"}]}]}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "FAA"}], " ", "MAA", " ", "wAf", " ", "wAm"}], 
                "+", 
                RowBox[{"FAa", " ", "waf", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", "\[Alpha]f"}], ")"}], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "MAA"}], " ", "wAm"}], "+", 
                   RowBox[{"2", " ", "MAa", " ", "wam", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], 
                  ")"}]}]}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"FAa", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"MAa", " ", "waf", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]f"}], ")"}]}], "-", 
                   RowBox[{"MAA", " ", "wAf", " ", "\[Alpha]f"}]}], ")"}], 
                 " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "MAA"}], " ", "wAm"}], "+", 
                   RowBox[{"2", " ", "MAa", " ", "wam", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], 
                  ")"}]}], "+", 
                RowBox[{"MAa", " ", "MAA", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "FAA"}], " ", "wAf", " ", "wAm"}], "+", 
                   RowBox[{"2", " ", "Faa", " ", "waf", " ", "wam", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], 
                  ")"}]}]}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"FAa", " ", "wAf", " ", "\[Alpha]f", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"MAA", " ", "wAm"}], "-", 
                   RowBox[{"2", " ", "MAa", " ", "wam", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], 
                  ")"}]}], "+", 
                RowBox[{
                "2", " ", "Faa", " ", "MAa", " ", "waf", " ", "wam", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], ")"}], 
              " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "FAa"}], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "MAA"}], " ", "wAm"}], "+", 
                   RowBox[{"2", " ", "MAa", " ", "wam", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], ")"}], 
                 " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                   "2", " ", "Maa", " ", "MAA", " ", "waf", " ", "wam", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]f"}], ")"}]}], "+", 
                   RowBox[{
                    SuperscriptBox["MAA", "2"], " ", "wAf", " ", "wAm", " ", 
                    "\[Alpha]f"}], "+", 
                   RowBox[{"4", " ", 
                    SuperscriptBox["MAa", "2"], " ", "waf", " ", "wam", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]f"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}], " ", 
                    "\[Alpha]m"}], "+", 
                   RowBox[{"2", " ", "MAa", " ", "MAA", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"wAf", " ", "wam", " ", "\[Alpha]f", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}], "-", 
                    RowBox[{"waf", " ", "wAm", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]f"}], ")"}], " ", 
                    "\[Alpha]m"}]}], ")"}]}]}], ")"}]}], "+", 
                RowBox[{"2", " ", "MAA", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"Faa", " ", "MAa", " ", "waf", " ", "wam", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MAA", " ", "wAm"}], "+", 
                    RowBox[{"2", " ", "MAa", " ", "wam", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], ")"}], 
                    " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}], "+", 
                   RowBox[{"FAA", " ", "wAf", " ", "wAm", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Maa", " ", "MAA", " ", "wam"}], "+", 
                    RowBox[{"MAa", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "MAA"}], " ", "wAm"}], "+", 
                    RowBox[{"2", " ", "MAa", " ", "wam", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], ")"}], 
                    " ", "\[Alpha]m"}]}], ")"}]}]}], ")"}]}]}], ")"}]}], 
             ")"}], "/", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "FAa"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"MAa", " ", "waf", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]f"}], ")"}]}], "-", 
                 RowBox[{"MAA", " ", "wAf", " ", "\[Alpha]f"}]}], ")"}], " ", 
               
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "MAA"}], " ", "wAm"}], "+", 
                 RowBox[{"2", " ", "MAa", " ", "wam", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], 
                ")"}]}], "+", 
              RowBox[{"MAa", " ", "MAA", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"FAA", " ", "wAf", " ", "wAm"}], "-", 
                 RowBox[{"2", " ", "Faa", " ", "waf", " ", "wam", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], 
                ")"}]}]}], ")"}]}]}], ")"}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "FAA"}], " ", "MAA", " ", "wAf", " ", "wAm"}], "+", 
           RowBox[{"FAa", " ", "waf", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Alpha]f"}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "MAA"}], " ", "wAm"}], "+", 
              RowBox[{"2", " ", "MAa", " ", "wam", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], ")"}]}]}],
           ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"FAa", " ", "wAf", " ", "\[Alpha]f", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "MAA"}], " ", "wAm"}], "+", 
              RowBox[{"2", " ", "MAa", " ", "wam", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], ")"}]}], 
           "-", 
           RowBox[{"2", " ", "Faa", " ", "MAa", " ", "waf", " ", "wam", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"wAf", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "FAA"}], " ", "MAA", " ", "wAf", " ", "wAm"}], 
               "+", 
               RowBox[{"FAa", " ", "waf", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"MAA", " ", "wAm"}], "-", 
                  RowBox[{"2", " ", "MAa", " ", "wam", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], 
                 ")"}]}]}], ")"}]}], "+", 
            RowBox[{"2", " ", "Faa", " ", "MAa", " ", 
             SuperscriptBox["waf", "2"], " ", "wam", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], ")"}], "2"],
          " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["FAa", "2"]}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Alpha]f"}], ")"}], " ", "\[Alpha]f",
             " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"MAA", " ", "wAm"}], "-", 
               RowBox[{"2", " ", "MAa", " ", "wam", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], ")"}], 
             "2"]}], "+", 
           RowBox[{
           "2", " ", "Faa", " ", "FAA", " ", "MAa", " ", "MAA", " ", "wam", 
            " ", "wAm", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "FAa"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "MAA"}], " ", "wAm"}], "+", 
              RowBox[{"2", " ", "MAa", " ", "wam", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], ")"}], 
            " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"MAA", " ", "wAf", " ", "\[Alpha]f"}], "+", 
              RowBox[{"2", " ", "MAa", " ", "waf", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "\[Alpha]f"}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], ")"}]}], 
           "+", 
           RowBox[{"2", " ", "MAa", " ", "MAA", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Faa", " ", "waf", " ", "wam"}], "+", 
              RowBox[{"FAA", " ", "wAf", " ", "wAm"}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", "Faa", " ", "MAa", " ", "waf", " ", "wam", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"MAA", " ", "wAm"}], "+", 
              RowBox[{"2", " ", "MAa", " ", "wam", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], ")"}], 
            " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}], "+", 
           RowBox[{"FAA", " ", "MAA", " ", "wAf", " ", "wAm", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Maa", " ", "wam"}], "-", 
              RowBox[{"2", " ", "MAa", " ", "wAm", " ", "\[Alpha]m"}]}], 
             ")"}]}], "-", 
           RowBox[{"FAa", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "MAA"}], " ", "wAm"}], "+", 
              RowBox[{"2", " ", "MAa", " ", "wam", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], ")"}], 
            " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Maa", " ", "waf", " ", "wam", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "\[Alpha]f"}], ")"}]}], "+", 
              RowBox[{"MAA", " ", "wAf", " ", "wAm", " ", "\[Alpha]f"}], "+", 
              
              RowBox[{"2", " ", "MAa", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"wAf", " ", "wam", " ", "\[Alpha]f", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}], "-", 
                 RowBox[{"waf", " ", "wAm", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]f"}], ")"}], " ", 
                  "\[Alpha]m"}]}], ")"}]}]}], ")"}]}]}], ")"}]}], ")"}]}]}], 
     ",", 
     RowBox[{"pXmsm", "\[Rule]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"2", " ", "FAa", " ", "MAa", " ", "r", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox["FAa", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Alpha]f"}], ")"}], " ", "\[Alpha]f",
             " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"MAA", " ", "wAm"}], "-", 
               RowBox[{"2", " ", "MAa", " ", "wam", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], ")"}], 
             "2"]}], "-", 
           RowBox[{
           "2", " ", "Faa", " ", "FAA", " ", "MAa", " ", "MAA", " ", "wam", 
            " ", "wAm", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"wAf", " ", "\[Alpha]f", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"FAA", " ", 
               SuperscriptBox["MAA", "2"], " ", "wAf", " ", 
               SuperscriptBox["wAm", "2"]}], "+", 
              RowBox[{"FAa", " ", "waf", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "\[Alpha]f"}], ")"}], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"MAA", " ", "wAm"}], "-", 
                  RowBox[{"2", " ", "MAa", " ", "wam", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], ")"}], 
                "2"]}]}], ")"}]}], "-", 
           RowBox[{"4", " ", "Faa", " ", 
            SuperscriptBox["MAa", "2"], " ", 
            SuperscriptBox["waf", "2"], " ", 
            SuperscriptBox["wam", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Alpha]f"}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}], "2"]}]}], ")"}],
          " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], " ", "MAa", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"FAA", " ", "MAA", " ", "wAf", " ", "wAm"}], "+", 
               RowBox[{"FAa", " ", "waf", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "\[Alpha]f"}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"MAA", " ", "wAm"}], "-", 
                  RowBox[{"2", " ", "MAa", " ", "wam", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], 
                 ")"}]}]}], ")"}], "2"], " ", "\[Alpha]m", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
              "2", " ", "Faa", " ", "MAa", " ", "waf", " ", "wam", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"MAA", " ", "wAm"}], "+", 
                 RowBox[{"2", " ", "MAa", " ", "wam", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], ")"}], 
               " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}], "+", 
              RowBox[{"FAA", " ", "MAA", " ", "wAf", " ", "wAm", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Maa", " ", "wam"}], "-", 
                 RowBox[{"2", " ", "MAa", " ", "wAm", " ", "\[Alpha]m"}]}], 
                ")"}]}], "-", 
              RowBox[{"FAa", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "MAA"}], " ", "wAm"}], "+", 
                 RowBox[{"2", " ", "MAa", " ", "wam", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], ")"}], 
               " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Maa", " ", "waf", " ", "wam", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]f"}], ")"}]}], "+", 
                 RowBox[{"MAA", " ", "wAf", " ", "wAm", " ", "\[Alpha]f"}], 
                 "+", 
                 RowBox[{"2", " ", "MAa", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"wAf", " ", "wam", " ", "\[Alpha]f", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}], "-", 
                    RowBox[{"waf", " ", "wAm", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]f"}], ")"}], " ", 
                    "\[Alpha]m"}]}], ")"}]}]}], ")"}]}]}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "FAA"}], " ", "MAA", " ", "wAf", " ", "wAm"}], 
                "+", 
                RowBox[{"FAa", " ", "waf", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", "\[Alpha]f"}], ")"}], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "MAA"}], " ", "wAm"}], "+", 
                   RowBox[{"2", " ", "MAa", " ", "wam", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], 
                  ")"}]}]}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"FAa", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"MAa", " ", "waf", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]f"}], ")"}]}], "-", 
                   RowBox[{"MAA", " ", "wAf", " ", "\[Alpha]f"}]}], ")"}], 
                 " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "MAA"}], " ", "wAm"}], "+", 
                   RowBox[{"2", " ", "MAa", " ", "wam", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], 
                  ")"}]}], "+", 
                RowBox[{"MAa", " ", "MAA", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "FAA"}], " ", "wAf", " ", "wAm"}], "+", 
                   RowBox[{"2", " ", "Faa", " ", "waf", " ", "wam", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], 
                  ")"}]}]}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"FAa", " ", "wAf", " ", "\[Alpha]f", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"MAA", " ", "wAm"}], "-", 
                   RowBox[{"2", " ", "MAa", " ", "wam", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], 
                  ")"}]}], "+", 
                RowBox[{
                "2", " ", "Faa", " ", "MAa", " ", "waf", " ", "wam", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], ")"}], 
              " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "FAa"}], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "MAA"}], " ", "wAm"}], "+", 
                   RowBox[{"2", " ", "MAa", " ", "wam", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], ")"}], 
                 " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                   "2", " ", "Maa", " ", "MAA", " ", "waf", " ", "wam", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]f"}], ")"}]}], "+", 
                   RowBox[{
                    SuperscriptBox["MAA", "2"], " ", "wAf", " ", "wAm", " ", 
                    "\[Alpha]f"}], "+", 
                   RowBox[{"4", " ", 
                    SuperscriptBox["MAa", "2"], " ", "waf", " ", "wam", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]f"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}], " ", 
                    "\[Alpha]m"}], "+", 
                   RowBox[{"2", " ", "MAa", " ", "MAA", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"wAf", " ", "wam", " ", "\[Alpha]f", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}], "-", 
                    RowBox[{"waf", " ", "wAm", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]f"}], ")"}], " ", 
                    "\[Alpha]m"}]}], ")"}]}]}], ")"}]}], "+", 
                RowBox[{"2", " ", "MAA", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"Faa", " ", "MAa", " ", "waf", " ", "wam", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MAA", " ", "wAm"}], "+", 
                    RowBox[{"2", " ", "MAa", " ", "wam", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], ")"}], 
                    " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}], "+", 
                   RowBox[{"FAA", " ", "wAf", " ", "wAm", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Maa", " ", "MAA", " ", "wam"}], "+", 
                    RowBox[{"MAa", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "MAA"}], " ", "wAm"}], "+", 
                    RowBox[{"2", " ", "MAa", " ", "wam", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], ")"}], 
                    " ", "\[Alpha]m"}]}], ")"}]}]}], ")"}]}]}], ")"}]}], 
             ")"}], "/", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "FAa"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"MAa", " ", "waf", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]f"}], ")"}]}], "-", 
                 RowBox[{"MAA", " ", "wAf", " ", "\[Alpha]f"}]}], ")"}], " ", 
               
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "MAA"}], " ", "wAm"}], "+", 
                 RowBox[{"2", " ", "MAa", " ", "wam", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], 
                ")"}]}], "+", 
              RowBox[{"MAa", " ", "MAA", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"FAA", " ", "wAf", " ", "wAm"}], "-", 
                 RowBox[{"2", " ", "Faa", " ", "waf", " ", "wam", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], 
                ")"}]}]}], ")"}]}]}], ")"}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "FAA"}], " ", "MAA", " ", "wAf", " ", "wAm"}], "+", 
           RowBox[{"FAa", " ", "waf", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Alpha]f"}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "MAA"}], " ", "wAm"}], "+", 
              RowBox[{"2", " ", "MAa", " ", "wam", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], ")"}]}]}],
           ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"FAa", " ", "wAf", " ", "\[Alpha]f", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "MAA"}], " ", "wAm"}], "+", 
              RowBox[{"2", " ", "MAa", " ", "wam", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], ")"}]}], 
           "-", 
           RowBox[{"2", " ", "Faa", " ", "MAa", " ", "waf", " ", "wam", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["FAa", "2"]}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Alpha]f"}], ")"}], " ", "\[Alpha]f",
             " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"MAA", " ", "wAm"}], "-", 
               RowBox[{"2", " ", "MAa", " ", "wam", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], ")"}], 
             "2"]}], "+", 
           RowBox[{
           "2", " ", "Faa", " ", "FAA", " ", "MAa", " ", "MAA", " ", "wam", 
            " ", "wAm", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"FAa", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "MAA"}], " ", "wAm"}], "+", 
              RowBox[{"2", " ", "MAa", " ", "wam", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], ")"}], 
            " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"MAA", " ", "wAf", " ", "\[Alpha]f"}], "+", 
              RowBox[{"2", " ", "MAa", " ", "waf", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "\[Alpha]f"}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], ")"}]}], 
           "-", 
           RowBox[{"2", " ", "MAa", " ", "MAA", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Faa", " ", "waf", " ", "wam"}], "+", 
              RowBox[{"FAA", " ", "wAf", " ", "wAm"}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "FAa"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "MAA"}], " ", "wAm"}], "+", 
              RowBox[{"2", " ", "MAa", " ", "wam", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], ")"}], 
            " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"MAA", " ", "wAf", " ", "\[Alpha]f"}], "+", 
              RowBox[{"2", " ", "MAa", " ", "waf", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "\[Alpha]f"}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], ")"}]}], 
           "+", 
           RowBox[{"2", " ", "MAa", " ", "MAA", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Faa", " ", "waf", " ", "wam"}], "+", 
              RowBox[{"FAA", " ", "wAf", " ", "wAm"}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", "Faa", " ", "MAa", " ", "waf", " ", "wam", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"MAA", " ", "wAm"}], "+", 
              RowBox[{"2", " ", "MAa", " ", "wam", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], ")"}], 
            " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}], "+", 
           RowBox[{"FAA", " ", "MAA", " ", "wAf", " ", "wAm", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Maa", " ", "wam"}], "-", 
              RowBox[{"2", " ", "MAa", " ", "wAm", " ", "\[Alpha]m"}]}], 
             ")"}]}], "-", 
           RowBox[{"FAa", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "MAA"}], " ", "wAm"}], "+", 
              RowBox[{"2", " ", "MAa", " ", "wam", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], ")"}], 
            " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Maa", " ", "waf", " ", "wam", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "\[Alpha]f"}], ")"}]}], "+", 
              RowBox[{"MAA", " ", "wAf", " ", "wAm", " ", "\[Alpha]f"}], "+", 
              
              RowBox[{"2", " ", "MAa", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"wAf", " ", "wam", " ", "\[Alpha]f", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}], "-", 
                 RowBox[{"waf", " ", "wAm", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]f"}], ")"}], " ", 
                  "\[Alpha]m"}]}], ")"}]}]}], ")"}]}]}], ")"}]}], ")"}]}]}], 
     ",", 
     RowBox[{"pYmsm", "\[Rule]", 
      RowBox[{"-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", " ", "MAa", " ", "r", " ", "wAm", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "FAA"}], " ", "MAA", " ", "wAf", " ", "wAm"}], "+", 
            
            RowBox[{"FAa", " ", "waf", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "\[Alpha]f"}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "MAA"}], " ", "wAm"}], "+", 
               RowBox[{"2", " ", "MAa", " ", "wam", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], 
              ")"}]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "Faa", " ", "MAa", " ", "waf", " ", "wam",
            " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"MAA", " ", "wAm"}], "+", 
             RowBox[{"2", " ", "MAa", " ", "wam", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}], "+", 
          RowBox[{"FAA", " ", "MAA", " ", "wAf", " ", "wAm", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "Maa"}], " ", "wam"}], "+", 
             RowBox[{"2", " ", "MAa", " ", "wAm", " ", "\[Alpha]m"}]}], 
            ")"}]}], "+", 
          RowBox[{"FAa", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "MAA"}], " ", "wAm"}], "+", 
             RowBox[{"2", " ", "MAa", " ", "wam", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Maa", " ", "waf", " ", "wam", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "\[Alpha]f"}], ")"}]}], "+", 
             RowBox[{"MAA", " ", "wAf", " ", "wAm", " ", "\[Alpha]f"}], "+", 
             RowBox[{"2", " ", "MAa", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"wAf", " ", "wam", " ", "\[Alpha]f", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}], "-", 
                RowBox[{"waf", " ", "wAm", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", "\[Alpha]f"}], ")"}], " ", 
                 "\[Alpha]m"}]}], ")"}]}]}], ")"}]}]}], ")"}]}]}]}], ",", 
     RowBox[{"freqYmsm", "\[Rule]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"MAa", " ", "r", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"FAA", " ", "MAA", " ", "wAf", " ", "wAm"}], "+", 
              RowBox[{"FAa", " ", "waf", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "\[Alpha]f"}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"MAA", " ", "wAm"}], "-", 
                 RowBox[{"2", " ", "MAa", " ", "wam", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], 
                ")"}]}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"FAa", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"MAa", " ", "waf", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]f"}], ")"}]}], "-", 
                 RowBox[{"MAA", " ", "wAf", " ", "\[Alpha]f"}]}], ")"}], " ", 
               
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "MAA"}], " ", "wAm"}], "+", 
                 RowBox[{"2", " ", "MAa", " ", "wam", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], 
                ")"}]}], "+", 
              RowBox[{"MAa", " ", "MAA", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "FAA"}], " ", "wAf", " ", "wAm"}], "+", 
                 RowBox[{"2", " ", "Faa", " ", "waf", " ", "wam", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], 
                ")"}]}]}], ")"}], " ", "\[Alpha]m"}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "FAA"}], " ", "MAA", " ", "wAf", " ", "wAm"}], 
                "+", 
                RowBox[{"FAa", " ", "waf", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", "\[Alpha]f"}], ")"}], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "MAA"}], " ", "wAm"}], "+", 
                   RowBox[{"2", " ", "MAa", " ", "wam", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], 
                  ")"}]}]}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"FAA", " ", "MAA", " ", "wAf", " ", "wAm", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "Maa"}], " ", "wam"}], "+", 
                   RowBox[{"MAa", " ", "wAm"}]}], ")"}]}], "+", 
                RowBox[{"FAa", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"Maa", " ", "waf", " ", "wam", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]f"}], ")"}]}], "+", 
                   RowBox[{"MAA", " ", "wAf", " ", "wAm", " ", "\[Alpha]f"}], 
                   "-", 
                   RowBox[{"MAa", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"waf", " ", "wAm", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]f"}], ")"}]}], "+", 
                    RowBox[{"wAf", " ", "wam", " ", "\[Alpha]f"}]}], 
                    ")"}]}]}], ")"}], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "MAA"}], " ", "wAm"}], "+", 
                   RowBox[{"2", " ", "MAa", " ", "wam", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], 
                  ")"}]}], "+", 
                RowBox[{
                "2", " ", "Faa", " ", "MAa", " ", "waf", " ", "wam", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"MAa", " ", "wam"}], "-", 
                   RowBox[{"MAA", " ", "wAm"}]}], ")"}], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], ")"}], 
              " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                "2", " ", "Faa", " ", "MAa", " ", "MAA", " ", "waf", " ", 
                 "wam", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}], "-", 
                RowBox[{
                "2", " ", "FAA", " ", "MAa", " ", "MAA", " ", "wAf", " ", 
                 "wAm", " ", "\[Alpha]m"}], "+", 
                RowBox[{"FAa", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "MAA"}], " ", "wAm"}], "+", 
                   RowBox[{"2", " ", "MAa", " ", "wam", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], ")"}], 
                 " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "MAA"}], " ", "wAf", " ", "\[Alpha]f"}], "+", 
                   RowBox[{"2", " ", "MAa", " ", "waf", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]f"}], ")"}], " ", 
                    "\[Alpha]m"}]}], ")"}]}]}], ")"}]}], ")"}], "/", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
              "2", " ", "Faa", " ", "MAa", " ", "waf", " ", "wam", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"MAA", " ", "wAm"}], "+", 
                 RowBox[{"2", " ", "MAa", " ", "wam", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], ")"}], 
               " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}], "+", 
              RowBox[{"FAA", " ", "MAA", " ", "wAf", " ", "wAm", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Maa", " ", "wam"}], "-", 
                 RowBox[{"2", " ", "MAa", " ", "wAm", " ", "\[Alpha]m"}]}], 
                ")"}]}], "-", 
              RowBox[{"FAa", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "MAA"}], " ", "wAm"}], "+", 
                 RowBox[{"2", " ", "MAa", " ", "wam", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], ")"}], 
               " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Maa", " ", "waf", " ", "wam", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]f"}], ")"}]}], "+", 
                 RowBox[{"MAA", " ", "wAf", " ", "wAm", " ", "\[Alpha]f"}], 
                 "+", 
                 RowBox[{"2", " ", "MAa", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"wAf", " ", "wam", " ", "\[Alpha]f", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}], "-", 
                    RowBox[{"waf", " ", "wAm", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]f"}], ")"}], " ", 
                    "\[Alpha]m"}]}], ")"}]}]}], ")"}]}]}], ")"}]}], "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"MAa", " ", "MAA", " ", "wam", " ", "wAm", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Faa", " ", "waf", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"FAA", " ", "wAf"}], "+", 
                   RowBox[{"FAa", " ", "waf", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]f"}], ")"}]}]}], 
                  ")"}]}], "-", 
                RowBox[{"FAa", " ", "FAA", " ", 
                 SuperscriptBox["wAf", "2"], " ", "\[Alpha]f"}]}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 SuperscriptBox["FAa", "2"], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", "\[Alpha]f"}], ")"}], " ", 
                 "\[Alpha]f", " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"MAA", " ", "wAm"}], "-", 
                    RowBox[{"2", " ", "MAa", " ", "wam", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], ")"}], 
                  "2"]}], "-", 
                RowBox[{
                "2", " ", "Faa", " ", "FAA", " ", "MAa", " ", "MAA", " ", 
                 "wam", " ", "wAm", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], ")"}], 
              " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"FAa", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "MAA"}], " ", "wAm"}], "+", 
                   RowBox[{"2", " ", "MAa", " ", "wam", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], ")"}], 
                 " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"MAA", " ", "wAf", " ", "\[Alpha]f"}], "+", 
                   RowBox[{"2", " ", "MAa", " ", "waf", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]f"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], 
                  ")"}]}], "-", 
                RowBox[{"2", " ", "MAa", " ", "MAA", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"Faa", " ", "waf", " ", "wam"}], "+", 
                   RowBox[{"FAA", " ", "wAf", " ", "wAm"}]}], ")"}], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], ")"}], 
              " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                RowBox[{"2", " ", "\[Alpha]m"}]}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "2"}], " ", "MAa", " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"FAA", " ", "MAA", " ", "wAf", " ", "wAm"}], "+", 
                    
                    RowBox[{"FAa", " ", "waf", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]f"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MAA", " ", "wAm"}], "-", 
                    RowBox[{"2", " ", "MAa", " ", "wam", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], 
                    ")"}]}]}], ")"}], "2"], " ", "\[Alpha]m", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                   "2", " ", "Faa", " ", "MAa", " ", "waf", " ", "wam", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MAA", " ", "wAm"}], "+", 
                    RowBox[{"2", " ", "MAa", " ", "wam", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], ")"}], 
                    " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}], "+", 
                   RowBox[{"FAA", " ", "MAA", " ", "wAf", " ", "wAm", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Maa", " ", "wam"}], "-", 
                    RowBox[{"2", " ", "MAa", " ", "wAm", " ", "\[Alpha]m"}]}],
                     ")"}]}], "-", 
                   RowBox[{"FAa", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "MAA"}], " ", "wAm"}], "+", 
                    RowBox[{"2", " ", "MAa", " ", "wam", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], ")"}], 
                    " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Maa", " ", "waf", " ", "wam", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]f"}], ")"}]}], "+", 
                    RowBox[{"MAA", " ", "wAf", " ", "wAm", " ", "\[Alpha]f"}],
                     "+", 
                    RowBox[{"2", " ", "MAa", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"wAf", " ", "wam", " ", "\[Alpha]f", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}], "-", 
                    RowBox[{"waf", " ", "wAm", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]f"}], ")"}], " ", 
                    "\[Alpha]m"}]}], ")"}]}]}], ")"}]}]}], ")"}]}], "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "FAA"}], " ", "MAA", " ", "wAf", " ", 
                    "wAm"}], "+", 
                    RowBox[{"FAa", " ", "waf", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]f"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "MAA"}], " ", "wAm"}], "+", 
                    RowBox[{"2", " ", "MAa", " ", "wam", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], 
                    ")"}]}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"FAa", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MAa", " ", "waf", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]f"}], ")"}]}], "-", 
                    RowBox[{"MAA", " ", "wAf", " ", "\[Alpha]f"}]}], ")"}], 
                    " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "MAA"}], " ", "wAm"}], "+", 
                    RowBox[{"2", " ", "MAa", " ", "wam", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], 
                    ")"}]}], "+", 
                    RowBox[{"MAa", " ", "MAA", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "FAA"}], " ", "wAf", " ", "wAm"}], "+", 
                    RowBox[{"2", " ", "Faa", " ", "waf", " ", "wam", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], 
                    ")"}]}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"FAa", " ", "wAf", " ", "\[Alpha]f", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MAA", " ", "wAm"}], "-", 
                    RowBox[{"2", " ", "MAa", " ", "wam", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], 
                    ")"}]}], "+", 
                    RowBox[{
                    "2", " ", "Faa", " ", "MAa", " ", "waf", " ", "wam", " ", 
                    
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], ")"}], 
                   " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "FAa"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "MAA"}], " ", "wAm"}], "+", 
                    RowBox[{"2", " ", "MAa", " ", "wam", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], ")"}], 
                    " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    "2", " ", "Maa", " ", "MAA", " ", "waf", " ", "wam", " ", 
                    
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]f"}], ")"}]}], "+", 
                    RowBox[{
                    SuperscriptBox["MAA", "2"], " ", "wAf", " ", "wAm", " ", 
                    "\[Alpha]f"}], "+", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["MAa", "2"], " ", "waf", " ", "wam", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]f"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}], " ", 
                    "\[Alpha]m"}], "+", 
                    RowBox[{"2", " ", "MAa", " ", "MAA", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"wAf", " ", "wam", " ", "\[Alpha]f", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}], "-", 
                    RowBox[{"waf", " ", "wAm", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]f"}], ")"}], " ", 
                    "\[Alpha]m"}]}], ")"}]}]}], ")"}]}], "+", 
                    RowBox[{"2", " ", "MAA", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Faa", " ", "MAa", " ", "waf", " ", "wam", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MAA", " ", "wAm"}], "+", 
                    RowBox[{"2", " ", "MAa", " ", "wam", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], ")"}], 
                    " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}], "+", 
                    RowBox[{"FAA", " ", "wAf", " ", "wAm", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Maa", " ", "MAA", " ", "wam"}], "+", 
                    RowBox[{"MAa", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "MAA"}], " ", "wAm"}], "+", 
                    RowBox[{"2", " ", "MAa", " ", "wam", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], ")"}], 
                    " ", "\[Alpha]m"}]}], ")"}]}]}], ")"}]}]}], ")"}]}], 
                  ")"}], "/", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "FAa"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MAa", " ", "waf", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]f"}], ")"}]}], "-", 
                    RowBox[{"MAA", " ", "wAf", " ", "\[Alpha]f"}]}], ")"}], 
                    " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "MAA"}], " ", "wAm"}], "+", 
                    RowBox[{"2", " ", "MAa", " ", "wam", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], 
                    ")"}]}], "+", 
                   RowBox[{"MAa", " ", "MAA", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"FAA", " ", "wAf", " ", "wAm"}], "-", 
                    RowBox[{"2", " ", "Faa", " ", "waf", " ", "wam", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], 
                    ")"}]}]}], ")"}]}]}], ")"}]}], ")"}], "/", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "FAA"}], " ", "MAA", " ", "wAf", " ", "wAm"}], 
                "+", 
                RowBox[{"FAa", " ", "waf", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", "\[Alpha]f"}], ")"}], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "MAA"}], " ", "wAm"}], "+", 
                   RowBox[{"2", " ", "MAa", " ", "wam", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], 
                  ")"}]}]}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"FAa", " ", "wAf", " ", "\[Alpha]f", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "MAA"}], " ", "wAm"}], "+", 
                   RowBox[{"2", " ", "MAa", " ", "wam", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], 
                  ")"}]}], "-", 
                RowBox[{
                "2", " ", "Faa", " ", "MAa", " ", "waf", " ", "wam", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], ")"}], 
              " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", 
                  SuperscriptBox["FAa", "2"]}], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", "\[Alpha]f"}], ")"}], " ", 
                 "\[Alpha]f", " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"MAA", " ", "wAm"}], "-", 
                    RowBox[{"2", " ", "MAa", " ", "wam", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], ")"}], 
                  "2"]}], "+", 
                RowBox[{
                "2", " ", "Faa", " ", "FAA", " ", "MAa", " ", "MAA", " ", 
                 "wam", " ", "wAm", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], ")"}], 
              " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "FAa"}], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "MAA"}], " ", "wAm"}], "+", 
                   RowBox[{"2", " ", "MAa", " ", "wam", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], ")"}], 
                 " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"MAA", " ", "wAf", " ", "\[Alpha]f"}], "+", 
                   RowBox[{"2", " ", "MAa", " ", "waf", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]f"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], 
                  ")"}]}], "+", 
                RowBox[{"2", " ", "MAa", " ", "MAA", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"Faa", " ", "waf", " ", "wam"}], "+", 
                   RowBox[{"FAA", " ", "wAf", " ", "wAm"}]}], ")"}], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], ")"}], 
              " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                "2", " ", "Faa", " ", "MAa", " ", "waf", " ", "wam", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"MAA", " ", "wAm"}], "+", 
                   RowBox[{"2", " ", "MAa", " ", "wam", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], ")"}], 
                 " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}], "+", 
                RowBox[{"FAA", " ", "MAA", " ", "wAf", " ", "wAm", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"Maa", " ", "wam"}], "-", 
                   RowBox[{"2", " ", "MAa", " ", "wAm", " ", "\[Alpha]m"}]}], 
                  ")"}]}], "-", 
                RowBox[{"FAa", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "MAA"}], " ", "wAm"}], "+", 
                   RowBox[{"2", " ", "MAa", " ", "wam", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], ")"}], 
                 " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"Maa", " ", "waf", " ", "wam", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]f"}], ")"}]}], "+", 
                   RowBox[{"MAA", " ", "wAf", " ", "wAm", " ", "\[Alpha]f"}], 
                   "+", 
                   RowBox[{"2", " ", "MAa", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"wAf", " ", "wam", " ", "\[Alpha]f", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}], "-", 
                    RowBox[{"waf", " ", "wAm", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Alpha]f"}], ")"}], " ", 
                    "\[Alpha]m"}]}], ")"}]}]}], ")"}]}]}], ")"}]}], ")"}]}]}],
           ")"}]}], ")"}], "/", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"FAa", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"MAa", " ", "waf", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "\[Alpha]f"}], ")"}]}], "-", 
             RowBox[{"MAA", " ", "wAf", " ", "\[Alpha]f"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "MAA"}], " ", "wAm"}], "+", 
             RowBox[{"2", " ", "MAa", " ", "wam", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], ")"}]}], 
          "+", 
          RowBox[{"MAa", " ", "MAA", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "FAA"}], " ", "wAf", " ", "wAm"}], "+", 
             RowBox[{"2", " ", "Faa", " ", "waf", " ", "wam", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], ")"}]}]}], 
         ")"}], "2"]}]}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.697288345217907*^9, 
  3.697288356660277*^9}},ExpressionUUID->"5de17b8a-9539-4051-8aec-\
53c75098e927"],

Cell[BoxData[
 RowBox[{
  RowBox[{"equilB1", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"pXfsm", "\[Rule]", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
        "2", " ", "FAa", " ", "MAa", " ", "r", " ", "wAf", " ", "wam", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Alpha]f"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}], 
        RowBox[{
         RowBox[{
         "2", " ", "FAA", " ", "MAa", " ", "wAf", " ", "wAm", " ", 
          "\[Alpha]m"}], "+", 
         RowBox[{"FAa", " ", "waf", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Alpha]f"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Maa", " ", "wam"}], "+", 
            RowBox[{"2", " ", "MAa", " ", "wAm", " ", "\[Alpha]m"}]}], 
           ")"}]}]}]]}]}], ",", 
     RowBox[{"pXmsm", "\[Rule]", 
      FractionBox[
       RowBox[{"2", " ", "MAa", " ", "r", " ", "wAm", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"FAA", " ", "wAf"}], "+", 
          RowBox[{"FAa", " ", "waf", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Alpha]f"}], ")"}]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}], 
       RowBox[{
        RowBox[{
        "2", " ", "FAA", " ", "MAa", " ", "wAf", " ", "wAm", " ", 
         "\[Alpha]m"}], "+", 
        RowBox[{"FAa", " ", "waf", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Alpha]f"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Maa", " ", "wam"}], "+", 
           RowBox[{"2", " ", "MAa", " ", "wAm", " ", "\[Alpha]m"}]}], 
          ")"}]}]}]]}], ",", 
     RowBox[{"pYmsm", "\[Rule]", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"2", " ", "MAa", " ", "r", " ", "wam", " ", "\[Alpha]m"}], 
        RowBox[{
         RowBox[{"MAA", " ", "wAm"}], "+", 
         RowBox[{"2", " ", "MAa", " ", "wam", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}]]}]}], ",", 
     RowBox[{"freqYmsm", "\[Rule]", 
      RowBox[{"r", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"2", " ", "\[Alpha]m"}], "-", 
         FractionBox[
          RowBox[{"MAA", " ", "wAm", " ", "\[Alpha]m", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"2", " ", "\[Alpha]m"}]}], ")"}]}], 
          RowBox[{
           RowBox[{"MAA", " ", "wAm"}], "+", 
           RowBox[{"2", " ", "MAa", " ", "wam", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}]], "+", 
         FractionBox[
          RowBox[{"FAa", " ", "Maa", " ", "waf", " ", "wam", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Alpha]f"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"2", " ", "\[Alpha]m"}]}], ")"}]}], 
          RowBox[{
           RowBox[{
           "2", " ", "FAA", " ", "MAa", " ", "wAf", " ", "wAm", " ", 
            "\[Alpha]m"}], "+", 
           RowBox[{"FAa", " ", "waf", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Alpha]f"}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Maa", " ", "wam"}], "+", 
              RowBox[{"2", " ", "MAa", " ", "wAm", " ", "\[Alpha]m"}]}], 
             ")"}]}]}]]}], ")"}]}]}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.5400455435127172`*^9, 3.540045570745287*^9}, {
  3.540045614628035*^9, 3.540045615346765*^9}, {3.555182478517625*^9, 
  3.55518248157164*^9}, {3.6972852504701223`*^9, 3.69728531046509*^9}, {
  3.697285405257876*^9, 
  3.697285406563648*^9}},ExpressionUUID->"41499ce5-8785-4d54-bbac-\
46e3a3a8e1ee"],

Cell[BoxData[
 RowBox[{
  RowBox[{"equilBp1", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"pXfsm", "\[Rule]", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
        "2", " ", "FAa", " ", "MAa", " ", "r", " ", "waf", " ", "wAm", " ", 
         "\[Alpha]f", " ", "\[Alpha]m"}], 
        RowBox[{
         RowBox[{"FAa", " ", "wAf", " ", "\[Alpha]f", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"MAA", " ", "wAm"}], "-", 
            RowBox[{"2", " ", "MAa", " ", "wam", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], ")"}]}], 
         "+", 
         RowBox[{"2", " ", "Faa", " ", "MAa", " ", "waf", " ", "wam", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}]]}]}], ",", 
     RowBox[{"pXmsm", "\[Rule]", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"2", " ", "MAa", " ", "r", " ", "wam", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Faa", " ", "waf"}], "-", 
           RowBox[{"FAa", " ", "wAf", " ", "\[Alpha]f"}]}], ")"}], " ", 
         "\[Alpha]m"}], 
        RowBox[{
         RowBox[{"FAa", " ", "wAf", " ", "\[Alpha]f", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"MAA", " ", "wAm"}], "-", 
            RowBox[{"2", " ", "MAa", " ", "wam", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], ")"}]}], 
         "+", 
         RowBox[{"2", " ", "Faa", " ", "MAa", " ", "waf", " ", "wam", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}]]}]}], ",", 
     RowBox[{"pYmsm", "\[Rule]", 
      FractionBox[
       RowBox[{"2", " ", "MAa", " ", "r", " ", "wAm", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}], 
       RowBox[{
        RowBox[{
         RowBox[{"-", "Maa"}], " ", "wam"}], "+", 
        RowBox[{"2", " ", "MAa", " ", "wAm", " ", "\[Alpha]m"}]}]]}], ",", 
     RowBox[{"freqYmsm", "\[Rule]", 
      RowBox[{"r", " ", "\[Alpha]m", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"2", " ", "\[Alpha]m"}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox[
          RowBox[{
          "FAa", " ", "MAA", " ", "wAf", " ", "wAm", " ", "\[Alpha]f"}], 
          RowBox[{
           RowBox[{"FAa", " ", "wAf", " ", "\[Alpha]f", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"MAA", " ", "wAm"}], "-", 
              RowBox[{"2", " ", "MAa", " ", "wam", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}], ")"}]}], 
           "+", 
           RowBox[{"2", " ", "Faa", " ", "MAa", " ", "waf", " ", "wam", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Alpha]m"}], ")"}]}]}]], "+", 
         FractionBox[
          RowBox[{
           RowBox[{
            RowBox[{"-", "Maa"}], " ", "wam"}], "+", 
           RowBox[{"2", " ", "MAa", " ", "wAm"}]}], 
          RowBox[{
           RowBox[{"Maa", " ", "wam"}], "-", 
           RowBox[{"2", " ", "MAa", " ", "wAm", " ", "\[Alpha]m"}]}]]}], 
        ")"}]}]}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.5400455435127172`*^9, 3.540045570745287*^9}, {
  3.540045614628035*^9, 3.540045615346765*^9}, {3.555182478517625*^9, 
  3.55518248157164*^9}, {3.6972852504701223`*^9, 3.697285331968985*^9}, {
  3.697285411312855*^9, 
  3.697285412617012*^9}},ExpressionUUID->"19608f04-d079-48f8-8f52-\
c52183d6b047"]
}, Closed]],

Cell[CellGroupData[{

Cell["Definitions [ENTER]", "Subsubsection",
 CellChangeTimes->{{3.6973004637216682`*^9, 3.6973004648312063`*^9}, {
  3.6973026036072807`*^9, 
  3.697302605798484*^9}},ExpressionUUID->"e5da9e25-b6f6-43f3-b772-\
9ab2f5be332d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "numequil", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"numequil", "[", 
   RowBox[{
   "FAA_", ",", "FAa_", ",", "Faa_", ",", "MAA_", ",", "MAa_", ",", "Maa_", 
    ",", "wAf_", ",", "waf_", ",", "wAm_", ",", "wam_", ",", "\[Alpha]f_", 
    ",", "\[Alpha]m_", ",", "r_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"numequil", "[", 
    RowBox[{
    "FAA", ",", "FAa", ",", "Faa", ",", "MAA", ",", "MAa", ",", "Maa", ",", 
     "wAf", ",", "waf", ",", "wAm", ",", "wam", ",", "\[Alpha]f", ",", 
     "\[Alpha]m", ",", "r"}], "]"}], "=", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"pXf", ",", "pXm", ",", "pYm", ",", "freqYm"}], "}"}], "/.", 
    RowBox[{"NSolve", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Faa", " ", "pXf", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "pXf", "+", "pXm", "-", 
               RowBox[{"pXf", " ", "pXm"}]}], ")"}], " ", "waf", " ", "wam"}],
             "-", 
            RowBox[{"FAA", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "pXf"}], ")"}], " ", "pXf", " ", 
             "pXm", " ", "wAf", " ", "wAm"}], "+", 
            RowBox[{"FAa", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "pXm"}], " ", "waf", " ", "wAm"}], "+", 
               RowBox[{"pXf", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "pXm"}], ")"}], " ", "wAf", " ", 
                   "wam"}], "+", 
                  RowBox[{"pXm", " ", "waf", " ", "wAm"}]}], ")"}]}]}], ")"}],
              " ", 
             RowBox[{"(", 
              RowBox[{"pXf", "-", "\[Alpha]f"}], ")"}]}]}], ")"}], "/", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Faa", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "pXf"}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "pXm"}], ")"}], " ", "waf", " ", 
             "wam"}], "+", 
            RowBox[{"FAA", " ", "pXf", " ", "pXm", " ", "wAf", " ", "wAm"}], 
            "+", 
            RowBox[{"FAa", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"pXm", " ", "waf", " ", "wAm"}], "-", 
               RowBox[{"pXf", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "pXm"}], ")"}], " ", "wAf", " ", 
                   "wam"}], "+", 
                  RowBox[{"pXm", " ", "waf", " ", "wAm"}]}], ")"}]}]}], 
              ")"}]}]}], ")"}]}], "\[Equal]", "0"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "freqYm"}], ")"}], " ", "Maa", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "pXf"}], ")"}], " ", "pXm", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "pYm"}], ")"}], " ", "waf", " ", 
             "wam"}], "+", 
            RowBox[{"MAA", " ", "pXf", " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"2", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "freqYm"}], ")"}], " ", "pXm"}]}], 
              ")"}], " ", "pYm", " ", "wAf", " ", "wAm"}], "-", 
            RowBox[{"2", " ", "MAa", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"pYm", " ", "waf", " ", "wAm", " ", 
                RowBox[{"(", 
                 RowBox[{"pXm", "-", 
                  RowBox[{"freqYm", " ", "pXm"}], "-", 
                  RowBox[{"r", " ", "\[Alpha]m"}]}], ")"}]}], "+", 
               RowBox[{"pXf", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "freqYm"}], ")"}], " ", "pXm", 
                   " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "pYm"}], ")"}], " ", "wAf", " ", 
                    "wam"}], "+", 
                    RowBox[{"pYm", " ", "waf", " ", "wAm"}]}], ")"}]}], "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "pYm", "+", "r", "-", 
                    RowBox[{"pYm", " ", "r"}]}], ")"}], " ", "wAf", " ", 
                    "wam"}], "+", 
                    RowBox[{"pYm", " ", "r", " ", "waf", " ", "wAm"}]}], 
                    ")"}], " ", "\[Alpha]m"}]}], ")"}]}]}], ")"}]}]}], ")"}], 
          "/", 
          RowBox[{"(", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Maa", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "pXf"}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "pYm"}], ")"}], " ", "waf", " ", 
               "wam"}], "+", 
              RowBox[{"MAA", " ", "pXf", " ", "pYm", " ", "wAf", " ", "wAm"}],
               "+", 
              RowBox[{"MAa", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"pYm", " ", "waf", " ", "wAm"}], "-", 
                 RowBox[{"pXf", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "pYm"}], ")"}], " ", "wAf", " ", 
                    "wam"}], "+", 
                    RowBox[{"pYm", " ", "waf", " ", "wAm"}]}], ")"}]}]}], 
                ")"}]}]}], ")"}]}], ")"}]}], "\[Equal]", "0"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"MAA", " ", "pXf", " ", "pYm", " ", "wAf", " ", "wAm"}], 
            "-", 
            RowBox[{"2", " ", "freqYm", " ", "pYm", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Maa", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "pXf"}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "pYm"}], ")"}], " ", "waf", " ", 
                "wam"}], "+", 
               RowBox[{
               "MAA", " ", "pXf", " ", "pYm", " ", "wAf", " ", "wAm"}], "+", 
               RowBox[{"MAa", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"pYm", " ", "waf", " ", "wAm"}], "-", 
                  RowBox[{"pXf", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "pYm"}], ")"}], " ", "wAf", " ", 
                    "wam"}], "+", 
                    RowBox[{"pYm", " ", "waf", " ", "wAm"}]}], ")"}]}]}], 
                 ")"}]}]}], ")"}]}], "+", 
            RowBox[{"2", " ", "MAa", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "pYm"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "r"}], ")"}], " ", "waf", " ", 
                "wAm"}], "+", 
               RowBox[{"pXf", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "pYm"}], " ", "waf", " ", "wAm"}], "+", 
                  RowBox[{"r", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"wAf", " ", "wam"}], "-", 
                    RowBox[{"pYm", " ", "wAf", " ", "wam"}], "+", 
                    RowBox[{"pYm", " ", "waf", " ", "wAm"}]}], ")"}]}]}], 
                 ")"}]}]}], ")"}], " ", "\[Alpha]m"}]}], ")"}], "/", 
          RowBox[{"(", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Maa", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "pXf"}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "pYm"}], ")"}], " ", "waf", " ", 
               "wam"}], "+", 
              RowBox[{"MAA", " ", "pXf", " ", "pYm", " ", "wAf", " ", "wAm"}],
               "+", 
              RowBox[{"MAa", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"pYm", " ", "waf", " ", "wAm"}], "-", 
                 RowBox[{"pXf", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "pYm"}], ")"}], " ", "wAf", " ", 
                    "wam"}], "+", 
                    RowBox[{"pYm", " ", "waf", " ", "wAm"}]}], ")"}]}]}], 
                ")"}]}]}], ")"}]}], ")"}]}], "\[Equal]", "0"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                RowBox[{"2", " ", "freqYm"}]}], ")"}]}], " ", "Maa", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "pXf"}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "pYm"}], ")"}], " ", "waf", " ", 
             "wam"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"2", " ", "freqYm"}]}], ")"}], " ", "MAA", " ", "pXf", 
             " ", "pYm", " ", "wAf", " ", "wAm"}], "+", 
            RowBox[{"2", " ", "MAa", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"pYm", " ", "waf", " ", "wAm", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "freqYm"}], "+", "r", "+", "\[Alpha]m", "-", 
                  RowBox[{"2", " ", "r", " ", "\[Alpha]m"}]}], ")"}]}], "+", 
               RowBox[{"pXf", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "pYm"}], ")"}], " ", "wAf", " ", 
                   "wam", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "freqYm", "+", "r", "+", 
                    "\[Alpha]m", "-", 
                    RowBox[{"2", " ", "r", " ", "\[Alpha]m"}]}], ")"}]}], "+", 
                  RowBox[{"pYm", " ", "waf", " ", "wAm", " ", 
                   RowBox[{"(", 
                    RowBox[{"freqYm", "-", "\[Alpha]m", "+", 
                    RowBox[{"r", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"2", " ", "\[Alpha]m"}]}], ")"}]}]}], ")"}]}]}], 
                 ")"}]}]}], ")"}]}]}], ")"}], "/", 
          RowBox[{"(", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Maa", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "pXf"}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "pYm"}], ")"}], " ", "waf", " ", 
               "wam"}], "+", 
              RowBox[{"MAA", " ", "pXf", " ", "pYm", " ", "wAf", " ", "wAm"}],
               "+", 
              RowBox[{"MAa", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"pYm", " ", "waf", " ", "wAm"}], "-", 
                 RowBox[{"pXf", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "pYm"}], ")"}], " ", "wAf", " ", 
                    "wam"}], "+", 
                    RowBox[{"pYm", " ", "waf", " ", "wAm"}]}], ")"}]}]}], 
                ")"}]}]}], ")"}]}], ")"}]}], "\[Equal]", "0"}]}], "}"}], ",", 
      
      RowBox[{"{", 
       RowBox[{"pXf", ",", "pXm", ",", "pYm", ",", "freqYm"}], "}"}]}], 
     "]"}]}]}]}]}], "Input",
 CellChangeTimes->{{3.503411411575946*^9, 3.503411509864382*^9}, {
   3.503411597852846*^9, 3.50341160032905*^9}, {3.503412240019065*^9, 
   3.503412251143351*^9}, {3.5034328822544737`*^9, 3.503432896820878*^9}, {
   3.5034637627275953`*^9, 3.5034637836686287`*^9}, 3.508255781356729*^9, {
   3.513088822854395*^9, 3.513088826740991*^9}, {3.540059543347464*^9, 
   3.540059570817113*^9}, {3.54005960461485*^9, 3.540059632388194*^9}, 
   3.54012057513126*^9, {3.5401241296849403`*^9, 3.540124158559512*^9}, 
   3.5401246163427973`*^9, 3.540128690267112*^9, {3.589459409100975*^9, 
   3.5894594371202183`*^9}, 3.5894596576686583`*^9, {3.697299126359418*^9, 
   3.697299248763527*^9}, 3.697303751258449*^9, {3.697303791926402*^9, 
   3.697303824327553*^9}, {3.6973039820194473`*^9, 
   3.697303989244445*^9}},ExpressionUUID->"d81b4e78-39b9-4576-b6aa-\
a0e5427a863d"],

Cell["Eigenvalues of internal stability matrix:", "Text",
 CellChangeTimes->{{3.5401247867798433`*^9, 
  3.540124801897924*^9}},ExpressionUUID->"bc6226d7-bc09-434d-bb9a-\
e62a5df7e619"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "internstab", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"internstab", "[", 
   RowBox[{
   "FAA_", ",", "FAa_", ",", "Faa_", ",", "MAA_", ",", "MAa_", ",", "Maa_", 
    ",", "wAf_", ",", "waf_", ",", "wAm_", ",", "wam_", ",", "\[Alpha]f_", 
    ",", "\[Alpha]m_", ",", "r_", ",", "pXf_", ",", "pXm_", ",", "pYm_", ",", 
    "freqYm_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"internstab", "[", 
    RowBox[{
    "FAA", ",", "FAa", ",", "Faa", ",", "MAA", ",", "MAa", ",", "Maa", ",", 
     "wAf", ",", "waf", ",", "wAm", ",", "wam", ",", "\[Alpha]f", ",", 
     "\[Alpha]m", ",", "r", ",", "pXf", ",", "pXm", ",", "pYm", ",", 
     "freqYm"}], "]"}], "=", 
   RowBox[{"Eigenvalues", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{"waf", " ", "wAf", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "Faa"}], " ", "FAA", " ", "pXm", " ", "wam", " ", 
               "wAm"}], "+", 
              RowBox[{"Faa", " ", "FAA", " ", 
               SuperscriptBox["pXm", "2"], " ", "wam", " ", "wAm"}], "-", 
              RowBox[{"FAa", " ", "FAA", " ", 
               SuperscriptBox["pXm", "2"], " ", 
               SuperscriptBox["wAm", "2"]}], "-", 
              RowBox[{"Faa", " ", "FAa", " ", 
               SuperscriptBox["wam", "2"], " ", "\[Alpha]f"}], "+", 
              RowBox[{"2", " ", "Faa", " ", "FAa", " ", "pXm", " ", 
               SuperscriptBox["wam", "2"], " ", "\[Alpha]f"}], "-", 
              RowBox[{"Faa", " ", "FAa", " ", 
               SuperscriptBox["pXm", "2"], " ", 
               SuperscriptBox["wam", "2"], " ", "\[Alpha]f"}], "+", 
              RowBox[{"FAa", " ", "FAA", " ", 
               SuperscriptBox["pXm", "2"], " ", 
               SuperscriptBox["wAm", "2"], " ", "\[Alpha]f"}]}], ")"}]}], 
           ")"}]}], "/", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Faa", " ", "waf", " ", "wam"}], "-", 
            RowBox[{"Faa", " ", "pXf", " ", "waf", " ", "wam"}], "-", 
            RowBox[{"Faa", " ", "pXm", " ", "waf", " ", "wam"}], "+", 
            RowBox[{"Faa", " ", "pXf", " ", "pXm", " ", "waf", " ", "wam"}], 
            "+", 
            RowBox[{"FAa", " ", "pXf", " ", "wAf", " ", "wam"}], "-", 
            RowBox[{"FAa", " ", "pXf", " ", "pXm", " ", "wAf", " ", "wam"}], 
            "+", 
            RowBox[{"FAa", " ", "pXm", " ", "waf", " ", "wAm"}], "-", 
            RowBox[{"FAa", " ", "pXf", " ", "pXm", " ", "waf", " ", "wAm"}], 
            "+", 
            RowBox[{"FAA", " ", "pXf", " ", "pXm", " ", "wAf", " ", "wAm"}]}],
            ")"}], "2"]}], ",", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{"wam", " ", "wAm", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "Faa"}], " ", "FAA", " ", "pXf", " ", "waf", " ", 
               "wAf"}], "+", 
              RowBox[{"Faa", " ", "FAA", " ", 
               SuperscriptBox["pXf", "2"], " ", "waf", " ", "wAf"}], "-", 
              RowBox[{"FAa", " ", "FAA", " ", 
               SuperscriptBox["pXf", "2"], " ", 
               SuperscriptBox["wAf", "2"]}], "-", 
              RowBox[{"Faa", " ", "FAa", " ", 
               SuperscriptBox["waf", "2"], " ", "\[Alpha]f"}], "+", 
              RowBox[{"2", " ", "Faa", " ", "FAa", " ", "pXf", " ", 
               SuperscriptBox["waf", "2"], " ", "\[Alpha]f"}], "-", 
              RowBox[{"Faa", " ", "FAa", " ", 
               SuperscriptBox["pXf", "2"], " ", 
               SuperscriptBox["waf", "2"], " ", "\[Alpha]f"}], "+", 
              RowBox[{"FAa", " ", "FAA", " ", 
               SuperscriptBox["pXf", "2"], " ", 
               SuperscriptBox["wAf", "2"], " ", "\[Alpha]f"}]}], ")"}]}], 
           ")"}]}], "/", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Faa", " ", "waf", " ", "wam"}], "-", 
            RowBox[{"Faa", " ", "pXf", " ", "waf", " ", "wam"}], "-", 
            RowBox[{"Faa", " ", "pXm", " ", "waf", " ", "wam"}], "+", 
            RowBox[{"Faa", " ", "pXf", " ", "pXm", " ", "waf", " ", "wam"}], 
            "+", 
            RowBox[{"FAa", " ", "pXf", " ", "wAf", " ", "wam"}], "-", 
            RowBox[{"FAa", " ", "pXf", " ", "pXm", " ", "wAf", " ", "wam"}], 
            "+", 
            RowBox[{"FAa", " ", "pXm", " ", "waf", " ", "wAm"}], "-", 
            RowBox[{"FAa", " ", "pXf", " ", "pXm", " ", "waf", " ", "wAm"}], 
            "+", 
            RowBox[{"FAA", " ", "pXf", " ", "pXm", " ", "wAf", " ", "wAm"}]}],
            ")"}], "2"]}], ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{"waf", " ", "wAf", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "Maa"}], " ", "MAA", " ", "pYm", " ", "wam", " ", 
               "wAm"}], "+", 
              RowBox[{"Maa", " ", "MAA", " ", 
               SuperscriptBox["pYm", "2"], " ", "wam", " ", "wAm"}], "-", 
              RowBox[{"2", " ", "MAa", " ", "MAA", " ", 
               SuperscriptBox["pYm", "2"], " ", 
               SuperscriptBox["wAm", "2"]}], "+", 
              RowBox[{"2", " ", "MAa", " ", "MAA", " ", 
               SuperscriptBox["pYm", "2"], " ", "r", " ", 
               SuperscriptBox["wAm", "2"]}], "-", 
              RowBox[{"2", " ", "Maa", " ", "MAa", " ", 
               SuperscriptBox["wam", "2"], " ", "\[Alpha]m"}], "+", 
              RowBox[{"4", " ", "Maa", " ", "MAa", " ", "pYm", " ", 
               SuperscriptBox["wam", "2"], " ", "\[Alpha]m"}], "-", 
              RowBox[{"2", " ", "Maa", " ", "MAa", " ", 
               SuperscriptBox["pYm", "2"], " ", 
               SuperscriptBox["wam", "2"], " ", "\[Alpha]m"}], "+", 
              RowBox[{"2", " ", "Maa", " ", "MAa", " ", "r", " ", 
               SuperscriptBox["wam", "2"], " ", "\[Alpha]m"}], "-", 
              RowBox[{
              "4", " ", "Maa", " ", "MAa", " ", "pYm", " ", "r", " ", 
               SuperscriptBox["wam", "2"], " ", "\[Alpha]m"}], "+", 
              RowBox[{"2", " ", "Maa", " ", "MAa", " ", 
               SuperscriptBox["pYm", "2"], " ", "r", " ", 
               SuperscriptBox["wam", "2"], " ", "\[Alpha]m"}], "-", 
              RowBox[{"4", " ", 
               SuperscriptBox["MAa", "2"], " ", "pYm", " ", "wam", " ", "wAm",
                " ", "\[Alpha]m"}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["MAa", "2"], " ", 
               SuperscriptBox["pYm", "2"], " ", "wam", " ", "wAm", " ", 
               "\[Alpha]m"}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["MAa", "2"], " ", "pYm", " ", "r", " ", "wam", 
               " ", "wAm", " ", "\[Alpha]m"}], "-", 
              RowBox[{"8", " ", 
               SuperscriptBox["MAa", "2"], " ", 
               SuperscriptBox["pYm", "2"], " ", "r", " ", "wam", " ", "wAm", 
               " ", "\[Alpha]m"}], "+", 
              RowBox[{"2", " ", "MAa", " ", "MAA", " ", 
               SuperscriptBox["pYm", "2"], " ", 
               SuperscriptBox["wAm", "2"], " ", "\[Alpha]m"}], "-", 
              RowBox[{"2", " ", "MAa", " ", "MAA", " ", 
               SuperscriptBox["pYm", "2"], " ", "r", " ", 
               SuperscriptBox["wAm", "2"], " ", "\[Alpha]m"}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["MAa", "2"], " ", "pYm", " ", "wam", " ", "wAm",
                " ", 
               SuperscriptBox["\[Alpha]m", "2"]}], "-", 
              RowBox[{"4", " ", 
               SuperscriptBox["MAa", "2"], " ", 
               SuperscriptBox["pYm", "2"], " ", "wam", " ", "wAm", " ", 
               SuperscriptBox["\[Alpha]m", "2"]}], "-", 
              RowBox[{"8", " ", 
               SuperscriptBox["MAa", "2"], " ", "pYm", " ", "r", " ", "wam", 
               " ", "wAm", " ", 
               SuperscriptBox["\[Alpha]m", "2"]}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["MAa", "2"], " ", 
               SuperscriptBox["pYm", "2"], " ", "r", " ", "wam", " ", "wAm", 
               " ", 
               SuperscriptBox["\[Alpha]m", "2"]}]}], ")"}]}], ")"}]}], "/", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Maa", " ", "waf", " ", "wam"}], "-", 
            RowBox[{"Maa", " ", "pXf", " ", "waf", " ", "wam"}], "-", 
            RowBox[{"Maa", " ", "pYm", " ", "waf", " ", "wam"}], "+", 
            RowBox[{"Maa", " ", "pXf", " ", "pYm", " ", "waf", " ", "wam"}], 
            "+", 
            RowBox[{
            "2", " ", "MAa", " ", "pXf", " ", "r", " ", "wAf", " ", "wam"}], 
            "-", 
            RowBox[{
            "2", " ", "MAa", " ", "pXf", " ", "pYm", " ", "r", " ", "wAf", 
             " ", "wam"}], "+", 
            RowBox[{"2", " ", "MAa", " ", "pYm", " ", "waf", " ", "wAm"}], 
            "-", 
            RowBox[{
            "2", " ", "MAa", " ", "pXf", " ", "pYm", " ", "waf", " ", "wAm"}],
             "-", 
            RowBox[{
            "2", " ", "MAa", " ", "pYm", " ", "r", " ", "waf", " ", "wAm"}], 
            "+", 
            RowBox[{
            "2", " ", "MAa", " ", "pXf", " ", "pYm", " ", "r", " ", "waf", 
             " ", "wAm"}], "+", 
            RowBox[{"MAA", " ", "pXf", " ", "pYm", " ", "wAf", " ", "wAm"}], 
            "+", 
            RowBox[{
            "2", " ", "MAa", " ", "pXf", " ", "wAf", " ", "wam", " ", 
             "\[Alpha]m"}], "-", 
            RowBox[{
            "2", " ", "MAa", " ", "pXf", " ", "pYm", " ", "wAf", " ", "wam", 
             " ", "\[Alpha]m"}], "-", 
            RowBox[{
            "4", " ", "MAa", " ", "pXf", " ", "r", " ", "wAf", " ", "wam", 
             " ", "\[Alpha]m"}], "+", 
            RowBox[{
            "4", " ", "MAa", " ", "pXf", " ", "pYm", " ", "r", " ", "wAf", 
             " ", "wam", " ", "\[Alpha]m"}], "-", 
            RowBox[{
            "2", " ", "MAa", " ", "pYm", " ", "waf", " ", "wAm", " ", 
             "\[Alpha]m"}], "+", 
            RowBox[{
            "2", " ", "MAa", " ", "pXf", " ", "pYm", " ", "waf", " ", "wAm", 
             " ", "\[Alpha]m"}], "+", 
            RowBox[{
            "4", " ", "MAa", " ", "pYm", " ", "r", " ", "waf", " ", "wAm", 
             " ", "\[Alpha]m"}], "-", 
            RowBox[{
            "4", " ", "MAa", " ", "pXf", " ", "pYm", " ", "r", " ", "waf", 
             " ", "wAm", " ", "\[Alpha]m"}]}], ")"}], "2"]}], ",", "0", ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"wam", " ", "wAm", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Maa", " ", "MAA", " ", "pXf", " ", "waf", " ", "wAf"}], 
             "-", 
             RowBox[{"Maa", " ", "MAA", " ", 
              SuperscriptBox["pXf", "2"], " ", "waf", " ", "wAf"}], "+", 
             RowBox[{"2", " ", "MAa", " ", "MAA", " ", 
              SuperscriptBox["pXf", "2"], " ", "r", " ", 
              SuperscriptBox["wAf", "2"]}], "+", 
             RowBox[{"2", " ", "Maa", " ", "MAa", " ", "r", " ", 
              SuperscriptBox["waf", "2"], " ", "\[Alpha]m"}], "-", 
             RowBox[{"4", " ", "Maa", " ", "MAa", " ", "pXf", " ", "r", " ", 
              SuperscriptBox["waf", "2"], " ", "\[Alpha]m"}], "+", 
             RowBox[{"2", " ", "Maa", " ", "MAa", " ", 
              SuperscriptBox["pXf", "2"], " ", "r", " ", 
              SuperscriptBox["waf", "2"], " ", "\[Alpha]m"}], "-", 
             RowBox[{"4", " ", 
              SuperscriptBox["MAa", "2"], " ", "pXf", " ", "waf", " ", "wAf", 
              " ", "\[Alpha]m"}], "+", 
             RowBox[{"4", " ", 
              SuperscriptBox["MAa", "2"], " ", 
              SuperscriptBox["pXf", "2"], " ", "waf", " ", "wAf", " ", 
              "\[Alpha]m"}], "+", 
             RowBox[{"8", " ", 
              SuperscriptBox["MAa", "2"], " ", "pXf", " ", "r", " ", "waf", 
              " ", "wAf", " ", "\[Alpha]m"}], "-", 
             RowBox[{"8", " ", 
              SuperscriptBox["MAa", "2"], " ", 
              SuperscriptBox["pXf", "2"], " ", "r", " ", "waf", " ", "wAf", 
              " ", "\[Alpha]m"}], "-", 
             RowBox[{"2", " ", "MAa", " ", "MAA", " ", 
              SuperscriptBox["pXf", "2"], " ", "r", " ", 
              SuperscriptBox["wAf", "2"], " ", "\[Alpha]m"}], "+", 
             RowBox[{"4", " ", 
              SuperscriptBox["MAa", "2"], " ", "pXf", " ", "waf", " ", "wAf", 
              " ", 
              SuperscriptBox["\[Alpha]m", "2"]}], "-", 
             RowBox[{"4", " ", 
              SuperscriptBox["MAa", "2"], " ", 
              SuperscriptBox["pXf", "2"], " ", "waf", " ", "wAf", " ", 
              SuperscriptBox["\[Alpha]m", "2"]}], "-", 
             RowBox[{"8", " ", 
              SuperscriptBox["MAa", "2"], " ", "pXf", " ", "r", " ", "waf", 
              " ", "wAf", " ", 
              SuperscriptBox["\[Alpha]m", "2"]}], "+", 
             RowBox[{"8", " ", 
              SuperscriptBox["MAa", "2"], " ", 
              SuperscriptBox["pXf", "2"], " ", "r", " ", "waf", " ", "wAf", 
              " ", 
              SuperscriptBox["\[Alpha]m", "2"]}]}], ")"}]}], ")"}], "/", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Maa", " ", "waf", " ", "wam"}], "-", 
            RowBox[{"Maa", " ", "pXf", " ", "waf", " ", "wam"}], "-", 
            RowBox[{"Maa", " ", "pYm", " ", "waf", " ", "wam"}], "+", 
            RowBox[{"Maa", " ", "pXf", " ", "pYm", " ", "waf", " ", "wam"}], 
            "+", 
            RowBox[{
            "2", " ", "MAa", " ", "pXf", " ", "r", " ", "wAf", " ", "wam"}], 
            "-", 
            RowBox[{
            "2", " ", "MAa", " ", "pXf", " ", "pYm", " ", "r", " ", "wAf", 
             " ", "wam"}], "+", 
            RowBox[{"2", " ", "MAa", " ", "pYm", " ", "waf", " ", "wAm"}], 
            "-", 
            RowBox[{
            "2", " ", "MAa", " ", "pXf", " ", "pYm", " ", "waf", " ", "wAm"}],
             "-", 
            RowBox[{
            "2", " ", "MAa", " ", "pYm", " ", "r", " ", "waf", " ", "wAm"}], 
            "+", 
            RowBox[{
            "2", " ", "MAa", " ", "pXf", " ", "pYm", " ", "r", " ", "waf", 
             " ", "wAm"}], "+", 
            RowBox[{"MAA", " ", "pXf", " ", "pYm", " ", "wAf", " ", "wAm"}], 
            "+", 
            RowBox[{
            "2", " ", "MAa", " ", "pXf", " ", "wAf", " ", "wam", " ", 
             "\[Alpha]m"}], "-", 
            RowBox[{
            "2", " ", "MAa", " ", "pXf", " ", "pYm", " ", "wAf", " ", "wam", 
             " ", "\[Alpha]m"}], "-", 
            RowBox[{
            "4", " ", "MAa", " ", "pXf", " ", "r", " ", "wAf", " ", "wam", 
             " ", "\[Alpha]m"}], "+", 
            RowBox[{
            "4", " ", "MAa", " ", "pXf", " ", "pYm", " ", "r", " ", "wAf", 
             " ", "wam", " ", "\[Alpha]m"}], "-", 
            RowBox[{
            "2", " ", "MAa", " ", "pYm", " ", "waf", " ", "wAm", " ", 
             "\[Alpha]m"}], "+", 
            RowBox[{
            "2", " ", "MAa", " ", "pXf", " ", "pYm", " ", "waf", " ", "wAm", 
             " ", "\[Alpha]m"}], "+", 
            RowBox[{
            "4", " ", "MAa", " ", "pYm", " ", "r", " ", "waf", " ", "wAm", 
             " ", "\[Alpha]m"}], "-", 
            RowBox[{
            "4", " ", "MAa", " ", "pXf", " ", "pYm", " ", "r", " ", "waf", 
             " ", "wAm", " ", "\[Alpha]m"}]}], ")"}], "2"]}], ",", "0"}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"waf", " ", "wAf", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Maa", " ", "MAA", " ", "pYm", " ", "wam", " ", "wAm"}], 
             "-", 
             RowBox[{"Maa", " ", "MAA", " ", 
              SuperscriptBox["pYm", "2"], " ", "wam", " ", "wAm"}], "+", 
             RowBox[{"2", " ", "MAa", " ", "MAA", " ", 
              SuperscriptBox["pYm", "2"], " ", "r", " ", 
              SuperscriptBox["wAm", "2"]}], "+", 
             RowBox[{"2", " ", "Maa", " ", "MAa", " ", "r", " ", 
              SuperscriptBox["wam", "2"], " ", "\[Alpha]m"}], "-", 
             RowBox[{"4", " ", "Maa", " ", "MAa", " ", "pYm", " ", "r", " ", 
              SuperscriptBox["wam", "2"], " ", "\[Alpha]m"}], "+", 
             RowBox[{"2", " ", "Maa", " ", "MAa", " ", 
              SuperscriptBox["pYm", "2"], " ", "r", " ", 
              SuperscriptBox["wam", "2"], " ", "\[Alpha]m"}], "-", 
             RowBox[{"4", " ", 
              SuperscriptBox["MAa", "2"], " ", "pYm", " ", "wam", " ", "wAm", 
              " ", "\[Alpha]m"}], "+", 
             RowBox[{"4", " ", 
              SuperscriptBox["MAa", "2"], " ", 
              SuperscriptBox["pYm", "2"], " ", "wam", " ", "wAm", " ", 
              "\[Alpha]m"}], "+", 
             RowBox[{"8", " ", 
              SuperscriptBox["MAa", "2"], " ", "pYm", " ", "r", " ", "wam", 
              " ", "wAm", " ", "\[Alpha]m"}], "-", 
             RowBox[{"8", " ", 
              SuperscriptBox["MAa", "2"], " ", 
              SuperscriptBox["pYm", "2"], " ", "r", " ", "wam", " ", "wAm", 
              " ", "\[Alpha]m"}], "-", 
             RowBox[{"2", " ", "MAa", " ", "MAA", " ", 
              SuperscriptBox["pYm", "2"], " ", "r", " ", 
              SuperscriptBox["wAm", "2"], " ", "\[Alpha]m"}], "+", 
             RowBox[{"4", " ", 
              SuperscriptBox["MAa", "2"], " ", "pYm", " ", "wam", " ", "wAm", 
              " ", 
              SuperscriptBox["\[Alpha]m", "2"]}], "-", 
             RowBox[{"4", " ", 
              SuperscriptBox["MAa", "2"], " ", 
              SuperscriptBox["pYm", "2"], " ", "wam", " ", "wAm", " ", 
              SuperscriptBox["\[Alpha]m", "2"]}], "-", 
             RowBox[{"8", " ", 
              SuperscriptBox["MAa", "2"], " ", "pYm", " ", "r", " ", "wam", 
              " ", "wAm", " ", 
              SuperscriptBox["\[Alpha]m", "2"]}], "+", 
             RowBox[{"8", " ", 
              SuperscriptBox["MAa", "2"], " ", 
              SuperscriptBox["pYm", "2"], " ", "r", " ", "wam", " ", "wAm", 
              " ", 
              SuperscriptBox["\[Alpha]m", "2"]}]}], ")"}]}], ")"}], "/", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Maa", " ", "waf", " ", "wam"}], "-", 
            RowBox[{"Maa", " ", "pXf", " ", "waf", " ", "wam"}], "-", 
            RowBox[{"Maa", " ", "pYm", " ", "waf", " ", "wam"}], "+", 
            RowBox[{"Maa", " ", "pXf", " ", "pYm", " ", "waf", " ", "wam"}], 
            "+", 
            RowBox[{"2", " ", "MAa", " ", "pXf", " ", "wAf", " ", "wam"}], 
            "-", 
            RowBox[{
            "2", " ", "MAa", " ", "pXf", " ", "pYm", " ", "wAf", " ", "wam"}],
             "-", 
            RowBox[{
            "2", " ", "MAa", " ", "pXf", " ", "r", " ", "wAf", " ", "wam"}], 
            "+", 
            RowBox[{
            "2", " ", "MAa", " ", "pXf", " ", "pYm", " ", "r", " ", "wAf", 
             " ", "wam"}], "+", 
            RowBox[{
            "2", " ", "MAa", " ", "pYm", " ", "r", " ", "waf", " ", "wAm"}], 
            "-", 
            RowBox[{
            "2", " ", "MAa", " ", "pXf", " ", "pYm", " ", "r", " ", "waf", 
             " ", "wAm"}], "+", 
            RowBox[{"MAA", " ", "pXf", " ", "pYm", " ", "wAf", " ", "wAm"}], 
            "-", 
            RowBox[{
            "2", " ", "MAa", " ", "pXf", " ", "wAf", " ", "wam", " ", 
             "\[Alpha]m"}], "+", 
            RowBox[{
            "2", " ", "MAa", " ", "pXf", " ", "pYm", " ", "wAf", " ", "wam", 
             " ", "\[Alpha]m"}], "+", 
            RowBox[{
            "4", " ", "MAa", " ", "pXf", " ", "r", " ", "wAf", " ", "wam", 
             " ", "\[Alpha]m"}], "-", 
            RowBox[{
            "4", " ", "MAa", " ", "pXf", " ", "pYm", " ", "r", " ", "wAf", 
             " ", "wam", " ", "\[Alpha]m"}], "+", 
            RowBox[{
            "2", " ", "MAa", " ", "pYm", " ", "waf", " ", "wAm", " ", 
             "\[Alpha]m"}], "-", 
            RowBox[{
            "2", " ", "MAa", " ", "pXf", " ", "pYm", " ", "waf", " ", "wAm", 
             " ", "\[Alpha]m"}], "-", 
            RowBox[{
            "4", " ", "MAa", " ", "pYm", " ", "r", " ", "waf", " ", "wAm", 
             " ", "\[Alpha]m"}], "+", 
            RowBox[{
            "4", " ", "MAa", " ", "pXf", " ", "pYm", " ", "r", " ", "waf", 
             " ", "wAm", " ", "\[Alpha]m"}]}], ")"}], "2"]}], ",", "0", ",", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{"wam", " ", "wAm", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "Maa"}], " ", "MAA", " ", "pXf", " ", "waf", " ", 
               "wAf"}], "+", 
              RowBox[{"Maa", " ", "MAA", " ", 
               SuperscriptBox["pXf", "2"], " ", "waf", " ", "wAf"}], "-", 
              RowBox[{"2", " ", "MAa", " ", "MAA", " ", 
               SuperscriptBox["pXf", "2"], " ", 
               SuperscriptBox["wAf", "2"]}], "+", 
              RowBox[{"2", " ", "MAa", " ", "MAA", " ", 
               SuperscriptBox["pXf", "2"], " ", "r", " ", 
               SuperscriptBox["wAf", "2"]}], "-", 
              RowBox[{"2", " ", "Maa", " ", "MAa", " ", 
               SuperscriptBox["waf", "2"], " ", "\[Alpha]m"}], "+", 
              RowBox[{"4", " ", "Maa", " ", "MAa", " ", "pXf", " ", 
               SuperscriptBox["waf", "2"], " ", "\[Alpha]m"}], "-", 
              RowBox[{"2", " ", "Maa", " ", "MAa", " ", 
               SuperscriptBox["pXf", "2"], " ", 
               SuperscriptBox["waf", "2"], " ", "\[Alpha]m"}], "+", 
              RowBox[{"2", " ", "Maa", " ", "MAa", " ", "r", " ", 
               SuperscriptBox["waf", "2"], " ", "\[Alpha]m"}], "-", 
              RowBox[{
              "4", " ", "Maa", " ", "MAa", " ", "pXf", " ", "r", " ", 
               SuperscriptBox["waf", "2"], " ", "\[Alpha]m"}], "+", 
              RowBox[{"2", " ", "Maa", " ", "MAa", " ", 
               SuperscriptBox["pXf", "2"], " ", "r", " ", 
               SuperscriptBox["waf", "2"], " ", "\[Alpha]m"}], "-", 
              RowBox[{"4", " ", 
               SuperscriptBox["MAa", "2"], " ", "pXf", " ", "waf", " ", "wAf",
                " ", "\[Alpha]m"}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["MAa", "2"], " ", 
               SuperscriptBox["pXf", "2"], " ", "waf", " ", "wAf", " ", 
               "\[Alpha]m"}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["MAa", "2"], " ", "pXf", " ", "r", " ", "waf", 
               " ", "wAf", " ", "\[Alpha]m"}], "-", 
              RowBox[{"8", " ", 
               SuperscriptBox["MAa", "2"], " ", 
               SuperscriptBox["pXf", "2"], " ", "r", " ", "waf", " ", "wAf", 
               " ", "\[Alpha]m"}], "+", 
              RowBox[{"2", " ", "MAa", " ", "MAA", " ", 
               SuperscriptBox["pXf", "2"], " ", 
               SuperscriptBox["wAf", "2"], " ", "\[Alpha]m"}], "-", 
              RowBox[{"2", " ", "MAa", " ", "MAA", " ", 
               SuperscriptBox["pXf", "2"], " ", "r", " ", 
               SuperscriptBox["wAf", "2"], " ", "\[Alpha]m"}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["MAa", "2"], " ", "pXf", " ", "waf", " ", "wAf",
                " ", 
               SuperscriptBox["\[Alpha]m", "2"]}], "-", 
              RowBox[{"4", " ", 
               SuperscriptBox["MAa", "2"], " ", 
               SuperscriptBox["pXf", "2"], " ", "waf", " ", "wAf", " ", 
               SuperscriptBox["\[Alpha]m", "2"]}], "-", 
              RowBox[{"8", " ", 
               SuperscriptBox["MAa", "2"], " ", "pXf", " ", "r", " ", "waf", 
               " ", "wAf", " ", 
               SuperscriptBox["\[Alpha]m", "2"]}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["MAa", "2"], " ", 
               SuperscriptBox["pXf", "2"], " ", "r", " ", "waf", " ", "wAf", 
               " ", 
               SuperscriptBox["\[Alpha]m", "2"]}]}], ")"}]}], ")"}]}], "/", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Maa", " ", "waf", " ", "wam"}], "-", 
            RowBox[{"Maa", " ", "pXf", " ", "waf", " ", "wam"}], "-", 
            RowBox[{"Maa", " ", "pYm", " ", "waf", " ", "wam"}], "+", 
            RowBox[{"Maa", " ", "pXf", " ", "pYm", " ", "waf", " ", "wam"}], 
            "+", 
            RowBox[{"2", " ", "MAa", " ", "pXf", " ", "wAf", " ", "wam"}], 
            "-", 
            RowBox[{
            "2", " ", "MAa", " ", "pXf", " ", "pYm", " ", "wAf", " ", "wam"}],
             "-", 
            RowBox[{
            "2", " ", "MAa", " ", "pXf", " ", "r", " ", "wAf", " ", "wam"}], 
            "+", 
            RowBox[{
            "2", " ", "MAa", " ", "pXf", " ", "pYm", " ", "r", " ", "wAf", 
             " ", "wam"}], "+", 
            RowBox[{
            "2", " ", "MAa", " ", "pYm", " ", "r", " ", "waf", " ", "wAm"}], 
            "-", 
            RowBox[{
            "2", " ", "MAa", " ", "pXf", " ", "pYm", " ", "r", " ", "waf", 
             " ", "wAm"}], "+", 
            RowBox[{"MAA", " ", "pXf", " ", "pYm", " ", "wAf", " ", "wAm"}], 
            "-", 
            RowBox[{
            "2", " ", "MAa", " ", "pXf", " ", "wAf", " ", "wam", " ", 
             "\[Alpha]m"}], "+", 
            RowBox[{
            "2", " ", "MAa", " ", "pXf", " ", "pYm", " ", "wAf", " ", "wam", 
             " ", "\[Alpha]m"}], "+", 
            RowBox[{
            "4", " ", "MAa", " ", "pXf", " ", "r", " ", "wAf", " ", "wam", 
             " ", "\[Alpha]m"}], "-", 
            RowBox[{
            "4", " ", "MAa", " ", "pXf", " ", "pYm", " ", "r", " ", "wAf", 
             " ", "wam", " ", "\[Alpha]m"}], "+", 
            RowBox[{
            "2", " ", "MAa", " ", "pYm", " ", "waf", " ", "wAm", " ", 
             "\[Alpha]m"}], "-", 
            RowBox[{
            "2", " ", "MAa", " ", "pXf", " ", "pYm", " ", "waf", " ", "wAm", 
             " ", "\[Alpha]m"}], "-", 
            RowBox[{
            "4", " ", "MAa", " ", "pYm", " ", "r", " ", "waf", " ", "wAm", 
             " ", "\[Alpha]m"}], "+", 
            RowBox[{
            "4", " ", "MAa", " ", "pXf", " ", "pYm", " ", "r", " ", "waf", 
             " ", "wAm", " ", "\[Alpha]m"}]}], ")"}], "2"]}], ",", "0"}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"MAa", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"2", " ", "r"}]}], ")"}], " ", "waf", " ", "wAf", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Maa", " ", 
              SuperscriptBox["wam", "2"]}], "-", 
             RowBox[{"2", " ", "Maa", " ", "pYm", " ", 
              SuperscriptBox["wam", "2"]}], "+", 
             RowBox[{"Maa", " ", 
              SuperscriptBox["pYm", "2"], " ", 
              SuperscriptBox["wam", "2"]}], "+", 
             RowBox[{"2", " ", "MAa", " ", "pYm", " ", "wam", " ", "wAm"}], 
             "-", 
             RowBox[{"2", " ", "MAa", " ", 
              SuperscriptBox["pYm", "2"], " ", "wam", " ", "wAm"}], "+", 
             RowBox[{"MAA", " ", 
              SuperscriptBox["pYm", "2"], " ", 
              SuperscriptBox["wAm", "2"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"2", " ", "\[Alpha]m"}]}], ")"}]}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{"2", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Maa", " ", "waf", " ", "wam"}], "-", 
              RowBox[{"Maa", " ", "pXf", " ", "waf", " ", "wam"}], "-", 
              RowBox[{"Maa", " ", "pYm", " ", "waf", " ", "wam"}], "+", 
              RowBox[{"Maa", " ", "pXf", " ", "pYm", " ", "waf", " ", "wam"}],
               "+", 
              RowBox[{"MAa", " ", "pXf", " ", "wAf", " ", "wam"}], "-", 
              RowBox[{"MAa", " ", "pXf", " ", "pYm", " ", "wAf", " ", "wam"}],
               "+", 
              RowBox[{"MAa", " ", "pYm", " ", "waf", " ", "wAm"}], "-", 
              RowBox[{"MAa", " ", "pXf", " ", "pYm", " ", "waf", " ", "wAm"}],
               "+", 
              RowBox[{
              "MAA", " ", "pXf", " ", "pYm", " ", "wAf", " ", "wAm"}]}], 
             ")"}], "2"]}], ")"}]}], ",", "0", ",", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{"MAa", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"2", " ", "r"}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Maa", " ", 
               SuperscriptBox["waf", "2"]}], "-", 
              RowBox[{"2", " ", "Maa", " ", "pXf", " ", 
               SuperscriptBox["waf", "2"]}], "+", 
              RowBox[{"Maa", " ", 
               SuperscriptBox["pXf", "2"], " ", 
               SuperscriptBox["waf", "2"]}], "+", 
              RowBox[{"2", " ", "MAa", " ", "pXf", " ", "waf", " ", "wAf"}], 
              "-", 
              RowBox[{"2", " ", "MAa", " ", 
               SuperscriptBox["pXf", "2"], " ", "waf", " ", "wAf"}], "+", 
              RowBox[{"MAA", " ", 
               SuperscriptBox["pXf", "2"], " ", 
               SuperscriptBox["wAf", "2"]}]}], ")"}], " ", "wam", " ", "wAm", 
            " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"2", " ", "\[Alpha]m"}]}], ")"}]}], ")"}]}], "/", 
         RowBox[{"(", 
          RowBox[{"2", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Maa", " ", "waf", " ", "wam"}], "-", 
              RowBox[{"Maa", " ", "pXf", " ", "waf", " ", "wam"}], "-", 
              RowBox[{"Maa", " ", "pYm", " ", "waf", " ", "wam"}], "+", 
              RowBox[{"Maa", " ", "pXf", " ", "pYm", " ", "waf", " ", "wam"}],
               "+", 
              RowBox[{"MAa", " ", "pXf", " ", "wAf", " ", "wam"}], "-", 
              RowBox[{"MAa", " ", "pXf", " ", "pYm", " ", "wAf", " ", "wam"}],
               "+", 
              RowBox[{"MAa", " ", "pYm", " ", "waf", " ", "wAm"}], "-", 
              RowBox[{"MAa", " ", "pXf", " ", "pYm", " ", "waf", " ", "wAm"}],
               "+", 
              RowBox[{
              "MAA", " ", "pXf", " ", "pYm", " ", "wAf", " ", "wAm"}]}], 
             ")"}], "2"]}], ")"}]}], ",", "0"}], "}"}]}], "}"}], 
    "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.589459641890173*^9, 3.589459654842306*^9}, {
  3.6972993767480392`*^9, 
  3.697299419014009*^9}},ExpressionUUID->"7786e664-0ccf-4ec1-a23c-\
673419c85853"],

Cell["The following uses this cutoff to avoid numerical problems:", "Text",
 CellChangeTimes->{{3.589459322351379*^9, 
  3.589459334471551*^9}},ExpressionUUID->"e3d56e3b-c6ce-45b6-b308-\
8aacffe19084"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cutoff", "=", 
   RowBox[{"10", "^", 
    RowBox[{"(", 
     RowBox[{"-", "12"}], ")"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.589459261817253*^9, 
  3.58945926599198*^9}},ExpressionUUID->"f1dac7d0-28da-4fba-935a-\
fe83f60f9d57"],

Cell["\<\
Restricting answers to cases of polymorphic equilibria that are internally \
stable\
\>", "Text",
 CellChangeTimes->{{3.539689080916759*^9, 3.539689094803639*^9}, {
  3.539695097573812*^9, 3.5396951110837603`*^9}, {3.5401248136193237`*^9, 
  3.540124824761619*^9}},ExpressionUUID->"e11174f6-5528-4502-88c8-\
891fad36e36e"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "sieve", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sieve", "[", 
   RowBox[{
   "FAA_", ",", "FAa_", ",", "Faa_", ",", "MAA_", ",", "MAa_", ",", "Maa_", 
    ",", "wAf_", ",", "waf_", ",", "wAm_", ",", "wam_", ",", "\[Alpha]f_", 
    ",", "\[Alpha]m_", ",", "r_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"sieve", "[", 
    RowBox[{
    "FAA", ",", "FAa", ",", "Faa", ",", "MAA", ",", "MAa", ",", "Maa", ",", 
     "wAf", ",", "waf", ",", "wAm", ",", "wam", ",", "\[Alpha]f", ",", 
     "\[Alpha]m", ",", "r"}], "]"}], "=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", 
     RowBox[{
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"i", "=", "1"}], ";", " ", 
         RowBox[{"write", "=", 
          RowBox[{"{", "}"}]}]}], ",", 
        RowBox[{"i", "\[LessEqual]", 
         RowBox[{"(", 
          RowBox[{"max", "=", 
           RowBox[{"Length", "[", 
            RowBox[{"eq", "=", 
             RowBox[{"numequil", "[", 
              RowBox[{
              "FAA", ",", "FAa", ",", "Faa", ",", "MAA", ",", "MAa", ",", 
               "Maa", ",", "wAf", ",", "waf", ",", "wAm", ",", "wam", ",", 
               "\[Alpha]f", ",", "\[Alpha]m", ",", "r"}], "]"}]}], "]"}]}], 
          ")"}]}], ",", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", 
             RowBox[{"test", "=", 
              RowBox[{"Cases", "[", 
               RowBox[{
                RowBox[{"eq", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], ",", 
                RowBox[{"x_", "/;", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "cutoff"}], "\[LessEqual]", 
                    RowBox[{"Re", "[", "x", "]"}], "\[LessEqual]", 
                    RowBox[{"1", "+", "cutoff"}]}], ")"}], "&&", 
                   RowBox[{
                    RowBox[{"Abs", "[", 
                    RowBox[{"Im", "[", "x", "]"}], "]"}], "<", "cutoff"}]}], 
                  ")"}]}]}], "]"}]}], "]"}], "\[Equal]", "4"}], "&&", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Chop", "[", 
              RowBox[{"eq", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "]"}], "\[NotEqual]", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0", ",", 
               RowBox[{"1", "/", "2"}]}], "}"}]}], ")"}], "&&", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Chop", "[", 
              RowBox[{
               RowBox[{"eq", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "-", 
               RowBox[{"{", 
                RowBox[{"1", ",", "1", ",", "1", ",", 
                 RowBox[{"1", "/", "2"}]}], "}"}]}], "]"}], "\[NotEqual]", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ")"}], "&&",
            "\[IndentingNewLine]", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Max", "[", 
              RowBox[{"Abs", "[", 
               RowBox[{"internstab", "[", 
                RowBox[{
                "FAA", ",", "FAa", ",", "Faa", ",", "MAA", ",", "MAa", ",", 
                 "Maa", ",", "wAf", ",", "waf", ",", "wAm", ",", "wam", ",", 
                 "\[Alpha]f", ",", "\[Alpha]m", ",", "r", ",", 
                 RowBox[{"eq", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
                 RowBox[{"eq", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "2"}], "]"}], "]"}], ",", 
                 RowBox[{"eq", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "3"}], "]"}], "]"}], ",", 
                 RowBox[{"eq", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "4"}], "]"}], "]"}]}], "]"}], "]"}], 
              "]"}], "<", "1"}], ")"}]}], ",", 
          RowBox[{"write", "=", 
           RowBox[{"Append", "[", 
            RowBox[{"write", ",", 
             RowBox[{"eq", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}]}], "]"}]}], "]"}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Sort", "[", "write", "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.539688548516776*^9, 3.539688796846566*^9}, {
   3.539688837323547*^9, 3.539688839449725*^9}, 3.539688878480708*^9, {
   3.5396889320409403`*^9, 3.539689052719947*^9}, {3.539689230067522*^9, 
   3.539689295423044*^9}, {3.539689336744589*^9, 3.539689342592512*^9}, {
   3.539689395635439*^9, 3.539689420298315*^9}, {3.53968947833329*^9, 
   3.5396894825486507`*^9}, {3.540120578732676*^9, 3.540120611714344*^9}, {
   3.540120653578849*^9, 3.540120659496977*^9}, {3.5401207896080847`*^9, 
   3.540120794802643*^9}, {3.540120834031908*^9, 3.5401208736257687`*^9}, {
   3.5401209355666428`*^9, 3.5401209560983543`*^9}, {3.540121002744624*^9, 
   3.540121009916911*^9}, 3.540123685536002*^9, 3.540123722636756*^9, {
   3.5401237663394117`*^9, 3.540123786482337*^9}, {3.540123851161935*^9, 
   3.540123854061015*^9}, {3.540123977598155*^9, 3.54012412287715*^9}, {
   3.540124198177186*^9, 3.5401242023795767`*^9}, {3.540124248710565*^9, 
   3.540124288860216*^9}, {3.540124333666629*^9, 3.540124336881955*^9}, {
   3.540124533224043*^9, 3.540124597374424*^9}, {3.540124668267658*^9, 
   3.540124669104068*^9}, {3.540124727721505*^9, 3.5401247510988007`*^9}, {
   3.5401249450190277`*^9, 3.5401249613031816`*^9}, {3.54012739915469*^9, 
   3.540127407183713*^9}, {3.540128802529991*^9, 3.540128805761211*^9}, {
   3.540128899202031*^9, 3.540128925066174*^9}, {3.540129021730195*^9, 
   3.54012904122519*^9}, {3.589458960115224*^9, 3.589458964427812*^9}, {
   3.589459244021883*^9, 3.589459277086694*^9}, {3.697299274849551*^9, 
   3.6972993373786793`*^9}, {3.697299426749579*^9, 3.697299447332103*^9}, {
   3.6972996618985777`*^9, 3.6972996925228977`*^9}, {3.6979142306897*^9, 
   3.697914239886355*^9}},ExpressionUUID->"c8d901da-71a3-4fcf-827a-\
b62d6df598da"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Lambda]mA", "=", 
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"pavem", " ", 
       FractionBox["wAm", "wbarHapMale"], 
       FractionBox["wAf", "wbarHapFemale"], "FAA"}], "+", 
      RowBox[{"2", 
       RowBox[{"(", 
        RowBox[{"1", "-", "pavem"}], ")"}], 
       FractionBox["wam", "wbarHapMale"], 
       FractionBox["wAf", "wbarHapFemale"], "FAa", " ", "\[Alpha]f", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "R"}], ")"}]}]}], 
     RowBox[{"meanF", " ", 
      FractionBox["freqfemale", 
       RowBox[{"1", "/", "2"}]]}]], "/.", 
    RowBox[{"pavem", "\[Rule]", 
     RowBox[{
      RowBox[{"pYm", " ", "freqYm"}], "+", 
      RowBox[{"pXm", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "freqYm"}], ")"}]}]}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]ma", "=", 
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", "pavem"}], ")"}], " ", 
       FractionBox["wam", "wbarHapMale"], 
       FractionBox["waf", "wbarHapFemale"], "Faa"}], "+", 
      RowBox[{"2", "pavem", 
       FractionBox["wAm", "wbarHapMale"], 
       FractionBox["waf", "wbarHapFemale"], "FAa", 
       RowBox[{"(", 
        RowBox[{"1", "-", "\[Alpha]f"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"1", "-", "R"}], ")"}]}]}], 
     RowBox[{"meanF", " ", 
      FractionBox["freqfemale", 
       RowBox[{"1", "/", "2"}]]}]], "/.", 
    RowBox[{"pavem", "\[Rule]", 
     RowBox[{
      RowBox[{"pYm", " ", "freqYm"}], "+", 
      RowBox[{"pXm", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "freqYm"}], ")"}]}]}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Rho]mA", "=", 
   RowBox[{
    FractionBox[
     RowBox[{"2", 
      RowBox[{"(", 
       RowBox[{"1", "-", "pavem"}], ")"}], 
      FractionBox["wam", "wbarHapMale"], 
      FractionBox["wAf", "wbarHapFemale"], "FAa", " ", "\[Alpha]f", " ", 
      "R"}], 
     RowBox[{"meanF", " ", 
      FractionBox["freqfemale", 
       RowBox[{"1", "/", "2"}]]}]], "/.", 
    RowBox[{"pavem", "\[Rule]", 
     RowBox[{
      RowBox[{"pYm", " ", "freqYm"}], "+", 
      RowBox[{"pXm", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "freqYm"}], ")"}]}]}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Rho]ma", "=", 
   RowBox[{
    FractionBox[
     RowBox[{"2", "pavem", 
      FractionBox["wAm", "wbarHapMale"], 
      FractionBox["waf", "wbarHapFemale"], "FAa", 
      RowBox[{"(", 
       RowBox[{"1", "-", "\[Alpha]f"}], ")"}], "R"}], 
     RowBox[{"meanF", " ", 
      FractionBox["freqfemale", 
       RowBox[{"1", "/", "2"}]]}]], "/.", 
    RowBox[{"pavem", "\[Rule]", 
     RowBox[{
      RowBox[{"pYm", " ", "freqYm"}], "+", 
      RowBox[{"pXm", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "freqYm"}], ")"}]}]}]}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.697297044887005*^9, 3.697297257914708*^9}, {
  3.6972979381330976`*^9, 3.6972979497988863`*^9}, {3.69729813561936*^9, 
  3.697298136955179*^9}, {3.69729821204987*^9, 
  3.697298270714383*^9}},ExpressionUUID->"d865aa74-835b-44c0-a2df-\
111fe23be79c"],

Cell["The frequency of diploid females is:", "Text",
 CellChangeTimes->{{3.697135933130061*^9, 
  3.697135938799708*^9}},ExpressionUUID->"079d1cf9-c178-42cb-8149-\
f62715129370"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"freqfemale", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
     "XAMXAMfemale", "+", "XAMXaMfemale", "+", "XaMXaMfemale", "+", 
      "\[IndentingNewLine]", "XAMYAMfemale", "+", 
      RowBox[{"(", 
       RowBox[{"XAMYaMfemale", "+", "XaMYAMfemale"}], ")"}], "+", 
      "XaMYaMfemale", "+", "\[IndentingNewLine]", "YAMYAMfemale", "+", 
      "YAMYaMfemale", "+", "YaMYaMfemale", "+", "\[IndentingNewLine]", 
      "XAmXAMfemale", "+", "XAmXaMfemale", "+", "XAMXamfemale", "+", 
      "XamXaMfemale", "+", "\[IndentingNewLine]", "XAmYAMfemale", "+", 
      "XAmYaMfemale", "+", "XamYAMfemale", "+", "XamYaMfemale", "+", 
      "\[IndentingNewLine]", "XAMYAmfemale", "+", "XAMYamfemale", "+", 
      "XaMYAmfemale", "+", "XaMYamfemale", "+", "\[IndentingNewLine]", 
      "YAmYAMfemale", "+", "YAmYaMfemale", "+", "YamYAMfemale", "+", 
      "YamYaMfemale", "+", "\[IndentingNewLine]", "XAmXAmfemale", "+", 
      "XAmXamfemale", "+", "XamXamfemale", "+", "\[IndentingNewLine]", 
      "XAmYAmfemale", "+", "XAmYamfemale", "+", "XamYAmfemale", "+", 
      "XamYamfemale", "+", "\[IndentingNewLine]", "YAmYAmfemale", "+", 
      "YAmYamfemale", "+", "YamYamfemale"}], "/.", "SUBS"}], "/.", 
    "subequil"}], "//", "Factor"}]}]], "Input",
 CellChangeTimes->{{3.697135929785255*^9, 3.697135929907689*^9}, {
  3.69713896627489*^9, 3.69713896879125*^9}, {3.697157967273508*^9, 
  3.697157970399433*^9}},ExpressionUUID->"afd555e6-7280-44b4-830c-\
3ee9501bf0d7"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll","reps",
   "\"\\!\\(\\*RowBox[{\\\"{\\\", \\\"SUBS\\\", \\\"}\\\"}]\\) is neither a \
list of replacement rules nor a valid dispatch table, and so cannot be used \
for replacing.\"",2,31,6,29230937333070290794,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.713095471661149*^9},ExpressionUUID->"f7f050e8-742d-4c1b-934b-\
17aaa30f994d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "XamXamfemale", "+", "XamXaMfemale", "+", "XaMXaMfemale", "+", 
   "XAmXamfemale", "+", "XAmXaMfemale", "+", "XAmXAmfemale", "+", 
   "XAmXAMfemale", "+", "XAMXamfemale", "+", "XAMXaMfemale", "+", 
   "XAMXAMfemale", "+", "XamYamfemale", "+", "XamYaMfemale", "+", 
   "XamYAmfemale", "+", "XamYAMfemale", "+", "XaMYamfemale", "+", 
   "XaMYaMfemale", "+", "XaMYAmfemale", "+", "XaMYAMfemale", "+", 
   "XAmYamfemale", "+", "XAmYaMfemale", "+", "XAmYAmfemale", "+", 
   "XAmYAMfemale", "+", "XAMYamfemale", "+", "XAMYaMfemale", "+", 
   "XAMYAmfemale", "+", "XAMYAMfemale", "+", "YamYamfemale", "+", 
   "YamYaMfemale", "+", "YamYAMfemale", "+", "YaMYaMfemale", "+", 
   "YAmYamfemale", "+", "YAmYaMfemale", "+", "YAmYAmfemale", "+", 
   "YAmYAMfemale", "+", "YAMYaMfemale", "+", "YAMYAMfemale"}], "/.", 
  "\[VeryThinSpace]", "SUBS"}]], "Output",
 CellChangeTimes->{
  3.697135930397572*^9, 3.697138969719345*^9, {3.697157967682249*^9, 
   3.697157970767014*^9}, {3.697158002083187*^9, 3.697158024933642*^9}, 
   3.6971580562213907`*^9, 3.6971581028325977`*^9, 3.697160373388397*^9, 
   3.6971618160568857`*^9, 3.697284433193569*^9, 3.697284917902157*^9, 
   3.697285006012108*^9, 3.697285100851506*^9, 3.697288523841207*^9, 
   3.6973027000518923`*^9, 3.697302765236581*^9, 3.697303247794146*^9, 
   3.697303826062058*^9, 3.697304190739449*^9, 3.697406218018455*^9, 
   3.698609724429895*^9, 3.7101782577425747`*^9, 3.710186902223215*^9, 
   3.710437946802318*^9, 3.7115281062128*^9, 3.711691694187009*^9, 
   3.7117044569999247`*^9, 3.7117045461011953`*^9, 3.711788671387416*^9, 
   3.71258221480472*^9, 3.7130754673320007`*^9, 
   3.713095471669436*^9},ExpressionUUID->"e7f53d4e-f1d8-4134-9d38-\
fb7ac54ad181"]
}, Open  ]],

Cell["The mean fitness of a female can be written as:", "Text",
 CellChangeTimes->{{3.697135349044276*^9, 3.697135353715836*^9}, {
  3.697135991414695*^9, 3.69713600071249*^9}, {3.697136079571793*^9, 
  3.6971361031227503`*^9}, {3.697158803516185*^9, 
  3.697158833675169*^9}},ExpressionUUID->"b187ebfb-19c3-4470-8cec-\
d8a9221bdd40"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"meanF", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"pXf", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"FAA", " ", 
          FractionBox["wAf", "wbarHapFemale"], " ", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"pXm", 
             RowBox[{"(", 
              RowBox[{"1", "-", "freqYm"}], ")"}], " ", 
             FractionBox["wAm", "wbarHapMale"]}], "freqfemale"], ")"}]}], "+", 
         RowBox[{"FAa", " ", 
          FractionBox["wAf", "wbarHapFemale"], " ", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", "pXm"}], ")"}], 
             RowBox[{"(", 
              RowBox[{"1", "-", "freqYm"}], ")"}], " ", 
             FractionBox["wam", "wbarHapMale"]}], "freqfemale"], ")"}]}]}], 
        ")"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", "pXf"}], ")"}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"FAa", " ", 
          FractionBox["waf", "wbarHapFemale"], " ", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"pXm", 
             RowBox[{"(", 
              RowBox[{"1", "-", "freqYm"}], ")"}], " ", 
             FractionBox["wAm", "wbarHapMale"]}], "freqfemale"], ")"}]}], "+", 
         RowBox[{"Faa", " ", 
          FractionBox["waf", "wbarHapFemale"], " ", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", "pXm"}], ")"}], 
             RowBox[{"(", 
              RowBox[{"1", "-", "freqYm"}], ")"}], " ", 
             FractionBox["wam", "wbarHapMale"]}], "freqfemale"], ")"}]}]}], 
        ")"}]}]}], "/.", "SUBS"}], "/.", "subequil"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.697134772385618*^9, 3.697134812070602*^9}, {
   3.697135080111429*^9, 3.6971351315874557`*^9}, {3.697135239834922*^9, 
   3.6971352704525843`*^9}, {3.697135313134502*^9, 3.697135341637377*^9}, {
   3.697136032963991*^9, 3.697136037774029*^9}, {3.697136099803734*^9, 
   3.697136114355753*^9}, {3.6971527940895443`*^9, 3.697152796899786*^9}, {
   3.6971528296409693`*^9, 3.697152860281275*^9}, {3.697152905278425*^9, 
   3.697152905656858*^9}, 3.6971576805668993`*^9, {3.6971577786769447`*^9, 
   3.6971577808951063`*^9}, {3.6971578259228983`*^9, 3.697157834381138*^9}, {
   3.697158773602851*^9, 3.6971587971546926`*^9}, {3.697158837743108*^9, 
   3.6971588506223183`*^9}},ExpressionUUID->"f82d69a1-046d-42e1-a785-\
6b727a3c687c"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll","reps",
   "\"\\!\\(\\*RowBox[{\\\"{\\\", \\\"SUBS\\\", \\\"}\\\"}]\\) is neither a \
list of replacement rules nor a valid dispatch table, and so cannot be used \
for replacing.\"",2,32,7,29230937333070290794,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.7130954717782373`*^9},ExpressionUUID->"0cfa29f8-4717-4426-b805-\
419213d1b4fc"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Simulation code [Enter]", "Subsubsection",
 CellChangeTimes->{{3.6756910197792797`*^9, 3.675691024113359*^9}, {
   3.67569412935745*^9, 3.6756941314240303`*^9}, {3.675707349839982*^9, 
   3.675707351884247*^9}, {3.675709974013658*^9, 3.675709982915987*^9}, {
   3.6757923469668207`*^9, 3.675792350124728*^9}, 3.676676690696854*^9, {
   3.677350035605269*^9, 3.67735004069977*^9}, 3.677358409575016*^9, {
   3.678845319012044*^9, 3.678845320057397*^9}, 3.692607135315508*^9, {
   3.6926071764577847`*^9, 3.692607187122102*^9}, {3.693550212113646*^9, 
   3.693550235766447*^9}, {3.693554320708564*^9, 3.6935543247324944`*^9}, 
   3.693559930483079*^9, {3.69728435513507*^9, 3.697284356882052*^9}, {
   3.7103541147013083`*^9, 
   3.7103541196824207`*^9}},ExpressionUUID->"130302f0-c904-41f3-aaea-\
b75c635b89f1"],

Cell["\<\
Code to convert allele frequencies (from the equilibrium calculations) into \
haplotype frequencies, as needed for the simulations:
[Assumes that all haplotypes convert from M to m at a small rate, pm.  This \
will cause imbalanced sex ratios at first, so ignore the first few \
generations, as it reequilibrates.]\
\>", "Text",
 CellChangeTimes->{{3.710436743209373*^9, 3.710436775287689*^9}, {
  3.710440521036624*^9, 
  3.710440591799329*^9}},ExpressionUUID->"9e2729df-682e-4b63-9225-\
4c2e7de0ab61"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "startgen", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"startgen", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"pXf_", ",", "pXm_", ",", "pYm_", ",", "freqYm_"}], "}"}], ",", 
    "pm_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"startgen", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"pXf", ",", "pXm", ",", "pYm", ",", "freqYm"}], "}"}], ",", 
     "pm"}], "]"}], "=", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "XAMf", ",", "XaMf", ",", "XAmf", ",", "Xamf", ",", "YAMf", ",", "YaMf", 
      ",", " ", "YAmf", ",", " ", "Yamf", ",", "XAMm", ",", "XaMm", ",", 
      "XAmm", ",", "Xamm", ",", "YAMm", ",", "YaMm", ",", " ", "YAmm", ",", 
      " ", "Yamm"}], "}"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"XAMf", "\[Rule]", 
       RowBox[{"pXf", 
        RowBox[{"(", 
         RowBox[{"1", "-", "pm"}], ")"}]}]}], ",", 
      RowBox[{"XaMf", "\[Rule]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "pXf"}], ")"}], 
        RowBox[{"(", 
         RowBox[{"1", "-", "pm"}], ")"}]}]}], ",", 
      RowBox[{"YAMf", "\[Rule]", 
       RowBox[{"0", 
        RowBox[{"(", 
         RowBox[{"1", "-", "pm"}], ")"}]}]}], ",", 
      RowBox[{"YaMf", "\[Rule]", 
       RowBox[{"0", 
        RowBox[{"(", 
         RowBox[{"1", "-", "pm"}], ")"}]}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"XAMm", "\[Rule]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "freqYm"}], ")"}], " ", "pXm", 
        RowBox[{"(", 
         RowBox[{"1", "-", "pm"}], ")"}]}]}], ",", 
      RowBox[{"XaMm", "\[Rule]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "freqYm"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", "pXm"}], ")"}], 
        RowBox[{"(", 
         RowBox[{"1", "-", "pm"}], ")"}]}]}], ",", 
      RowBox[{"YAMm", "\[Rule]", 
       RowBox[{"freqYm", " ", "pYm", 
        RowBox[{"(", 
         RowBox[{"1", "-", "pm"}], ")"}]}]}], ",", 
      RowBox[{"YaMm", "\[Rule]", 
       RowBox[{"freqYm", " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", "pYm"}], ")"}], 
        RowBox[{"(", 
         RowBox[{"1", "-", "pm"}], ")"}]}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"XAmf", "\[Rule]", 
       RowBox[{"pXf", 
        RowBox[{"(", "pm", ")"}]}]}], ",", 
      RowBox[{"Xamf", "\[Rule]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "pXf"}], ")"}], 
        RowBox[{"(", "pm", ")"}]}]}], ",", 
      RowBox[{"YAmf", "\[Rule]", 
       RowBox[{"0", 
        RowBox[{"(", "pm", ")"}]}]}], ",", 
      RowBox[{"Yamf", "\[Rule]", 
       RowBox[{"0", 
        RowBox[{"(", "pm", ")"}]}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"XAmm", "\[Rule]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "freqYm"}], ")"}], " ", "pXm", 
        RowBox[{"(", "pm", ")"}]}]}], ",", 
      RowBox[{"Xamm", "\[Rule]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "freqYm"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", "pXm"}], ")"}], 
        RowBox[{"(", "pm", ")"}]}]}], ",", 
      RowBox[{"YAmm", "\[Rule]", 
       RowBox[{"freqYm", " ", "pYm", 
        RowBox[{"(", "pm", ")"}]}]}], ",", 
      RowBox[{"Yamm", "\[Rule]", 
       RowBox[{"freqYm", " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", "pYm"}], ")"}], 
        RowBox[{"(", "pm", ")"}]}]}]}], "}"}]}]}]}]}], "Input",
 CellChangeTimes->{{3.710436352090384*^9, 3.7104364740488243`*^9}, {
   3.710436506338571*^9, 3.710436612969934*^9}, 3.7104367412320213`*^9, {
   3.710440009894829*^9, 3.710440076001202*^9}, {3.71044011547581*^9, 
   3.710440147263701*^9}},ExpressionUUID->"35ce9469-9c1d-4a48-8540-\
f96c123e8322"],

Cell["\<\
Calculates the frequency of the modifier among the gametes (assumes that male \
and female gametes contribute equally to the next generation, hence the 1/2):\
\
\>", "Text",
 CellChangeTimes->{{3.710438723775742*^9, 
  3.710438749516945*^9}},ExpressionUUID->"2e8dd984-f3f7-4903-a77e-\
47ade3f59e21"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"modvec", "=", 
  RowBox[{"Flatten", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", 
       RowBox[{"1", "/", "2"}], ",", 
       RowBox[{"1", "/", "2"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.710437495544726*^9, 3.710437524103991*^9}, {
  3.710438166953663*^9, 
  3.7104381698148527`*^9}},ExpressionUUID->"ceecc54e-dfd3-40e5-bce9-\
c47c143d1f09"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", 
   FractionBox["1", "2"], ",", 
   FractionBox["1", "2"], ",", "0", ",", "0", ",", 
   FractionBox["1", "2"], ",", 
   FractionBox["1", "2"], ",", "0", ",", "0", ",", 
   FractionBox["1", "2"], ",", 
   FractionBox["1", "2"], ",", "0", ",", "0", ",", 
   FractionBox["1", "2"], ",", 
   FractionBox["1", "2"]}], "}"}]], "Output",
 CellChangeTimes->{{3.7104375180055428`*^9, 3.710437524550158*^9}, 
   3.7104381701968317`*^9, 3.710439506040491*^9, 3.710440595895846*^9, 
   3.71044549056886*^9, 3.711528106318561*^9, 3.71169169432133*^9, 
   3.711704457073605*^9, 3.7117045462335863`*^9, 3.711788671475699*^9, 
   3.712582214901084*^9, 3.713075467374536*^9, 
   3.7130954719580593`*^9},ExpressionUUID->"627b188b-417c-4d89-8032-\
49de190481d7"]
}, Open  ]],

Cell["\<\
When tracking the spread of the neo-W, we are interested in whether the males \
maintain the Y or become all  its frequency among female gametes (when \
fixed)Calculates the frequency of the modifier among the gametes (assumes \
that male and female gametes contribute equally to the next generation, hence \
the 1/2):\
\>", "Text",
 CellChangeTimes->{{3.710438723775742*^9, 3.710438749516945*^9}, {
  3.710441689162314*^9, 3.710441726124915*^9}, {3.710441815391982*^9, 
  3.7104418415437717`*^9}},ExpressionUUID->"9818b11c-7b9c-4c50-bc29-\
4ded9d9bf4d0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"modvec", "=", 
  RowBox[{"{", 
   RowBox[{
   "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
    ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "1", ",",
     "1"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.710441992425519*^9, 
  3.710442016664997*^9}},ExpressionUUID->"7e6aea69-80da-490b-8bc9-\
8b3dc0af707d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "1", ",", 
   "1"}], "}"}]], "Output",
 CellChangeTimes->{3.710442017747332*^9, 3.710445490620014*^9, 
  3.711528106425293*^9, 3.711691694387745*^9, 3.711704457108993*^9, 
  3.711704546269804*^9, 3.71178867152394*^9, 3.7125822149707537`*^9, 
  3.7130754673974743`*^9, 
  3.713095472042626*^9},ExpressionUUID->"8022158b-971d-45c8-82c0-\
b3401206dc6f"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "sexratio", "]"}], 
  RowBox[{"(*", 
   RowBox[{"Frac", " ", "males", " ", "among", " ", "zygotes"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sexratio", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "FAA_", ",", "FAa_", ",", "Faa_", ",", "MAA_", ",", "MAa_", ",", "Maa_",
        ",", "wAf_", ",", "waf_", ",", "wAm_", ",", "wam_", ",", "\[Alpha]f_",
        ",", "\[Alpha]m_", ",", "r_", ",", "R_", ",", "\[Chi]_", ",", "k_"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "XAMf_", ",", "XaMf_", ",", "XAmf_", ",", "Xamf_", ",", "YAMf_", ",", 
       "YaMf_", ",", " ", "YAmf_", ",", " ", "Yamf_", ",", "XAMm_", ",", 
       "XaMm_", ",", "XAmm_", ",", "Xamm_", ",", "YAMm_", ",", "YaMm_", ",", 
       " ", "YAmm_", ",", " ", "Yamm_"}], "}"}]}], "]"}], ":=", 
   RowBox[{
    RowBox[{"sexratio", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "FAA", ",", "FAa", ",", "Faa", ",", "MAA", ",", "MAa", ",", "Maa", ",",
         "wAf", ",", "waf", ",", "wAm", ",", "wam", ",", "\[Alpha]f", ",", 
        "\[Alpha]m", ",", "r", ",", "R", ",", "\[Chi]", ",", "k"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
       "XAMf", ",", "XaMf", ",", "XAmf", ",", "Xamf", ",", "YAMf", ",", 
        "YaMf", ",", " ", "YAmf", ",", " ", "Yamf", ",", "XAMm", ",", "XaMm", 
        ",", "XAmm", ",", "Xamm", ",", "YAMm", ",", "YaMm", ",", " ", "YAmm", 
        ",", " ", "Yamm"}], "}"}]}], "]"}], "=", "\[IndentingNewLine]", 
    RowBox[{"1", "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"k", " ", "waf", " ", "wam", " ", "Xamf", " ", "Xamm"}], "+", 
        
        RowBox[{"k", " ", "waf", " ", "wam", " ", "XaMf", " ", "Xamm"}], "+", 
        
        RowBox[{"k", " ", "wAf", " ", "wam", " ", "XAmf", " ", "Xamm"}], "+", 
        
        RowBox[{"k", " ", "wAf", " ", "wam", " ", "XAMf", " ", "Xamm"}], "+", 
        
        RowBox[{"k", " ", "waf", " ", "wam", " ", "Xamf", " ", "XaMm"}], "+", 
        
        RowBox[{"waf", " ", "wam", " ", "XaMf", " ", "XaMm"}], "+", 
        RowBox[{"k", " ", "wAf", " ", "wam", " ", "XAmf", " ", "XaMm"}], "+", 
        
        RowBox[{"wAf", " ", "wam", " ", "XAMf", " ", "XaMm"}], "+", 
        RowBox[{"k", " ", "waf", " ", "wAm", " ", "Xamf", " ", "XAmm"}], "+", 
        
        RowBox[{"k", " ", "waf", " ", "wAm", " ", "XaMf", " ", "XAmm"}], "+", 
        
        RowBox[{"k", " ", "wAf", " ", "wAm", " ", "XAmf", " ", "XAmm"}], "+", 
        
        RowBox[{"k", " ", "wAf", " ", "wAm", " ", "XAMf", " ", "XAmm"}], "+", 
        
        RowBox[{"k", " ", "waf", " ", "wAm", " ", "Xamf", " ", "XAMm"}], "+", 
        
        RowBox[{"waf", " ", "wAm", " ", "XaMf", " ", "XAMm"}], "+", 
        RowBox[{"k", " ", "wAf", " ", "wAm", " ", "XAmf", " ", "XAMm"}], "+", 
        
        RowBox[{"wAf", " ", "wAm", " ", "XAMf", " ", "XAMm"}], "+", 
        RowBox[{"k", " ", "waf", " ", "wam", " ", "Xamm", " ", "Yamf"}], "+", 
        
        RowBox[{"k", " ", "waf", " ", "wam", " ", "XaMm", " ", "Yamf"}], "+", 
        
        RowBox[{"k", " ", "waf", " ", "wAm", " ", "XAmm", " ", "Yamf"}], "+", 
        
        RowBox[{"k", " ", "waf", " ", "wAm", " ", "XAMm", " ", "Yamf"}], "+", 
        
        RowBox[{"k", " ", "waf", " ", "wam", " ", "Xamm", " ", "YaMf"}], "+", 
        
        RowBox[{"k", " ", "waf", " ", "wAm", " ", "XAmm", " ", "YaMf"}], "+", 
        
        RowBox[{"k", " ", "wAf", " ", "wam", " ", "Xamm", " ", "YAmf"}], "+", 
        
        RowBox[{"k", " ", "wAf", " ", "wam", " ", "XaMm", " ", "YAmf"}], "+", 
        
        RowBox[{"k", " ", "wAf", " ", "wAm", " ", "XAmm", " ", "YAmf"}], "+", 
        
        RowBox[{"k", " ", "wAf", " ", "wAm", " ", "XAMm", " ", "YAmf"}], "+", 
        
        RowBox[{"k", " ", "wAf", " ", "wam", " ", "Xamm", " ", "YAMf"}], "+", 
        
        RowBox[{"k", " ", "wAf", " ", "wAm", " ", "XAmm", " ", "YAMf"}], "+", 
        
        RowBox[{"k", " ", "waf", " ", "wam", " ", "Xamf", " ", "Yamm"}], "+", 
        
        RowBox[{"k", " ", "waf", " ", "wam", " ", "XaMf", " ", "Yamm"}], "+", 
        
        RowBox[{"k", " ", "wAf", " ", "wam", " ", "XAmf", " ", "Yamm"}], "+", 
        
        RowBox[{"k", " ", "wAf", " ", "wam", " ", "XAMf", " ", "Yamm"}], "+", 
        
        RowBox[{"k", " ", "waf", " ", "wam", " ", "Yamf", " ", "Yamm"}], "+", 
        
        RowBox[{"k", " ", "waf", " ", "wam", " ", "YaMf", " ", "Yamm"}], "+", 
        
        RowBox[{"k", " ", "wAf", " ", "wam", " ", "YAmf", " ", "Yamm"}], "+", 
        
        RowBox[{"k", " ", "wAf", " ", "wam", " ", "YAMf", " ", "Yamm"}], "+", 
        
        RowBox[{"k", " ", "waf", " ", "wam", " ", "Xamf", " ", "YaMm"}], "+", 
        
        RowBox[{"k", " ", "wAf", " ", "wam", " ", "XAmf", " ", "YaMm"}], "+", 
        
        RowBox[{"k", " ", "waf", " ", "wam", " ", "Yamf", " ", "YaMm"}], "+", 
        
        RowBox[{"k", " ", "wAf", " ", "wam", " ", "YAmf", " ", "YaMm"}], "+", 
        
        RowBox[{"k", " ", "waf", " ", "wAm", " ", "Xamf", " ", "YAmm"}], "+", 
        
        RowBox[{"k", " ", "waf", " ", "wAm", " ", "XaMf", " ", "YAmm"}], "+", 
        
        RowBox[{"k", " ", "wAf", " ", "wAm", " ", "XAmf", " ", "YAmm"}], "+", 
        
        RowBox[{"k", " ", "wAf", " ", "wAm", " ", "XAMf", " ", "YAmm"}], "+", 
        
        RowBox[{"k", " ", "waf", " ", "wAm", " ", "Yamf", " ", "YAmm"}], "+", 
        
        RowBox[{"k", " ", "waf", " ", "wAm", " ", "YaMf", " ", "YAmm"}], "+", 
        
        RowBox[{"k", " ", "wAf", " ", "wAm", " ", "YAmf", " ", "YAmm"}], "+", 
        
        RowBox[{"k", " ", "wAf", " ", "wAm", " ", "YAMf", " ", "YAmm"}], "+", 
        
        RowBox[{"k", " ", "waf", " ", "wAm", " ", "Xamf", " ", "YAMm"}], "+", 
        
        RowBox[{"k", " ", "wAf", " ", "wAm", " ", "XAmf", " ", "YAMm"}], "+", 
        
        RowBox[{"k", " ", "waf", " ", "wAm", " ", "Yamf", " ", "YAMm"}], "+", 
        
        RowBox[{"k", " ", "wAf", " ", "wAm", " ", "YAmf", " ", "YAMm"}]}], 
       ")"}], "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"waf", " ", "Xamf"}], "+", 
          RowBox[{"waf", " ", "XaMf"}], "+", 
          RowBox[{"wAf", " ", "XAmf"}], "+", 
          RowBox[{"wAf", " ", "XAMf"}], "+", 
          RowBox[{"waf", " ", "Yamf"}], "+", 
          RowBox[{"waf", " ", "YaMf"}], "+", 
          RowBox[{"wAf", " ", "YAmf"}], "+", 
          RowBox[{"wAf", " ", "YAMf"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"wam", " ", "Xamm"}], "+", 
          RowBox[{"wam", " ", "XaMm"}], "+", 
          RowBox[{"wAm", " ", "XAmm"}], "+", 
          RowBox[{"wAm", " ", "XAMm"}], "+", 
          RowBox[{"wam", " ", "Yamm"}], "+", 
          RowBox[{"wam", " ", "YaMm"}], "+", 
          RowBox[{"wAm", " ", "YAmm"}], "+", 
          RowBox[{"wAm", " ", "YAMm"}]}], ")"}]}], ")"}]}]}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.710438036188818*^9, 3.710438066355315*^9}, {
   3.710438121144825*^9, 3.7104381282935667`*^9}, 3.7104396004906683`*^9, {
   3.710445468218328*^9, 
   3.710445478096301*^9}},ExpressionUUID->"c92a2acb-93ea-4cba-9d62-\
80b5caf7c9eb"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "generation", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"generation", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "FAA_", ",", "FAa_", ",", "Faa_", ",", "MAA_", ",", "MAa_", ",", "Maa_", 
      ",", "wAf_", ",", "waf_", ",", "wAm_", ",", "wam_", ",", "\[Alpha]f_", 
      ",", "\[Alpha]m_", ",", "r_", ",", "R_", ",", "\[Chi]_", ",", "k_"}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "XAMf_", ",", "XaMf_", ",", "XAmf_", ",", "Xamf_", ",", "YAMf_", ",", 
      "YaMf_", ",", " ", "YAmf_", ",", " ", "Yamf_", ",", "XAMm_", ",", 
      "XaMm_", ",", "XAmm_", ",", "Xamm_", ",", "YAMm_", ",", "YaMm_", ",", 
      " ", "YAmm_", ",", " ", "Yamm_"}], "}"}]}], "]"}], ":=", 
  RowBox[{
   RowBox[{"generation", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "FAA", ",", "FAa", ",", "Faa", ",", "MAA", ",", "MAa", ",", "Maa", ",", 
       "wAf", ",", "waf", ",", "wAm", ",", "wam", ",", "\[Alpha]f", ",", 
       "\[Alpha]m", ",", "r", ",", "R", ",", "\[Chi]", ",", "k"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "XAMf", ",", "XaMf", ",", "XAmf", ",", "Xamf", ",", "YAMf", ",", "YaMf",
        ",", " ", "YAmf", ",", " ", "Yamf", ",", "XAMm", ",", "XaMm", ",", 
       "XAmm", ",", "Xamm", ",", "YAMm", ",", "YaMm", ",", " ", "YAmm", ",", 
       " ", "Yamm"}], "}"}]}], "]"}], "=", "\[IndentingNewLine]", 
   RowBox[{"Block", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Rm", "=", "R"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Rf", "=", "R"}], ",", "\[IndentingNewLine]", 
       RowBox[{"rMMm", "=", "r"}], ",", "\[IndentingNewLine]", 
       RowBox[{"rMmm", "=", "r"}], ",", "\[IndentingNewLine]", 
       RowBox[{"rmmm", "=", "r"}], ",", "\[IndentingNewLine]", 
       RowBox[{"rMMf", "=", "r"}], ",", "\[IndentingNewLine]", 
       RowBox[{"rMmf", "=", "r"}], ",", "\[IndentingNewLine]", 
       RowBox[{"rmmf", "=", "r"}], ",", "\[IndentingNewLine]", 
       RowBox[{"\[Chi]m", "=", "\[Chi]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"\[Chi]f", "=", "\[Chi]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"kXX", "=", "1"}], ",", "\[IndentingNewLine]", 
       RowBox[{"kXY", "=", "0"}], ",", "\[IndentingNewLine]", 
       RowBox[{"kYY", "=", "0"}], ",", "\[IndentingNewLine]", 
       RowBox[{"kMmXX", "=", "k"}], ",", "\[IndentingNewLine]", 
       RowBox[{"kMmXY", "=", "k"}], ",", "\[IndentingNewLine]", 
       RowBox[{"kMmYY", "=", "k"}], ",", "\[IndentingNewLine]", 
       RowBox[{"kmm", "=", "k"}]}], "\[IndentingNewLine]", "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"wbarHapFemale", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"wAf", " ", "XAMf"}], "+", 
          RowBox[{"waf", " ", "XaMf"}], "+", 
          RowBox[{"wAf", " ", "XAmf"}], "+", 
          RowBox[{"waf", " ", "Xamf"}]}], ")"}], "+", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"wAf", " ", "YAMf"}], "+", 
          RowBox[{"waf", " ", "YaMf"}], "+", 
          RowBox[{"wAf", " ", "YAmf"}], "+", 
          RowBox[{"waf", " ", "Yamf"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"wbarHapMale", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"wAm", " ", "XAMm"}], "+", 
          RowBox[{"wam", " ", "XaMm"}], "+", 
          RowBox[{"wAm", " ", "XAmm"}], "+", 
          RowBox[{"wam", " ", "Xamm"}]}], ")"}], "+", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"wAm", " ", "YAMm"}], "+", 
          RowBox[{"wam", " ", "YaMm"}], "+", 
          RowBox[{"wAm", " ", "YAmm"}], "+", 
          RowBox[{"wam", " ", "Yamm"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"non", "-", 
        RowBox[{"mutant", " ", "eggs"}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"XAMfs", "=", 
       RowBox[{"wAf", " ", 
        RowBox[{"XAMf", "/", "wbarHapFemale"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"XaMfs", "=", 
       RowBox[{"waf", " ", 
        RowBox[{"XaMf", "/", "wbarHapFemale"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"YAMfs", "=", 
       RowBox[{"wAf", " ", 
        RowBox[{"YAMf", "/", "wbarHapFemale"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"YaMfs", "=", 
       RowBox[{"waf", " ", 
        RowBox[{"YaMf", "/", "wbarHapFemale"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"mutant", " ", "eggs"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"XAmfs", "=", 
       RowBox[{"wAf", " ", 
        RowBox[{"XAmf", "/", "wbarHapFemale"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Xamfs", "=", 
       RowBox[{"waf", " ", 
        RowBox[{"Xamf", "/", "wbarHapFemale"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"YAmfs", "=", 
       RowBox[{"wAf", " ", 
        RowBox[{"YAmf", "/", "wbarHapFemale"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Yamfs", "=", 
       RowBox[{"waf", " ", 
        RowBox[{"Yamf", "/", "wbarHapFemale"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"non", "-", 
        RowBox[{"mutant", " ", "male", " ", "gametes"}]}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"XAMms", "=", 
       RowBox[{"wAm", " ", 
        RowBox[{"XAMm", "/", "wbarHapMale"}]}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"XaMms", "=", 
       RowBox[{"wam", " ", 
        RowBox[{"XaMm", "/", "wbarHapMale"}]}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"YAMms", "=", " ", 
       RowBox[{"wAm", " ", 
        RowBox[{"YAMm", "/", "wbarHapMale"}]}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"YaMms", "=", " ", 
       RowBox[{"wam", " ", 
        RowBox[{"YaMm", "/", "wbarHapMale"}]}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"(*", 
       RowBox[{"mutant", " ", "male", " ", "gametes"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"XAmms", "=", 
       RowBox[{"wAm", " ", 
        RowBox[{"XAmm", "/", "wbarHapMale"}]}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"Xamms", "=", 
       RowBox[{"wam", " ", 
        RowBox[{"Xamm", "/", "wbarHapMale"}]}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"YAmms", "=", " ", 
       RowBox[{"wAm", " ", 
        RowBox[{"YAmm", "/", "wbarHapMale"}]}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"Yamms", "=", " ", 
       RowBox[{"wam", " ", 
        RowBox[{"Yamm", "/", "wbarHapMale"}]}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"(*", 
       RowBox[{"MM", " ", "Homozygotes"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"XM", "-", 
        RowBox[{"XM", " ", "females"}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"XAMXAMfemale", "=", 
       RowBox[{"kXX", " ", 
        RowBox[{"(", 
         RowBox[{"XAMfs", " ", "XAMms"}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"XAMXaMfemale", "=", 
       RowBox[{"kXX", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"XAMfs", " ", "XaMms"}], "+", 
          RowBox[{"XaMfs", " ", "XAMms"}]}], " ", ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"XaMXaMfemale", "=", 
       RowBox[{"kXX", 
        RowBox[{"(", 
         RowBox[{"XaMfs", " ", "XaMms"}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"XM", "-", 
        RowBox[{"XM", " ", "males"}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"XAMXAMmale", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "kXX"}], ")"}], 
        RowBox[{"(", 
         RowBox[{"XAMfs", " ", "XAMms"}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"XAMXaMmale", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "kXX"}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"XAMfs", " ", "XaMms"}], "+", 
          RowBox[{"XaMfs", " ", "XAMms"}]}], " ", ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"XaMXaMmale", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "kXX"}], ")"}], 
        RowBox[{"(", 
         RowBox[{"XaMfs", " ", "XaMms"}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"XM", "-", 
        RowBox[{"YM", " ", "females"}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"XAMYAMfemale", "=", 
       RowBox[{"kXY", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"XAMfs", " ", "YAMms"}], "+", 
          RowBox[{"YAMfs", " ", "XAMms"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"XAMYaMfemale", "=", 
       RowBox[{"kXY", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"XAMfs", " ", "YaMms"}], "+", 
          RowBox[{"YaMfs", " ", "XAMms"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"XaMYAMfemale", "=", 
       RowBox[{"kXY", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"XaMfs", " ", "YAMms"}], "+", 
          RowBox[{"YAMfs", " ", "XaMms"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"XaMYaMfemale", "=", 
       RowBox[{"kXY", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"XaMfs", " ", "YaMms"}], "+", 
          RowBox[{"YaMfs", " ", "XaMms"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"XM", "-", 
        RowBox[{"YM", " ", "males"}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"XAMYAMmale", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "kXY"}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"XAMfs", " ", "YAMms"}], "+", 
          RowBox[{"YAMfs", " ", "XAMms"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"XAMYaMmale", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "kXY"}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"XAMfs", " ", "YaMms"}], "+", 
          RowBox[{"YaMfs", " ", "XAMms"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"XaMYAMmale", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "kXY"}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"XaMfs", " ", "YAMms"}], "+", 
          RowBox[{"YAMfs", " ", "XaMms"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"XaMYaMmale", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "kXY"}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"XaMfs", " ", "YaMms"}], "+", 
          RowBox[{"YaMfs", " ", "XaMms"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"YM", "-", 
        RowBox[{"YM", " ", "females"}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"YAMYAMfemale", "=", 
       RowBox[{"kYY", 
        RowBox[{"(", 
         RowBox[{"YAMfs", " ", "YAMms"}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"YAMYaMfemale", "=", 
       RowBox[{"kYY", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"YAMfs", " ", "YaMms"}], "+", 
          RowBox[{"YaMfs", " ", "YAMms"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"YaMYaMfemale", "=", 
       RowBox[{"kYY", 
        RowBox[{"(", 
         RowBox[{"YaMfs", " ", "YaMms"}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"YM", "-", 
        RowBox[{"YM", " ", "males"}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"YAMYAMmale", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "kYY"}], ")"}], 
        RowBox[{"(", 
         RowBox[{"YAMfs", " ", "YAMms"}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"YAMYaMmale", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "kYY"}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"YAMfs", " ", "YaMms"}], "+", 
          RowBox[{"YaMfs", " ", "YAMms"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"YaMYaMmale", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "kYY"}], ")"}], 
        RowBox[{"(", 
         RowBox[{"YaMfs", " ", "YaMms"}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Mm", " ", "heterozygotes"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"XM", "-", 
        RowBox[{"Xm", " ", "females"}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"XAmXAMfemale", "=", 
       RowBox[{"kMmXX", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"XAmfs", " ", "XAMms"}], "+", 
          RowBox[{"XAMfs", " ", "XAmms"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"XAmXaMfemale", "=", 
       RowBox[{"kMmXX", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"XAmfs", " ", "XaMms"}], "+", 
          RowBox[{"XaMfs", " ", "XAmms"}]}], " ", ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"XAMXamfemale", "=", 
       RowBox[{"kMmXX", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"XAMfs", " ", "Xamms"}], "+", 
          RowBox[{"Xamfs", " ", "XAMms"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"XamXaMfemale", "=", 
       RowBox[{"kMmXX", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Xamfs", " ", "XaMms"}], "+", 
          RowBox[{"XaMfs", " ", "Xamms"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"XM", "-", 
        RowBox[{"Xm", " ", "males"}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"XAmXAMmale", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "kMmXX"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"XAmfs", " ", "XAMms"}], "+", 
          RowBox[{"XAMfs", " ", "XAmms"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"XAmXaMmale", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "kMmXX"}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"XAmfs", " ", "XaMms"}], "+", 
          RowBox[{"XaMfs", " ", "XAmms"}]}], " ", ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"XAMXammale", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "kMmXX"}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"XAMfs", " ", "Xamms"}], "+", 
          RowBox[{"Xamfs", " ", "XAMms"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"XamXaMmale", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "kMmXX"}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Xamfs", " ", "XaMms"}], "+", 
          RowBox[{"XaMfs", " ", "Xamms"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Xm", "-", 
        RowBox[{"YM", " ", "females"}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"XAmYAMfemale", "=", 
       RowBox[{"kMmXY", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"XAmfs", " ", "YAMms"}], "+", 
          RowBox[{"YAMfs", " ", "XAmms"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"XAmYaMfemale", "=", 
       RowBox[{"kMmXY", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"XAmfs", " ", "YaMms"}], "+", 
          RowBox[{"YaMfs", " ", "XAmms"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"XamYAMfemale", "=", 
       RowBox[{"kMmXY", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Xamfs", " ", "YAMms"}], "+", 
          RowBox[{"YAMfs", " ", "Xamms"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"XamYaMfemale", "=", 
       RowBox[{"kMmXY", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Xamfs", " ", "YaMms"}], "+", 
          RowBox[{"YaMfs", " ", "Xamms"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Xm", "-", 
        RowBox[{"YM", " ", "males"}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"XAmYAMmale", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "kMmXY"}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"XAmfs", " ", "YAMms"}], "+", 
          RowBox[{"YAMfs", " ", "XAmms"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"XAmYaMmale", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "kMmXY"}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"XAmfs", " ", "YaMms"}], "+", 
          RowBox[{"YaMfs", " ", "XAmms"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"XamYAMmale", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "kMmXY"}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Xamfs", " ", "YAMms"}], "+", 
          RowBox[{"YAMfs", " ", "Xamms"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"XamYaMmale", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "kMmXY"}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Xamfs", " ", "YaMms"}], "+", 
          RowBox[{"YaMfs", " ", "Xamms"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"XM", "-", 
        RowBox[{"Ym", " ", "females"}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"XAMYAmfemale", "=", 
       RowBox[{"kMmXY", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"XAMfs", " ", "YAmms"}], "+", 
          RowBox[{"YAmfs", " ", "XAMms"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"XAMYamfemale", "=", 
       RowBox[{"kMmXY", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"XAMfs", " ", "Yamms"}], "+", 
          RowBox[{"Yamfs", " ", "XAMms"}]}], " ", ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"XaMYAmfemale", "=", 
       RowBox[{"kMmXY", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"XaMfs", " ", "YAmms"}], "+", 
          RowBox[{"YAmfs", " ", "XaMms"}]}], " ", ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"XaMYamfemale", "=", 
       RowBox[{"kMmXY", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"XaMfs", " ", "Yamms"}], "+", 
          RowBox[{"Yamfs", " ", "XaMms"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"XM", "-", 
        RowBox[{"Ym", " ", "females"}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"XAMYAmmale", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "kMmXY"}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"XAMfs", " ", "YAmms"}], "+", 
          RowBox[{"YAmfs", " ", "XAMms"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"XAMYammale", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "kMmXY"}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"XAMfs", " ", "Yamms"}], "+", 
          RowBox[{"Yamfs", " ", "XAMms"}]}], " ", ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"XaMYAmmale", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "kMmXY"}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"XaMfs", " ", "YAmms"}], "+", 
          RowBox[{"YAmfs", " ", "XaMms"}]}], " ", ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"XaMYammale", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "kMmXY"}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"XaMfs", " ", "Yamms"}], "+", 
          RowBox[{"Yamfs", " ", "XaMms"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Ym", "-", 
        RowBox[{"YM", " ", "females"}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"YAmYAMfemale", "=", 
       RowBox[{"kMmYY", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"YAmfs", " ", "YAMms"}], "+", 
          RowBox[{"YAMfs", " ", "YAmms"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"YAmYaMfemale", "=", 
       RowBox[{"kMmYY", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"YAmfs", " ", "YaMms"}], "+", 
          RowBox[{"YaMfs", " ", "YAmms"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"YamYAMfemale", "=", 
       RowBox[{"kMmYY", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Yamfs", " ", "YAMms"}], "+", 
          RowBox[{"YAMfs", " ", "Yamms"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"YamYaMfemale", "=", 
       RowBox[{"kMmYY", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Yamfs", " ", "YaMms"}], "+", 
          RowBox[{"YaMfs", " ", "Yamms"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Ym", "-", 
        RowBox[{"YM", " ", "males"}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"YAmYAMmale", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "kMmYY"}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"YAmfs", " ", "YAMms"}], "+", 
          RowBox[{"YAMfs", " ", "YAmms"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"YAmYaMmale", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "kMmYY"}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"YAmfs", " ", "YaMms"}], "+", 
          RowBox[{"YaMfs", " ", "YAmms"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"YamYAMmale", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "kMmYY"}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Yamfs", " ", "YAMms"}], "+", 
          RowBox[{"YAMfs", " ", "Yamms"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"YamYaMmale", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "kMmYY"}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Yamfs", " ", "YaMms"}], "+", 
          RowBox[{"YaMfs", " ", "Yamms"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"mm", " ", "heterozygotes"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Xm", "-", 
        RowBox[{"Xm", " ", "females"}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"XAmXAmfemale", "=", 
       RowBox[{"kmm", 
        RowBox[{"(", 
         RowBox[{"XAmfs", " ", "XAmms"}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"XAmXamfemale", "=", 
       RowBox[{"kmm", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"XAmfs", " ", "Xamms"}], "+", 
          RowBox[{"Xamfs", " ", "XAmms"}]}], " ", ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"XamXamfemale", "=", 
       RowBox[{"kmm", 
        RowBox[{"(", 
         RowBox[{"Xamfs", " ", "Xamms"}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Xm", "-", 
        RowBox[{"Xm", " ", "males"}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"XAmXAmmale", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "kmm"}], ")"}], 
        RowBox[{"(", 
         RowBox[{"XAmfs", " ", "XAmms"}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"XAmXammale", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "kmm"}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"XAmfs", " ", "Xamms"}], "+", 
          RowBox[{"Xamfs", " ", "XAmms"}]}], " ", ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"XamXammale", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "kmm"}], ")"}], 
        RowBox[{"(", 
         RowBox[{"Xamfs", " ", "Xamms"}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Xm", "-", 
        RowBox[{"Ym", " ", "females"}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"XAmYAmfemale", "=", 
       RowBox[{"kmm", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"XAmfs", " ", "YAmms"}], "+", 
          RowBox[{"YAmfs", " ", "XAmms"}]}], " ", ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"XAmYamfemale", "=", 
       RowBox[{"kmm", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"XAmfs", " ", "Yamms"}], "+", 
          RowBox[{"Yamfs", " ", "XAmms"}]}], " ", ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"XamYAmfemale", "=", 
       RowBox[{"kmm", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Xamfs", " ", "YAmms"}], "+", 
          RowBox[{"YAmfs", " ", "Xamms"}]}], " ", ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"XamYamfemale", "=", 
       RowBox[{"kmm", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Xamfs", " ", "Yamms"}], "+", 
          RowBox[{"Yamfs", " ", "Xamms"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Xm", "-", 
        RowBox[{"Ym", " ", "males"}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"XAmYAmmale", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "kmm"}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"XAmfs", " ", "YAmms"}], "+", 
          RowBox[{"YAmfs", " ", "XAmms"}]}], " ", ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"XAmYammale", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "kmm"}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"XAmfs", " ", "Yamms"}], "+", 
          RowBox[{"Yamfs", " ", "XAmms"}]}], " ", ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"XamYAmmale", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "kmm"}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Xamfs", " ", "YAmms"}], "+", 
          RowBox[{"YAmfs", " ", "Xamms"}]}], " ", ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"XamYammale", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "kmm"}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Xamfs", " ", "Yamms"}], "+", 
          RowBox[{"Yamfs", " ", "Xamms"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Ym", "-", 
        RowBox[{"Ym", " ", "females"}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"YAmYAmfemale", "=", 
       RowBox[{"kmm", 
        RowBox[{"(", 
         RowBox[{"YAmfs", " ", "YAmms"}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"YAmYamfemale", "=", 
       RowBox[{"kmm", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"YAmfs", " ", "Yamms"}], "+", 
          RowBox[{"Yamfs", " ", "YAmms"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"YamYamfemale", "=", 
       RowBox[{"kmm", 
        RowBox[{"(", 
         RowBox[{"Yamfs", " ", "Yamms"}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Ym", "-", 
        RowBox[{"Ym", " ", "males"}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"YAmYAmmale", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "kmm"}], ")"}], 
        RowBox[{"(", 
         RowBox[{"YAmfs", " ", "YAmms"}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"YAmYammale", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "kmm"}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"YAmfs", " ", "Yamms"}], "+", 
          RowBox[{"Yamfs", " ", "YAmms"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"YamYammale", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "kmm"}], ")"}], 
        RowBox[{"(", 
         RowBox[{"Yamfs", " ", "Yamms"}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"MM", " ", "Homozygotes"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"XM", "-", 
        RowBox[{"XM", " ", "females"}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"XAMXAMfemale", "=", 
       RowBox[{"kXX", " ", 
        RowBox[{"(", 
         RowBox[{"XAMfs", " ", "XAMms"}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"XAMXaMfemale", "=", 
       RowBox[{"kXX", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"XAMfs", " ", "XaMms"}], "+", 
          RowBox[{"XaMfs", " ", "XAMms"}]}], " ", ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"XaMXaMfemale", "=", 
       RowBox[{"kXX", 
        RowBox[{"(", 
         RowBox[{"XaMfs", " ", "XaMms"}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"XM", "-", 
        RowBox[{"XM", " ", "males"}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"XAMXAMmale", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "kXX"}], ")"}], 
        RowBox[{"(", 
         RowBox[{"XAMfs", " ", "XAMms"}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"XAMXaMmale", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "kXX"}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"XAMfs", " ", "XaMms"}], "+", 
          RowBox[{"XaMfs", " ", "XAMms"}]}], " ", ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"XaMXaMmale", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "kXX"}], ")"}], 
        RowBox[{"(", 
         RowBox[{"XaMfs", " ", "XaMms"}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"XM", "-", 
        RowBox[{"YM", " ", "females"}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"XAMYAMfemale", "=", 
       RowBox[{"kXY", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"XAMfs", " ", "YAMms"}], "+", 
          RowBox[{"YAMfs", " ", "XAMms"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"XAMYaMfemale", "=", 
       RowBox[{"kXY", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"XAMfs", " ", "YaMms"}], "+", 
          RowBox[{"YaMfs", " ", "XAMms"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"XaMYAMfemale", "=", 
       RowBox[{"kXY", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"XaMfs", " ", "YAMms"}], "+", 
          RowBox[{"YAMfs", " ", "XaMms"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"XaMYaMfemale", "=", 
       RowBox[{"kXY", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"XaMfs", " ", "YaMms"}], "+", 
          RowBox[{"YaMfs", " ", "XaMms"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"XM", "-", 
        RowBox[{"YM", " ", "males"}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"XAMYAMmale", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "kXY"}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"XAMfs", " ", "YAMms"}], "+", 
          RowBox[{"YAMfs", " ", "XAMms"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"XAMYaMmale", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "kXY"}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"XAMfs", " ", "YaMms"}], "+", 
          RowBox[{"YaMfs", " ", "XAMms"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"XaMYAMmale", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "kXY"}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"XaMfs", " ", "YAMms"}], "+", 
          RowBox[{"YAMfs", " ", "XaMms"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"XaMYaMmale", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "kXY"}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"XaMfs", " ", "YaMms"}], "+", 
          RowBox[{"YaMfs", " ", "XaMms"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"YM", "-", 
        RowBox[{"YM", " ", "females"}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"YAMYAMfemale", "=", 
       RowBox[{"kYY", 
        RowBox[{"(", 
         RowBox[{"YAMfs", " ", "YAMms"}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"YAMYaMfemale", "=", 
       RowBox[{"kYY", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"YAMfs", " ", "YaMms"}], "+", 
          RowBox[{"YaMfs", " ", "YAMms"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"YaMYaMfemale", "=", 
       RowBox[{"kYY", 
        RowBox[{"(", 
         RowBox[{"YaMfs", " ", "YaMms"}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"YM", "-", 
        RowBox[{"YM", " ", "males"}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"YAMYAMmale", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "kYY"}], ")"}], 
        RowBox[{"(", 
         RowBox[{"YAMfs", " ", "YAMms"}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"YAMYaMmale", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "kYY"}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"YAMfs", " ", "YaMms"}], "+", 
          RowBox[{"YaMfs", " ", "YAMms"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"YaMYaMmale", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "kYY"}], ")"}], 
        RowBox[{"(", 
         RowBox[{"YaMfs", " ", "YaMms"}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Mm", " ", "heterozygotes"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"XM", "-", 
        RowBox[{"Xm", " ", "females"}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"XAmXAMfemale", "=", 
       RowBox[{"kMmXX", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"XAmfs", " ", "XAMms"}], "+", 
          RowBox[{"XAMfs", " ", "XAmms"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"XAmXaMfemale", "=", 
       RowBox[{"kMmXX", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"XAmfs", " ", "XaMms"}], "+", 
          RowBox[{"XaMfs", " ", "XAmms"}]}], " ", ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"XAMXamfemale", "=", 
       RowBox[{"kMmXX", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"XAMfs", " ", "Xamms"}], "+", 
          RowBox[{"Xamfs", " ", "XAMms"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"XamXaMfemale", "=", 
       RowBox[{"kMmXX", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Xamfs", " ", "XaMms"}], "+", 
          RowBox[{"XaMfs", " ", "Xamms"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"XM", "-", 
        RowBox[{"Xm", " ", "males"}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"XAmXAMmale", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "kMmXX"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"XAmfs", " ", "XAMms"}], "+", 
          RowBox[{"XAMfs", " ", "XAmms"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"XAmXaMmale", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "kMmXX"}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"XAmfs", " ", "XaMms"}], "+", 
          RowBox[{"XaMfs", " ", "XAmms"}]}], " ", ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"XAMXammale", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "kMmXX"}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"XAMfs", " ", "Xamms"}], "+", 
          RowBox[{"Xamfs", " ", "XAMms"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"XamXaMmale", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "kMmXX"}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Xamfs", " ", "XaMms"}], "+", 
          RowBox[{"XaMfs", " ", "Xamms"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Xm", "-", 
        RowBox[{"YM", " ", "females"}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"XAmYAMfemale", "=", 
       RowBox[{"kMmXY", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"XAmfs", " ", "YAMms"}], "+", 
          RowBox[{"YAMfs", " ", "XAmms"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"XAmYaMfemale", "=", 
       RowBox[{"kMmXY", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"XAmfs", " ", "YaMms"}], "+", 
          RowBox[{"YaMfs", " ", "XAmms"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"XamYAMfemale", "=", 
       RowBox[{"kMmXY", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Xamfs", " ", "YAMms"}], "+", 
          RowBox[{"YAMfs", " ", "Xamms"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"XamYaMfemale", "=", 
       RowBox[{"kMmXY", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Xamfs", " ", "YaMms"}], "+", 
          RowBox[{"YaMfs", " ", "Xamms"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Xm", "-", 
        RowBox[{"YM", " ", "males"}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"XAmYAMmale", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "kMmXY"}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"XAmfs", " ", "YAMms"}], "+", 
          RowBox[{"YAMfs", " ", "XAmms"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"XAmYaMmale", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "kMmXY"}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"XAmfs", " ", "YaMms"}], "+", 
          RowBox[{"YaMfs", " ", "XAmms"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"XamYAMmale", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "kMmXY"}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Xamfs", " ", "YAMms"}], "+", 
          RowBox[{"YAMfs", " ", "Xamms"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"XamYaMmale", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "kMmXY"}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Xamfs", " ", "YaMms"}], "+", 
          RowBox[{"YaMfs", " ", "Xamms"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"XM", "-", 
        RowBox[{"Ym", " ", "females"}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"XAMYAmfemale", "=", 
       RowBox[{"kMmXY", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"XAMfs", " ", "YAmms"}], "+", 
          RowBox[{"YAmfs", " ", "XAMms"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"XAMYamfemale", "=", 
       RowBox[{"kMmXY", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"XAMfs", " ", "Yamms"}], "+", 
          RowBox[{"Yamfs", " ", "XAMms"}]}], " ", ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"XaMYAmfemale", "=", 
       RowBox[{"kMmXY", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"XaMfs", " ", "YAmms"}], "+", 
          RowBox[{"YAmfs", " ", "XaMms"}]}], " ", ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"XaMYamfemale", "=", 
       RowBox[{"kMmXY", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"XaMfs", " ", "Yamms"}], "+", 
          RowBox[{"Yamfs", " ", "XaMms"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"XM", "-", 
        RowBox[{"Ym", " ", "females"}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"XAMYAmmale", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "kMmXY"}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"XAMfs", " ", "YAmms"}], "+", 
          RowBox[{"YAmfs", " ", "XAMms"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"XAMYammale", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "kMmXY"}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"XAMfs", " ", "Yamms"}], "+", 
          RowBox[{"Yamfs", " ", "XAMms"}]}], " ", ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"XaMYAmmale", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "kMmXY"}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"XaMfs", " ", "YAmms"}], "+", 
          RowBox[{"YAmfs", " ", "XaMms"}]}], " ", ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"XaMYammale", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "kMmXY"}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"XaMfs", " ", "Yamms"}], "+", 
          RowBox[{"Yamfs", " ", "XaMms"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Ym", "-", 
        RowBox[{"YM", " ", "females"}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"YAmYAMfemale", "=", 
       RowBox[{"kMmYY", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"YAmfs", " ", "YAMms"}], "+", 
          RowBox[{"YAMfs", " ", "YAmms"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"YAmYaMfemale", "=", 
       RowBox[{"kMmYY", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"YAmfs", " ", "YaMms"}], "+", 
          RowBox[{"YaMfs", " ", "YAmms"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"YamYAMfemale", "=", 
       RowBox[{"kMmYY", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Yamfs", " ", "YAMms"}], "+", 
          RowBox[{"YAMfs", " ", "Yamms"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"YamYaMfemale", "=", 
       RowBox[{"kMmYY", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Yamfs", " ", "YaMms"}], "+", 
          RowBox[{"YaMfs", " ", "Yamms"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Ym", "-", 
        RowBox[{"YM", " ", "males"}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"YAmYAMmale", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "kMmYY"}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"YAmfs", " ", "YAMms"}], "+", 
          RowBox[{"YAMfs", " ", "YAmms"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"YAmYaMmale", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "kMmYY"}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"YAmfs", " ", "YaMms"}], "+", 
          RowBox[{"YaMfs", " ", "YAmms"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"YamYAMmale", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "kMmYY"}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Yamfs", " ", "YAMms"}], "+", 
          RowBox[{"YAMfs", " ", "Yamms"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"YamYaMmale", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "kMmYY"}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Yamfs", " ", "YaMms"}], "+", 
          RowBox[{"YaMfs", " ", "Yamms"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"mm", " ", "heterozygotes"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Xm", "-", 
        RowBox[{"Xm", " ", "females"}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"XAmXAmfemale", "=", 
       RowBox[{"kmm", 
        RowBox[{"(", 
         RowBox[{"XAmfs", " ", "XAmms"}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"XAmXamfemale", "=", 
       RowBox[{"kmm", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"XAmfs", " ", "Xamms"}], "+", 
          RowBox[{"Xamfs", " ", "XAmms"}]}], " ", ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"XamXamfemale", "=", 
       RowBox[{"kmm", 
        RowBox[{"(", 
         RowBox[{"Xamfs", " ", "Xamms"}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Xm", "-", 
        RowBox[{"Xm", " ", "males"}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"XAmXAmmale", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "kmm"}], ")"}], 
        RowBox[{"(", 
         RowBox[{"XAmfs", " ", "XAmms"}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"XAmXammale", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "kmm"}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"XAmfs", " ", "Xamms"}], "+", 
          RowBox[{"Xamfs", " ", "XAmms"}]}], " ", ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"XamXammale", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "kmm"}], ")"}], 
        RowBox[{"(", 
         RowBox[{"Xamfs", " ", "Xamms"}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Xm", "-", 
        RowBox[{"Ym", " ", "females"}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"XAmYAmfemale", "=", 
       RowBox[{"kmm", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"XAmfs", " ", "YAmms"}], "+", 
          RowBox[{"YAmfs", " ", "XAmms"}]}], " ", ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"XAmYamfemale", "=", 
       RowBox[{"kmm", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"XAmfs", " ", "Yamms"}], "+", 
          RowBox[{"Yamfs", " ", "XAmms"}]}], " ", ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"XamYAmfemale", "=", 
       RowBox[{"kmm", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Xamfs", " ", "YAmms"}], "+", 
          RowBox[{"YAmfs", " ", "Xamms"}]}], " ", ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"XamYamfemale", "=", 
       RowBox[{"kmm", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Xamfs", " ", "Yamms"}], "+", 
          RowBox[{"Yamfs", " ", "Xamms"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Xm", "-", 
        RowBox[{"Ym", " ", "males"}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"XAmYAmmale", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "kmm"}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"XAmfs", " ", "YAmms"}], "+", 
          RowBox[{"YAmfs", " ", "XAmms"}]}], " ", ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"XAmYammale", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "kmm"}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"XAmfs", " ", "Yamms"}], "+", 
          RowBox[{"Yamfs", " ", "XAmms"}]}], " ", ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"XamYAmmale", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "kmm"}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Xamfs", " ", "YAmms"}], "+", 
          RowBox[{"YAmfs", " ", "Xamms"}]}], " ", ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"XamYammale", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "kmm"}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Xamfs", " ", "Yamms"}], "+", 
          RowBox[{"Yamfs", " ", "Xamms"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Ym", "-", 
        RowBox[{"Ym", " ", "females"}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"YAmYAmfemale", "=", 
       RowBox[{"kmm", 
        RowBox[{"(", 
         RowBox[{"YAmfs", " ", "YAmms"}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"YAmYamfemale", "=", 
       RowBox[{"kmm", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"YAmfs", " ", "Yamms"}], "+", 
          RowBox[{"Yamfs", " ", "YAmms"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"YamYamfemale", "=", 
       RowBox[{"kmm", 
        RowBox[{"(", 
         RowBox[{"Yamfs", " ", "Yamms"}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Ym", "-", 
        RowBox[{"Ym", " ", "males"}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"YAmYAmmale", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "kmm"}], ")"}], 
        RowBox[{"(", 
         RowBox[{"YAmfs", " ", "YAmms"}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"YAmYammale", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "kmm"}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"YAmfs", " ", "Yamms"}], "+", 
          RowBox[{"Yamfs", " ", "YAmms"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"YamYammale", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "kmm"}], ")"}], 
        RowBox[{"(", 
         RowBox[{"Yamfs", " ", "Yamms"}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"mean", " ", "male", " ", "fitness"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"wbarM", "=", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"MAA", " ", "XAMXAMmale"}], "+", 
        RowBox[{"MAa", " ", "XAMXaMmale"}], "+", 
        RowBox[{"Maa", " ", "XaMXaMmale"}], "+", "\[IndentingNewLine]", 
        RowBox[{"MAA", " ", "XAMYAMmale"}], "+", 
        RowBox[{"MAa", " ", 
         RowBox[{"(", 
          RowBox[{"XAMYaMmale", "+", "XaMYAMmale"}], ")"}]}], "+", 
        RowBox[{"Maa", " ", "XaMYaMmale"}], "+", "\[IndentingNewLine]", 
        RowBox[{"MAA", " ", "YAMYAMmale"}], "+", 
        RowBox[{"MAa", " ", "YAMYaMmale"}], "+", 
        RowBox[{"Maa", " ", "YaMYaMmale"}], "+", "\[IndentingNewLine]", 
        RowBox[{"MAA", " ", "XAmXAMmale"}], "+", 
        RowBox[{"MAa", " ", 
         RowBox[{"(", 
          RowBox[{"XAmXaMmale", "+", "XAMXammale"}], ")"}]}], "+", 
        RowBox[{"Maa", " ", "XamXaMmale"}], "+", "\[IndentingNewLine]", 
        RowBox[{"MAA", " ", "XAmYAMmale"}], "+", 
        RowBox[{"MAa", " ", 
         RowBox[{"(", 
          RowBox[{"XAmYaMmale", "+", "XamYAMmale"}], ")"}]}], "+", 
        RowBox[{"Maa", " ", "XamYaMmale"}], "+", "\[IndentingNewLine]", 
        RowBox[{"MAA", " ", "XAMYAmmale"}], "+", 
        RowBox[{"MAa", 
         RowBox[{"(", 
          RowBox[{"XAMYammale", "+", "XaMYAmmale"}], ")"}]}], "+", 
        RowBox[{"Maa", " ", "XaMYammale"}], "+", "\[IndentingNewLine]", 
        RowBox[{"MAA", " ", "YAmYAMmale"}], "+", 
        RowBox[{"MAa", " ", 
         RowBox[{"(", 
          RowBox[{"YAmYaMmale", "+", "YamYAMmale"}], ")"}]}], "+", 
        RowBox[{"Maa", " ", "YamYaMmale"}], "+", "\[IndentingNewLine]", 
        RowBox[{"MAA", " ", "XAmXAmmale"}], "+", 
        RowBox[{"MAa", " ", "XAmXammale"}], "+", 
        RowBox[{"Maa", " ", "XamXammale"}], "+", "\[IndentingNewLine]", 
        RowBox[{"MAA", " ", "XAmYAmmale"}], "+", 
        RowBox[{"MAa", " ", 
         RowBox[{"(", 
          RowBox[{"XAmYammale", "+", "XamYAmmale"}], ")"}]}], "+", 
        RowBox[{"Maa", " ", "XamYammale"}], "+", "\[IndentingNewLine]", 
        RowBox[{"MAA", " ", "YAmYAmmale"}], "+", 
        RowBox[{"MAa", " ", "YAmYammale"}], "+", 
        RowBox[{"Maa", " ", "YamYammale"}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"XAMXAMmales", "=", 
       RowBox[{"MAA", " ", 
        RowBox[{"XAMXAMmale", "/", "wbarM"}]}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"XAMXaMmales", "=", 
       RowBox[{"MAa", " ", 
        RowBox[{"XAMXaMmale", "/", "wbarM"}]}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"XaMXaMmales", "=", 
       RowBox[{"Maa", " ", 
        RowBox[{"XaMXaMmale", "/", "wbarM"}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"XAMYAMmales", "=", 
       RowBox[{"MAA", " ", 
        RowBox[{"XAMYAMmale", "/", "wbarM"}]}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"XAMYaMmales", "=", 
       RowBox[{"MAa", " ", 
        RowBox[{"XAMYaMmale", "/", "wbarM"}]}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"XaMYAMmales", "=", 
       RowBox[{"MAa", " ", 
        RowBox[{"XaMYAMmale", "/", "wbarM"}]}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"XaMYaMmales", "=", 
       RowBox[{"Maa", " ", 
        RowBox[{"XaMYaMmale", "/", "wbarM"}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"YAMYAMmales", "=", 
       RowBox[{"MAA", " ", 
        RowBox[{"YAMYAMmale", "/", "wbarM"}]}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"YAMYaMmales", "=", 
       RowBox[{"MAa", " ", 
        RowBox[{"YAMYaMmale", "/", "wbarM"}]}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"YaMYaMmales", "=", 
       RowBox[{"Maa", " ", 
        RowBox[{"YaMYaMmale", "/", "wbarM"}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"XAmXAMmales", "=", 
       RowBox[{"MAA", " ", 
        RowBox[{"XAmXAMmale", "/", "wbarM"}]}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"XAmXaMmales", "=", 
       RowBox[{"MAa", " ", 
        RowBox[{"XAmXaMmale", "/", "wbarM"}]}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"XAMXammales", "=", 
       RowBox[{"MAa", " ", 
        RowBox[{"XAMXammale", "/", "wbarM"}]}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"XamXaMmales", "=", 
       RowBox[{"Maa", " ", 
        RowBox[{"XamXaMmale", "/", "wbarM"}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"XAmYAMmales", "=", 
       RowBox[{"MAA", " ", 
        RowBox[{"XAmYAMmale", "/", "wbarM"}]}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"XAmYaMmales", "=", 
       RowBox[{"MAa", " ", 
        RowBox[{"XAmYaMmale", "/", "wbarM"}]}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"XamYAMmales", "=", 
       RowBox[{"MAa", " ", 
        RowBox[{"XamYAMmale", "/", "wbarM"}]}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"XamYaMmales", "=", 
       RowBox[{"Maa", " ", 
        RowBox[{"XamYaMmale", "/", "wbarM"}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"XAMYAmmales", "=", 
       RowBox[{"MAA", " ", 
        RowBox[{"XAMYAmmale", "/", "wbarM"}]}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"XAMYammales", "=", 
       RowBox[{"MAa", " ", 
        RowBox[{"XAMYammale", "/", "wbarM"}]}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"XaMYAmmales", "=", 
       RowBox[{"MAa", " ", 
        RowBox[{"XaMYAmmale", "/", "wbarM"}]}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"XaMYammales", "=", 
       RowBox[{"Maa", " ", 
        RowBox[{"XaMYammale", "/", "wbarM"}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"YAmYAMmales", "=", 
       RowBox[{"MAA", " ", 
        RowBox[{"YAmYAMmale", "/", "wbarM"}]}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"YAmYaMmales", "=", 
       RowBox[{"MAa", " ", 
        RowBox[{"YAmYaMmale", "/", "wbarM"}]}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"YamYAMmales", "=", 
       RowBox[{"MAa", " ", 
        RowBox[{"YamYAMmale", "/", "wbarM"}]}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"YamYaMmales", "=", 
       RowBox[{"Maa", " ", 
        RowBox[{"YamYaMmale", "/", "wbarM"}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"XAmXAmmales", "=", 
       RowBox[{"MAA", " ", 
        RowBox[{"XAmXAmmale", "/", "wbarM"}]}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"XAmXammales", "=", 
       RowBox[{"MAa", " ", 
        RowBox[{"XAmXammale", "/", "wbarM"}]}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"XamXammales", "=", 
       RowBox[{"Maa", " ", 
        RowBox[{"XamXammale", "/", "wbarM"}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"XAmYAmmales", "=", 
       RowBox[{"MAA", " ", 
        RowBox[{"XAmYAmmale", "/", "wbarM"}]}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"XAmYammales", "=", 
       RowBox[{"MAa", " ", 
        RowBox[{"XAmYammale", "/", "wbarM"}]}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"XamYAmmales", "=", 
       RowBox[{"MAa", " ", 
        RowBox[{"XamYAmmale", "/", "wbarM"}]}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"XamYammales", "=", 
       RowBox[{"Maa", " ", 
        RowBox[{"XamYammale", "/", "wbarM"}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"YAmYAmmales", "=", 
       RowBox[{"MAA", " ", 
        RowBox[{"YAmYAmmale", "/", "wbarM"}]}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"YAmYammales", "=", 
       RowBox[{"MAa", " ", 
        RowBox[{"YAmYammale", "/", "wbarM"}]}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"YamYammales", "=", 
       RowBox[{"Maa", " ", 
        RowBox[{"YamYammale", "/", "wbarM"}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"mean", " ", "female", " ", "fitness"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"wbarF", "=", 
       RowBox[{
        RowBox[{"FAA", " ", "XAMXAMfemale"}], "+", 
        RowBox[{"FAa", " ", "XAMXaMfemale"}], "+", 
        RowBox[{"Faa", " ", "XaMXaMfemale"}], "+", "\[IndentingNewLine]", 
        RowBox[{"FAA", " ", "XAMYAMfemale"}], "+", 
        RowBox[{"FAa", " ", 
         RowBox[{"(", 
          RowBox[{"XAMYaMfemale", "+", "XaMYAMfemale"}], ")"}]}], "+", 
        RowBox[{"Faa", " ", "XaMYaMfemale"}], "+", "\[IndentingNewLine]", 
        RowBox[{"FAA", " ", "YAMYAMfemale"}], "+", 
        RowBox[{"FAa", " ", "YAMYaMfemale"}], "+", 
        RowBox[{"Faa", " ", "YaMYaMfemale"}], "+", "\[IndentingNewLine]", 
        RowBox[{"FAA", " ", "XAmXAMfemale"}], "+", 
        RowBox[{"FAa", " ", "XAmXaMfemale"}], "+", 
        RowBox[{"FAa", " ", "XAMXamfemale"}], "+", 
        RowBox[{"Faa", " ", "XamXaMfemale"}], "+", "\[IndentingNewLine]", 
        RowBox[{"FAA", " ", "XAmYAMfemale"}], "+", 
        RowBox[{"FAa", " ", "XAmYaMfemale"}], "+", 
        RowBox[{"FAa", " ", "XamYAMfemale"}], "+", 
        RowBox[{"Faa", " ", "XamYaMfemale"}], "+", "\[IndentingNewLine]", 
        RowBox[{"FAA", " ", "XAMYAmfemale"}], "+", 
        RowBox[{"FAa", " ", "XAMYamfemale"}], "+", 
        RowBox[{"FAa", " ", "XaMYAmfemale"}], "+", 
        RowBox[{"Faa", " ", "XaMYamfemale"}], "+", "\[IndentingNewLine]", 
        RowBox[{"FAA", " ", "YAmYAMfemale"}], "+", 
        RowBox[{"FAa", " ", "YAmYaMfemale"}], "+", 
        RowBox[{"FAa", " ", "YamYAMfemale"}], "+", 
        RowBox[{"Faa", " ", "YamYaMfemale"}], "+", "\[IndentingNewLine]", 
        RowBox[{"FAA", " ", "XAmXAmfemale"}], "+", 
        RowBox[{"FAa", " ", "XAmXamfemale"}], "+", 
        RowBox[{"Faa", " ", "XamXamfemale"}], "+", "\[IndentingNewLine]", 
        RowBox[{"FAA", " ", "XAmYAmfemale"}], "+", 
        RowBox[{"FAa", " ", "XAmYamfemale"}], "+", 
        RowBox[{"FAa", " ", "XamYAmfemale"}], "+", 
        RowBox[{"Faa", " ", "XamYamfemale"}], "+", "\[IndentingNewLine]", 
        RowBox[{"FAA", " ", "YAmYAmfemale"}], "+", 
        RowBox[{"FAa", " ", "YAmYamfemale"}], "+", 
        RowBox[{"Faa", " ", "YamYamfemale"}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"XAMXAMfemales", "=", 
       RowBox[{"FAA", " ", 
        RowBox[{"XAMXAMfemale", "/", "wbarF"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"XAMXaMfemales", "=", 
       RowBox[{"FAa", " ", 
        RowBox[{"XAMXaMfemale", "/", "wbarF"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"XaMXaMfemales", "=", 
       RowBox[{"Faa", " ", 
        RowBox[{"XaMXaMfemale", "/", "wbarF"}]}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"XAMYAMfemales", "=", 
       RowBox[{"FAA", " ", 
        RowBox[{"XAMYAMfemale", "/", "wbarF"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"XAMYaMfemales", "=", 
       RowBox[{"FAa", " ", 
        RowBox[{"XAMYaMfemale", "/", "wbarF"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"XaMYAMfemales", "=", 
       RowBox[{"FAa", " ", 
        RowBox[{"XaMYAMfemale", "/", "wbarF"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"XaMYaMfemales", "=", 
       RowBox[{"Faa", " ", 
        RowBox[{"XaMYaMfemale", "/", "wbarF"}]}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"YAMYAMfemales", "=", 
       RowBox[{"FAA", " ", 
        RowBox[{"YAMYAMfemale", "/", "wbarF"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"YAMYaMfemales", "=", 
       RowBox[{"FAa", " ", 
        RowBox[{"YAMYaMfemale", "/", "wbarF"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"YaMYaMfemales", "=", 
       RowBox[{"Faa", " ", 
        RowBox[{"YaMYaMfemale", "/", "wbarF"}]}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"XAmXAMfemales", "=", 
       RowBox[{"FAA", " ", 
        RowBox[{"XAmXAMfemale", "/", "wbarF"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"XAmXaMfemales", "=", 
       RowBox[{"FAa", " ", 
        RowBox[{"XAmXaMfemale", "/", "wbarF"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"XAMXamfemales", "=", 
       RowBox[{"FAa", " ", 
        RowBox[{"XAMXamfemale", "/", "wbarF"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"XamXaMfemales", "=", 
       RowBox[{"Faa", " ", 
        RowBox[{"XamXaMfemale", "/", "wbarF"}]}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"XAmYAMfemales", "=", 
       RowBox[{"FAA", " ", 
        RowBox[{"XAmYAMfemale", "/", "wbarF"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"XAmYaMfemales", "=", 
       RowBox[{"FAa", " ", 
        RowBox[{"XAmYaMfemale", "/", "wbarF"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"XamYAMfemales", "=", 
       RowBox[{"FAa", " ", 
        RowBox[{"XamYAMfemale", "/", "wbarF"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"XamYaMfemales", "=", 
       RowBox[{"Faa", " ", 
        RowBox[{"XamYaMfemale", "/", "wbarF"}]}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"XAMYAmfemales", "=", 
       RowBox[{"FAA", " ", 
        RowBox[{"XAMYAmfemale", "/", "wbarF"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"XAMYamfemales", "=", 
       RowBox[{"FAa", " ", 
        RowBox[{"XAMYamfemale", "/", "wbarF"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"XaMYAmfemales", "=", 
       RowBox[{"FAa", " ", 
        RowBox[{"XaMYAmfemale", "/", "wbarF"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"XaMYamfemales", "=", 
       RowBox[{"Faa", " ", 
        RowBox[{"XaMYamfemale", "/", "wbarF"}]}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"YAmYAMfemales", "=", 
       RowBox[{"FAA", " ", 
        RowBox[{"YAmYAMfemale", "/", "wbarF"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"YAmYaMfemales", "=", 
       RowBox[{"FAa", " ", 
        RowBox[{"YAmYaMfemale", "/", "wbarF"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"YamYAMfemales", "=", 
       RowBox[{"FAa", " ", 
        RowBox[{"YamYAMfemale", "/", "wbarF"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"YamYaMfemales", "=", 
       RowBox[{"Faa", " ", 
        RowBox[{"YamYaMfemale", "/", "wbarF"}]}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"XAmXAmfemales", "=", 
       RowBox[{"FAA", " ", 
        RowBox[{"XAmXAmfemale", "/", "wbarF"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"XAmXamfemales", "=", 
       RowBox[{"FAa", " ", 
        RowBox[{"XAmXamfemale", "/", "wbarF"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"XamXamfemales", "=", 
       RowBox[{"Faa", " ", 
        RowBox[{"XamXamfemale", "/", "wbarF"}]}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"XAmYAmfemales", "=", 
       RowBox[{"FAA", " ", 
        RowBox[{"XAmYAmfemale", "/", "wbarF"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"XAmYamfemales", "=", 
       RowBox[{"FAa", " ", 
        RowBox[{"XAmYamfemale", "/", "wbarF"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"XamYAmfemales", "=", 
       RowBox[{"FAa", " ", 
        RowBox[{"XamYAmfemale", "/", "wbarF"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"XamYamfemales", "=", 
       RowBox[{"Faa", " ", 
        RowBox[{"XamYamfemale", "/", "wbarF"}]}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"YAmYAmfemales", "=", 
       RowBox[{"FAA", " ", 
        RowBox[{"YAmYAmfemale", "/", "wbarF"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"YAmYamfemales", "=", 
       RowBox[{"FAa", " ", 
        RowBox[{"YAmYamfemale", "/", "wbarF"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"YamYamfemales", "=", 
       RowBox[{"Faa", " ", 
        RowBox[{"YamYamfemale", "/", "wbarF"}]}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", "Meiosis", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"xx11ms", "=", "XAMXAMmales"}], ";", "\[IndentingNewLine]", 
      RowBox[{"xx12ms", "=", "XAMXaMmales"}], ";", "\[IndentingNewLine]", 
      RowBox[{"xx22ms", "=", "XaMXaMmales"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"xx13ms", "=", "XAmXAMmales"}], ";", "\[IndentingNewLine]", 
      RowBox[{"xx23ms", "=", "XAmXaMmales"}], ";", "\[IndentingNewLine]", 
      RowBox[{"xx14ms", "=", "XAMXammales"}], ";", "\[IndentingNewLine]", 
      RowBox[{"xx24ms", "=", "XamXaMmales"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"xx33ms", "=", "XAmXAmmales"}], ";", "\[IndentingNewLine]", 
      RowBox[{"xx34ms", "=", "XAmXammales"}], ";", "\[IndentingNewLine]", 
      RowBox[{"xx44ms", "=", "XamXammales"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"xy11ms", "=", "XAMYAMmales"}], ";", "\[IndentingNewLine]", 
      RowBox[{"xy12ms", "=", "XAMYaMmales"}], ";", "\[IndentingNewLine]", 
      RowBox[{"xy21ms", "=", "XaMYAMmales"}], ";", "\[IndentingNewLine]", 
      RowBox[{"xy22ms", "=", "XaMYaMmales"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"xy31ms", "=", "XAmYAMmales"}], ";", "\[IndentingNewLine]", 
      RowBox[{"xy32ms", "=", "XAmYaMmales"}], ";", "\[IndentingNewLine]", 
      RowBox[{"xy41ms", "=", "XamYAMmales"}], ";", "\[IndentingNewLine]", 
      RowBox[{"xy42ms", "=", "XamYaMmales"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"xy13ms", "=", "XAMYAmmales"}], ";", "\[IndentingNewLine]", 
      RowBox[{"xy14ms", "=", "XAMYammales"}], ";", "\[IndentingNewLine]", 
      RowBox[{"xy23ms", "=", "XaMYAmmales"}], ";", "\[IndentingNewLine]", 
      RowBox[{"xy24ms", "=", "XaMYammales"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"xy33ms", "=", "XAmYAmmales"}], ";", "\[IndentingNewLine]", 
      RowBox[{"xy34ms", "=", "XAmYammales"}], ";", "\[IndentingNewLine]", 
      RowBox[{"xy43ms", "=", "XamYAmmales"}], ";", "\[IndentingNewLine]", 
      RowBox[{"xy44ms", "=", "XamYammales"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"yy11ms", "=", "YAMYAMmales"}], ";", "\[IndentingNewLine]", 
      RowBox[{"yy12ms", "=", "YAMYaMmales"}], ";", "\[IndentingNewLine]", 
      RowBox[{"yy22ms", "=", "YaMYaMmales"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"yy13ms", "=", "YAmYAMmales"}], ";", "\[IndentingNewLine]", 
      RowBox[{"yy23ms", "=", "YAmYaMmales"}], ";", "\[IndentingNewLine]", 
      RowBox[{"yy14ms", "=", "YamYAMmales"}], ";", "\[IndentingNewLine]", 
      RowBox[{"yy24ms", "=", "YamYaMmales"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"yy33ms", "=", "YAmYAmmales"}], ";", "\[IndentingNewLine]", 
      RowBox[{"yy34ms", "=", "YAmYammales"}], ";", "\[IndentingNewLine]", 
      RowBox[{"yy44ms", "=", "YamYammales"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"xx11fs", "=", "XAMXAMfemales"}], ";", "\[IndentingNewLine]", 
      RowBox[{"xx12fs", "=", "XAMXaMfemales"}], ";", "\[IndentingNewLine]", 
      RowBox[{"xx22fs", "=", "XaMXaMfemales"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"xx13fs", "=", "XAmXAMfemales"}], ";", "\[IndentingNewLine]", 
      RowBox[{"xx23fs", "=", "XAmXaMfemales"}], ";", "\[IndentingNewLine]", 
      RowBox[{"xx14fs", "=", "XAMXamfemales"}], ";", "\[IndentingNewLine]", 
      RowBox[{"xx24fs", "=", "XamXaMfemales"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"xx33fs", "=", "XAmXAmfemales"}], ";", "\[IndentingNewLine]", 
      RowBox[{"xx34fs", "=", "XAmXamfemales"}], ";", "\[IndentingNewLine]", 
      RowBox[{"xx44fs", "=", "XamXamfemales"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"xy11fs", "=", "XAMYAMfemales"}], ";", "\[IndentingNewLine]", 
      RowBox[{"xy12fs", "=", "XAMYaMfemales"}], ";", "\[IndentingNewLine]", 
      RowBox[{"xy21fs", "=", "XaMYAMfemales"}], ";", "\[IndentingNewLine]", 
      RowBox[{"xy22fs", "=", "XaMYaMfemales"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"xy31fs", "=", "XAmYAMfemales"}], ";", "\[IndentingNewLine]", 
      RowBox[{"xy32fs", "=", "XAmYaMfemales"}], ";", "\[IndentingNewLine]", 
      RowBox[{"xy41fs", "=", "XamYAMfemales"}], ";", "\[IndentingNewLine]", 
      RowBox[{"xy42fs", "=", "XamYaMfemales"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"xy13fs", "=", "XAMYAmfemales"}], ";", "\[IndentingNewLine]", 
      RowBox[{"xy14fs", "=", "XAMYamfemales"}], ";", "\[IndentingNewLine]", 
      RowBox[{"xy23fs", "=", "XaMYAmfemales"}], ";", "\[IndentingNewLine]", 
      RowBox[{"xy24fs", "=", "XaMYamfemales"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"xy33fs", "=", "XAmYAmfemales"}], ";", "\[IndentingNewLine]", 
      RowBox[{"xy34fs", "=", "XAmYamfemales"}], ";", "\[IndentingNewLine]", 
      RowBox[{"xy43fs", "=", "XamYAmfemales"}], ";", "\[IndentingNewLine]", 
      RowBox[{"xy44fs", "=", "XamYamfemales"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"yy11fs", "=", "YAMYAMfemales"}], ";", "\[IndentingNewLine]", 
      RowBox[{"yy12fs", "=", "YAMYaMfemales"}], ";", "\[IndentingNewLine]", 
      RowBox[{"yy22fs", "=", "YaMYaMfemales"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"yy13fs", "=", "YAmYAMfemales"}], ";", "\[IndentingNewLine]", 
      RowBox[{"yy23fs", "=", "YAmYaMfemales"}], ";", "\[IndentingNewLine]", 
      RowBox[{"yy14fs", "=", "YamYAMfemales"}], ";", "\[IndentingNewLine]", 
      RowBox[{"yy24fs", "=", "YamYaMfemales"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"yy33fs", "=", "YAmYAmfemales"}], ";", "\[IndentingNewLine]", 
      RowBox[{"yy34fs", "=", "YAmYamfemales"}], ";", "\[IndentingNewLine]", 
      RowBox[{"yy44fs", "=", "YamYamfemales"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"X", " ", "bearing", " ", "ovules"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"nextXAMf", "=", 
       RowBox[{"xx11fs", "+", 
        RowBox[{"xx13fs", "/", "2"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"xx12fs", "+", 
           RowBox[{"xx14fs", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "Rf"}], ")"}]}], "+", 
           RowBox[{"xx23fs", "*", "Rf"}]}], ")"}], "\[Alpha]f"}], "+", 
        "\[IndentingNewLine]", 
        RowBox[{"xy11fs", "/", "2"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"xy12fs", 
            RowBox[{"(", 
             RowBox[{"1", "-", "rMMf"}], ")"}]}], "+", 
           RowBox[{"xy21fs", " ", 
            RowBox[{"(", "rMMf", ")"}]}]}], ")"}], "\[Alpha]f"}], "+", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"xy13fs", 
            RowBox[{"(", 
             RowBox[{"1", "-", "\[Chi]f"}], ")"}]}], "+", 
           RowBox[{"xy31fs", " ", 
            RowBox[{"(", "\[Chi]f", ")"}]}]}], ")"}], "/", "2"}], "+", 
        "\[IndentingNewLine]", 
        RowBox[{"xy14fs", " ", "*", "\[Alpha]f"}], "+", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"xy14fs", " ", 
            RowBox[{"(", 
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{"Rf", "+", "rMmf", "+", "\[Chi]f"}], ")"}]}], ")"}]}], 
           "+", " ", "\[IndentingNewLine]", 
           RowBox[{"xy41fs", 
            RowBox[{"(", 
             RowBox[{"rMmf", "+", "\[Chi]f", "-", "Rf"}], ")"}]}], "+", 
           "\[IndentingNewLine]", 
           RowBox[{"xy23fs", 
            RowBox[{"(", 
             RowBox[{"Rf", "+", "rMmf", "-", "\[Chi]f"}], ")"}]}], "+", 
           "\[IndentingNewLine]", 
           RowBox[{"xy32fs", 
            RowBox[{"(", 
             RowBox[{"Rf", "+", "\[Chi]f", "-", "rMmf"}], ")"}]}]}], ")"}], 
         RowBox[{"\[Alpha]f", "/", "2"}]}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"nextXaMf", "=", 
       RowBox[{"xx22fs", "+", 
        RowBox[{"xx24fs", "/", "2"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"xx12fs", "+", 
           RowBox[{"xx23fs", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "Rf"}], ")"}]}], "+", 
           RowBox[{"xx14fs", "*", "Rf"}]}], ")"}], 
         RowBox[{"(", 
          RowBox[{"1", "-", "\[Alpha]f"}], ")"}]}], "+", 
        "\[IndentingNewLine]", 
        RowBox[{"xy22fs", "/", "2"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"xy12fs", 
            RowBox[{"(", "rMMf", ")"}]}], "+", 
           RowBox[{"xy21fs", 
            RowBox[{"(", 
             RowBox[{"1", "-", "rMMf"}], ")"}]}]}], ")"}], 
         RowBox[{"(", 
          RowBox[{"1", "-", "\[Alpha]f"}], ")"}]}], "+", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"xy24fs", " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", "\[Chi]f"}], ")"}]}], "+", 
           RowBox[{"xy42fs", " ", 
            RowBox[{"(", "\[Chi]f", ")"}]}]}], ")"}], "/", "2"}], "+", 
        "\[IndentingNewLine]", 
        RowBox[{"xy23fs", "*", 
         RowBox[{"(", 
          RowBox[{"1", "-", "\[Alpha]f"}], ")"}]}], "+", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"xy14fs", 
            RowBox[{"(", 
             RowBox[{"Rf", "+", "rMmf", "-", "\[Chi]f"}], ")"}]}], "+", 
           "\[IndentingNewLine]", 
           RowBox[{"xy41fs", 
            RowBox[{"(", 
             RowBox[{"Rf", "+", "\[Chi]f", "-", "rMmf"}], ")"}]}], "+", 
           "\[IndentingNewLine]", 
           RowBox[{"xy23fs", 
            RowBox[{"(", 
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{"Rf", "+", "rMmf", "+", "\[Chi]f"}], ")"}]}], ")"}]}], 
           "+", "\[IndentingNewLine]", 
           RowBox[{"xy32fs", " ", 
            RowBox[{"(", 
             RowBox[{"rMmf", "+", "\[Chi]f", "-", "Rf"}], ")"}]}]}], ")"}], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Alpha]f"}], ")"}], "/", "2"}]}]}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"nextXAmf", "=", 
       RowBox[{"xx33fs", "+", 
        RowBox[{"xx13fs", "/", "2"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"xx23fs", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "Rf"}], ")"}]}], "+", 
           RowBox[{"Rf", "*", "xx14fs"}], "+", "xx34fs"}], ")"}], 
         "\[Alpha]f"}], "+", "\[IndentingNewLine]", 
        RowBox[{"xy33fs", "/", "2"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"xy34fs", 
            RowBox[{"(", 
             RowBox[{"1", "-", "rmmf"}], ")"}]}], "+", 
           RowBox[{"xy43fs", 
            RowBox[{"(", "rmmf", ")"}]}]}], ")"}], "\[Alpha]f"}], "+", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"xy13fs", 
            RowBox[{"(", "\[Chi]f", ")"}]}], "+", 
           RowBox[{"xy31fs", 
            RowBox[{"(", 
             RowBox[{"1", "-", "\[Chi]f"}], ")"}]}]}], ")"}], "/", "2"}], "+",
         "\[IndentingNewLine]", 
        RowBox[{"xy32fs", " ", "*", "\[Alpha]f"}], "+", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"xy14fs", 
            RowBox[{"(", 
             RowBox[{"Rf", "+", "\[Chi]f", "-", "rMmf"}], ")"}]}], "+", 
           "\[IndentingNewLine]", 
           RowBox[{"xy41fs", 
            RowBox[{"(", 
             RowBox[{"Rf", "+", "rMmf", "-", "\[Chi]f"}], ")"}]}], "+", 
           "\[IndentingNewLine]", 
           RowBox[{"xy23fs", 
            RowBox[{"(", 
             RowBox[{"rMmf", "+", "\[Chi]f", "-", "Rf"}], ")"}]}], "+", 
           "\[IndentingNewLine]", 
           RowBox[{"xy32fs", " ", 
            RowBox[{"(", 
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{"Rf", "+", "rMmf", "+", "\[Chi]f"}], ")"}]}], 
             ")"}]}]}], ")"}], 
         RowBox[{"\[Alpha]f", "/", "2"}]}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"nextXamf", "=", 
       RowBox[{"xx44fs", "+", 
        RowBox[{"xx24fs", "/", "2"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"xx14fs", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "Rf"}], ")"}]}], "+", 
           RowBox[{"xx23fs", "*", "Rf"}], "+", "xx34fs"}], ")"}], 
         RowBox[{"(", 
          RowBox[{"1", "-", "\[Alpha]f"}], ")"}]}], "+", 
        "\[IndentingNewLine]", 
        RowBox[{"xy44fs", "/", "2"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"xy34fs", 
            RowBox[{"(", "rmmf", ")"}]}], "+", 
           RowBox[{"xy43fs", 
            RowBox[{"(", 
             RowBox[{"1", "-", "rmmf"}], ")"}]}]}], ")"}], 
         RowBox[{"(", 
          RowBox[{"1", "-", "\[Alpha]f"}], ")"}]}], "+", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"xy24fs", 
            RowBox[{"(", "\[Chi]f", ")"}]}], "+", 
           RowBox[{"xy42fs", 
            RowBox[{"(", 
             RowBox[{"1", "-", "\[Chi]f"}], ")"}]}]}], ")"}], "/", "2"}], "+",
         "\[IndentingNewLine]", 
        RowBox[{"xy41fs", "*", 
         RowBox[{"(", 
          RowBox[{"1", "-", "\[Alpha]f"}], ")"}]}], "+", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"xy14fs", 
            RowBox[{"(", 
             RowBox[{"rMmf", "+", "\[Chi]f", "-", "Rf"}], ")"}]}], "+", 
           "\[IndentingNewLine]", 
           RowBox[{"xy41fs", 
            RowBox[{"(", 
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{"Rf", "+", "rMmf", "+", "\[Chi]f"}], ")"}]}], ")"}]}], 
           "+", "\[IndentingNewLine]", 
           RowBox[{"xy23fs", 
            RowBox[{"(", 
             RowBox[{"Rf", "+", "\[Chi]f", "-", "rMmf"}], ")"}]}], "+", 
           "\[IndentingNewLine]", 
           RowBox[{"xy32fs", 
            RowBox[{"(", 
             RowBox[{"Rf", "+", "rMmf", "-", "\[Chi]f"}], ")"}]}]}], ")"}], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Alpha]f"}], ")"}], "/", "2"}]}]}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Y", " ", "bearing", " ", "ovules"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"nextYAMf", "=", 
       RowBox[{"yy11fs", "+", 
        RowBox[{"yy13fs", "/", "2"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"yy12fs", "+", 
           RowBox[{"yy14fs", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "Rf"}], ")"}]}], "+", 
           RowBox[{"yy23fs", "*", "Rf"}]}], ")"}], "\[Alpha]f"}], "+", 
        "\[IndentingNewLine]", 
        RowBox[{"xy11fs", "/", "2"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"xy12fs", 
            RowBox[{"(", "rMMf", ")"}]}], "+", 
           RowBox[{"xy21fs", " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", "rMMf"}], ")"}]}]}], ")"}], 
         RowBox[{"(", "\[Alpha]f", ")"}]}], "+", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"xy13fs", 
            RowBox[{"(", "\[Chi]f", ")"}]}], "+", 
           RowBox[{"xy31fs", " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", "\[Chi]f"}], ")"}]}]}], ")"}], "/", "2"}], "+",
         "\[IndentingNewLine]", 
        RowBox[{"xy41fs", "*", "\[Alpha]f"}], "+", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"xy14fs", " ", 
            RowBox[{"(", 
             RowBox[{"rMmf", "+", "\[Chi]f", "-", "Rf"}], ")"}]}], "+", 
           "\[IndentingNewLine]", " ", 
           RowBox[{"xy41fs", 
            RowBox[{"(", 
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{"Rf", "+", "rMmf", "+", "\[Chi]f"}], ")"}]}], ")"}]}], 
           "+", "\[IndentingNewLine]", 
           RowBox[{"xy23fs", 
            RowBox[{"(", 
             RowBox[{"Rf", "+", "\[Chi]f", "-", "rMmf"}], ")"}]}], "+", 
           "\[IndentingNewLine]", 
           RowBox[{"xy32fs", 
            RowBox[{"(", 
             RowBox[{"Rf", "+", "rMmf", "-", "\[Chi]f"}], ")"}]}]}], ")"}], 
         RowBox[{"\[Alpha]f", "/", "2"}]}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"nextYaMf", " ", "=", 
       RowBox[{"yy22fs", "+", 
        RowBox[{"yy24fs", "/", "2"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"yy12fs", "+", 
           RowBox[{"yy23fs", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "Rf"}], ")"}]}], "+", 
           RowBox[{"yy14fs", "*", "Rf"}]}], ")"}], 
         RowBox[{"(", 
          RowBox[{"1", "-", "\[Alpha]f"}], ")"}]}], "+", 
        "\[IndentingNewLine]", 
        RowBox[{"xy22fs", "/", "2"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"xy12fs", 
            RowBox[{"(", 
             RowBox[{"1", "-", "rMMf"}], ")"}]}], "+", 
           RowBox[{"xy21fs", 
            RowBox[{"(", "rMMf", ")"}]}]}], ")"}], 
         RowBox[{"(", 
          RowBox[{"1", "-", "\[Alpha]f"}], ")"}]}], "+", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"xy24fs", " ", 
            RowBox[{"(", "\[Chi]f", ")"}]}], "+", 
           RowBox[{"xy42fs", " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", "\[Chi]f"}], ")"}]}]}], ")"}], "/", "2"}], "+",
         "\[IndentingNewLine]", 
        RowBox[{"xy32fs", "*", 
         RowBox[{"(", 
          RowBox[{"1", "-", "\[Alpha]f"}], ")"}]}], "+", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"xy14fs", 
            RowBox[{"(", 
             RowBox[{"Rf", "+", "\[Chi]f", "-", "rMmf"}], ")"}]}], "+", 
           "\[IndentingNewLine]", 
           RowBox[{"xy41fs", 
            RowBox[{"(", 
             RowBox[{"Rf", "+", "rMmf", "-", "\[Chi]f"}], ")"}]}], "+", 
           "\[IndentingNewLine]", 
           RowBox[{"xy23fs", 
            RowBox[{"(", 
             RowBox[{"rMmf", "+", "\[Chi]f", "-", "Rf"}], ")"}]}], "+", 
           "\[IndentingNewLine]", 
           RowBox[{"xy32fs", " ", 
            RowBox[{"(", 
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{"Rf", "+", "rMmf", "+", "\[Chi]f"}], ")"}]}], 
             ")"}]}]}], ")"}], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Alpha]f"}], ")"}], "/", "2"}]}]}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"nextYAmf", " ", "=", 
       RowBox[{"yy33fs", "+", 
        RowBox[{"yy13fs", "/", "2"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"yy23fs", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "Rf"}], ")"}]}], "+", 
           RowBox[{"Rf", "*", "yy14fs"}], "+", "yy34fs"}], ")"}], 
         "\[Alpha]f"}], "+", "\[IndentingNewLine]", 
        RowBox[{"xy33fs", "/", "2"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"xy34fs", 
            RowBox[{"(", "rmmf", ")"}]}], "+", 
           RowBox[{"xy43fs", 
            RowBox[{"(", 
             RowBox[{"1", "-", "rmmf"}], ")"}]}]}], ")"}], 
         RowBox[{"(", "\[Alpha]f", ")"}]}], "+", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"xy13fs", 
            RowBox[{"(", 
             RowBox[{"1", "-", "\[Chi]f"}], ")"}]}], "+", 
           RowBox[{"xy31fs", 
            RowBox[{"(", "\[Chi]f", ")"}]}]}], ")"}], "/", "2"}], "+", 
        "\[IndentingNewLine]", 
        RowBox[{"xy23fs", "*", "\[Alpha]f"}], "+", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"xy14fs", 
            RowBox[{"(", 
             RowBox[{"Rf", "+", "rMmf", "-", "\[Chi]f"}], ")"}]}], "+", 
           "\[IndentingNewLine]", 
           RowBox[{"xy41fs", 
            RowBox[{"(", 
             RowBox[{"Rf", "+", "\[Chi]f", "-", "rMmf"}], ")"}]}], "+", 
           "\[IndentingNewLine]", 
           RowBox[{"xy23fs", 
            RowBox[{"(", 
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{"Rf", "+", "rMmf", "+", "\[Chi]f"}], ")"}]}], ")"}]}], 
           "+", "\[IndentingNewLine]", 
           RowBox[{"xy32fs", " ", 
            RowBox[{"(", 
             RowBox[{"rMmf", "+", "\[Chi]f", "-", "Rf"}], ")"}]}]}], ")"}], 
         RowBox[{"\[Alpha]f", "/", "2"}]}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"nextYamf", "=", 
       RowBox[{"yy44fs", "+", 
        RowBox[{"yy24fs", "/", "2"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"yy14fs", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "Rf"}], ")"}]}], "+", 
           RowBox[{"yy23fs", "*", "Rf"}], "+", "yy34fs"}], ")"}], 
         RowBox[{"(", 
          RowBox[{"1", "-", "\[Alpha]f"}], ")"}]}], "+", 
        "\[IndentingNewLine]", 
        RowBox[{"xy44fs", "/", "2"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"xy34fs", 
            RowBox[{"(", 
             RowBox[{"1", "-", "rmmf"}], ")"}]}], "+", 
           RowBox[{"xy43fs", 
            RowBox[{"(", "rmmf", ")"}]}]}], ")"}], 
         RowBox[{"(", 
          RowBox[{"1", "-", "\[Alpha]f"}], ")"}]}], "+", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"xy24fs", 
            RowBox[{"(", 
             RowBox[{"1", "-", "\[Chi]f"}], ")"}]}], "+", 
           RowBox[{"xy42fs", 
            RowBox[{"(", "\[Chi]f", ")"}]}]}], ")"}], "/", "2"}], "+", 
        "\[IndentingNewLine]", 
        RowBox[{"xy14fs", "*", 
         RowBox[{"(", 
          RowBox[{"1", "-", "\[Alpha]f"}], ")"}]}], "+", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"xy14fs", 
            RowBox[{"(", 
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{"Rf", "+", "rMmf", "+", "\[Chi]f"}], ")"}]}], ")"}]}], 
           "+", "\[IndentingNewLine]", 
           RowBox[{"xy41fs", 
            RowBox[{"(", 
             RowBox[{"rMmf", "+", "\[Chi]f", "-", "Rf"}], ")"}]}], "+", 
           "\[IndentingNewLine]", 
           RowBox[{"xy23fs", 
            RowBox[{"(", 
             RowBox[{"Rf", "+", "rMmf", "-", "\[Chi]f"}], ")"}]}], "+", 
           "\[IndentingNewLine]", 
           RowBox[{"xy32fs", 
            RowBox[{"(", 
             RowBox[{"Rf", "+", "\[Chi]f", "-", "rMmf"}], ")"}]}]}], ")"}], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Alpha]f"}], ")"}], "/", "2"}]}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"X", " ", "bearing", " ", "pollen"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"nextXAMm", "=", 
       RowBox[{"xx11ms", "+", 
        RowBox[{"xx13ms", "/", "2"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"xx12ms", "+", 
           RowBox[{"xx14ms", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "Rm"}], ")"}]}], "+", 
           RowBox[{"xx23ms", "*", "Rm"}]}], ")"}], "\[Alpha]m"}], "+", 
        "\[IndentingNewLine]", 
        RowBox[{"xy11ms", "/", "2"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"xy12ms", 
            RowBox[{"(", 
             RowBox[{"1", "-", "rMMm"}], ")"}]}], "+", 
           RowBox[{"xy21ms", " ", 
            RowBox[{"(", "rMMm", ")"}]}]}], ")"}], "\[Alpha]m"}], "+", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"xy13ms", 
            RowBox[{"(", 
             RowBox[{"1", "-", "\[Chi]m"}], ")"}]}], "+", 
           RowBox[{"xy31ms", " ", 
            RowBox[{"(", "\[Chi]m", ")"}]}]}], ")"}], "/", "2"}], "+", 
        "\[IndentingNewLine]", 
        RowBox[{"xy14ms", " ", "*", "\[Alpha]m"}], "+", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"xy14ms", " ", 
            RowBox[{"(", 
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{"Rm", "+", "rMmm", "+", "\[Chi]m"}], ")"}]}], ")"}]}], 
           "+", " ", "\[IndentingNewLine]", 
           RowBox[{"xy41ms", 
            RowBox[{"(", 
             RowBox[{"rMmm", "+", "\[Chi]m", "-", "Rm"}], ")"}]}], "+", 
           "\[IndentingNewLine]", 
           RowBox[{"xy23ms", 
            RowBox[{"(", 
             RowBox[{"Rm", "+", "rMmm", "-", "\[Chi]m"}], ")"}]}], "+", 
           "\[IndentingNewLine]", 
           RowBox[{"xy32ms", 
            RowBox[{"(", 
             RowBox[{"Rm", "+", "\[Chi]m", "-", "rMmm"}], ")"}]}]}], ")"}], 
         RowBox[{"\[Alpha]m", "/", "2"}]}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"nextXaMm", " ", "=", 
       RowBox[{"xx22ms", "+", 
        RowBox[{"xx24ms", "/", "2"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"xx12ms", "+", 
           RowBox[{"xx23ms", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "Rm"}], ")"}]}], "+", 
           RowBox[{"xx14ms", "*", "Rm"}]}], ")"}], 
         RowBox[{"(", 
          RowBox[{"1", "-", "\[Alpha]m"}], ")"}]}], "+", 
        "\[IndentingNewLine]", 
        RowBox[{"xy22ms", "/", "2"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"xy12ms", 
            RowBox[{"(", "rMMm", ")"}]}], "+", 
           RowBox[{"xy21ms", 
            RowBox[{"(", 
             RowBox[{"1", "-", "rMMm"}], ")"}]}]}], ")"}], 
         RowBox[{"(", 
          RowBox[{"1", "-", "\[Alpha]m"}], ")"}]}], "+", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"xy24ms", " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", "\[Chi]m"}], ")"}]}], "+", 
           RowBox[{"xy42ms", " ", 
            RowBox[{"(", "\[Chi]m", ")"}]}]}], ")"}], "/", "2"}], "+", 
        "\[IndentingNewLine]", 
        RowBox[{"xy23ms", "*", 
         RowBox[{"(", 
          RowBox[{"1", "-", "\[Alpha]m"}], ")"}]}], "+", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"xy14ms", 
            RowBox[{"(", 
             RowBox[{"Rm", "+", "rMmm", "-", "\[Chi]m"}], ")"}]}], "+", 
           "\[IndentingNewLine]", 
           RowBox[{"xy41ms", 
            RowBox[{"(", 
             RowBox[{"Rm", "+", "\[Chi]m", "-", "rMmm"}], ")"}]}], "+", 
           "\[IndentingNewLine]", 
           RowBox[{"xy23ms", 
            RowBox[{"(", 
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{"Rm", "+", "rMmm", "+", "\[Chi]m"}], ")"}]}], ")"}]}], 
           "+", "\[IndentingNewLine]", 
           RowBox[{"xy32ms", " ", 
            RowBox[{"(", 
             RowBox[{"rMmm", "+", "\[Chi]m", "-", "Rm"}], ")"}]}]}], ")"}], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Alpha]m"}], ")"}], "/", "2"}]}]}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"nextXAmm", " ", "=", 
       RowBox[{"xx33ms", "+", 
        RowBox[{"xx13ms", "/", "2"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"xx23ms", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "Rm"}], ")"}]}], "+", 
           RowBox[{"Rm", "*", "xx14ms"}], "+", "xx34ms"}], ")"}], 
         "\[Alpha]m"}], "+", "\[IndentingNewLine]", 
        RowBox[{"xy33ms", "/", "2"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"xy34ms", 
            RowBox[{"(", 
             RowBox[{"1", "-", "rmmm"}], ")"}]}], "+", 
           RowBox[{"xy43ms", 
            RowBox[{"(", "rmmm", ")"}]}]}], ")"}], "\[Alpha]m"}], "+", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"xy13ms", 
            RowBox[{"(", "\[Chi]m", ")"}]}], "+", 
           RowBox[{"xy31ms", 
            RowBox[{"(", 
             RowBox[{"1", "-", "\[Chi]m"}], ")"}]}]}], ")"}], "/", "2"}], "+",
         "\[IndentingNewLine]", 
        RowBox[{"xy32ms", " ", "*", "\[Alpha]m"}], "+", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"xy14ms", 
            RowBox[{"(", 
             RowBox[{"Rm", "+", "\[Chi]m", "-", "rMmm"}], ")"}]}], "+", 
           "\[IndentingNewLine]", 
           RowBox[{"xy41ms", 
            RowBox[{"(", 
             RowBox[{"Rm", "+", "rMmm", "-", "\[Chi]m"}], ")"}]}], "+", 
           "\[IndentingNewLine]", 
           RowBox[{"xy23ms", 
            RowBox[{"(", 
             RowBox[{"rMmm", "+", "\[Chi]m", "-", "Rm"}], ")"}]}], "+", 
           "\[IndentingNewLine]", 
           RowBox[{"xy32ms", " ", 
            RowBox[{"(", 
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{"Rm", "+", "rMmm", "+", "\[Chi]m"}], ")"}]}], 
             ")"}]}]}], ")"}], 
         RowBox[{"\[Alpha]m", "/", "2"}]}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"nextXamm", "=", 
       RowBox[{"xx44ms", "+", 
        RowBox[{"xx24ms", "/", "2"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"xx14ms", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "Rm"}], ")"}]}], "+", 
           RowBox[{"xx23ms", "*", "Rm"}], "+", "xx34ms"}], ")"}], 
         RowBox[{"(", 
          RowBox[{"1", "-", "\[Alpha]m"}], ")"}]}], "+", 
        "\[IndentingNewLine]", 
        RowBox[{"xy44ms", "/", "2"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"xy34ms", 
            RowBox[{"(", "rmmm", ")"}]}], "+", 
           RowBox[{"xy43ms", 
            RowBox[{"(", 
             RowBox[{"1", "-", "rmmm"}], ")"}]}]}], ")"}], 
         RowBox[{"(", 
          RowBox[{"1", "-", "\[Alpha]m"}], ")"}]}], "+", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"xy24ms", 
            RowBox[{"(", "\[Chi]m", ")"}]}], "+", 
           RowBox[{"xy42ms", 
            RowBox[{"(", 
             RowBox[{"1", "-", "\[Chi]m"}], ")"}]}]}], ")"}], "/", "2"}], "+",
         "\[IndentingNewLine]", 
        RowBox[{"xy41ms", "*", 
         RowBox[{"(", 
          RowBox[{"1", "-", "\[Alpha]m"}], ")"}]}], "+", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"xy14ms", 
            RowBox[{"(", 
             RowBox[{"rMmm", "+", "\[Chi]m", "-", "Rm"}], ")"}]}], "+", 
           "\[IndentingNewLine]", 
           RowBox[{"xy41ms", 
            RowBox[{"(", 
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{"Rm", "+", "rMmm", "+", "\[Chi]m"}], ")"}]}], ")"}]}], 
           "+", "\[IndentingNewLine]", 
           RowBox[{"xy23ms", 
            RowBox[{"(", 
             RowBox[{"Rm", "+", "\[Chi]m", "-", "rMmm"}], ")"}]}], "+", 
           "\[IndentingNewLine]", 
           RowBox[{"xy32ms", 
            RowBox[{"(", 
             RowBox[{"Rm", "+", "rMmm", "-", "\[Chi]m"}], ")"}]}]}], ")"}], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Alpha]m"}], ")"}], "/", "2"}]}]}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Y", " ", "bearing", " ", "pollen"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"nextYAMm", "=", 
       RowBox[{"yy11ms", "+", 
        RowBox[{"yy13ms", "/", "2"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"yy12ms", "+", 
           RowBox[{"yy14ms", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "Rm"}], ")"}]}], "+", 
           RowBox[{"yy23ms", "*", "Rm"}]}], ")"}], "\[Alpha]m"}], "+", 
        "\[IndentingNewLine]", 
        RowBox[{"xy11ms", "/", "2"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"xy12ms", 
            RowBox[{"(", "rMMm", ")"}]}], "+", 
           RowBox[{"xy21ms", " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", "rMMm"}], ")"}]}]}], ")"}], 
         RowBox[{"(", "\[Alpha]m", ")"}]}], "+", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"xy13ms", 
            RowBox[{"(", "\[Chi]m", ")"}]}], "+", 
           RowBox[{"xy31ms", " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", "\[Chi]m"}], ")"}]}]}], ")"}], "/", "2"}], "+",
         "\[IndentingNewLine]", 
        RowBox[{"xy41ms", "*", "\[Alpha]m"}], "+", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"xy14ms", " ", 
            RowBox[{"(", 
             RowBox[{"rMmm", "+", "\[Chi]m", "-", "Rm"}], ")"}]}], "+", 
           "\[IndentingNewLine]", " ", 
           RowBox[{"xy41ms", 
            RowBox[{"(", 
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{"Rm", "+", "rMmm", "+", "\[Chi]m"}], ")"}]}], ")"}]}], 
           "+", "\[IndentingNewLine]", 
           RowBox[{"xy23ms", 
            RowBox[{"(", 
             RowBox[{"Rm", "+", "\[Chi]m", "-", "rMmm"}], ")"}]}], "+", 
           "\[IndentingNewLine]", 
           RowBox[{"xy32ms", 
            RowBox[{"(", 
             RowBox[{"Rm", "+", "rMmm", "-", "\[Chi]m"}], ")"}]}]}], ")"}], 
         RowBox[{"\[Alpha]m", "/", "2"}]}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"nextYaMm", " ", "=", 
       RowBox[{"yy22ms", "+", 
        RowBox[{"yy24ms", "/", "2"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"yy12ms", "+", 
           RowBox[{"yy23ms", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "Rm"}], ")"}]}], "+", 
           RowBox[{"yy14ms", "*", "Rm"}]}], ")"}], 
         RowBox[{"(", 
          RowBox[{"1", "-", "\[Alpha]m"}], ")"}]}], "+", 
        "\[IndentingNewLine]", 
        RowBox[{"xy22ms", "/", "2"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"xy12ms", 
            RowBox[{"(", 
             RowBox[{"1", "-", "rMMm"}], ")"}]}], "+", 
           RowBox[{"xy21ms", 
            RowBox[{"(", "rMMm", ")"}]}]}], ")"}], 
         RowBox[{"(", 
          RowBox[{"1", "-", "\[Alpha]m"}], ")"}]}], "+", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"xy24ms", " ", 
            RowBox[{"(", "\[Chi]m", ")"}]}], "+", 
           RowBox[{"xy42ms", " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", "\[Chi]m"}], ")"}]}]}], ")"}], "/", "2"}], "+",
         "\[IndentingNewLine]", 
        RowBox[{"xy32ms", "*", 
         RowBox[{"(", 
          RowBox[{"1", "-", "\[Alpha]m"}], ")"}]}], "+", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"xy14ms", 
            RowBox[{"(", 
             RowBox[{"Rm", "+", "\[Chi]m", "-", "rMmm"}], ")"}]}], "+", 
           "\[IndentingNewLine]", 
           RowBox[{"xy41ms", 
            RowBox[{"(", 
             RowBox[{"Rm", "+", "rMmm", "-", "\[Chi]m"}], ")"}]}], "+", 
           "\[IndentingNewLine]", 
           RowBox[{"xy23ms", 
            RowBox[{"(", 
             RowBox[{"rMmm", "+", "\[Chi]m", "-", "Rm"}], ")"}]}], "+", 
           "\[IndentingNewLine]", 
           RowBox[{"xy32ms", " ", 
            RowBox[{"(", 
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{"Rm", "+", "rMmm", "+", "\[Chi]m"}], ")"}]}], 
             ")"}]}]}], ")"}], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Alpha]m"}], ")"}], "/", "2"}]}]}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"nextYAmm", "=", 
       RowBox[{"yy33ms", "+", 
        RowBox[{"yy13ms", "/", "2"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"yy23ms", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "Rm"}], ")"}]}], "+", 
           RowBox[{"Rm", "*", "yy14ms"}], "+", "yy34ms"}], ")"}], 
         "\[Alpha]m"}], "+", "\[IndentingNewLine]", 
        RowBox[{"xy33ms", "/", "2"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"xy34ms", 
            RowBox[{"(", "rmmm", ")"}]}], "+", 
           RowBox[{"xy43ms", 
            RowBox[{"(", 
             RowBox[{"1", "-", "rmmm"}], ")"}]}]}], ")"}], 
         RowBox[{"(", "\[Alpha]m", ")"}]}], "+", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"xy13ms", 
            RowBox[{"(", 
             RowBox[{"1", "-", "\[Chi]m"}], ")"}]}], "+", 
           RowBox[{"xy31ms", 
            RowBox[{"(", "\[Chi]m", ")"}]}]}], ")"}], "/", "2"}], "+", 
        "\[IndentingNewLine]", 
        RowBox[{"xy23ms", "*", "\[Alpha]m"}], "+", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"xy14ms", 
            RowBox[{"(", 
             RowBox[{"Rm", "+", "rMmm", "-", "\[Chi]m"}], ")"}]}], "+", 
           "\[IndentingNewLine]", 
           RowBox[{"xy41ms", 
            RowBox[{"(", 
             RowBox[{"Rm", "+", "\[Chi]m", "-", "rMmm"}], ")"}]}], "+", 
           "\[IndentingNewLine]", 
           RowBox[{"xy23ms", 
            RowBox[{"(", 
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{"Rm", "+", "rMmm", "+", "\[Chi]m"}], ")"}]}], ")"}]}], 
           "+", "\[IndentingNewLine]", 
           RowBox[{"xy32ms", " ", 
            RowBox[{"(", 
             RowBox[{"rMmm", "+", "\[Chi]m", "-", "Rm"}], ")"}]}]}], ")"}], 
         RowBox[{"\[Alpha]m", "/", "2"}]}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"nextYamm", "=", 
       RowBox[{"yy44ms", "+", 
        RowBox[{"yy24ms", "/", "2"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"yy14ms", "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", "Rm"}], ")"}]}], "+", 
           RowBox[{"yy23ms", "*", "Rm"}], "+", "yy34ms"}], ")"}], 
         RowBox[{"(", 
          RowBox[{"1", "-", "\[Alpha]m"}], ")"}]}], "+", 
        "\[IndentingNewLine]", 
        RowBox[{"xy44ms", "/", "2"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"xy34ms", 
            RowBox[{"(", 
             RowBox[{"1", "-", "rmmm"}], ")"}]}], "+", 
           RowBox[{"xy43ms", 
            RowBox[{"(", "rmmm", ")"}]}]}], ")"}], 
         RowBox[{"(", 
          RowBox[{"1", "-", "\[Alpha]m"}], ")"}]}], "+", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"xy24ms", 
            RowBox[{"(", 
             RowBox[{"1", "-", "\[Chi]m"}], ")"}]}], "+", 
           RowBox[{"xy42ms", 
            RowBox[{"(", "\[Chi]m", ")"}]}]}], ")"}], "/", "2"}], "+", 
        "\[IndentingNewLine]", 
        RowBox[{"xy14ms", "*", 
         RowBox[{"(", 
          RowBox[{"1", "-", "\[Alpha]m"}], ")"}]}], "+", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"xy14ms", 
            RowBox[{"(", 
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{"Rm", "+", "rMmm", "+", "\[Chi]m"}], ")"}]}], ")"}]}], 
           "+", "\[IndentingNewLine]", 
           RowBox[{"xy41ms", 
            RowBox[{"(", 
             RowBox[{"rMmm", "+", "\[Chi]m", "-", "Rm"}], ")"}]}], "+", 
           "\[IndentingNewLine]", 
           RowBox[{"xy23ms", 
            RowBox[{"(", 
             RowBox[{"Rm", "+", "rMmm", "-", "\[Chi]m"}], ")"}]}], "+", 
           "\[IndentingNewLine]", 
           RowBox[{"xy32ms", 
            RowBox[{"(", 
             RowBox[{"Rm", "+", "\[Chi]m", "-", "rMmm"}], ")"}]}]}], ")"}], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Alpha]m"}], ")"}], "/", "2"}]}]}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
       "nextXAMf", ",", "nextXaMf", ",", "nextXAmf", ",", "nextXamf", ",", 
        "nextYAMf", ",", "nextYaMf", ",", "nextYAmf", ",", "nextYamf", ",", 
        "nextXAMm", ",", "nextXaMm", ",", "nextXAmm", ",", "nextXamm", ",", 
        "nextYAMm", ",", "nextYaMm", ",", "nextYAmm", ",", "nextYamm"}], 
       "}"}]}]}], "\[IndentingNewLine]", 
    "]"}]}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.7103541684602013`*^9, 3.710354193505862*^9}, {
   3.7103543581543703`*^9, 3.71035443387282*^9}, {3.710354479646146*^9, 
   3.710354593995778*^9}, {3.7103546360621347`*^9, 3.7103546447950563`*^9}, {
   3.710354722579442*^9, 3.710354723915256*^9}, {3.710354947842971*^9, 
   3.7103549634999933`*^9}, {3.710355020024928*^9, 3.710355076668623*^9}, {
   3.710355113662175*^9, 3.710355195856078*^9}, {3.710355242172922*^9, 
   3.7103552424062862`*^9}, {3.71043672360509*^9, 3.710436731396137*^9}, 
   3.7104368199165173`*^9, {3.710437047869871*^9, 3.71043704903375*^9}, {
   3.71043708657696*^9, 3.7104371222227907`*^9}, {3.710437296709997*^9, 
   3.710437298559971*^9}},ExpressionUUID->"74974d98-6c77-4c6a-a980-\
e6e5498587e7"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Plotting parameters [Enter]", "Section",
 CellChangeTimes->{{3.691239326947637*^9, 3.6912393301480017`*^9}, {
  3.691241596541066*^9, 3.6912415988157587`*^9}, {3.711788061198752*^9, 
  3.711788062418812*^9}},ExpressionUUID->"48a456e8-1e9e-452d-aa23-\
4aea4369a1c0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"SetDirectory", "[", 
     RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
    "sets", " ", "current", " ", "directory", " ", "to", " ", "be", " ", 
     "location", " ", "of", " ", "this", " ", "file"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plotdir", "=", "\"\<Plots/\>\""}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"directory", " ", "to", " ", "save", " ", "figures", " ", "in"}], 
    "*)"}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.691199395468156*^9, 3.6911994238867617`*^9}, {
  3.6912393196489277`*^9, 3.6912393222466583`*^9}, {3.697234402909142*^9, 
  3.69723440414786*^9}},ExpressionUUID->"652781e9-b3f2-45e1-ada3-\
03c239b38ab2"],

Cell[BoxData[
 TemplateBox[{
  "NotebookDirectory","nosv",
   "\"The notebook \
\\!\\(\\*TemplateBox[List[FrontEndObject[LinkObject[\\\"wrjaa_shm\\\", 3, \
1]], 16, \\\"FrontEndObject[LinkObject[\\\\\\\"wrjaa_shm\\\\\\\", 3, 1]]\\\", \
\\\"16\\\", \\\"\\\\\\\"Untitled-1\\\\\\\"\\\"], \
\\\"NotebookObjectUnsaved\\\"]\\) is not saved.\"",2,41,8,
   29230937333070290794,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.713075467557308*^9, 3.713075663252838*^9, 
  3.713095472568007*^9},ExpressionUUID->"402f6eef-f586-496e-ba30-\
873b02c2f701"],

Cell[BoxData[
 TemplateBox[{
  "SetDirectory","fstr",
   "\"File specification \\!\\(\\*RowBox[{\\\"$Failed\\\"}]\\) is not a \
string of one or more characters.\"",2,41,9,29230937333070290794,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.713075467557308*^9, 3.713075663252838*^9, 
  3.7130954725733967`*^9},ExpressionUUID->"5d2bfcd7-a2c2-4051-8bc5-\
0152c0be2ef9"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Pad", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"60", ",", "10"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"50", ",", "10"}], "}"}]}], "}"}]}], ";"}], "  ", 
  RowBox[{"(*", 
   RowBox[{"space", " ", "around", " ", "plot"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"letpos", "=", 
    RowBox[{"{", 
     RowBox[{".05", ",", ".93"}], "}"}]}], ";"}], "  ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"relative", " ", "location", " ", "of", " ", "letter"}], ",", " ", 
    RowBox[{"eg", " ", "A"}], ",", " ", 
    RowBox[{"in", " ", "figure"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ylabpos", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.19"}], ",", "0.5"}], "}"}]}], ";"}], "  ", 
  RowBox[{"(*", 
   RowBox[{
   "relative", " ", "location", " ", "of", " ", "y", " ", "axis", " ", 
    "label", " ", "position"}], "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"inches", "=", "72"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"lwd", "=", "0.006"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "line", " ", "thickness", " ", "as", " ", "fraction", " ", "of", " ", 
    "plot", " ", "width"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ticksize", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0.01"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xsize", "=", 
   RowBox[{"5", "inches"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"aspectratio", "=", 
   RowBox[{"1", "/", 
    RowBox[{"Sqrt", "[", "2", "]"}]}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.6912001126660013`*^9, 3.691200143575015*^9}, {
   3.69120039633344*^9, 3.691200396513929*^9}, {3.691200440636483*^9, 
   3.691200471978136*^9}, {3.6912041635699453`*^9, 3.6912041637236547`*^9}, {
   3.6912042066112623`*^9, 3.691204217939785*^9}, {3.6912051909799356`*^9, 
   3.691205191159609*^9}, {3.6912382749359922`*^9, 3.691238275042301*^9}, {
   3.691239265705887*^9, 3.691239310617393*^9}, {3.6912414893987627`*^9, 
   3.691241499429421*^9}, {3.691246413194191*^9, 3.691246425313057*^9}, 
   3.69722692670418*^9, 3.697231982691649*^9, {3.711791636473372*^9, 
   3.711791636972584*^9}},ExpressionUUID->"439cc756-126e-448f-bb32-\
abf5fc03f18c"]
}, Closed]],

Cell[CellGroupData[{

Cell["Extra plotting parameters [enter]", "Section",
 CellChangeTimes->{{3.711788097980446*^9, 3.71178810195179*^9}, 
   3.711791286481474*^9, {3.7125821984495077`*^9, 
   3.712582199787369*^9}},ExpressionUUID->"ad648d3f-9e09-4706-b055-\
c8f140cdaad1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"modvec", "=", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", "1",
      ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
     ",", "0"}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.711712400946435*^9, 3.7117124100502872`*^9}, {
  3.711712463305482*^9, 
  3.711712471104075*^9}},ExpressionUUID->"889cc303-97ed-4c90-9924-\
3ae5b8f70aab"],

Cell[CellGroupData[{

Cell["Plotting parameters", "Subsection",
 CellChangeTimes->{{3.697226875880493*^9, 
  3.697226880633122*^9}},ExpressionUUID->"fd276ec0-bdad-4fee-8654-\
443801540b27"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Pad", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"40", ",", "20"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"50", ",", "30"}], "}"}]}], "}"}]}], ";"}], "  ", 
  RowBox[{"(*", 
   RowBox[{"space", " ", "around", " ", "plot"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"yplotmin", "=", 
   RowBox[{"-", "0.075"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"yplotmax", "=", "0.15"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"yplotinterval", "=", "0.02"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ylabpos", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.14"}], ",", "0.5"}], "}"}]}], ";"}], "  ", 
  RowBox[{"(*", 
   RowBox[{
   "relative", " ", "location", " ", "of", " ", "y", " ", "axis", " ", 
    "label", " ", "position"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.6972268881655416`*^9, 3.697226889524013*^9}, {
   3.6972269409588947`*^9, 3.6972269416947613`*^9}, {3.697231996012269*^9, 
   3.697232015110681*^9}, {3.697232814377315*^9, 3.6972328147201233`*^9}, {
   3.697233367935761*^9, 3.697233368165653*^9}, {3.6972342055728903`*^9, 
   3.697234205650242*^9}, 3.697248786087654*^9, 3.697248930277635*^9, {
   3.697295765451947*^9, 3.697295791013135*^9}, 3.697295858522468*^9, {
   3.6972959375366163`*^9, 3.697295939295223*^9}, {3.697296221235919*^9, 
   3.697296221370687*^9}, 3.697299217922791*^9, 3.6972993045601883`*^9, {
   3.69729944428395*^9, 3.697299444538279*^9}, {3.697299483894978*^9, 
   3.697299484037012*^9}, {3.697304918922056*^9, 3.6973049200087214`*^9}, {
   3.697304953564069*^9, 3.697304956596198*^9}, {3.6973051332400293`*^9, 
   3.69730513480811*^9}, {3.697305723323147*^9, 3.697305723954117*^9}, {
   3.697305871189086*^9, 3.697305879902028*^9}, 3.6973079486627893`*^9, {
   3.697311342045849*^9, 3.697311342147811*^9}, {3.709563798067383*^9, 
   3.7095638100918713`*^9}, 3.709563862663022*^9, {3.7106102666829967`*^9, 
   3.710610296693247*^9}, {3.710610552005604*^9, 3.710610568432355*^9}, {
   3.710611358353878*^9, 3.7106113829240303`*^9}, {3.71061145238662*^9, 
   3.710611486380595*^9}, 3.710612205224029*^9, {3.710775568718277*^9, 
   3.7107755702130833`*^9}, {3.71078055438974*^9, 3.710780555877117*^9}, {
   3.710780787144696*^9, 3.710780787390958*^9}, {3.710860234583169*^9, 
   3.710860245679358*^9}, {3.711473383699057*^9, 3.711473384292762*^9}, 
   3.711473457390401*^9, 3.711473503674878*^9, 3.711473570286919*^9, {
   3.7117893258348217`*^9, 3.711789344857862*^9}, {3.7117916584106197`*^9, 
   3.7117917107010517`*^9}},ExpressionUUID->"72a77f58-dbde-4b83-afeb-\
d145c70c310c"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Extra plotting parameters [enter]", "Section",
 CellChangeTimes->{{3.711788097980446*^9, 3.71178810195179*^9}, 
   3.711791286481474*^9, {3.7125821984495077`*^9, 
   3.712582199787369*^9}},ExpressionUUID->"400ecc12-a6bb-4cbd-833a-\
546bff793cc6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"modvec", "=", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", "1",
      ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
     ",", "0"}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.711712400946435*^9, 3.7117124100502872`*^9}, {
  3.711712463305482*^9, 
  3.711712471104075*^9}},ExpressionUUID->"ca1e31b2-42d3-4124-b1da-\
cc2d5aa43b24"],

Cell[CellGroupData[{

Cell["Plotting parameters", "Subsection",
 CellChangeTimes->{{3.697226875880493*^9, 
  3.697226880633122*^9}},ExpressionUUID->"d7209ae6-d362-42b5-ac30-\
5acc36c1b76c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Pad", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"40", ",", "20"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"50", ",", "30"}], "}"}]}], "}"}]}], ";"}], "  ", 
  RowBox[{"(*", 
   RowBox[{"space", " ", "around", " ", "plot"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"yplotmin", "=", 
   RowBox[{"-", "0.075"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"yplotmax", "=", "0.25"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"yplotinterval", "=", "0.02"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ylabpos", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.14"}], ",", "0.5"}], "}"}]}], ";", "  ", 
  RowBox[{"(*", 
   RowBox[{
   "relative", " ", "location", " ", "of", " ", "y", " ", "axis", " ", 
    "label", " ", "position"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.6972268881655416`*^9, 3.697226889524013*^9}, {
   3.6972269409588947`*^9, 3.6972269416947613`*^9}, {3.697231996012269*^9, 
   3.697232015110681*^9}, {3.697232814377315*^9, 3.6972328147201233`*^9}, {
   3.697233367935761*^9, 3.697233368165653*^9}, {3.6972342055728903`*^9, 
   3.697234205650242*^9}, 3.697248786087654*^9, 3.697248930277635*^9, {
   3.697295765451947*^9, 3.697295791013135*^9}, 3.697295858522468*^9, {
   3.6972959375366163`*^9, 3.697295939295223*^9}, {3.697296221235919*^9, 
   3.697296221370687*^9}, 3.697299217922791*^9, 3.6972993045601883`*^9, {
   3.69729944428395*^9, 3.697299444538279*^9}, {3.697299483894978*^9, 
   3.697299484037012*^9}, {3.697304918922056*^9, 3.6973049200087214`*^9}, {
   3.697304953564069*^9, 3.697304956596198*^9}, {3.6973051332400293`*^9, 
   3.69730513480811*^9}, {3.697305723323147*^9, 3.697305723954117*^9}, {
   3.697305871189086*^9, 3.697305879902028*^9}, 3.6973079486627893`*^9, {
   3.697311342045849*^9, 3.697311342147811*^9}, {3.709563798067383*^9, 
   3.7095638100918713`*^9}, 3.709563862663022*^9, {3.7106102666829967`*^9, 
   3.710610296693247*^9}, {3.710610552005604*^9, 3.710610568432355*^9}, {
   3.710611358353878*^9, 3.7106113829240303`*^9}, {3.71061145238662*^9, 
   3.710611486380595*^9}, 3.710612205224029*^9, {3.710775568718277*^9, 
   3.7107755702130833`*^9}, {3.71078055438974*^9, 3.710780555877117*^9}, {
   3.710780787144696*^9, 3.710780787390958*^9}, {3.710860234583169*^9, 
   3.710860245679358*^9}, {3.711473383699057*^9, 3.711473384292762*^9}, 
   3.711473457390401*^9, 3.711473503674878*^9, 3.711473570286919*^9, {
   3.7117893258348217`*^9, 3.711789344857862*^9}, {3.7117916584106197`*^9, 
   3.7117917107010517`*^9}, {3.713075726241232*^9, 
   3.7130757263287287`*^9}},ExpressionUUID->"e046f981-d4fc-4262-a3fa-\
ee40523410ee"]
}, Closed]],

Cell[CellGroupData[{

Cell["extra parameters", "Subsection",
 CellChangeTimes->{{3.711781859169434*^9, 
  3.711781874287788*^9}},ExpressionUUID->"51cd1586-0b89-447d-8b42-\
f9fbe2e8f21e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"startplot", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"endtime", "=", "5000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tryR", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"trypm", "=", "0.01"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tryk", "=", "1"}], ";"}]}], "Input",
 CellChangeTimes->{{3.711780031990808*^9, 
  3.711780039189816*^9}},ExpressionUUID->"5316018b-730a-4255-8856-\
835db862e87f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"loglinearplotINVoptions", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Frame", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"True", ",", "False"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"True", ",", "False"}], "}"}]}], "}"}]}], ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"FrameStyle", "->", 
      RowBox[{"Directive", "[", 
       RowBox[{"Black", ",", 
        RowBox[{"Thickness", "[", "lwd", "]"}]}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"FrameTicksStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Directive", "[", 
           RowBox[{"Black", ",", 
            RowBox[{"Thickness", "[", "lwd", "]"}], ",", 
            RowBox[{"FontColor", "\[Rule]", "Black"}]}], "]"}], ",", 
          RowBox[{"Directive", "[", 
           RowBox[{"Black", ",", 
            RowBox[{"Thickness", "[", "lwd", "]"}]}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Directive", "[", 
           RowBox[{"Black", ",", 
            RowBox[{"Thickness", "[", "lwd", "]"}]}], "]"}], ",", 
          RowBox[{"Directive", "[", 
           RowBox[{"Black", ",", 
            RowBox[{"Thickness", "[", "lwd", "]"}]}], "]"}]}], "}"}]}], 
       "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"FrameTicks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"5", ",", "5", ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0.01"}], "}"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"10", ",", "10", ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0.01"}], "}"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"50", ",", "50", ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0.01"}], "}"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"100", ",", "100", ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0.01"}], "}"}]}], "}"}], ",", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"500", ",", "500", ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0.01"}], "}"}]}], "}"}], ","}], "*)"}], 
          RowBox[{"{", 
           RowBox[{"1000", ",", "1000", ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0.01"}], "}"}]}], "}"}]}], 
         RowBox[{"(*", 
          RowBox[{",", 
           RowBox[{"{", 
            RowBox[{"5000", ",", "5000", ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0.01"}], "}"}]}], "}"}]}], "*)"}], "}"}], 
        ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"y", ",", "y", ",", "ticksize"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"y", ",", "0", ",", "0.5", ",", "0.25"}], "}"}]}], "]"}]}],
        "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"BaseStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], ",", 
        RowBox[{"FontSize", "\[Rule]", "12"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ImageSize", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"xsize", ",", 
        RowBox[{"xsize", " ", "aspectratio"}]}], " ", "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"AspectRatio", "\[Rule]", "aspectratio"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Axes", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"\"\<neo-W frequency\>\"", ",", 
            RowBox[{"FontSize", "\[Rule]", "8"}]}], "]"}], ",", "\"\<\>\""}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"\"\<Generation\>\"", ",", 
            RowBox[{"FontSize", "\[Rule]", "8"}]}], "]"}], ",", "\"\<\>\""}], 
         "}"}]}], "}"}]}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.711779915774283*^9, 3.711779918541304*^9}, {
  3.71177997196581*^9, 3.71178002283567*^9}, {3.71178005982761*^9, 
  3.711780107558652*^9}, {3.711780155083268*^9, 3.7117801562032957`*^9}, {
  3.711782830521953*^9, 3.711782868907715*^9}, {3.711785679053266*^9, 
  3.7117857306921473`*^9}},ExpressionUUID->"a2d780bf-cac1-4ed9-8089-\
48fa3081990b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"loglinearplotR\[Lambda]options", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Frame", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"True", ",", "False"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"True", ",", "False"}], "}"}]}], "}"}]}], ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"ImageSize", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"xsize", ",", 
        RowBox[{"xsize", " ", "aspectratio"}]}], " ", "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"AspectRatio", "\[Rule]", "aspectratio"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotRangePadding", "\[Rule]", "0"}], ",", "\[IndentingNewLine]", 
     RowBox[{"BaseStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], ",", 
        RowBox[{"FontSize", "\[Rule]", "14"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ImagePadding", "\[Rule]", "Pad"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotRangeClipping", "\[Rule]", "False"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"FrameStyle", "->", 
      RowBox[{"Directive", "[", 
       RowBox[{"Black", ",", 
        RowBox[{"Thickness", "[", "lwd", "]"}]}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"FrameTicksStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Directive", "[", 
           RowBox[{"Black", ",", 
            RowBox[{"Thickness", "[", "lwd", "]"}], ",", 
            RowBox[{"FontColor", "\[Rule]", "Black"}]}], "]"}], ",", 
          RowBox[{"Directive", "[", 
           RowBox[{"Black", ",", 
            RowBox[{"Thickness", "[", "lwd", "]"}]}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Directive", "[", 
           RowBox[{"Black", ",", 
            RowBox[{"Thickness", "[", "lwd", "]"}]}], "]"}], ",", 
          RowBox[{"Directive", "[", 
           RowBox[{"Black", ",", 
            RowBox[{"Thickness", "[", "lwd", "]"}]}], "]"}]}], "}"}]}], 
       "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"FrameTicks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.001", ",", "0.001", ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0.01"}], "}"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0.005", ",", "\"\<r\>\"", ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0.01"}], "}"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0.01", ",", "0.01", ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0.01"}], "}"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0.05", ",", "0.05", ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0.01"}], "}"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0.5", ",", "0.5", ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0.01"}], "}"}]}], "}"}]}], "}"}], ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"y", ",", "y", ",", "ticksize"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"y", ",", 
            RowBox[{"-", "0.1"}], ",", "0.2", ",", "0.1"}], "}"}]}], "]"}]}], 
       "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"BaseStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], ",", 
        RowBox[{"FontSize", "\[Rule]", "12"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ImageSize", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"xsize", ",", 
        RowBox[{"xsize", " ", "aspectratio"}]}], " ", "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"AspectRatio", "\[Rule]", "aspectratio"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Axes", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<\>\"", ",", "\"\<\>\""}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"\"\<R\>\"", ",", 
            RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}], ",", "\"\<\>\""}],
          "}"}]}], "}"}]}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.711778718448349*^9, 3.711778729722588*^9}, {
  3.711778778178846*^9, 3.711778848821344*^9}, {3.711778898085766*^9, 
  3.711778947029851*^9}, {3.7117790113335648`*^9, 3.711779048407845*^9}, {
  3.7117898708439837`*^9, 3.711789879175735*^9}, {3.711789919872443*^9, 
  3.711789920078568*^9}, {3.7117899962535543`*^9, 3.71178999880402*^9}, {
  3.711790040760641*^9, 3.711790047958076*^9}, {3.711790106939445*^9, 
  3.711790107404564*^9}},ExpressionUUID->"40394f1c-2890-4cef-9e04-\
71ca9cb94291"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Mike - Temporal Dynamics", "Section",
 CellChangeTimes->{{3.711474794740471*^9, 3.7114748395320673`*^9}, {
  3.713075429202297*^9, 
  3.713075431593113*^9}},ExpressionUUID->"811556bb-7def-4967-a91e-\
2aed6c0e94eb"],

Cell[CellGroupData[{

Cell["Parameters (male drive)", "Subsubsection",
 CellChangeTimes->{{3.7117896910190773`*^9, 3.711789692171351*^9}, {
  3.713075844172964*^9, 
  3.7130758468181*^9}},ExpressionUUID->"fccb1a71-4408-4d7e-b8a3-0d675e5f7af5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"tryFAA", "=", 
   RowBox[{"1", "+", 
    RowBox[{"1", "/", "4"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tryFAa", "=", 
   RowBox[{"1", "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"3", "/", "4"}], ")"}], 
     RowBox[{"(", 
      RowBox[{"1", "/", "4"}], ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tryFaa", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tryMAA", "=", 
   RowBox[{"1", "+", 
    RowBox[{"1", "/", "4"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tryMAa", "=", 
   RowBox[{"1", "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"3", "/", "4"}], ")"}], 
     RowBox[{"(", 
      RowBox[{"1", "/", "4"}], ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tryMaa", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"trywAf", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"trywaf", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"trywAm", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"trywam", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"try\[Alpha]f", "=", 
   RowBox[{"1", "/", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"try\[Alpha]m", "=", 
   RowBox[{
    RowBox[{"1", "/", "2"}], "-", 
    RowBox[{"1", "/", "8"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tryr", "=", 
   RowBox[{"1", "/", "200"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tryR", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"subpar1", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"FAA", "\[Rule]", "tryFAA"}], ",", 
     RowBox[{"FAa", "\[Rule]", "tryFAa"}], ",", 
     RowBox[{"Faa", "\[Rule]", "tryFaa"}], ",", 
     RowBox[{"MAA", "\[Rule]", "tryMAA"}], ",", 
     RowBox[{"MAa", "\[Rule]", "tryMAa"}], ",", 
     RowBox[{"Maa", "\[Rule]", "tryMaa"}], ",", 
     RowBox[{"wAf", "->", "trywAf"}], ",", 
     RowBox[{"waf", "->", "trywaf"}], ",", 
     RowBox[{"wAm", "->", "trywAm"}], ",", 
     RowBox[{"wam", "->", "trywam"}], ",", 
     RowBox[{"\[Alpha]f", "->", "try\[Alpha]f"}], ",", 
     RowBox[{"\[Alpha]m", "->", "try\[Alpha]m"}]}], "}"}]}], ";"}]}], "Input",\

 CellChangeTimes->{{3.697299472701777*^9, 3.697299615143155*^9}, {
   3.69729974606957*^9, 3.6972997764327097`*^9}, 3.69730060073298*^9, {
   3.69730066890292*^9, 3.69730067414042*^9}, {3.6973007268098497`*^9, 
   3.69730072981532*^9}, {3.6973012570019836`*^9, 3.697301268086133*^9}, {
   3.69730161492304*^9, 3.697301617644561*^9}, {3.697302327559979*^9, 
   3.697302327863235*^9}, {3.697302740882915*^9, 3.6973027413209543`*^9}, {
   3.697302786656652*^9, 3.697302787281019*^9}, {3.697302962121398*^9, 
   3.6973029905212173`*^9}, 3.697303079565696*^9, 3.697303120491474*^9, {
   3.697303431993217*^9, 3.6973034322206907`*^9}, {3.6973034629706907`*^9, 
   3.697303517375206*^9}, {3.697304249782853*^9, 3.697304293461493*^9}, {
   3.697304948734173*^9, 3.697304950456213*^9}, {3.710182518453659*^9, 
   3.710182522036127*^9}, {3.710184612997334*^9, 3.710184634901937*^9}, {
   3.710185190360118*^9, 3.710185190453978*^9}, {3.710185503341949*^9, 
   3.710185503652523*^9}, {3.710185768446323*^9, 3.7101857690503693`*^9}, 
   3.710244391216098*^9, 3.710350541541176*^9, 3.710350868579856*^9, 
   3.71035134518941*^9, 3.710351411026071*^9, 3.710351533996911*^9, {
   3.710352268506646*^9, 3.710352268573635*^9}, {3.711528118943572*^9, 
   3.7115281223839407`*^9}, {3.7115281574856462`*^9, 
   3.7115281600083103`*^9}, {3.711692518953178*^9, 3.711692553386442*^9}, {
   3.7116925839166927`*^9, 3.7116927566818457`*^9}, {3.7116930018904877`*^9, 
   3.711693025794161*^9}, {3.7116930829601803`*^9, 3.7116930834244843`*^9}, {
   3.7116974110978622`*^9, 3.711697424705469*^9}, {3.711702817336348*^9, 
   3.711702836548231*^9}, {3.711703342798403*^9, 3.711703378874107*^9}, {
   3.7117034458830233`*^9, 3.711703446190003*^9}, {3.711714126332465*^9, 
   3.711714126923059*^9}, {3.7117897874111023`*^9, 3.7117897877019033`*^9}, {
   3.713075577438867*^9, 
   3.713075636006651*^9}},ExpressionUUID->"3132b230-1005-4b05-806a-\
da2e07faac3e"]
}, Closed]],

Cell[CellGroupData[{

Cell["Plot", "Subsubsection",
 CellChangeTimes->{{3.711789765961763*^9, 
  3.711789766425194*^9}},ExpressionUUID->"ad439c3b-b457-4959-b7ce-\
4be8dab4af79"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"tab", "=", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"equil", "=", 
       RowBox[{
        RowBox[{"sieve", "[", 
         RowBox[{
         "tryFAA", ",", "tryFAa", ",", "tryFaa", ",", "tryMAA", ",", "tryMAa",
           ",", "tryMaa", ",", "trywAf", ",", "trywaf", ",", "trywAm", ",", 
          "trywam", ",", "try\[Alpha]f", ",", "try\[Alpha]m", ",", "tryr"}], 
         "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Lambda]", "/.", 
       RowBox[{"Solve", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 SuperscriptBox["\[Lambda]", "2"], "-", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"\[Lambda]mA", " ", "+", "\[Lambda]ma"}], ")"}], 
                  "\[Lambda]"}], " ", "+", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"\[Lambda]mA", " ", "\[Lambda]ma"}], "-", 
                   RowBox[{"\[Rho]mA", " ", "\[Rho]ma"}]}], ")"}]}], "/.", 
                "SUBS"}], "/.", "subequil"}], "/.", "subpar1"}], "/.", 
             RowBox[{"R", "\[Rule]", 
              RowBox[{"0.5", "^", "b"}]}]}], "/.", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"pXf", "\[Rule]", 
               RowBox[{"equil", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], ",", 
              RowBox[{"pXm", "\[Rule]", 
               RowBox[{"equil", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], ",", 
              RowBox[{"pYm", "\[Rule]", 
               RowBox[{"equil", "[", 
                RowBox[{"[", "3", "]"}], "]"}]}], ",", 
              RowBox[{"freqYm", "\[Rule]", 
               RowBox[{"equil", "[", 
                RowBox[{"[", "4", "]"}], "]"}]}]}], "}"}]}], ")"}], 
          "\[Equal]", "0"}], ",", "\[Lambda]"}], "]"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "10", ",", "1", ",", 
       RowBox[{
        RowBox[{"-", "1"}], "/", "2"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eigen1", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"0.5", "^", "b"}], ",", 
         RowBox[{"{", 
          RowBox[{"b", ",", "10", ",", "1", ",", 
           RowBox[{
            RowBox[{"-", "1"}], "/", "2"}]}], "}"}]}], "]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Transpose", "[", "tab", "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], "-", "1"}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eigen2", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"0.5", "^", "b"}], ",", 
         RowBox[{"{", 
          RowBox[{"b", ",", "10", ",", "1", ",", 
           RowBox[{
            RowBox[{"-", "1"}], "/", "2"}]}], "}"}]}], "]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Transpose", "[", "tab", "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}], "-", "1"}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"plot1", "=", 
  RowBox[{"Show", "[", "\[IndentingNewLine]", 
   RowBox[{"ListLogLinearPlot", "[", 
    RowBox[{"eigen2", ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Thick", ",", "Black"}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0.0008", ",", "0.5"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"yplotmin", ",", "yplotmax"}], "}"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", "loglinearplotR\[Lambda]options"}], "]"}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.711789818872653*^9, 3.711789829510097*^9}, {
   3.711789895199415*^9, 3.711789898765771*^9}, {3.711790424977929*^9, 
   3.711790432167965*^9}, 
   3.711790552521893*^9},ExpressionUUID->"2ca77e4b-ea88-45ee-a819-\
f64329f06686"],

Cell[BoxData[
 GraphicsBox[{{{}, {{{}, {}, {
       {GrayLevel[0], PointSize[0.012833333333333334`], Thickness[Large], 
        StyleBox[LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBmIQnX1ix77LO6UPXJj9/t1hl3P2Z1RO9r0PkzrAYP+h
9pzlOXvdxptx3F8kDqxYYMoeqXXOvu/uSz31ieIHJrSvrZ0gcs7+veWvf056
YgdO6LhuePX1rH3ANK7zcadFDixIeSLy9NRZ+42fpOZXZQgfUDh779zmvrP2
Qv7a+dNYhQ5sqFy4/JnVWfvi1db2mxYJHJCo87olefyM/Ur+GXJz6vkOOPyx
+PxO44w9xH3cBw7s7/18N+Q01D0cB1bEravidjwFtZ/tgIPNmvXfXp+A2sd8
oOOg1fKo9ONQ8xkOGGz//GX7vaNQ837vl9DLiv3cdgSq/9v+gMchDCtrD0PV
f9iv8FBaJu/AIaj8s/0d3Fvc/tgesgcAnWSi/A==
          "]],
         FontFamily->"Helvetica",
         FontSize->14]}}}}, {}, {}, {{}, {}}, {{}, {}}}},
  AspectRatio->NCache[2^Rational[-1, 2], 0.7071067811865475],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-7.098710072047664, 0},
  BaseStyle->{FontFamily -> "Helvetica", FontSize -> 14},
  DisplayFunction->Identity,
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{
     FormBox["\"\"", TraditionalForm], 
     FormBox["\"\"", TraditionalForm]}, {
     FormBox[
      StyleBox["\"R\"", FontSize -> 14, StripOnInput -> False], 
      TraditionalForm], 
     FormBox["\"\"", TraditionalForm]}},
  FrameStyle->Directive[
    GrayLevel[0], 
    Thickness[0.006]],
  FrameTicks->{{{{-0.1, 
       FormBox[
        RowBox[{"-", "0.1`"}], TraditionalForm], {0, 0.01}}, {0., 
       FormBox["0.`", TraditionalForm], {0, 0.01}}, {0.1, 
       FormBox["0.1`", TraditionalForm], {0, 0.01}}, {0.20000000000000004`, 
       FormBox["0.20000000000000004`", TraditionalForm], {0, 0.01}}}, {{-0.1, 
       
       FormBox[
        RowBox[{"-", "0.1`"}], TraditionalForm], {0, 0.01}}, {0., 
       FormBox["0.`", TraditionalForm], {0, 0.01}}, {0.1, 
       FormBox["0.1`", TraditionalForm], {0, 0.01}}, {0.20000000000000004`, 
       FormBox["0.20000000000000004`", TraditionalForm], {
       0, 0.01}}}}, {{{-6.907755278982137, 
       FormBox["0.001`", TraditionalForm], {0, 0.01}}, {-5.298317366548036, 
       FormBox["\"r\"", TraditionalForm], {0, 0.01}}, {-4.605170185988091, 
       FormBox["0.01`", TraditionalForm], {0, 0.01}}, {-2.995732273553991, 
       FormBox["0.05`", TraditionalForm], {0, 0.01}}, {-0.6931471805599453, 
       FormBox["0.5`", TraditionalForm], {0, 0.01}}}, {{-6.907755278982137, 
       FormBox["0.001`", TraditionalForm], {0, 0.01}}, {-5.298317366548036, 
       FormBox["\"r\"", TraditionalForm], {0, 0.01}}, {-4.605170185988091, 
       FormBox["0.01`", TraditionalForm], {0, 0.01}}, {-2.995732273553991, 
       FormBox["0.05`", TraditionalForm], {0, 0.01}}, {-0.6931471805599453, 
       FormBox["0.5`", TraditionalForm], {0, 0.01}}}}},
  FrameTicksStyle->{{
     Directive[
      GrayLevel[0], 
      Thickness[0.006], FontColor -> GrayLevel[0]], 
     Directive[
      GrayLevel[0], 
      Thickness[0.006]]}, {
     Directive[
      GrayLevel[0], 
      Thickness[0.006]], 
     Directive[
      GrayLevel[0], 
      Thickness[0.006]]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->{{40, 20}, {50, 30}},
  ImageSize->NCache[{360, 180 2^Rational[1, 2]}, {360, 254.55844122715712`}],
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Exp[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Exp[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-7.1308988302963465`, -0.6931471805599453}, {-0.075, 0.25}},
  PlotRangeClipping->False,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->FrontEndValueCache[{
     Charting`ScaledTicks[{Log, Exp}], Automatic}, {{{-6.907755278982137, 
       FormBox["0.001`", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-5.298317366548036, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.005\"", 0.005, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 3.}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-4.605170185988091, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.010\"", 0.01, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 3.}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-2.995732273553991, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.050\"", 0.05, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 3.}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-2.3025850929940455`, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.100\"", 0.1, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 3.}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.6931471805599453, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.500\"", 0.5, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 3.}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-7.600902459542082, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-7.418580902748128, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-7.264430222920869, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-7.1308988302963465`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-7.013115794639964, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-6.214608098422191, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-5.809142990314028, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-5.521460917862246, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-5.115995809754082, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-4.961845129926823, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-4.8283137373023015`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-4.710530701645918, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-3.912023005428146, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-3.506557897319982, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-3.2188758248682006`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-2.8134107167600364`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-2.659260036932778, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-2.5257286443082556`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-2.4079456086518722`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-1.6094379124341003`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-1.2039728043259361`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-0.916290731874155, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-0.5108256237659907, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-0.35667494393873245`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-0.2231435513142097, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-0.10536051565782628`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {0., 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {0.4054651081081644, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {0.6931471805599453, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}}, Automatic}]]], "Output",
 CellChangeTimes->{{3.711789772577486*^9, 3.711789789543001*^9}, {
   3.71178982132514*^9, 3.711789830040066*^9}, {3.711789899320304*^9, 
   3.711789927244409*^9}, 3.711790008409782*^9, 3.711790054993622*^9, 
   3.711790111581698*^9, 3.711790432852747*^9, 3.711790553414027*^9, 
   3.71307564996157*^9, {3.713075712980227*^9, 
   3.713075731203094*^9}},ExpressionUUID->"52ecf3ff-0559-4e8f-88fc-\
6913207d7d50"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"temp", "=", 
  RowBox[{"Show", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ListLogLinearPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0.0008", ",", "yplotmax"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"tryr", ",", "yplotmax"}], "}"}]}], "}"}], ",", 
      RowBox[{"Joined", "\[Rule]", "True"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Black", ",", "Thin"}], "}"}]}], ",", 
      RowBox[{"Filling", "\[Rule]", "yplotmin"}], ",", 
      RowBox[{"FillingStyle", "\[Rule]", "LightGray"}], ",", 
      "loglinearplotR\[Lambda]options", ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0.0008", ",", "0.5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"yplotmin", ",", "yplotmax"}], "}"}]}], "}"}]}]}], "]"}], 
    ",", "\[IndentingNewLine]", "plot1", ",", "\[IndentingNewLine]", 
    RowBox[{"ListLogLinearPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"tryr", ",", "yplotmax"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"tryr", ",", "yplotmin"}], "}"}]}], "}"}], ",", 
      RowBox[{"Joined", "\[Rule]", "True"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Black", ",", "Thin"}], "}"}]}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"ListLogLinearPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0.001", ",", 
          RowBox[{"-", "0.01"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.001", ",", "0.01"}], "}"}]}], "}"}], ",", 
      RowBox[{"Joined", "\[Rule]", "True"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Black", ",", "Thick"}], "}"}]}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"ListLogLinearPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0.02", ",", 
          RowBox[{"-", "0.01"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.02", ",", "0.01"}], "}"}]}], "}"}], ",", 
      RowBox[{"Joined", "\[Rule]", "True"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", "Red", "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"ListLogLinearPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0.1", ",", 
          RowBox[{"-", "0.01"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.1", ",", "0.01"}], "}"}]}], "}"}], ",", 
      RowBox[{"Joined", "\[Rule]", "True"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", "Blue", "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"ListLogLinearPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0.5", ",", 
          RowBox[{"-", "0.01"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.5", ",", "0.01"}], "}"}]}], "}"}], ",", 
      RowBox[{"Joined", "\[Rule]", "True"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", "Green", "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"GridLines", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "0.005", "}"}], ",", 
       RowBox[{"{", "1", "}"}]}], "}"}]}]}], 
   RowBox[{"(*", 
    RowBox[{",", "\[IndentingNewLine]", 
     RowBox[{"GridLinesStyle", "\[Rule]", "Black"}]}], "*)"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.711790204644497*^9, 3.711790275108921*^9}, {
  3.711790340250709*^9, 3.711790393512679*^9}, {3.711790439616519*^9, 
  3.711790530685474*^9}, {3.711790596078458*^9, 
  3.711790596401642*^9}},ExpressionUUID->"5c83ce24-bec8-42d0-8ffb-\
7738098b4331"],

Cell[BoxData[
 GraphicsBox[{{{{}, 
     GraphicsComplexBox[{{-7.1308988302963465`, 0.25}, {-5.298317366548036, 
      0.25}, {-7.1308988302963465`, -0.075}, {-5.298317366548036, -0.075}}, \
{{{}, {
         {GrayLevel[0.85], EdgeForm[None], 
          GraphicsGroupBox[{PolygonBox[{{1, 3, 4, 2}}]}]}}, {}, {}}, {{}, {}, {
         {GrayLevel[0], PointSize[0.012833333333333334`], Thickness[Tiny], 
          StyleBox[LineBox[{1, 2}],
           FontFamily->"Helvetica",
           
           FontSize->
            14]}}}}], {}, {}, {{}, {}}, {{}, {}}}}, {{{}, {{{}, {}, {
        {GrayLevel[0], PointSize[0.012833333333333334`], Thickness[Large], 
         StyleBox[LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBmIQnX1ix77LO6UPXJj9/t1hl3P2Z1RO9r0PkzrAYP+h
9pzlOXvdxptx3F8kDqxYYMoeqXXOvu/uSz31ieIHJrSvrZ0gcs7+veWvf056
YgdO6LhuePX1rH3ANK7zcadFDixIeSLy9NRZ+42fpOZXZQgfUDh779zmvrP2
Qv7a+dNYhQ5sqFy4/JnVWfvi1db2mxYJHJCo87olefyM/Ur+GXJz6vkOOPyx
+PxO44w9xH3cBw7s7/18N+Q01D0cB1bEravidjwFtZ/tgIPNmvXfXp+A2sd8
oOOg1fKo9ONQ8xkOGGz//GX7vaNQ837vl9DLiv3cdgSq/9v+gMchDCtrD0PV
f9iv8FBaJu/AIaj8s/0d3Fvc/tgesgcAnWSi/A==
           "]],
          FontFamily->"Helvetica",
          FontSize->14]}}}}, {}, {}, {{}, {}}, {{}, {}}}}, {{{}, {{{}, {}, {
        {GrayLevel[0], PointSize[0.012833333333333334`], Thickness[Tiny], 
         LineBox[{{-5.298317366548036, 
          0.25}, {-5.298317366548036, -0.075}}]}}}}, {}, {}, {{}, {}}, {{}, \
{}}}}, {{{}, {{{}, {}, {
        {GrayLevel[0], PointSize[0.012833333333333334`], Thickness[Large], 
         LineBox[{{-6.907755278982137, -0.01}, {-6.907755278982137, 
          0.01}}]}}}}, {}, {}, {{}, {}}, {{}, {}}}}, {{{}, {{{}, {}, {
        {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], 
         AbsoluteThickness[1.6], 
         LineBox[{{-3.912023005428146, -0.01}, {-3.912023005428146, 
          0.01}}]}}}}, {}, {}, {{}, {}}, {{}, {}}}}, {{{}, {{{}, {}, {
        {RGBColor[0, 0, 1], PointSize[0.012833333333333334`], 
         AbsoluteThickness[1.6], 
         LineBox[{{-2.3025850929940455`, -0.01}, {-2.3025850929940455`, 
          0.01}}]}}}}, {}, {}, {{}, {}}, {{}, {}}}}, {{{}, {{{}, {}, {
        {RGBColor[0, 1, 0], PointSize[0.012833333333333334`], 
         AbsoluteThickness[1.6], 
         LineBox[{{-0.6931471805599453, -0.01}, {-0.6931471805599453, 
          0.01}}]}}}}, {}, {}, {{}, {}}, {{}, {}}}}},
  AspectRatio->NCache[2^Rational[-1, 2], 0.7071067811865475],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-7.098710072047664, 0},
  BaseStyle->{FontFamily -> "Helvetica", FontSize -> 14},
  DisplayFunction->Identity,
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{
     FormBox["\"\"", TraditionalForm], 
     FormBox["\"\"", TraditionalForm]}, {
     FormBox[
      StyleBox["\"R\"", FontSize -> 14, StripOnInput -> False], 
      TraditionalForm], 
     FormBox["\"\"", TraditionalForm]}},
  FrameStyle->Directive[
    GrayLevel[0], 
    Thickness[0.006]],
  FrameTicks->{{{{-0.1, 
       FormBox[
        RowBox[{"-", "0.1`"}], TraditionalForm], {0, 0.01}}, {0., 
       FormBox["0.`", TraditionalForm], {0, 0.01}}, {0.1, 
       FormBox["0.1`", TraditionalForm], {0, 0.01}}, {0.20000000000000004`, 
       FormBox["0.20000000000000004`", TraditionalForm], {0, 0.01}}}, {{-0.1, 
       
       FormBox[
        RowBox[{"-", "0.1`"}], TraditionalForm], {0, 0.01}}, {0., 
       FormBox["0.`", TraditionalForm], {0, 0.01}}, {0.1, 
       FormBox["0.1`", TraditionalForm], {0, 0.01}}, {0.20000000000000004`, 
       FormBox["0.20000000000000004`", TraditionalForm], {
       0, 0.01}}}}, {{{-6.907755278982137, 
       FormBox["0.001`", TraditionalForm], {0, 0.01}}, {-5.298317366548036, 
       FormBox["\"r\"", TraditionalForm], {0, 0.01}}, {-4.605170185988091, 
       FormBox["0.01`", TraditionalForm], {0, 0.01}}, {-2.995732273553991, 
       FormBox["0.05`", TraditionalForm], {0, 0.01}}, {-0.6931471805599453, 
       FormBox["0.5`", TraditionalForm], {0, 0.01}}}, {{-6.907755278982137, 
       FormBox["0.001`", TraditionalForm], {0, 0.01}}, {-5.298317366548036, 
       FormBox["\"r\"", TraditionalForm], {0, 0.01}}, {-4.605170185988091, 
       FormBox["0.01`", TraditionalForm], {0, 0.01}}, {-2.995732273553991, 
       FormBox["0.05`", TraditionalForm], {0, 0.01}}, {-0.6931471805599453, 
       FormBox["0.5`", TraditionalForm], {0, 0.01}}}}},
  FrameTicksStyle->{{
     Directive[
      GrayLevel[0], 
      Thickness[0.006], FontColor -> GrayLevel[0]], 
     Directive[
      GrayLevel[0], 
      Thickness[0.006]]}, {
     Directive[
      GrayLevel[0], 
      Thickness[0.006]], 
     Directive[
      GrayLevel[0], 
      Thickness[0.006]]}},
  GridLines->{{0.005}, {1}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->{{40, 20}, {50, 30}},
  ImageSize->NCache[{360, 180 2^Rational[1, 2]}, {360, 254.55844122715712`}],
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Exp[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Exp[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-7.1308988302963465`, -0.6931471805599453}, {-0.075, 0.25}},
  PlotRangeClipping->False,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->FrontEndValueCache[{
     Charting`ScaledTicks[{Log, Exp}], Automatic}, {{{-6.907755278982137, 
       FormBox["0.001`", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-5.298317366548036, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.005\"", 0.005, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 3.}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-4.605170185988091, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.010\"", 0.01, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 3.}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-2.995732273553991, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.050\"", 0.05, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 3.}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-2.3025850929940455`, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.100\"", 0.1, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 3.}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.6931471805599453, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.500\"", 0.5, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 3.}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-7.600902459542082, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-7.418580902748128, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-7.264430222920869, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-7.1308988302963465`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-7.013115794639964, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-6.214608098422191, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-5.809142990314028, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-5.521460917862246, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-5.115995809754082, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-4.961845129926823, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-4.8283137373023015`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-4.710530701645918, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-3.912023005428146, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-3.506557897319982, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-3.2188758248682006`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-2.8134107167600364`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-2.659260036932778, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-2.5257286443082556`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-2.4079456086518722`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-1.6094379124341003`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-1.2039728043259361`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-0.916290731874155, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-0.5108256237659907, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-0.35667494393873245`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-0.2231435513142097, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-0.10536051565782628`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {0., 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {0.4054651081081644, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {0.6931471805599453, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}}, Automatic}]]], "Output",
 CellChangeTimes->{
  3.711790172520329*^9, {3.7117902112315598`*^9, 3.7117902239111557`*^9}, {
   3.711790258820758*^9, 3.71179027560854*^9}, {3.7117903668033953`*^9, 
   3.711790393948126*^9}, 3.711790446615591*^9, {3.711790482576254*^9, 
   3.711790531108674*^9}, 3.7117905617039843`*^9, 3.7117905968801813`*^9, 
   3.713075744585737*^9},ExpressionUUID->"4d687c10-9ca4-4d98-a137-\
16b6ac4fec63"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Invasion Plot", "Subsubsection",
 CellChangeTimes->{{3.711790613559505*^9, 
  3.7117906152829657`*^9}},ExpressionUUID->"fad256e2-a94e-4b7a-8236-\
73fe8bf2e517"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"tryR", "=", "0.001"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"param", "=", 
   RowBox[{"{", 
    RowBox[{
    "tryFAA", ",", "tryFAa", ",", "tryFaa", ",", "tryMAA", ",", "tryMAa", ",",
      "tryMaa", ",", "trywAf", ",", "trywaf", ",", "trywAm", ",", "trywam", 
     ",", "try\[Alpha]f", ",", "try\[Alpha]m", ",", "tryr", ",", "tryR", ",", 
     
     RowBox[{
      RowBox[{"tryr", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "tryR"}], ")"}]}], "+", 
      RowBox[{"tryR", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "tryr"}], ")"}]}]}], ",", "tryk"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"run", "[", "0", "]"}], "=", 
   RowBox[{"generation", "[", 
    RowBox[{"param", ",", 
     RowBox[{"startgen", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"sieve", "[", 
         RowBox[{
         "tryFAA", ",", "tryFAa", ",", "tryFaa", ",", "tryMAA", ",", "tryMAa",
           ",", "tryMaa", ",", "trywAf", ",", "trywaf", ",", "trywAm", ",", 
          "trywam", ",", "try\[Alpha]f", ",", "try\[Alpha]m", ",", "tryr"}], 
         "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", "trypm"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"time", "=", "1"}], ",", 
   RowBox[{"time", "\[LessEqual]", "endtime"}], ",", 
   RowBox[{"time", "++"}], ",", 
   RowBox[{
    RowBox[{"run", "[", "time", "]"}], "=", 
    RowBox[{"generation", "[", 
     RowBox[{"param", ",", 
      RowBox[{"run", "[", 
       RowBox[{"time", "-", "1"}], "]"}]}], "]"}]}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MODtab1Black", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Round", "[", 
        RowBox[{"Exp", "[", "exptime", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"generation", "[", 
         RowBox[{"param", ",", 
          RowBox[{"run", "[", 
           RowBox[{"Round", "[", 
            RowBox[{"Exp", "[", "exptime", "]"}], "]"}], "]"}]}], "]"}], ".", 
        "modvec"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"exptime", ",", 
       RowBox[{"Log", "[", "startplot", "]"}], ",", 
       RowBox[{"Log", "[", "endtime", "]"}], ",", "0.1"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MOD1Black", "=", 
  RowBox[{"ListLogLinearPlot", "[", 
   RowBox[{"MODtab1Black", ",", 
    RowBox[{"Joined", "\[Rule]", "True"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"startplot", ",", "endtime"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0.5"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", "Black", "}"}]}], ",", "loglinearplotINVoptions"}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{
  3.7103553138593187`*^9, 3.710355582526401*^9, {3.710436642447912*^9, 
   3.710436660679762*^9}, {3.7104368649019117`*^9, 3.710436866972167*^9}, {
   3.710436991453842*^9, 3.710437000980938*^9}, {3.710437094495735*^9, 
   3.7104371114594297`*^9}, {3.7104371545678377`*^9, 3.710437175456407*^9}, {
   3.7104372065281487`*^9, 3.710437257466428*^9}, {3.710437307130103*^9, 
   3.710437402451663*^9}, {3.710438092346622*^9, 3.710438102554027*^9}, {
   3.710438266562661*^9, 3.710438272730937*^9}, {3.7104383114607162`*^9, 
   3.7104383281933613`*^9}, 3.710438415693651*^9, 3.710438453437209*^9, {
   3.710438768293997*^9, 3.710438808524135*^9}, {3.710438892011983*^9, 
   3.710438900508027*^9}, {3.710438948234955*^9, 3.710438980456765*^9}, 
   3.710440484931306*^9, 3.710440614636401*^9, 3.710443798850658*^9, 
   3.710445082930764*^9, 3.710445135789113*^9, 3.710450364677979*^9, {
   3.711692793496278*^9, 3.711692793702231*^9}, {3.711692839131193*^9, 
   3.711692839476317*^9}, {3.711695163270232*^9, 3.711695163791216*^9}, {
   3.7116955340766087`*^9, 3.711695540479776*^9}, {3.7117028584725018`*^9, 
   3.711702872006024*^9}, 3.711702943154717*^9, 3.711709668616238*^9, {
   3.711714148192808*^9, 3.711714148377842*^9}, {3.7117798552832527`*^9, 
   3.711779859325342*^9}, {3.711779893203086*^9, 3.7117799641182737`*^9}, {
   3.7117823451456413`*^9, 
   3.711782346971265*^9}},ExpressionUUID->"4980b918-a9e9-4840-86b4-\
5858ea3439ef"],

Cell[BoxData[
 GraphicsBox[{{{}, {{{}, {}, {
       {GrayLevel[0], PointSize[0.011000000000000001`], AbsoluteThickness[
        1.6], 
        StyleBox[LineBox[CompressedData["
1:eJxl0n001XccB/DLxb23S3m8rme1MY+pbEPU56NSnR5N0jGZM6MTN1mIzvUs
ObTykFbhSHkocSkbo7jzMOYxSfm5Z6OvZh6GyJiH68Z+O9v+6o/P+ZzXX+/z
eZ/PRt9gN395BoOxl55/tu3VN4vODcugZOViazpQBvLGFlJuqQzkbM5mHBdW
vOcTn28rD9m0BvtdXwZYnq18z6GljvBdPgPX0lkFHb3VwGWWCScy5fBia3cx
72Et8I5X1VYI5NF01/mbJswGOGQXWz28mYkBY0oaroImiL79oo73mok2L0a2
spVb4H5tP69DXxF3b61RvNLXAUb7DzvwShRR/2pl0ccjT0EYK20UlCihnNvR
fg/FXkjKEGyPNGJhF+VrXR77AjKGQyN3LbJQUlU03W5LQVvLjoiwJ2z0uW/d
shwugX/v52BUw4dZ7rJfID2RWUO812FkzIWyUxYDkENxl+99wsWE5Ngp+68G
4XlN37xkiYua9QuBM+avQNy6fdpsWBkDU10D89pfwRFRqot/lQpW/jncXGpC
oLC9IJwbth4b9vityk4SeKgnqu49uAETN7SEs5MIzK0+8UxgqWJuc6HVYi4B
lTPqk8nnVPGyyOv6zXIC1mpms9nPVdGyJl1PWk3AoFRGnbRTw0d+2Ut/iQn4
596Tj7yjhnXUqsqhRgI/njRpNOSqYw9L6Ec1kf/6Vsc7z+yTPX8icLewTSuN
UseJStcNabT/uBHiXAYamOn2NoXQjtDKYaTd00DX8+utc5oJZB+Jlw6v08Rr
v0aEjbQQaLDc9UYUoomzebuzhlsJ9IjEKRcpTfS4OOcQ0EEgWG4lqcRRCx04
J9SinxLolI5fTirSwoGPMp1MnxOoN8rh53J4GL8tiD36kkB8bo+Pztc8XNap
ODomIZCxT3uzsJ+HAe4rP6wNEPAbCa1McdTGKYp9bXKIwNsF/5ihu9rY5rF1
S/fvBBLXBtyUOHyc21KASeMEvNOssl4F85Hp2WG2MknAJ6gi71YfHzvV7qw3
mCEQ/eBbO68dOpjyWjgomyXQJf7iN4VCHYysmq6LnSfwPav3ZylbF5mLEmnh
AgFzWRQsB+tilFCymLBEYGZf/NAxShePjjDiVKUE3JObusKc9NAtI2fMY4XO
80HvGwV6aDrRGviljO6D3x6Tz9HHTv3TXrbvCFxis2VlwfooJ14NkNDm+j47
4E3p475Q5dOeqwRcym5Z5DsZ4IyvaGcdbcH80oP5fAPc+5g3xFojELfAt0nj
GCKD+81dZ9pcc6O2d8GGSN0qvRBEu/qRcMqdMsQD4k3dqbTP3Sg+teRkhMwi
/sFi2pleok8/KzDCVP/xJ7W0ZS+rnToVjFGOE1XUQXvnmcP1GvbGeF0ksaZo
78kevGAhMMagY6PqhPZhcWdl0G1jLHRxYo6u/f+fxuhxRUswSfvx3g+sOxU2
YkZc/P0Z2n8Dd3IiqQ==
          "]],
         FontFamily->"Helvetica",
         FontSize->12]}}}}, {}, {}, {{}, {}}, {{}, {}}}},
  AspectRatio->NCache[2^Rational[-1, 2], 0.7071067811865475],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{1.643976688829011, 0},
  BaseStyle->{FontFamily -> "Helvetica", FontSize -> 12},
  DisplayFunction->Identity,
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{
     FormBox[
      StyleBox["\"neo-W frequency\"", FontSize -> 8, StripOnInput -> False], 
      TraditionalForm], 
     FormBox["\"\"", TraditionalForm]}, {
     FormBox[
      StyleBox["\"Generation\"", FontSize -> 8, StripOnInput -> False], 
      TraditionalForm], 
     FormBox["\"\"", TraditionalForm]}},
  FrameStyle->Directive[
    GrayLevel[0], 
    Thickness[0.006]],
  FrameTicks->{{{{0., 
       FormBox["0.`", TraditionalForm], {0, 0.01}}, {0.25, 
       FormBox["0.25`", TraditionalForm], {0, 0.01}}, {0.5, 
       FormBox["0.5`", TraditionalForm], {0, 0.01}}}, {{0., 
       FormBox["0.`", TraditionalForm], {0, 0.01}}, {0.25, 
       FormBox["0.25`", TraditionalForm], {0, 0.01}}, {0.5, 
       FormBox["0.5`", TraditionalForm], {0, 0.01}}}}, {{{
       NCache[
        Log[5], 1.6094379124341003`], 
       FormBox["5", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[10], 2.302585092994046], 
       FormBox["10", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[50], 3.912023005428146], 
       FormBox["50", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[100], 4.605170185988092], 
       FormBox["100", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[1000], 6.907755278982137], 
       FormBox["1000", TraditionalForm], {0, 0.01}}}, {{
       NCache[
        Log[5], 1.6094379124341003`], 
       FormBox["5", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[10], 2.302585092994046], 
       FormBox["10", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[50], 3.912023005428146], 
       FormBox["50", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[100], 4.605170185988092], 
       FormBox["100", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[1000], 6.907755278982137], 
       FormBox["1000", TraditionalForm], {0, 0.01}}}}},
  FrameTicksStyle->{{
     Directive[
      GrayLevel[0], 
      Thickness[0.006], FontColor -> GrayLevel[0]], 
     Directive[
      GrayLevel[0], 
      Thickness[0.006]]}, {
     Directive[
      GrayLevel[0], 
      Thickness[0.006]], 
     Directive[
      GrayLevel[0], 
      Thickness[0.006]]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->NCache[{360, 180 2^Rational[1, 2]}, {360, 254.55844122715712`}],
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Exp[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Exp[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->NCache[{{
      Log[5], 
      Log[5000]}, {0, 0.5}}, {{1.6094379124341003`, 8.517193191416238}, {
     0, 0.5}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{
    Charting`ScaledTicks[{Log, Exp}], Automatic}]], "Output",
 CellChangeTimes->{
  3.711695863559532*^9, 3.711702870075303*^9, 3.7117029010647287`*^9, 
   3.711703077514059*^9, 3.71170393419132*^9, {3.711709667157542*^9, 
   3.711709669147328*^9}, 3.7117099306962013`*^9, 3.711712418950643*^9, 
   3.7117124787569523`*^9, {3.7117141326310263`*^9, 3.711714156762856*^9}, 
   3.7117145288764687`*^9, 3.711778429091012*^9, 3.711778514543406*^9, {
   3.711779890182041*^9, 3.7117801088196774`*^9}, 3.7117801573203707`*^9, {
   3.711782350800932*^9, 3.7117823796855392`*^9}, 3.71178283639592*^9, 
   3.7117828736159*^9, {3.71178568740448*^9, 3.711785732771495*^9}, 
   3.711790637107173*^9, 
   3.713075795356094*^9},ExpressionUUID->"42374322-5126-4395-b4db-\
8982669b3d98"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"tryR", "=", "0.02"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"param", "=", 
   RowBox[{"{", 
    RowBox[{
    "tryFAA", ",", "tryFAa", ",", "tryFaa", ",", "tryMAA", ",", "tryMAa", ",",
      "tryMaa", ",", "trywAf", ",", "trywaf", ",", "trywAm", ",", "trywam", 
     ",", "try\[Alpha]f", ",", "try\[Alpha]m", ",", "tryr", ",", "tryR", ",", 
     
     RowBox[{
      RowBox[{"tryr", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "tryR"}], ")"}]}], "+", 
      RowBox[{"tryR", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "tryr"}], ")"}]}]}], ",", "tryk"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"run", "[", "0", "]"}], "=", 
   RowBox[{"generation", "[", 
    RowBox[{"param", ",", 
     RowBox[{"startgen", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"sieve", "[", 
         RowBox[{
         "tryFAA", ",", "tryFAa", ",", "tryFaa", ",", "tryMAA", ",", "tryMAa",
           ",", "tryMaa", ",", "trywAf", ",", "trywaf", ",", "trywAm", ",", 
          "trywam", ",", "try\[Alpha]f", ",", "try\[Alpha]m", ",", "tryr"}], 
         "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", "trypm"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"time", "=", "1"}], ",", 
   RowBox[{"time", "\[LessEqual]", "endtime"}], ",", 
   RowBox[{"time", "++"}], ",", 
   RowBox[{
    RowBox[{"run", "[", "time", "]"}], "=", 
    RowBox[{"generation", "[", 
     RowBox[{"param", ",", 
      RowBox[{"run", "[", 
       RowBox[{"time", "-", "1"}], "]"}]}], "]"}]}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MODtab1Red", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Round", "[", 
        RowBox[{"Exp", "[", "exptime", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"generation", "[", 
         RowBox[{"param", ",", 
          RowBox[{"run", "[", 
           RowBox[{"Round", "[", 
            RowBox[{"Exp", "[", "exptime", "]"}], "]"}], "]"}]}], "]"}], ".", 
        "modvec"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"exptime", ",", 
       RowBox[{"Log", "[", "startplot", "]"}], ",", 
       RowBox[{"Log", "[", "endtime", "]"}], ",", "0.1"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MOD1Red", "=", 
  RowBox[{"ListLogLinearPlot", "[", 
   RowBox[{"MODtab1Red", ",", 
    RowBox[{"Joined", "\[Rule]", "True"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"startplot", ",", "endtime"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0.5"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", "Red", "}"}]}], ",", "loglinearplotINVoptions"}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.711695517780641*^9, 3.711695522507338*^9}, {
   3.711695561965704*^9, 3.7116955719180717`*^9}, {3.711702876287524*^9, 
   3.71170287874617*^9}, {3.711702910308921*^9, 3.711702933253878*^9}, {
   3.711703067328353*^9, 3.711703067432561*^9}, {3.711703474641178*^9, 
   3.711703499003673*^9}, {3.711714536507679*^9, 3.711714565949432*^9}, {
   3.711780178324356*^9, 3.7117801904794083`*^9}, 
   3.711780231470047*^9},ExpressionUUID->"08d2650d-c372-4249-afa6-\
e0a4f712666c"],

Cell[BoxData[
 GraphicsBox[{{{}, {{{}, {}, {
       {RGBColor[1, 0, 0], PointSize[0.011000000000000001`], 
        AbsoluteThickness[1.6], 
        StyleBox[LineBox[CompressedData["
1:eJxl0mlQ1HUYB3BuFjaUc1nOhUwFFKiMCIGeR0ahUsgDh5HlUHC7EJcFAme5
IlwSJq4w4ogbiWtNLiEIEFEDQZFrQTl+cjgiRyDicq3Qvylf+eKZZz4vnnnm
+c5j7MM9zpGRkpJypOrfvi9hfuXAjTVQ9ReayccJQcbIbJ1eLgG5HqZ5i3Xl
G3Zzf/9q4NtbEFEk0N6hVPOGg8ptoapACkcCq7vUsQ7oskL+TKo0ZuYOuY2O
NwDjZG1jpZ8MLvHZ3JrFZjhiHVU3aSGL+Xx2omttK0Tk9P3JGJfFL5tvzfm+
cwt+axxk3NWXR13TyM3l8A5gfeJswyiTx2aniMSlY13Aj1pv9StTwCve3o2a
Cj0Qm+K3P4yliCV2De3D3/RCymRQmMOKIlbtXrwslBmA9tv2ocENNHzUJh5c
sB+E/+5Xwm2JHqH1fQ8h+aJsPfFURtq8k/gHxjBkiehrxVZ0vOby6a4E3gj0
1A8sD63Scebe06uxbqPQ9Nf+v00m38JT1oa8UuYYuFQkHuLUqmCynjufnzAG
RR2FIfTgbfhV8JCV4uAY/K5XUdd7eDsG3nnSnaxK4MVmw6nvFVWxz4RXd/4D
Airn1Gcv8VQxwNJeUv05AXM1k+eZParY63D54MkzBAzKJSIPazV07Envt+QS
4GQXy4TlqWHMveaXe/gEmj12thrS1TEbrp+GGPJ/3uqobJ7Q+G08gfyidq0k
kTq63VY3nkgh8Cwt8IAQNHDy+bsqL9IJhGplSSUVa2BeicZUdy6BTJfo9Ull
TRRXV4GgmMCNPQ7zFYGaeNMilBEuJPCgoikuRqSJvwboFVjUEOBKb8SW2Wph
rk+8YLaBQOf6dHzsFS1MaPv6l+FWAi2sLGa2EgOXbZzloJ1AdPYDb50ABrbv
yhD8eJ9AipO2BX+QgaZNVuL0fgJnnwTVxNlqo2xg7JTOIwKLYk7k43xt1N39
U+YJQuDi1shxBSUmhqzxTHZOEfBM2psxxmWi3uz9If40AW//ytz0ASZeZysE
HJkjEFH6szXbXgdZzZxt9QsEupq8JuSKdHCD5qJRvESgWrH3zjpNF8sUGX4G
LwmYSsJhjauLpxkK5+1XCCw4RT8+IdJF09WqnK1VAq6XbnYF2+khcx/dmrdO
7fNGz7RCPRQfbnHJ26DyYHZEFijp47KITU+REBDQaBIhVx/zaLSoo68I0H26
P/MU6aOvlbvdNOVDwnSzAjsDFAh8z3htEvBbXi1dLjBAplqlRwPl78RMyyQl
QywzzJqU3qLmTVntr7iGGELrfs+Gct01/pyryBAniqMUzlLmpZV8sWrHQvPt
yV4Cyqnsig+PFbLwGeeufS5lSX+dXaecEbr6SvtXU/74nHOLxkdGKGWW6dhG
+WDm6AUzPyOcyRgTdlN2buqs8c8xQs6F1PCHW6//0wgNEvfajFP+w3GHeaec
MR5tQfZTyv8AWO8VXA==
          "]],
         FontFamily->"Helvetica",
         FontSize->12]}}}}, {}, {}, {{}, {}}, {{}, {}}}},
  AspectRatio->NCache[2^Rational[-1, 2], 0.7071067811865475],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{1.643976688829011, 0},
  BaseStyle->{FontFamily -> "Helvetica", FontSize -> 12},
  DisplayFunction->Identity,
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{
     FormBox[
      StyleBox["\"neo-W frequency\"", FontSize -> 8, StripOnInput -> False], 
      TraditionalForm], 
     FormBox["\"\"", TraditionalForm]}, {
     FormBox[
      StyleBox["\"Generation\"", FontSize -> 8, StripOnInput -> False], 
      TraditionalForm], 
     FormBox["\"\"", TraditionalForm]}},
  FrameStyle->Directive[
    GrayLevel[0], 
    Thickness[0.006]],
  FrameTicks->{{{{0., 
       FormBox["0.`", TraditionalForm], {0, 0.01}}, {0.25, 
       FormBox["0.25`", TraditionalForm], {0, 0.01}}, {0.5, 
       FormBox["0.5`", TraditionalForm], {0, 0.01}}}, {{0., 
       FormBox["0.`", TraditionalForm], {0, 0.01}}, {0.25, 
       FormBox["0.25`", TraditionalForm], {0, 0.01}}, {0.5, 
       FormBox["0.5`", TraditionalForm], {0, 0.01}}}}, {{{
       NCache[
        Log[5], 1.6094379124341003`], 
       FormBox["5", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[10], 2.302585092994046], 
       FormBox["10", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[50], 3.912023005428146], 
       FormBox["50", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[100], 4.605170185988092], 
       FormBox["100", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[1000], 6.907755278982137], 
       FormBox["1000", TraditionalForm], {0, 0.01}}}, {{
       NCache[
        Log[5], 1.6094379124341003`], 
       FormBox["5", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[10], 2.302585092994046], 
       FormBox["10", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[50], 3.912023005428146], 
       FormBox["50", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[100], 4.605170185988092], 
       FormBox["100", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[1000], 6.907755278982137], 
       FormBox["1000", TraditionalForm], {0, 0.01}}}}},
  FrameTicksStyle->{{
     Directive[
      GrayLevel[0], 
      Thickness[0.006], FontColor -> GrayLevel[0]], 
     Directive[
      GrayLevel[0], 
      Thickness[0.006]]}, {
     Directive[
      GrayLevel[0], 
      Thickness[0.006]], 
     Directive[
      GrayLevel[0], 
      Thickness[0.006]]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->NCache[{360, 180 2^Rational[1, 2]}, {360, 254.55844122715712`}],
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Exp[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Exp[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->NCache[{{
      Log[5], 
      Log[5000]}, {0, 0.5}}, {{1.6094379124341003`, 8.517193191416238}, {
     0, 0.5}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{
    Charting`ScaledTicks[{Log, Exp}], Automatic}]], "Output",
 CellChangeTimes->{
  3.711695610302847*^9, 3.711702963389113*^9, 3.711703067883417*^9, {
   3.71170347975955*^9, 3.7117034995459833`*^9}, 3.711703934618721*^9, 
   3.711709680337553*^9, 3.711709930805848*^9, 3.711710242741914*^9, 
   3.7117124193333483`*^9, 3.711712479172882*^9, {3.711714132726665*^9, 
   3.7117141598393593`*^9}, {3.711714529267712*^9, 3.711714566647304*^9}, 
   3.71177843235149*^9, 3.711780190762754*^9, 3.71178023190409*^9, {
   3.7117823556231327`*^9, 3.71178238161031*^9}, 3.711782836818779*^9, 
   3.711782874046118*^9, {3.711785687522204*^9, 3.7117857335816107`*^9}, 
   3.711790640251417*^9, 
   3.7130757987063828`*^9},ExpressionUUID->"907b044d-0fd5-489c-a6b3-\
98ce1faf64a1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"tryR", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"param", "=", 
   RowBox[{"{", 
    RowBox[{
    "tryFAA", ",", "tryFAa", ",", "tryFaa", ",", "tryMAA", ",", "tryMAa", ",",
      "tryMaa", ",", "trywAf", ",", "trywaf", ",", "trywAm", ",", "trywam", 
     ",", "try\[Alpha]f", ",", "try\[Alpha]m", ",", "tryr", ",", "tryR", ",", 
     
     RowBox[{
      RowBox[{"tryr", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "tryR"}], ")"}]}], "+", 
      RowBox[{"tryR", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "tryr"}], ")"}]}]}], ",", "tryk"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"run", "[", "0", "]"}], "=", 
   RowBox[{"generation", "[", 
    RowBox[{"param", ",", 
     RowBox[{"startgen", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"sieve", "[", 
         RowBox[{
         "tryFAA", ",", "tryFAa", ",", "tryFaa", ",", "tryMAA", ",", "tryMAa",
           ",", "tryMaa", ",", "trywAf", ",", "trywaf", ",", "trywAm", ",", 
          "trywam", ",", "try\[Alpha]f", ",", "try\[Alpha]m", ",", "tryr"}], 
         "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", "trypm"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"time", "=", "1"}], ",", 
   RowBox[{"time", "\[LessEqual]", "endtime"}], ",", 
   RowBox[{"time", "++"}], ",", 
   RowBox[{
    RowBox[{"run", "[", "time", "]"}], "=", 
    RowBox[{"generation", "[", 
     RowBox[{"param", ",", 
      RowBox[{"run", "[", 
       RowBox[{"time", "-", "1"}], "]"}]}], "]"}]}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MODtab1Blue", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Round", "[", 
        RowBox[{"Exp", "[", "exptime", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"generation", "[", 
         RowBox[{"param", ",", 
          RowBox[{"run", "[", 
           RowBox[{"Round", "[", 
            RowBox[{"Exp", "[", "exptime", "]"}], "]"}], "]"}]}], "]"}], ".", 
        "modvec"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"exptime", ",", 
       RowBox[{"Log", "[", "startplot", "]"}], ",", 
       RowBox[{"Log", "[", "endtime", "]"}], ",", "0.1"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MOD1Blue", "=", 
  RowBox[{"ListLogLinearPlot", "[", 
   RowBox[{"MODtab1Blue", ",", 
    RowBox[{"Joined", "\[Rule]", "True"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"startplot", ",", "endtime"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0.5"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", "Blue", "}"}]}], ",", "loglinearplotINVoptions"}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.711695517780641*^9, 3.711695522507338*^9}, {
   3.7116955538491297`*^9, 3.711695588097739*^9}, {3.7117028843813143`*^9, 
   3.71170288446397*^9}, {3.711702976071355*^9, 3.711702993624299*^9}, {
   3.71170306403876*^9, 3.711703064150305*^9}, 3.711709951730682*^9, {
   3.711780200355617*^9, 
   3.711780228572802*^9}},ExpressionUUID->"81a99ace-fbbf-46f8-81b7-\
be9a5551e9aa"],

Cell[BoxData[
 GraphicsBox[{{{}, {{{}, {}, {
       {RGBColor[0, 0, 1], PointSize[0.011000000000000001`], 
        AbsoluteThickness[1.6], 
        StyleBox[LineBox[CompressedData["
1:eJxl0llQ03cQB3AOhcSoBQIhQCCxDtUgyKhtAUF2oRqpBUWKRctlRZDKEa4p
NIgRi1TpKFAtgyCoXK0QqlxChRSw3CC3wXLkx6EOoFSKlDNC/x375sPOzudh
Z2e/s5tOCF18VZSUlARU/dd3XZ6at6tZhPYi247mYxJQ4ZksMQoU8NRTZFvu
eO8du32589ew91ch+ms37fN3i99xeIE1FGcpYa7VueNlR8uAoVoomryqjA71
niXiAxXAOlJWWRSggutqqgN9LlSCo4W4fGy7Kh52Elg+Ua+GmMyeKtaIKnb7
jskVfrXwc2Ufq4WzFjfWTZZFxdUD18HJipW/Fk97M+dKShtBJF6qDchXw6RD
OismFm0QnxywO5qrjuMvpc5iUTskj4VH28+r4+qWP1I/DemCpvo9kREPaJhp
2hCr/m0PvL2fjqLJ8f1N2jJIilOtIJ7rMNj/VIyduA/SZYzFvI8YmOT8PMXR
9E/oqng8+2SBgV3FllU0/36QNu7+a+vYehyM5AlqLg/AQcmVfb5lGzB0urX0
lssg5DRnf8OI2IgfpCaoRfcPwl0DSXn3Z+8h69zCstehIXi98uDYeXUNzN2n
eVpwawg2BGq9uBiqgVEzUz76z4bATHPr32ldGnhjSwzfUVcOhgUKmYeFJtoU
V6mUfyIH34w8lehbmhiawHbZESCH3z2Ma40YWjjAr2fOXpH/n7cWNl4TxNMK
5XA7p0knUaaFp7dJH7e3yWEiJcyuEJgoNBu6zH0hh0iddKXEPCaGqDSNGNII
pB2MXRpbp42ckUp+4WYCNdvspyRh2ug20SnkA4FOifTSdzJtfPhDjzEcJSBU
Xo7Pt9ZBvbwkpwkhgdal8YT4XB3UUq3zCoonUM1NZ2fQWcgxF3Z7XycQm9Hp
rRfCwpRefuCRfALJ+3W3i/pYuH5OarlSQeDks/DSS9a6aJry4c7VOgLTc75n
h2/rYtIXwUTQQSBuddBFjc7GBP8roQN9BDwTTa/LhWycdp0yfy4n4B1UdDP1
MRuPnhp2u/mUQMydnyzc9+ghS8tq2n+CQJvUa3RNjh7OxMQ/OjBFoES9u2GJ
po8Pg2rNhNME+IozsCjUx/6w0h7mawKv9scOfy7TR5EHa872HwKuFx+2RdgY
IPtQdTd9ntrnjZ4p2QaYzBR6JSxQebCbz2bROTjZW9DTsEjgAo2mKBRyUON+
y/32JQKMEx0HPGUcHF1McJAsE9hXmGqSZWOItGu7xCcVBAJmF+7MZhlixI8z
YSuUz82xzRPpRmhs7+UufkPN87lNb4RGyBwxbpqkXH5P9NJVZoRFomKPvSsE
QlN+8Vuw4aKaz4xjIuWr7pKPD2dzMbPE+vojyorecpvWNTxse5V2RnmVgG2g
UzXTkof1sa69ppT3pg1FmQTwcIefWoMzZSdpa2lQJg+PO7Q0BlN++588HA1h
3P2e8m+CzWatazbhuPLxr25Q/hez2xt7
          "]],
         FontFamily->"Helvetica",
         FontSize->12]}}}}, {}, {}, {{}, {}}, {{}, {}}}},
  AspectRatio->NCache[2^Rational[-1, 2], 0.7071067811865475],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{1.643976688829011, 0},
  BaseStyle->{FontFamily -> "Helvetica", FontSize -> 12},
  DisplayFunction->Identity,
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{
     FormBox[
      StyleBox["\"neo-W frequency\"", FontSize -> 8, StripOnInput -> False], 
      TraditionalForm], 
     FormBox["\"\"", TraditionalForm]}, {
     FormBox[
      StyleBox["\"Generation\"", FontSize -> 8, StripOnInput -> False], 
      TraditionalForm], 
     FormBox["\"\"", TraditionalForm]}},
  FrameStyle->Directive[
    GrayLevel[0], 
    Thickness[0.006]],
  FrameTicks->{{{{0., 
       FormBox["0.`", TraditionalForm], {0, 0.01}}, {0.25, 
       FormBox["0.25`", TraditionalForm], {0, 0.01}}, {0.5, 
       FormBox["0.5`", TraditionalForm], {0, 0.01}}}, {{0., 
       FormBox["0.`", TraditionalForm], {0, 0.01}}, {0.25, 
       FormBox["0.25`", TraditionalForm], {0, 0.01}}, {0.5, 
       FormBox["0.5`", TraditionalForm], {0, 0.01}}}}, {{{
       NCache[
        Log[5], 1.6094379124341003`], 
       FormBox["5", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[10], 2.302585092994046], 
       FormBox["10", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[50], 3.912023005428146], 
       FormBox["50", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[100], 4.605170185988092], 
       FormBox["100", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[1000], 6.907755278982137], 
       FormBox["1000", TraditionalForm], {0, 0.01}}}, {{
       NCache[
        Log[5], 1.6094379124341003`], 
       FormBox["5", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[10], 2.302585092994046], 
       FormBox["10", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[50], 3.912023005428146], 
       FormBox["50", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[100], 4.605170185988092], 
       FormBox["100", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[1000], 6.907755278982137], 
       FormBox["1000", TraditionalForm], {0, 0.01}}}}},
  FrameTicksStyle->{{
     Directive[
      GrayLevel[0], 
      Thickness[0.006], FontColor -> GrayLevel[0]], 
     Directive[
      GrayLevel[0], 
      Thickness[0.006]]}, {
     Directive[
      GrayLevel[0], 
      Thickness[0.006]], 
     Directive[
      GrayLevel[0], 
      Thickness[0.006]]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->NCache[{360, 180 2^Rational[1, 2]}, {360, 254.55844122715712`}],
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Exp[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Exp[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->NCache[{{
      Log[5], 
      Log[5000]}, {0, 0.5}}, {{1.6094379124341003`, 8.517193191416238}, {
     0, 0.5}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{
    Charting`ScaledTicks[{Log, Exp}], Automatic}]], "Output",
 CellChangeTimes->{
  3.711695616955174*^9, 3.7117030020436897`*^9, 3.711703064585724*^9, 
   3.711703934869472*^9, 3.7117096839069843`*^9, {3.711709930966123*^9, 
   3.711709955576418*^9}, 3.711712419742366*^9, 3.711712479576453*^9, 
   3.711714132817013*^9, 3.711714162918345*^9, 3.7117145293823433`*^9, 
   3.711714568176523*^9, 3.711778435483437*^9, {3.7117802136251583`*^9, 
   3.711780232666605*^9}, {3.711782357321993*^9, 3.71178238366398*^9}, 
   3.711782837253862*^9, 3.711782874332056*^9, 3.7117856876093473`*^9, 
   3.7117857349012327`*^9, 3.7117906434954557`*^9, 
   3.7130758020658407`*^9},ExpressionUUID->"1fd384b2-7e8b-4b89-b979-\
3ca3cc1e224a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"tryR", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"param", "=", 
   RowBox[{"{", 
    RowBox[{
    "tryFAA", ",", "tryFAa", ",", "tryFaa", ",", "tryMAA", ",", "tryMAa", ",",
      "tryMaa", ",", "trywAf", ",", "trywaf", ",", "trywAm", ",", "trywam", 
     ",", "try\[Alpha]f", ",", "try\[Alpha]m", ",", "tryr", ",", "tryR", ",", 
     
     RowBox[{
      RowBox[{"tryr", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "tryR"}], ")"}]}], "+", 
      RowBox[{"tryR", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "tryr"}], ")"}]}]}], ",", "tryk"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"run", "[", "0", "]"}], "=", 
   RowBox[{"generation", "[", 
    RowBox[{"param", ",", 
     RowBox[{"startgen", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"sieve", "[", 
         RowBox[{
         "tryFAA", ",", "tryFAa", ",", "tryFaa", ",", "tryMAA", ",", "tryMAa",
           ",", "tryMaa", ",", "trywAf", ",", "trywaf", ",", "trywAm", ",", 
          "trywam", ",", "try\[Alpha]f", ",", "try\[Alpha]m", ",", "tryr"}], 
         "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", "trypm"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"time", "=", "1"}], ",", 
   RowBox[{"time", "\[LessEqual]", "endtime"}], ",", 
   RowBox[{"time", "++"}], ",", 
   RowBox[{
    RowBox[{"run", "[", "time", "]"}], "=", 
    RowBox[{"generation", "[", 
     RowBox[{"param", ",", 
      RowBox[{"run", "[", 
       RowBox[{"time", "-", "1"}], "]"}]}], "]"}]}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MODtab1Green", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Round", "[", 
        RowBox[{"Exp", "[", "exptime", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"generation", "[", 
         RowBox[{"param", ",", 
          RowBox[{"run", "[", 
           RowBox[{"Round", "[", 
            RowBox[{"Exp", "[", "exptime", "]"}], "]"}], "]"}]}], "]"}], ".", 
        "modvec"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"exptime", ",", 
       RowBox[{"Log", "[", "startplot", "]"}], ",", 
       RowBox[{"Log", "[", "endtime", "]"}], ",", "0.1"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MOD1Green", "=", 
  RowBox[{"ListLogLinearPlot", "[", 
   RowBox[{"MODtab1Green", ",", 
    RowBox[{"Joined", "\[Rule]", "True"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"startplot", ",", "endtime"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0.5"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", "Green", "}"}]}], ",", "loglinearplotINVoptions"}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.711695591717916*^9, 3.711695602234329*^9}, {
  3.711703039655755*^9, 3.711703059891102*^9}, {3.711780241731517*^9, 
  3.711780256675057*^9}},ExpressionUUID->"1cc3fb94-0d6b-48f0-80c1-\
41ab10e997c7"],

Cell[BoxData[
 GraphicsBox[{{{}, {{{}, {}, {
       {RGBColor[0, 1, 0], PointSize[0.011000000000000001`], 
        AbsoluteThickness[1.6], 
        StyleBox[LineBox[CompressedData["
1:eJxl0llQE2YQB/AYRAhRS0BikCNBYQap0KlUsIDsQhUQgyetRU0ZUTq2AcNV
QE5pAYUWU1QwiGA55JBQDLdgKmi1CIicUZDkExmsIKcwXIbSdOybDzs7v4ed
nf3PmvgIDvpSKRSKi6r+69YpY3NODQtAlzJZU57FQOVYLNJLlODswjD9IUT8
gQ8f2fp70MZlUNhPn7g2VPaBg0vsoTyXgrHTPZfcZBKgq5VGjFxagXUpphTu
qwpgfllVL+FTcYuBX9TIpmrg2sbWDFqpYVugcF+CsBais7vuMAfU0OvId+1i
83oorH/KbDZUx+pc59bLpxuA7ebxOfOmOv6sPCc6vNAIEbGLjfybq/DWjY1T
s44PIDGVbxfJ1sCCbfLI8emHkDoYHOk8p4Eljbu7uwOaoenBjrCQOk2Unvrb
lzH+GN7fT0NDoVfYudAO+DVerZbwtLA5jt8nVHZCpoy+ULCNjjZKXk71cjd0
1PbMPJunY4uoN5hbIgPpX3bj5oOrUc5KcTb7/hnsFV/Y5Vu1Bj21bsW8rOmF
/Ed5ofSQtehu+WeuaXkflBmIazr3fITly/ydqaLnMP1PndePGtr4uKjJQoD9
sMZP5835QG18bbn/8ZmufrBkmE9d7dDGiben/A+AHIxKlLJjtgxkDo1myK7J
wTergBr5GwMZFgo96qgc/jhm1mhM10Hwx95QK8X/eevggLVGYNRxBeTkN+kJ
ZTqYNVJcse+iAobTg5xKQRfDn9NORt5RQJheJkVYoItN3HNxKQMKuLo3bnFQ
ax1eueF4P4NKoOFj5zFx0Doc/qUrwWAjgXaxNOkn2TpMFoVJGI4EBCveJd60
18Mot0qx9tcEWhZfJyfe0MPorgttBQEE7rIzWVk0Jq7lmiUdSiAQl9XurR/A
RK+Lfjz5FQKpruutIp4yse/yZNR4IYGTQ8GVSfbrcawvdD+nisDkrG/Mi5z1
aKe+vTa0gUD8cv/BVTQWErO+rfOPCPCEWzIUAhY2FyniOzsIePtLrot6WFgo
5A1+8YxAdHGa7dEd+ijrSBq6LSfQKv3m5cp8fSyTLuTbvyRQodH5cFFzA3KJ
GWN2iMBmZRQsCDagsY9RmtUwgQnXuBeHZBvQYY/y/us3BDzP32sNcTBAhbaN
NYyr9nkjLz3PAE+8aGzePanKg/UoJpdmiK+GNSmr3xJI0NRUlgoMUUdv7/X0
aQJ0nyfuPJkhpoifHJ+ZIbCrVGSR62CEr5KpZ81nCfBn5otnco3wntapz+zm
CJydZX0ipBnjqMa1OKt51fxmdtOSwBjPn8mgaS4QqLkVMeopM8YyrUzrZpUD
04u+nXdgI7XB3TN8kcClo2KbA3lstKgykei+I6DsrnFoWcnB0+LJ0myVHf08
7upu52Bb9lKYgZLAzqvycAs+ByWTMY3JKntIWyr9szno9OlXknGV3/8nB9PG
WBOuSwRuu2yybFlpgvbd8XeuqPwvTXohmA==
          "]],
         FontFamily->"Helvetica",
         FontSize->12]}}}}, {}, {}, {{}, {}}, {{}, {}}}},
  AspectRatio->NCache[2^Rational[-1, 2], 0.7071067811865475],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{1.643976688829011, 0},
  BaseStyle->{FontFamily -> "Helvetica", FontSize -> 12},
  DisplayFunction->Identity,
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{
     FormBox[
      StyleBox["\"neo-W frequency\"", FontSize -> 8, StripOnInput -> False], 
      TraditionalForm], 
     FormBox["\"\"", TraditionalForm]}, {
     FormBox[
      StyleBox["\"Generation\"", FontSize -> 8, StripOnInput -> False], 
      TraditionalForm], 
     FormBox["\"\"", TraditionalForm]}},
  FrameStyle->Directive[
    GrayLevel[0], 
    Thickness[0.006]],
  FrameTicks->{{{{0., 
       FormBox["0.`", TraditionalForm], {0, 0.01}}, {0.25, 
       FormBox["0.25`", TraditionalForm], {0, 0.01}}, {0.5, 
       FormBox["0.5`", TraditionalForm], {0, 0.01}}}, {{0., 
       FormBox["0.`", TraditionalForm], {0, 0.01}}, {0.25, 
       FormBox["0.25`", TraditionalForm], {0, 0.01}}, {0.5, 
       FormBox["0.5`", TraditionalForm], {0, 0.01}}}}, {{{
       NCache[
        Log[5], 1.6094379124341003`], 
       FormBox["5", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[10], 2.302585092994046], 
       FormBox["10", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[50], 3.912023005428146], 
       FormBox["50", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[100], 4.605170185988092], 
       FormBox["100", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[1000], 6.907755278982137], 
       FormBox["1000", TraditionalForm], {0, 0.01}}}, {{
       NCache[
        Log[5], 1.6094379124341003`], 
       FormBox["5", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[10], 2.302585092994046], 
       FormBox["10", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[50], 3.912023005428146], 
       FormBox["50", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[100], 4.605170185988092], 
       FormBox["100", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[1000], 6.907755278982137], 
       FormBox["1000", TraditionalForm], {0, 0.01}}}}},
  FrameTicksStyle->{{
     Directive[
      GrayLevel[0], 
      Thickness[0.006], FontColor -> GrayLevel[0]], 
     Directive[
      GrayLevel[0], 
      Thickness[0.006]]}, {
     Directive[
      GrayLevel[0], 
      Thickness[0.006]], 
     Directive[
      GrayLevel[0], 
      Thickness[0.006]]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->NCache[{360, 180 2^Rational[1, 2]}, {360, 254.55844122715712`}],
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Exp[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Exp[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->NCache[{{
      Log[5], 
      Log[5000]}, {0, 0.5}}, {{1.6094379124341003`, 8.517193191416238}, {
     0, 0.5}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{
    Charting`ScaledTicks[{Log, Exp}], Automatic}]], "Output",
 CellChangeTimes->{
  3.711695623991362*^9, {3.711703047777299*^9, 3.7117030609721527`*^9}, 
   3.7117039354124393`*^9, 3.711709692662835*^9, {3.711709931170182*^9, 
   3.711709955747266*^9}, 3.711712420335341*^9, 3.7117124800710077`*^9, 
   3.711714132910102*^9, 3.7117141660147448`*^9, 3.711714529472538*^9, 
   3.711714569319468*^9, 3.711778438585713*^9, {3.711780252045075*^9, 
   3.711780257156671*^9}, 3.711782385230115*^9, 3.711782837728078*^9, 
   3.7117828746040792`*^9, 3.711785687695221*^9, 3.711785735773938*^9, 
   3.711790646979216*^9, 
   3.713075805385165*^9},ExpressionUUID->"0dd3b74b-ac1d-4d9d-8964-\
949ba6262906"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"MOD1Black", ",", "MOD1Red", ",", "MOD1Blue", ",", "MOD1Green"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7117802694852753`*^9, 
  3.711780291119823*^9}},ExpressionUUID->"8226e54f-8ca3-4909-b885-\
67397434242d"],

Cell[BoxData[
 GraphicsBox[{{{{}, {{{}, {}, {
        {GrayLevel[0], PointSize[0.011000000000000001`], AbsoluteThickness[
         1.6], 
         StyleBox[LineBox[CompressedData["
1:eJxl0n001XccB/DLxb23S3m8rme1MY+pbEPU56NSnR5N0jGZM6MTN1mIzvUs
ObTykFbhSHkocSkbo7jzMOYxSfm5Z6OvZh6GyJiH68Z+O9v+6o/P+ZzXX+/z
eZ/PRt9gN395BoOxl55/tu3VN4vODcugZOViazpQBvLGFlJuqQzkbM5mHBdW
vOcTn28rD9m0BvtdXwZYnq18z6GljvBdPgPX0lkFHb3VwGWWCScy5fBia3cx
72Et8I5X1VYI5NF01/mbJswGOGQXWz28mYkBY0oaroImiL79oo73mok2L0a2
spVb4H5tP69DXxF3b61RvNLXAUb7DzvwShRR/2pl0ccjT0EYK20UlCihnNvR
fg/FXkjKEGyPNGJhF+VrXR77AjKGQyN3LbJQUlU03W5LQVvLjoiwJ2z0uW/d
shwugX/v52BUw4dZ7rJfID2RWUO812FkzIWyUxYDkENxl+99wsWE5Ngp+68G
4XlN37xkiYua9QuBM+avQNy6fdpsWBkDU10D89pfwRFRqot/lQpW/jncXGpC
oLC9IJwbth4b9vityk4SeKgnqu49uAETN7SEs5MIzK0+8UxgqWJuc6HVYi4B
lTPqk8nnVPGyyOv6zXIC1mpms9nPVdGyJl1PWk3AoFRGnbRTw0d+2Ut/iQn4
596Tj7yjhnXUqsqhRgI/njRpNOSqYw9L6Ec1kf/6Vsc7z+yTPX8icLewTSuN
UseJStcNabT/uBHiXAYamOn2NoXQjtDKYaTd00DX8+utc5oJZB+Jlw6v08Rr
v0aEjbQQaLDc9UYUoomzebuzhlsJ9IjEKRcpTfS4OOcQ0EEgWG4lqcRRCx04
J9SinxLolI5fTirSwoGPMp1MnxOoN8rh53J4GL8tiD36kkB8bo+Pztc8XNap
ODomIZCxT3uzsJ+HAe4rP6wNEPAbCa1McdTGKYp9bXKIwNsF/5ihu9rY5rF1
S/fvBBLXBtyUOHyc21KASeMEvNOssl4F85Hp2WG2MknAJ6gi71YfHzvV7qw3
mCEQ/eBbO68dOpjyWjgomyXQJf7iN4VCHYysmq6LnSfwPav3ZylbF5mLEmnh
AgFzWRQsB+tilFCymLBEYGZf/NAxShePjjDiVKUE3JObusKc9NAtI2fMY4XO
80HvGwV6aDrRGviljO6D3x6Tz9HHTv3TXrbvCFxis2VlwfooJ14NkNDm+j47
4E3p475Q5dOeqwRcym5Z5DsZ4IyvaGcdbcH80oP5fAPc+5g3xFojELfAt0nj
GCKD+81dZ9pcc6O2d8GGSN0qvRBEu/qRcMqdMsQD4k3dqbTP3Sg+teRkhMwi
/sFi2pleok8/KzDCVP/xJ7W0ZS+rnToVjFGOE1XUQXvnmcP1GvbGeF0ksaZo
78kevGAhMMagY6PqhPZhcWdl0G1jLHRxYo6u/f+fxuhxRUswSfvx3g+sOxU2
YkZc/P0Z2n8Dd3IiqQ==
           "]],
          FontFamily->"Helvetica",
          FontSize->12]}}}}, {}, {}, {{}, {}}, {{}, {}}}}, {{{}, {{{}, {}, {
        {RGBColor[1, 0, 0], PointSize[0.011000000000000001`], 
         AbsoluteThickness[1.6], 
         StyleBox[LineBox[CompressedData["
1:eJxl0mlQ1HUYB3BuFjaUc1nOhUwFFKiMCIGeR0ahUsgDh5HlUHC7EJcFAme5
IlwSJq4w4ogbiWtNLiEIEFEDQZFrQTl+cjgiRyDicq3Qvylf+eKZZz4vnnnm
+c5j7MM9zpGRkpJypOrfvi9hfuXAjTVQ9ReayccJQcbIbJ1eLgG5HqZ5i3Xl
G3Zzf/9q4NtbEFEk0N6hVPOGg8ptoapACkcCq7vUsQ7oskL+TKo0ZuYOuY2O
NwDjZG1jpZ8MLvHZ3JrFZjhiHVU3aSGL+Xx2omttK0Tk9P3JGJfFL5tvzfm+
cwt+axxk3NWXR13TyM3l8A5gfeJswyiTx2aniMSlY13Aj1pv9StTwCve3o2a
Cj0Qm+K3P4yliCV2De3D3/RCymRQmMOKIlbtXrwslBmA9tv2ocENNHzUJh5c
sB+E/+5Xwm2JHqH1fQ8h+aJsPfFURtq8k/gHxjBkiehrxVZ0vOby6a4E3gj0
1A8sD63Scebe06uxbqPQ9Nf+v00m38JT1oa8UuYYuFQkHuLUqmCynjufnzAG
RR2FIfTgbfhV8JCV4uAY/K5XUdd7eDsG3nnSnaxK4MVmw6nvFVWxz4RXd/4D
Airn1Gcv8VQxwNJeUv05AXM1k+eZParY63D54MkzBAzKJSIPazV07Envt+QS
4GQXy4TlqWHMveaXe/gEmj12thrS1TEbrp+GGPJ/3uqobJ7Q+G08gfyidq0k
kTq63VY3nkgh8Cwt8IAQNHDy+bsqL9IJhGplSSUVa2BeicZUdy6BTJfo9Ull
TRRXV4GgmMCNPQ7zFYGaeNMilBEuJPCgoikuRqSJvwboFVjUEOBKb8SW2Wph
rk+8YLaBQOf6dHzsFS1MaPv6l+FWAi2sLGa2EgOXbZzloJ1AdPYDb50ABrbv
yhD8eJ9AipO2BX+QgaZNVuL0fgJnnwTVxNlqo2xg7JTOIwKLYk7k43xt1N39
U+YJQuDi1shxBSUmhqzxTHZOEfBM2psxxmWi3uz9If40AW//ytz0ASZeZysE
HJkjEFH6szXbXgdZzZxt9QsEupq8JuSKdHCD5qJRvESgWrH3zjpNF8sUGX4G
LwmYSsJhjauLpxkK5+1XCCw4RT8+IdJF09WqnK1VAq6XbnYF2+khcx/dmrdO
7fNGz7RCPRQfbnHJ26DyYHZEFijp47KITU+REBDQaBIhVx/zaLSoo68I0H26
P/MU6aOvlbvdNOVDwnSzAjsDFAh8z3htEvBbXi1dLjBAplqlRwPl78RMyyQl
QywzzJqU3qLmTVntr7iGGELrfs+Gct01/pyryBAniqMUzlLmpZV8sWrHQvPt
yV4Cyqnsig+PFbLwGeeufS5lSX+dXaecEbr6SvtXU/74nHOLxkdGKGWW6dhG
+WDm6AUzPyOcyRgTdlN2buqs8c8xQs6F1PCHW6//0wgNEvfajFP+w3GHeaec
MR5tQfZTyv8AWO8VXA==
           "]],
          FontFamily->"Helvetica",
          FontSize->12]}}}}, {}, {}, {{}, {}}, {{}, {}}}}, {{{}, {{{}, {}, {
        {RGBColor[0, 0, 1], PointSize[0.011000000000000001`], 
         AbsoluteThickness[1.6], 
         StyleBox[LineBox[CompressedData["
1:eJxl0llQ03cQB3AOhcSoBQIhQCCxDtUgyKhtAUF2oRqpBUWKRctlRZDKEa4p
NIgRi1TpKFAtgyCoXK0QqlxChRSw3CC3wXLkx6EOoFSKlDNC/x375sPOzudh
Z2e/s5tOCF18VZSUlARU/dd3XZ6at6tZhPYi247mYxJQ4ZksMQoU8NRTZFvu
eO8du32589ew91ch+ms37fN3i99xeIE1FGcpYa7VueNlR8uAoVoomryqjA71
niXiAxXAOlJWWRSggutqqgN9LlSCo4W4fGy7Kh52Elg+Ua+GmMyeKtaIKnb7
jskVfrXwc2Ufq4WzFjfWTZZFxdUD18HJipW/Fk97M+dKShtBJF6qDchXw6RD
OismFm0QnxywO5qrjuMvpc5iUTskj4VH28+r4+qWP1I/DemCpvo9kREPaJhp
2hCr/m0PvL2fjqLJ8f1N2jJIilOtIJ7rMNj/VIyduA/SZYzFvI8YmOT8PMXR
9E/oqng8+2SBgV3FllU0/36QNu7+a+vYehyM5AlqLg/AQcmVfb5lGzB0urX0
lssg5DRnf8OI2IgfpCaoRfcPwl0DSXn3Z+8h69zCstehIXi98uDYeXUNzN2n
eVpwawg2BGq9uBiqgVEzUz76z4bATHPr32ldGnhjSwzfUVcOhgUKmYeFJtoU
V6mUfyIH34w8lehbmhiawHbZESCH3z2Ma40YWjjAr2fOXpH/n7cWNl4TxNMK
5XA7p0knUaaFp7dJH7e3yWEiJcyuEJgoNBu6zH0hh0iddKXEPCaGqDSNGNII
pB2MXRpbp42ckUp+4WYCNdvspyRh2ug20SnkA4FOifTSdzJtfPhDjzEcJSBU
Xo7Pt9ZBvbwkpwkhgdal8YT4XB3UUq3zCoonUM1NZ2fQWcgxF3Z7XycQm9Hp
rRfCwpRefuCRfALJ+3W3i/pYuH5OarlSQeDks/DSS9a6aJry4c7VOgLTc75n
h2/rYtIXwUTQQSBuddBFjc7GBP8roQN9BDwTTa/LhWycdp0yfy4n4B1UdDP1
MRuPnhp2u/mUQMydnyzc9+ghS8tq2n+CQJvUa3RNjh7OxMQ/OjBFoES9u2GJ
po8Pg2rNhNME+IozsCjUx/6w0h7mawKv9scOfy7TR5EHa872HwKuFx+2RdgY
IPtQdTd9ntrnjZ4p2QaYzBR6JSxQebCbz2bROTjZW9DTsEjgAo2mKBRyUON+
y/32JQKMEx0HPGUcHF1McJAsE9hXmGqSZWOItGu7xCcVBAJmF+7MZhlixI8z
YSuUz82xzRPpRmhs7+UufkPN87lNb4RGyBwxbpqkXH5P9NJVZoRFomKPvSsE
QlN+8Vuw4aKaz4xjIuWr7pKPD2dzMbPE+vojyorecpvWNTxse5V2RnmVgG2g
UzXTkof1sa69ppT3pg1FmQTwcIefWoMzZSdpa2lQJg+PO7Q0BlN++588HA1h
3P2e8m+CzWatazbhuPLxr25Q/hez2xt7
           "]],
          FontFamily->"Helvetica",
          FontSize->12]}}}}, {}, {}, {{}, {}}, {{}, {}}}}, {{{}, {{{}, {}, {
        {RGBColor[0, 1, 0], PointSize[0.011000000000000001`], 
         AbsoluteThickness[1.6], 
         StyleBox[LineBox[CompressedData["
1:eJxl0llQE2YQB/AYRAhRS0BikCNBYQap0KlUsIDsQhUQgyetRU0ZUTq2AcNV
QE5pAYUWU1QwiGA55JBQDLdgKmi1CIicUZDkExmsIKcwXIbSdOybDzs7v4ed
nf3PmvgIDvpSKRSKi6r+69YpY3NODQtAlzJZU57FQOVYLNJLlODswjD9IUT8
gQ8f2fp70MZlUNhPn7g2VPaBg0vsoTyXgrHTPZfcZBKgq5VGjFxagXUpphTu
qwpgfllVL+FTcYuBX9TIpmrg2sbWDFqpYVugcF+CsBais7vuMAfU0OvId+1i
83oorH/KbDZUx+pc59bLpxuA7ebxOfOmOv6sPCc6vNAIEbGLjfybq/DWjY1T
s44PIDGVbxfJ1sCCbfLI8emHkDoYHOk8p4Eljbu7uwOaoenBjrCQOk2Unvrb
lzH+GN7fT0NDoVfYudAO+DVerZbwtLA5jt8nVHZCpoy+ULCNjjZKXk71cjd0
1PbMPJunY4uoN5hbIgPpX3bj5oOrUc5KcTb7/hnsFV/Y5Vu1Bj21bsW8rOmF
/Ed5ofSQtehu+WeuaXkflBmIazr3fITly/ydqaLnMP1PndePGtr4uKjJQoD9
sMZP5835QG18bbn/8ZmufrBkmE9d7dDGiben/A+AHIxKlLJjtgxkDo1myK7J
wTergBr5GwMZFgo96qgc/jhm1mhM10Hwx95QK8X/eevggLVGYNRxBeTkN+kJ
ZTqYNVJcse+iAobTg5xKQRfDn9NORt5RQJheJkVYoItN3HNxKQMKuLo3bnFQ
ax1eueF4P4NKoOFj5zFx0Doc/qUrwWAjgXaxNOkn2TpMFoVJGI4EBCveJd60
18Mot0qx9tcEWhZfJyfe0MPorgttBQEE7rIzWVk0Jq7lmiUdSiAQl9XurR/A
RK+Lfjz5FQKpruutIp4yse/yZNR4IYGTQ8GVSfbrcawvdD+nisDkrG/Mi5z1
aKe+vTa0gUD8cv/BVTQWErO+rfOPCPCEWzIUAhY2FyniOzsIePtLrot6WFgo
5A1+8YxAdHGa7dEd+ijrSBq6LSfQKv3m5cp8fSyTLuTbvyRQodH5cFFzA3KJ
GWN2iMBmZRQsCDagsY9RmtUwgQnXuBeHZBvQYY/y/us3BDzP32sNcTBAhbaN
NYyr9nkjLz3PAE+8aGzePanKg/UoJpdmiK+GNSmr3xJI0NRUlgoMUUdv7/X0
aQJ0nyfuPJkhpoifHJ+ZIbCrVGSR62CEr5KpZ81nCfBn5otnco3wntapz+zm
CJydZX0ipBnjqMa1OKt51fxmdtOSwBjPn8mgaS4QqLkVMeopM8YyrUzrZpUD
04u+nXdgI7XB3TN8kcClo2KbA3lstKgykei+I6DsrnFoWcnB0+LJ0myVHf08
7upu52Bb9lKYgZLAzqvycAs+ByWTMY3JKntIWyr9szno9OlXknGV3/8nB9PG
WBOuSwRuu2yybFlpgvbd8XeuqPwvTXohmA==
           "]],
          FontFamily->"Helvetica",
          FontSize->12]}}}}, {}, {}, {{}, {}}, {{}, {}}}}},
  AspectRatio->NCache[2^Rational[-1, 2], 0.7071067811865475],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{1.643976688829011, 0},
  BaseStyle->{FontFamily -> "Helvetica", FontSize -> 12},
  DisplayFunction->Identity,
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{
     FormBox[
      StyleBox["\"neo-W frequency\"", FontSize -> 8, StripOnInput -> False], 
      TraditionalForm], 
     FormBox["\"\"", TraditionalForm]}, {
     FormBox[
      StyleBox["\"Generation\"", FontSize -> 8, StripOnInput -> False], 
      TraditionalForm], 
     FormBox["\"\"", TraditionalForm]}},
  FrameStyle->Directive[
    GrayLevel[0], 
    Thickness[0.006]],
  FrameTicks->{{{{0., 
       FormBox["0.`", TraditionalForm], {0, 0.01}}, {0.25, 
       FormBox["0.25`", TraditionalForm], {0, 0.01}}, {0.5, 
       FormBox["0.5`", TraditionalForm], {0, 0.01}}}, {{0., 
       FormBox["0.`", TraditionalForm], {0, 0.01}}, {0.25, 
       FormBox["0.25`", TraditionalForm], {0, 0.01}}, {0.5, 
       FormBox["0.5`", TraditionalForm], {0, 0.01}}}}, {{{
       NCache[
        Log[5], 1.6094379124341003`], 
       FormBox["5", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[10], 2.302585092994046], 
       FormBox["10", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[50], 3.912023005428146], 
       FormBox["50", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[100], 4.605170185988092], 
       FormBox["100", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[1000], 6.907755278982137], 
       FormBox["1000", TraditionalForm], {0, 0.01}}}, {{
       NCache[
        Log[5], 1.6094379124341003`], 
       FormBox["5", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[10], 2.302585092994046], 
       FormBox["10", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[50], 3.912023005428146], 
       FormBox["50", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[100], 4.605170185988092], 
       FormBox["100", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[1000], 6.907755278982137], 
       FormBox["1000", TraditionalForm], {0, 0.01}}}}},
  FrameTicksStyle->{{
     Directive[
      GrayLevel[0], 
      Thickness[0.006], FontColor -> GrayLevel[0]], 
     Directive[
      GrayLevel[0], 
      Thickness[0.006]]}, {
     Directive[
      GrayLevel[0], 
      Thickness[0.006]], 
     Directive[
      GrayLevel[0], 
      Thickness[0.006]]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->NCache[{360, 180 2^Rational[1, 2]}, {360, 254.55844122715712`}],
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Exp[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Exp[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->NCache[{{
      Log[5], 
      Log[5000]}, {0, 0.5}}, {{1.6094379124341003`, 8.517193191416238}, {
     0, 0.5}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{
    Charting`ScaledTicks[{Log, Exp}], Automatic}]], "Output",
 CellChangeTimes->{
  3.711780291454389*^9, 3.711782386300087*^9, 3.7117828379559183`*^9, 
   3.7117828747192783`*^9, 3.711785687777063*^9, 3.711785736566949*^9, 
   3.711790647097178*^9, {3.713075805454217*^9, 
   3.7130758055078583`*^9}},ExpressionUUID->"987beb0c-c447-4260-80e6-\
62b8335fa556"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Parameters (male gametic competition)", "Subsubsection",
 CellChangeTimes->{{3.7117896910190773`*^9, 3.711789692171351*^9}, {
  3.713075844172964*^9, 
  3.713075860312549*^9}},ExpressionUUID->"8f6c706f-09fd-41f9-ae40-\
d83f89e89754"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"tryFAA", "=", 
   RowBox[{"1", "+", 
    RowBox[{"1", "/", "4"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tryFAa", "=", 
   RowBox[{"1", "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"3", "/", "4"}], ")"}], 
     RowBox[{"(", 
      RowBox[{"1", "/", "4"}], ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tryFaa", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tryMAA", "=", 
   RowBox[{"1", "+", 
    RowBox[{"1", "/", "4"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tryMAa", "=", 
   RowBox[{"1", "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"3", "/", "4"}], ")"}], 
     RowBox[{"(", 
      RowBox[{"1", "/", "4"}], ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tryMaa", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"trywAf", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"trywaf", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"trywAm", "=", 
   RowBox[{"1", "-", 
    RowBox[{"1", "/", "4"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"trywam", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"try\[Alpha]f", "=", 
   RowBox[{"1", "/", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"try\[Alpha]m", "=", 
   RowBox[{"1", "/", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tryr", "=", 
   RowBox[{"1", "/", "200"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tryR", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"subpar1", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"FAA", "\[Rule]", "tryFAA"}], ",", 
     RowBox[{"FAa", "\[Rule]", "tryFAa"}], ",", 
     RowBox[{"Faa", "\[Rule]", "tryFaa"}], ",", 
     RowBox[{"MAA", "\[Rule]", "tryMAA"}], ",", 
     RowBox[{"MAa", "\[Rule]", "tryMAa"}], ",", 
     RowBox[{"Maa", "\[Rule]", "tryMaa"}], ",", 
     RowBox[{"wAf", "->", "trywAf"}], ",", 
     RowBox[{"waf", "->", "trywaf"}], ",", 
     RowBox[{"wAm", "->", "trywAm"}], ",", 
     RowBox[{"wam", "->", "trywam"}], ",", 
     RowBox[{"\[Alpha]f", "->", "try\[Alpha]f"}], ",", 
     RowBox[{"\[Alpha]m", "->", "try\[Alpha]m"}]}], "}"}]}], ";"}]}], "Input",\

 CellChangeTimes->{{3.697299472701777*^9, 3.697299615143155*^9}, {
   3.69729974606957*^9, 3.6972997764327097`*^9}, 3.69730060073298*^9, {
   3.69730066890292*^9, 3.69730067414042*^9}, {3.6973007268098497`*^9, 
   3.69730072981532*^9}, {3.6973012570019836`*^9, 3.697301268086133*^9}, {
   3.69730161492304*^9, 3.697301617644561*^9}, {3.697302327559979*^9, 
   3.697302327863235*^9}, {3.697302740882915*^9, 3.6973027413209543`*^9}, {
   3.697302786656652*^9, 3.697302787281019*^9}, {3.697302962121398*^9, 
   3.6973029905212173`*^9}, 3.697303079565696*^9, 3.697303120491474*^9, {
   3.697303431993217*^9, 3.6973034322206907`*^9}, {3.6973034629706907`*^9, 
   3.697303517375206*^9}, {3.697304249782853*^9, 3.697304293461493*^9}, {
   3.697304948734173*^9, 3.697304950456213*^9}, {3.710182518453659*^9, 
   3.710182522036127*^9}, {3.710184612997334*^9, 3.710184634901937*^9}, {
   3.710185190360118*^9, 3.710185190453978*^9}, {3.710185503341949*^9, 
   3.710185503652523*^9}, {3.710185768446323*^9, 3.7101857690503693`*^9}, 
   3.710244391216098*^9, 3.710350541541176*^9, 3.710350868579856*^9, 
   3.71035134518941*^9, 3.710351411026071*^9, 3.710351533996911*^9, {
   3.710352268506646*^9, 3.710352268573635*^9}, {3.711528118943572*^9, 
   3.7115281223839407`*^9}, {3.7115281574856462`*^9, 
   3.7115281600083103`*^9}, {3.711692518953178*^9, 3.711692553386442*^9}, {
   3.7116925839166927`*^9, 3.7116927566818457`*^9}, {3.7116930018904877`*^9, 
   3.711693025794161*^9}, {3.7116930829601803`*^9, 3.7116930834244843`*^9}, {
   3.7116974110978622`*^9, 3.711697424705469*^9}, {3.711702817336348*^9, 
   3.711702836548231*^9}, {3.711703342798403*^9, 3.711703378874107*^9}, {
   3.7117034458830233`*^9, 3.711703446190003*^9}, {3.711714126332465*^9, 
   3.711714126923059*^9}, {3.7117897874111023`*^9, 3.7117897877019033`*^9}, {
   3.713075577438867*^9, 3.713075636006651*^9}, {3.713075885489436*^9, 
   3.713075894690227*^9}, {3.713075961746841*^9, 3.713075971095874*^9}, {
   3.713076197175391*^9, 
   3.7130762406788597`*^9}},ExpressionUUID->"eb1fb694-496c-4587-8c03-\
4d5685c9ed99"]
}, Closed]],

Cell[CellGroupData[{

Cell["Plot", "Subsubsection",
 CellChangeTimes->{{3.711789765961763*^9, 
  3.711789766425194*^9}},ExpressionUUID->"8adeaf22-34ab-4549-b504-\
2ae37ae246d3"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"tab", "=", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"equil", "=", 
       RowBox[{
        RowBox[{"sieve", "[", 
         RowBox[{
         "tryFAA", ",", "tryFAa", ",", "tryFaa", ",", "tryMAA", ",", "tryMAa",
           ",", "tryMaa", ",", "trywAf", ",", "trywaf", ",", "trywAm", ",", 
          "trywam", ",", "try\[Alpha]f", ",", "try\[Alpha]m", ",", "tryr"}], 
         "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Lambda]", "/.", 
       RowBox[{"Solve", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 SuperscriptBox["\[Lambda]", "2"], "-", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"\[Lambda]mA", " ", "+", "\[Lambda]ma"}], ")"}], 
                  "\[Lambda]"}], " ", "+", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"\[Lambda]mA", " ", "\[Lambda]ma"}], "-", 
                   RowBox[{"\[Rho]mA", " ", "\[Rho]ma"}]}], ")"}]}], "/.", 
                "SUBS"}], "/.", "subequil"}], "/.", "subpar1"}], "/.", 
             RowBox[{"R", "\[Rule]", 
              RowBox[{"0.5", "^", "b"}]}]}], "/.", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"pXf", "\[Rule]", 
               RowBox[{"equil", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], ",", 
              RowBox[{"pXm", "\[Rule]", 
               RowBox[{"equil", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], ",", 
              RowBox[{"pYm", "\[Rule]", 
               RowBox[{"equil", "[", 
                RowBox[{"[", "3", "]"}], "]"}]}], ",", 
              RowBox[{"freqYm", "\[Rule]", 
               RowBox[{"equil", "[", 
                RowBox[{"[", "4", "]"}], "]"}]}]}], "}"}]}], ")"}], 
          "\[Equal]", "0"}], ",", "\[Lambda]"}], "]"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "10", ",", "1", ",", 
       RowBox[{
        RowBox[{"-", "1"}], "/", "2"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eigen1", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"0.5", "^", "b"}], ",", 
         RowBox[{"{", 
          RowBox[{"b", ",", "10", ",", "1", ",", 
           RowBox[{
            RowBox[{"-", "1"}], "/", "2"}]}], "}"}]}], "]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Transpose", "[", "tab", "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], "-", "1"}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eigen2", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"0.5", "^", "b"}], ",", 
         RowBox[{"{", 
          RowBox[{"b", ",", "10", ",", "1", ",", 
           RowBox[{
            RowBox[{"-", "1"}], "/", "2"}]}], "}"}]}], "]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Transpose", "[", "tab", "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}], "-", "1"}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"plot2", "=", 
  RowBox[{"Show", "[", "\[IndentingNewLine]", 
   RowBox[{"ListLogLinearPlot", "[", 
    RowBox[{"eigen2", ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Thick", ",", "Black"}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0.0008", ",", "0.5"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"yplotmin", ",", "yplotmax"}], "}"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", "loglinearplotR\[Lambda]options"}], "]"}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.711789818872653*^9, 3.711789829510097*^9}, {
   3.711789895199415*^9, 3.711789898765771*^9}, {3.711790424977929*^9, 
   3.711790432167965*^9}, 3.711790552521893*^9, {3.7130758694158697`*^9, 
   3.713075869524309*^9}},ExpressionUUID->"a0c71708-3642-4655-8d23-\
075aea5f54f2"],

Cell[BoxData[
 GraphicsBox[{{{}, {{{}, {}, {
       {GrayLevel[0], PointSize[0.012833333333333334`], Thickness[Large], 
        StyleBox[LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBmIQnX1ix77LO6UPHJhUyZcvtc/+jMrJvvdhUgcCJgp9
PsC+z1638WYc9xeJAwl7P+/IfLvXvu/uSz31ieIHJvzjehlwYq/9e8tf/5z0
xA4UfLzzSXPKXvuAaVzn406LHLhguNeC03uv/cZPUvOrMoQPKNgsiHr0ZI+9
kL92/jRWoQMLuCOc/obtsS9ebW2/aZHAgQ0J8id6J++2X8k/Q25OPd+Bgk52
lnudu+wh7uM+cMHpriWbxk6oezgOfFBf/Yw/YTvUfrYDCvyv9Z4ZbYXax3wg
QVJywp/9m6DmMxzYcONXuZv3Bqh5v/c75D7lZ3NdA9X/bb9DXHyd+6MVUPUf
9j+4wrTeNnsZVP7ZfoeI6cV/1i+xBwBaxZvk
          "]],
         FontFamily->"Helvetica",
         FontSize->14]}}}}, {}, {}, {{}, {}}, {{}, {}}}},
  AspectRatio->NCache[2^Rational[-1, 2], 0.7071067811865475],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-7.098710072047664, 0},
  BaseStyle->{FontFamily -> "Helvetica", FontSize -> 14},
  DisplayFunction->Identity,
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{
     FormBox["\"\"", TraditionalForm], 
     FormBox["\"\"", TraditionalForm]}, {
     FormBox[
      StyleBox["\"R\"", FontSize -> 14, StripOnInput -> False], 
      TraditionalForm], 
     FormBox["\"\"", TraditionalForm]}},
  FrameStyle->Directive[
    GrayLevel[0], 
    Thickness[0.006]],
  FrameTicks->{{{{-0.1, 
       FormBox[
        RowBox[{"-", "0.1`"}], TraditionalForm], {0, 0.01}}, {0., 
       FormBox["0.`", TraditionalForm], {0, 0.01}}, {0.1, 
       FormBox["0.1`", TraditionalForm], {0, 0.01}}, {0.20000000000000004`, 
       FormBox["0.20000000000000004`", TraditionalForm], {0, 0.01}}}, {{-0.1, 
       
       FormBox[
        RowBox[{"-", "0.1`"}], TraditionalForm], {0, 0.01}}, {0., 
       FormBox["0.`", TraditionalForm], {0, 0.01}}, {0.1, 
       FormBox["0.1`", TraditionalForm], {0, 0.01}}, {0.20000000000000004`, 
       FormBox["0.20000000000000004`", TraditionalForm], {
       0, 0.01}}}}, {{{-6.907755278982137, 
       FormBox["0.001`", TraditionalForm], {0, 0.01}}, {-5.298317366548036, 
       FormBox["\"r\"", TraditionalForm], {0, 0.01}}, {-4.605170185988091, 
       FormBox["0.01`", TraditionalForm], {0, 0.01}}, {-2.995732273553991, 
       FormBox["0.05`", TraditionalForm], {0, 0.01}}, {-0.6931471805599453, 
       FormBox["0.5`", TraditionalForm], {0, 0.01}}}, {{-6.907755278982137, 
       FormBox["0.001`", TraditionalForm], {0, 0.01}}, {-5.298317366548036, 
       FormBox["\"r\"", TraditionalForm], {0, 0.01}}, {-4.605170185988091, 
       FormBox["0.01`", TraditionalForm], {0, 0.01}}, {-2.995732273553991, 
       FormBox["0.05`", TraditionalForm], {0, 0.01}}, {-0.6931471805599453, 
       FormBox["0.5`", TraditionalForm], {0, 0.01}}}}},
  FrameTicksStyle->{{
     Directive[
      GrayLevel[0], 
      Thickness[0.006], FontColor -> GrayLevel[0]], 
     Directive[
      GrayLevel[0], 
      Thickness[0.006]]}, {
     Directive[
      GrayLevel[0], 
      Thickness[0.006]], 
     Directive[
      GrayLevel[0], 
      Thickness[0.006]]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->{{40, 20}, {50, 30}},
  ImageSize->NCache[{360, 180 2^Rational[1, 2]}, {360, 254.55844122715712`}],
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Exp[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Exp[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-7.1308988302963465`, -0.6931471805599453}, {-0.075, 0.25}},
  PlotRangeClipping->False,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->FrontEndValueCache[{
     Charting`ScaledTicks[{Log, Exp}], Automatic}, {{{-6.907755278982137, 
       FormBox["0.001`", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-5.298317366548036, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.005\"", 0.005, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 3.}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-4.605170185988091, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.010\"", 0.01, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 3.}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-2.995732273553991, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.050\"", 0.05, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 3.}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-2.3025850929940455`, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.100\"", 0.1, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 3.}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.6931471805599453, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.500\"", 0.5, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 3.}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-7.600902459542082, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-7.418580902748128, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-7.264430222920869, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-7.1308988302963465`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-7.013115794639964, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-6.214608098422191, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-5.809142990314028, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-5.521460917862246, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-5.115995809754082, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-4.961845129926823, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-4.8283137373023015`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-4.710530701645918, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-3.912023005428146, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-3.506557897319982, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-3.2188758248682006`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-2.8134107167600364`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-2.659260036932778, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-2.5257286443082556`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-2.4079456086518722`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-1.6094379124341003`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-1.2039728043259361`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-0.916290731874155, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-0.5108256237659907, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-0.35667494393873245`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-0.2231435513142097, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-0.10536051565782628`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {0., 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {0.4054651081081644, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {0.6931471805599453, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}}, Automatic}]]], "Output",
 CellChangeTimes->{{3.711789772577486*^9, 3.711789789543001*^9}, {
   3.71178982132514*^9, 3.711789830040066*^9}, {3.711789899320304*^9, 
   3.711789927244409*^9}, 3.711790008409782*^9, 3.711790054993622*^9, 
   3.711790111581698*^9, 3.711790432852747*^9, 3.711790553414027*^9, 
   3.71307564996157*^9, {3.713075712980227*^9, 3.713075731203094*^9}, 
   3.7130759000722313`*^9, {3.71307596760359*^9, 3.7130759730177393`*^9}, {
   3.713076207613497*^9, 
   3.713076242439179*^9}},ExpressionUUID->"e0d1d740-d459-4e1d-b959-\
92f87852ce5d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"temp", "=", 
  RowBox[{"Show", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ListLogLinearPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0.0008", ",", "yplotmax"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"tryr", ",", "yplotmax"}], "}"}]}], "}"}], ",", 
      RowBox[{"Joined", "\[Rule]", "True"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Black", ",", "Thin"}], "}"}]}], ",", 
      RowBox[{"Filling", "\[Rule]", "yplotmin"}], ",", 
      RowBox[{"FillingStyle", "\[Rule]", "LightGray"}], ",", 
      "loglinearplotR\[Lambda]options", ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0.0008", ",", "0.5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"yplotmin", ",", "yplotmax"}], "}"}]}], "}"}]}]}], "]"}], 
    ",", "\[IndentingNewLine]", "plot2", ",", "\[IndentingNewLine]", 
    RowBox[{"ListLogLinearPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"tryr", ",", "yplotmax"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"tryr", ",", "yplotmin"}], "}"}]}], "}"}], ",", 
      RowBox[{"Joined", "\[Rule]", "True"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Black", ",", "Thin"}], "}"}]}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"ListLogLinearPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0.001", ",", 
          RowBox[{"-", "0.01"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.001", ",", "0.01"}], "}"}]}], "}"}], ",", 
      RowBox[{"Joined", "\[Rule]", "True"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Black", ",", "Thick"}], "}"}]}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"ListLogLinearPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0.02", ",", 
          RowBox[{"-", "0.01"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.02", ",", "0.01"}], "}"}]}], "}"}], ",", 
      RowBox[{"Joined", "\[Rule]", "True"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", "Red", "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"ListLogLinearPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0.1", ",", 
          RowBox[{"-", "0.01"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.1", ",", "0.01"}], "}"}]}], "}"}], ",", 
      RowBox[{"Joined", "\[Rule]", "True"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", "Blue", "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"ListLogLinearPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0.5", ",", 
          RowBox[{"-", "0.01"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.5", ",", "0.01"}], "}"}]}], "}"}], ",", 
      RowBox[{"Joined", "\[Rule]", "True"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", "Green", "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"GridLines", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "0.005", "}"}], ",", 
       RowBox[{"{", "1", "}"}]}], "}"}]}]}], 
   RowBox[{"(*", 
    RowBox[{",", "\[IndentingNewLine]", 
     RowBox[{"GridLinesStyle", "\[Rule]", "Black"}]}], "*)"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.711790204644497*^9, 3.711790275108921*^9}, {
  3.711790340250709*^9, 3.711790393512679*^9}, {3.711790439616519*^9, 
  3.711790530685474*^9}, {3.711790596078458*^9, 3.711790596401642*^9}, {
  3.713075912458187*^9, 
  3.713075912557809*^9}},ExpressionUUID->"3328db2f-80e8-4354-b276-\
95c0e8aeb5f3"],

Cell[BoxData[
 GraphicsBox[{{{{}, 
     GraphicsComplexBox[{{-7.1308988302963465`, 0.25}, {-5.298317366548036, 
      0.25}, {-7.1308988302963465`, -0.075}, {-5.298317366548036, -0.075}}, \
{{{}, {
         {GrayLevel[0.85], EdgeForm[None], 
          GraphicsGroupBox[{PolygonBox[{{1, 3, 4, 2}}]}]}}, {}, {}}, {{}, {}, {
         {GrayLevel[0], PointSize[0.012833333333333334`], Thickness[Tiny], 
          StyleBox[LineBox[{1, 2}],
           FontFamily->"Helvetica",
           
           FontSize->
            14]}}}}], {}, {}, {{}, {}}, {{}, {}}}}, {{{}, {{{}, {}, {
        {GrayLevel[0], PointSize[0.012833333333333334`], Thickness[Large], 
         StyleBox[LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBmIQnX1ix77LO6UPHJhUyZcvtc/+jMrJvvdhUgcCJgp9
PsC+z1638WYc9xeJAwl7P+/IfLvXvu/uSz31ieIHJvzjehlwYq/9e8tf/5z0
xA4UfLzzSXPKXvuAaVzn406LHLhguNeC03uv/cZPUvOrMoQPKNgsiHr0ZI+9
kL92/jRWoQMLuCOc/obtsS9ebW2/aZHAgQ0J8id6J++2X8k/Q25OPd+Bgk52
lnudu+wh7uM+cMHpriWbxk6oezgOfFBf/Yw/YTvUfrYDCvyv9Z4ZbYXax3wg
QVJywp/9m6DmMxzYcONXuZv3Bqh5v/c75D7lZ3NdA9X/bb9DXHyd+6MVUPUf
9j+4wrTeNnsZVP7ZfoeI6cV/1i+xBwBaxZvk
           "]],
          FontFamily->"Helvetica",
          FontSize->14]}}}}, {}, {}, {{}, {}}, {{}, {}}}}, {{{}, {{{}, {}, {
        {GrayLevel[0], PointSize[0.012833333333333334`], Thickness[Tiny], 
         LineBox[{{-5.298317366548036, 
          0.25}, {-5.298317366548036, -0.075}}]}}}}, {}, {}, {{}, {}}, {{}, \
{}}}}, {{{}, {{{}, {}, {
        {GrayLevel[0], PointSize[0.012833333333333334`], Thickness[Large], 
         LineBox[{{-6.907755278982137, -0.01}, {-6.907755278982137, 
          0.01}}]}}}}, {}, {}, {{}, {}}, {{}, {}}}}, {{{}, {{{}, {}, {
        {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], 
         AbsoluteThickness[1.6], 
         LineBox[{{-3.912023005428146, -0.01}, {-3.912023005428146, 
          0.01}}]}}}}, {}, {}, {{}, {}}, {{}, {}}}}, {{{}, {{{}, {}, {
        {RGBColor[0, 0, 1], PointSize[0.012833333333333334`], 
         AbsoluteThickness[1.6], 
         LineBox[{{-2.3025850929940455`, -0.01}, {-2.3025850929940455`, 
          0.01}}]}}}}, {}, {}, {{}, {}}, {{}, {}}}}, {{{}, {{{}, {}, {
        {RGBColor[0, 1, 0], PointSize[0.012833333333333334`], 
         AbsoluteThickness[1.6], 
         LineBox[{{-0.6931471805599453, -0.01}, {-0.6931471805599453, 
          0.01}}]}}}}, {}, {}, {{}, {}}, {{}, {}}}}},
  AspectRatio->NCache[2^Rational[-1, 2], 0.7071067811865475],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-7.098710072047664, 0},
  BaseStyle->{FontFamily -> "Helvetica", FontSize -> 14},
  DisplayFunction->Identity,
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{
     FormBox["\"\"", TraditionalForm], 
     FormBox["\"\"", TraditionalForm]}, {
     FormBox[
      StyleBox["\"R\"", FontSize -> 14, StripOnInput -> False], 
      TraditionalForm], 
     FormBox["\"\"", TraditionalForm]}},
  FrameStyle->Directive[
    GrayLevel[0], 
    Thickness[0.006]],
  FrameTicks->{{{{-0.1, 
       FormBox[
        RowBox[{"-", "0.1`"}], TraditionalForm], {0, 0.01}}, {0., 
       FormBox["0.`", TraditionalForm], {0, 0.01}}, {0.1, 
       FormBox["0.1`", TraditionalForm], {0, 0.01}}, {0.20000000000000004`, 
       FormBox["0.20000000000000004`", TraditionalForm], {0, 0.01}}}, {{-0.1, 
       
       FormBox[
        RowBox[{"-", "0.1`"}], TraditionalForm], {0, 0.01}}, {0., 
       FormBox["0.`", TraditionalForm], {0, 0.01}}, {0.1, 
       FormBox["0.1`", TraditionalForm], {0, 0.01}}, {0.20000000000000004`, 
       FormBox["0.20000000000000004`", TraditionalForm], {
       0, 0.01}}}}, {{{-6.907755278982137, 
       FormBox["0.001`", TraditionalForm], {0, 0.01}}, {-5.298317366548036, 
       FormBox["\"r\"", TraditionalForm], {0, 0.01}}, {-4.605170185988091, 
       FormBox["0.01`", TraditionalForm], {0, 0.01}}, {-2.995732273553991, 
       FormBox["0.05`", TraditionalForm], {0, 0.01}}, {-0.6931471805599453, 
       FormBox["0.5`", TraditionalForm], {0, 0.01}}}, {{-6.907755278982137, 
       FormBox["0.001`", TraditionalForm], {0, 0.01}}, {-5.298317366548036, 
       FormBox["\"r\"", TraditionalForm], {0, 0.01}}, {-4.605170185988091, 
       FormBox["0.01`", TraditionalForm], {0, 0.01}}, {-2.995732273553991, 
       FormBox["0.05`", TraditionalForm], {0, 0.01}}, {-0.6931471805599453, 
       FormBox["0.5`", TraditionalForm], {0, 0.01}}}}},
  FrameTicksStyle->{{
     Directive[
      GrayLevel[0], 
      Thickness[0.006], FontColor -> GrayLevel[0]], 
     Directive[
      GrayLevel[0], 
      Thickness[0.006]]}, {
     Directive[
      GrayLevel[0], 
      Thickness[0.006]], 
     Directive[
      GrayLevel[0], 
      Thickness[0.006]]}},
  GridLines->{{0.005}, {1}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->{{40, 20}, {50, 30}},
  ImageSize->NCache[{360, 180 2^Rational[1, 2]}, {360, 254.55844122715712`}],
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Exp[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Exp[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-7.1308988302963465`, -0.6931471805599453}, {-0.075, 0.25}},
  PlotRangeClipping->False,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->FrontEndValueCache[{
     Charting`ScaledTicks[{Log, Exp}], Automatic}, {{{-6.907755278982137, 
       FormBox["0.001`", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-5.298317366548036, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.005\"", 0.005, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 3.}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-4.605170185988091, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.010\"", 0.01, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 3.}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-2.995732273553991, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.050\"", 0.05, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 3.}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-2.3025850929940455`, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.100\"", 0.1, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 3.}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.6931471805599453, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.500\"", 0.5, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 3.}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-7.600902459542082, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-7.418580902748128, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-7.264430222920869, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-7.1308988302963465`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-7.013115794639964, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-6.214608098422191, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-5.809142990314028, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-5.521460917862246, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-5.115995809754082, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-4.961845129926823, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-4.8283137373023015`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-4.710530701645918, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-3.912023005428146, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-3.506557897319982, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-3.2188758248682006`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-2.8134107167600364`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-2.659260036932778, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-2.5257286443082556`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-2.4079456086518722`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-1.6094379124341003`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-1.2039728043259361`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-0.916290731874155, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-0.5108256237659907, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-0.35667494393873245`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-0.2231435513142097, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-0.10536051565782628`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {0., 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {0.4054651081081644, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {0.6931471805599453, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}}, Automatic}]]], "Output",
 CellChangeTimes->{
  3.711790172520329*^9, {3.7117902112315598`*^9, 3.7117902239111557`*^9}, {
   3.711790258820758*^9, 3.71179027560854*^9}, {3.7117903668033953`*^9, 
   3.711790393948126*^9}, 3.711790446615591*^9, {3.711790482576254*^9, 
   3.711790531108674*^9}, 3.7117905617039843`*^9, 3.7117905968801813`*^9, 
   3.713075744585737*^9, {3.7130759069624147`*^9, 3.713075913092576*^9}, 
   3.7130759744739943`*^9, {3.713076233872096*^9, 
   3.71307624454627*^9}},ExpressionUUID->"202b39a3-1b39-4fdd-8c47-\
9eebd14fe1fd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"plot1", ",", "plot2"}], "]"}]], "Input",
 CellChangeTimes->{{3.713075920707903*^9, 
  3.7130759245402813`*^9}},ExpressionUUID->"c5b98f0e-1189-467d-891a-\
1890bd516af7"],

Cell[BoxData[
 GraphicsBox[{{{{}, {{{}, {}, {
        {GrayLevel[0], PointSize[0.012833333333333334`], Thickness[Large], 
         StyleBox[LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBmIQnX1ix77LO6UPXJj9/t1hl3P2Z1RO9r0PkzrAYP+h
9pzlOXvdxptx3F8kDqxYYMoeqXXOvu/uSz31ieIHJrSvrZ0gcs7+veWvf056
YgdO6LhuePX1rH3ANK7zcadFDixIeSLy9NRZ+42fpOZXZQgfUDh779zmvrP2
Qv7a+dNYhQ5sqFy4/JnVWfvi1db2mxYJHJCo87olefyM/Ur+GXJz6vkOOPyx
+PxO44w9xH3cBw7s7/18N+Q01D0cB1bEravidjwFtZ/tgIPNmvXfXp+A2sd8
oOOg1fKo9ONQ8xkOGGz//GX7vaNQ837vl9DLiv3cdgSq/9v+gMchDCtrD0PV
f9iv8FBaJu/AIaj8s/0d3Fvc/tgesgcAnWSi/A==
           "]],
          FontFamily->"Helvetica",
          FontSize->14]}}}}, {}, {}, {{}, {}}, {{}, {}}}}, {{{}, {{{}, {}, {
        {GrayLevel[0], PointSize[0.012833333333333334`], Thickness[Large], 
         StyleBox[LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBmIQnX1ix77LO6UPHJhUyZcvtc/+jMrJvvdhUgcCJgp9
PsC+z1638WYc9xeJAwl7P+/IfLvXvu/uSz31ieIHJvzjehlwYq/9e8tf/5z0
xA4UfLzzSXPKXvuAaVzn406LHLhguNeC03uv/cZPUvOrMoQPKNgsiHr0ZI+9
kL92/jRWoQMLuCOc/obtsS9ebW2/aZHAgQ0J8id6J++2X8k/Q25OPd+Bgk52
lnudu+wh7uM+cMHpriWbxk6oezgOfFBf/Yw/YTvUfrYDCvyv9Z4ZbYXax3wg
QVJywp/9m6DmMxzYcONXuZv3Bqh5v/c75D7lZ3NdA9X/bb9DXHyd+6MVUPUf
9j+4wrTeNnsZVP7ZfoeI6cV/1i+xBwBaxZvk
           "]],
          FontFamily->"Helvetica",
          FontSize->14]}}}}, {}, {}, {{}, {}}, {{}, {}}}}},
  AspectRatio->NCache[2^Rational[-1, 2], 0.7071067811865475],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-7.098710072047664, 0},
  BaseStyle->{FontFamily -> "Helvetica", FontSize -> 14},
  DisplayFunction->Identity,
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{
     FormBox["\"\"", TraditionalForm], 
     FormBox["\"\"", TraditionalForm]}, {
     FormBox[
      StyleBox["\"R\"", FontSize -> 14, StripOnInput -> False], 
      TraditionalForm], 
     FormBox["\"\"", TraditionalForm]}},
  FrameStyle->Directive[
    GrayLevel[0], 
    Thickness[0.006]],
  FrameTicks->{{{{-0.1, 
       FormBox[
        RowBox[{"-", "0.1`"}], TraditionalForm], {0, 0.01}}, {0., 
       FormBox["0.`", TraditionalForm], {0, 0.01}}, {0.1, 
       FormBox["0.1`", TraditionalForm], {0, 0.01}}, {0.20000000000000004`, 
       FormBox["0.20000000000000004`", TraditionalForm], {0, 0.01}}}, {{-0.1, 
       
       FormBox[
        RowBox[{"-", "0.1`"}], TraditionalForm], {0, 0.01}}, {0., 
       FormBox["0.`", TraditionalForm], {0, 0.01}}, {0.1, 
       FormBox["0.1`", TraditionalForm], {0, 0.01}}, {0.20000000000000004`, 
       FormBox["0.20000000000000004`", TraditionalForm], {
       0, 0.01}}}}, {{{-6.907755278982137, 
       FormBox["0.001`", TraditionalForm], {0, 0.01}}, {-5.298317366548036, 
       FormBox["\"r\"", TraditionalForm], {0, 0.01}}, {-4.605170185988091, 
       FormBox["0.01`", TraditionalForm], {0, 0.01}}, {-2.995732273553991, 
       FormBox["0.05`", TraditionalForm], {0, 0.01}}, {-0.6931471805599453, 
       FormBox["0.5`", TraditionalForm], {0, 0.01}}}, {{-6.907755278982137, 
       FormBox["0.001`", TraditionalForm], {0, 0.01}}, {-5.298317366548036, 
       FormBox["\"r\"", TraditionalForm], {0, 0.01}}, {-4.605170185988091, 
       FormBox["0.01`", TraditionalForm], {0, 0.01}}, {-2.995732273553991, 
       FormBox["0.05`", TraditionalForm], {0, 0.01}}, {-0.6931471805599453, 
       FormBox["0.5`", TraditionalForm], {0, 0.01}}}}},
  FrameTicksStyle->{{
     Directive[
      GrayLevel[0], 
      Thickness[0.006], FontColor -> GrayLevel[0]], 
     Directive[
      GrayLevel[0], 
      Thickness[0.006]]}, {
     Directive[
      GrayLevel[0], 
      Thickness[0.006]], 
     Directive[
      GrayLevel[0], 
      Thickness[0.006]]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->{{40, 20}, {50, 30}},
  ImageSize->NCache[{360, 180 2^Rational[1, 2]}, {360, 254.55844122715712`}],
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Exp[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Exp[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-7.1308988302963465`, -0.6931471805599453}, {-0.075, 0.25}},
  PlotRangeClipping->False,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->FrontEndValueCache[{
     Charting`ScaledTicks[{Log, Exp}], Automatic}, {{{-6.907755278982137, 
       FormBox["0.001`", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-5.298317366548036, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.005\"", 0.005, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 3.}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-4.605170185988091, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.010\"", 0.01, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 3.}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-2.995732273553991, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.050\"", 0.05, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 3.}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-2.3025850929940455`, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.100\"", 0.1, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 3.}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.6931471805599453, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.500\"", 0.5, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 3.}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-7.600902459542082, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-7.418580902748128, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-7.264430222920869, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-7.1308988302963465`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-7.013115794639964, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-6.214608098422191, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-5.809142990314028, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-5.521460917862246, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-5.115995809754082, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-4.961845129926823, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-4.8283137373023015`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-4.710530701645918, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-3.912023005428146, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-3.506557897319982, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-3.2188758248682006`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-2.8134107167600364`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-2.659260036932778, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-2.5257286443082556`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-2.4079456086518722`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-1.6094379124341003`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-1.2039728043259361`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-0.916290731874155, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-0.5108256237659907, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-0.35667494393873245`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-0.2231435513142097, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-0.10536051565782628`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {0., 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {0.4054651081081644, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {0.6931471805599453, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}}, Automatic}]]], "Output",
 CellChangeTimes->{3.713075924906629*^9, 3.713075975323886*^9, 
  3.71307624680408*^9},ExpressionUUID->"3f49f358-360c-4e87-a4b5-f5c5233f353a"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Invasion Plot", "Subsubsection",
 CellChangeTimes->{{3.711790613559505*^9, 
  3.7117906152829657`*^9}},ExpressionUUID->"0a1faa7c-a422-4221-9e29-\
e4e19135910e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"tryR", "=", "0.001"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"param", "=", 
   RowBox[{"{", 
    RowBox[{
    "tryFAA", ",", "tryFAa", ",", "tryFaa", ",", "tryMAA", ",", "tryMAa", ",",
      "tryMaa", ",", "trywAf", ",", "trywaf", ",", "trywAm", ",", "trywam", 
     ",", "try\[Alpha]f", ",", "try\[Alpha]m", ",", "tryr", ",", "tryR", ",", 
     
     RowBox[{
      RowBox[{"tryr", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "tryR"}], ")"}]}], "+", 
      RowBox[{"tryR", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "tryr"}], ")"}]}]}], ",", "tryk"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"run", "[", "0", "]"}], "=", 
   RowBox[{"generation", "[", 
    RowBox[{"param", ",", 
     RowBox[{"startgen", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"sieve", "[", 
         RowBox[{
         "tryFAA", ",", "tryFAa", ",", "tryFaa", ",", "tryMAA", ",", "tryMAa",
           ",", "tryMaa", ",", "trywAf", ",", "trywaf", ",", "trywAm", ",", 
          "trywam", ",", "try\[Alpha]f", ",", "try\[Alpha]m", ",", "tryr"}], 
         "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", "trypm"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"time", "=", "1"}], ",", 
   RowBox[{"time", "\[LessEqual]", "endtime"}], ",", 
   RowBox[{"time", "++"}], ",", 
   RowBox[{
    RowBox[{"run", "[", "time", "]"}], "=", 
    RowBox[{"generation", "[", 
     RowBox[{"param", ",", 
      RowBox[{"run", "[", 
       RowBox[{"time", "-", "1"}], "]"}]}], "]"}]}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MODtab1Black", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Round", "[", 
        RowBox[{"Exp", "[", "exptime", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"generation", "[", 
         RowBox[{"param", ",", 
          RowBox[{"run", "[", 
           RowBox[{"Round", "[", 
            RowBox[{"Exp", "[", "exptime", "]"}], "]"}], "]"}]}], "]"}], ".", 
        "modvec"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"exptime", ",", 
       RowBox[{"Log", "[", "startplot", "]"}], ",", 
       RowBox[{"Log", "[", "endtime", "]"}], ",", "0.1"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MOD1Black", "=", 
  RowBox[{"ListLogLinearPlot", "[", 
   RowBox[{"MODtab1Black", ",", 
    RowBox[{"Joined", "\[Rule]", "True"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"startplot", ",", "endtime"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0.5"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", "Black", "}"}]}], ",", "loglinearplotINVoptions"}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{
  3.7103553138593187`*^9, 3.710355582526401*^9, {3.710436642447912*^9, 
   3.710436660679762*^9}, {3.7104368649019117`*^9, 3.710436866972167*^9}, {
   3.710436991453842*^9, 3.710437000980938*^9}, {3.710437094495735*^9, 
   3.7104371114594297`*^9}, {3.7104371545678377`*^9, 3.710437175456407*^9}, {
   3.7104372065281487`*^9, 3.710437257466428*^9}, {3.710437307130103*^9, 
   3.710437402451663*^9}, {3.710438092346622*^9, 3.710438102554027*^9}, {
   3.710438266562661*^9, 3.710438272730937*^9}, {3.7104383114607162`*^9, 
   3.7104383281933613`*^9}, 3.710438415693651*^9, 3.710438453437209*^9, {
   3.710438768293997*^9, 3.710438808524135*^9}, {3.710438892011983*^9, 
   3.710438900508027*^9}, {3.710438948234955*^9, 3.710438980456765*^9}, 
   3.710440484931306*^9, 3.710440614636401*^9, 3.710443798850658*^9, 
   3.710445082930764*^9, 3.710445135789113*^9, 3.710450364677979*^9, {
   3.711692793496278*^9, 3.711692793702231*^9}, {3.711692839131193*^9, 
   3.711692839476317*^9}, {3.711695163270232*^9, 3.711695163791216*^9}, {
   3.7116955340766087`*^9, 3.711695540479776*^9}, {3.7117028584725018`*^9, 
   3.711702872006024*^9}, 3.711702943154717*^9, 3.711709668616238*^9, {
   3.711714148192808*^9, 3.711714148377842*^9}, {3.7117798552832527`*^9, 
   3.711779859325342*^9}, {3.711779893203086*^9, 3.7117799641182737`*^9}, {
   3.7117823451456413`*^9, 
   3.711782346971265*^9}},ExpressionUUID->"a7fbb2a3-374f-47be-b3d0-\
f93870983692"],

Cell[BoxData[
 GraphicsBox[{{{}, {{{}, {}, {
       {GrayLevel[0], PointSize[0.011000000000000001`], AbsoluteThickness[
        1.6], 
        StyleBox[LineBox[CompressedData["
1:eJxl0mlQk2cQB/AYroQXSrhCgiEEeiGCtlZKFXRXyuGo0KoorXI4tDg4EcJV
cQBFlFKgFqSowyFWQ0SOACrQUCCCrWlBqApKYkvhMUWKVfCCcoQAfTv2mx92
dn4fdnb2P+sUKdkWxWQwGP50/dff+2Z8ekPHLBxfE3Al1/ocMEWuOqpGD2Ra
WpAbfv4Vh+xaVZfgvAgx6/eaOd2UvuLEGi+4ImXg7X5tb0GUDCiD2pRHhUsw
Odb86haXCuDuaGq9LGbi80C0HuFXwhbPdMXwCgP8CfepTNdXw6Gzd9q4WgOU
n0yRHi6Sw8VWDfeGwAhDxcMbqxYvgePGwDXcaiOkPjzpdijnCqSk666Jq41R
d51jVWP0PWQViNemOppgZJprn0qngILhxFSfaRP0Ndpj2RzSBp2qdclJLSwM
E5YfLbvYAS/vZ2NAcdW7A4+uw4lMg2YSZopuaZq6F5xOKFVTsxUeFIqWnFGE
8H+F3ub+yXszFLoEx1c6OfWC8pe1T1yGzTCxyLNnct9dCJLn+UU1mSNLM3XA
0FcDsq7yA1TSa5hMFZspjv8G9Uvlir7NFthgktibdG4AJhZaPj1qwsF2izcs
m5mDYL7f6nF2PAdz3zaK01FD4G7p8rykl4NdzsvndlYNgUONXh3qaYlvyUoG
2qwJRJVVMFPPWWIeU3WsayeBq6FvXhNSVijIOKtelU7+z9sKD3609YHPKQLn
ZZ22+Wor/DYtfNRdRuDv0wkbasEal7GNf99cSyDZtpSRX2GNEkbD6v0NBEqC
MnTDpja4sv4Jy7WZQMdyn3F5gg2mT1S6SNsI3JYrc46pbdBmfi58rIOAZMlc
VrWXLWojHrSKVQS6dQ9zsy7YIkxETwXdINDuWMorY3MxpzE6lbpFIKPsdgQ/
jot5dwZjx+8QKAiwW5Gi4aKHLMms5x6Bz0cSG3O87HCBYafcM0jg2VTU4fvn
7XCLqi99QEsgc/GPbcZsHm4MNR7j/0UgLN+teEjCw89GKwIMHhGIiLn8XVE/
Dz/2uB6UPU7gUNUpz93r+Ni5O02rfEagRxn+p6GMj+zRk5lfTRBoMOn7Wcey
xxMC57GRfwgs06fBrMQe+f0Oj19ME3gakHF/u9oeb632D74wSyA4+8eeJO+l
aKFZg6w5el8Ehp0uX4pN7Vypi57Og9d1WMoWYEPsJ42m8wS+ZLH0tRIB+uza
XtxKm4q8tSlMLUCedtM7fgsE/GqLXKXeDjjZ+VBYR1s8OVM1KXXAqtFsaoH2
kSneyny2EMM5wTfXLtLzyxw75yVCnO2KbommrbiUMhasFmLymbgjX9OOP125
d8bbESP7FvUXaBfulr+/tdwR93mDQwtt/V2Fd7ehCN28fI920V6/P7Dd+gMR
Jq9w39NP27dk8KCrWIQ7vrh3ZIh2oLK7MeasCNtmPEpHaL/8TxEmFlaKHtP+
wf91925DJ6wXWyQ8pf0vnVYYkA==
          "]],
         FontFamily->"Helvetica",
         FontSize->12]}}}}, {}, {}, {{}, {}}, {{}, {}}}},
  AspectRatio->NCache[2^Rational[-1, 2], 0.7071067811865475],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{1.643976688829011, 0},
  BaseStyle->{FontFamily -> "Helvetica", FontSize -> 12},
  DisplayFunction->Identity,
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{
     FormBox[
      StyleBox["\"neo-W frequency\"", FontSize -> 8, StripOnInput -> False], 
      TraditionalForm], 
     FormBox["\"\"", TraditionalForm]}, {
     FormBox[
      StyleBox["\"Generation\"", FontSize -> 8, StripOnInput -> False], 
      TraditionalForm], 
     FormBox["\"\"", TraditionalForm]}},
  FrameStyle->Directive[
    GrayLevel[0], 
    Thickness[0.006]],
  FrameTicks->{{{{0., 
       FormBox["0.`", TraditionalForm], {0, 0.01}}, {0.25, 
       FormBox["0.25`", TraditionalForm], {0, 0.01}}, {0.5, 
       FormBox["0.5`", TraditionalForm], {0, 0.01}}}, {{0., 
       FormBox["0.`", TraditionalForm], {0, 0.01}}, {0.25, 
       FormBox["0.25`", TraditionalForm], {0, 0.01}}, {0.5, 
       FormBox["0.5`", TraditionalForm], {0, 0.01}}}}, {{{
       NCache[
        Log[5], 1.6094379124341003`], 
       FormBox["5", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[10], 2.302585092994046], 
       FormBox["10", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[50], 3.912023005428146], 
       FormBox["50", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[100], 4.605170185988092], 
       FormBox["100", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[1000], 6.907755278982137], 
       FormBox["1000", TraditionalForm], {0, 0.01}}}, {{
       NCache[
        Log[5], 1.6094379124341003`], 
       FormBox["5", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[10], 2.302585092994046], 
       FormBox["10", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[50], 3.912023005428146], 
       FormBox["50", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[100], 4.605170185988092], 
       FormBox["100", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[1000], 6.907755278982137], 
       FormBox["1000", TraditionalForm], {0, 0.01}}}}},
  FrameTicksStyle->{{
     Directive[
      GrayLevel[0], 
      Thickness[0.006], FontColor -> GrayLevel[0]], 
     Directive[
      GrayLevel[0], 
      Thickness[0.006]]}, {
     Directive[
      GrayLevel[0], 
      Thickness[0.006]], 
     Directive[
      GrayLevel[0], 
      Thickness[0.006]]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->NCache[{360, 180 2^Rational[1, 2]}, {360, 254.55844122715712`}],
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Exp[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Exp[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->NCache[{{
      Log[5], 
      Log[5000]}, {0, 0.5}}, {{1.6094379124341003`, 8.517193191416238}, {
     0, 0.5}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{
    Charting`ScaledTicks[{Log, Exp}], Automatic}]], "Output",
 CellChangeTimes->{
  3.711695863559532*^9, 3.711702870075303*^9, 3.7117029010647287`*^9, 
   3.711703077514059*^9, 3.71170393419132*^9, {3.711709667157542*^9, 
   3.711709669147328*^9}, 3.7117099306962013`*^9, 3.711712418950643*^9, 
   3.7117124787569523`*^9, {3.7117141326310263`*^9, 3.711714156762856*^9}, 
   3.7117145288764687`*^9, 3.711778429091012*^9, 3.711778514543406*^9, {
   3.711779890182041*^9, 3.7117801088196774`*^9}, 3.7117801573203707`*^9, {
   3.711782350800932*^9, 3.7117823796855392`*^9}, 3.71178283639592*^9, 
   3.7117828736159*^9, {3.71178568740448*^9, 3.711785732771495*^9}, 
   3.711790637107173*^9, 3.713075795356094*^9, 
   3.7130759824942837`*^9},ExpressionUUID->"a748b632-7b91-4d30-9b68-\
46b521273238"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"tryR", "=", "0.02"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"param", "=", 
   RowBox[{"{", 
    RowBox[{
    "tryFAA", ",", "tryFAa", ",", "tryFaa", ",", "tryMAA", ",", "tryMAa", ",",
      "tryMaa", ",", "trywAf", ",", "trywaf", ",", "trywAm", ",", "trywam", 
     ",", "try\[Alpha]f", ",", "try\[Alpha]m", ",", "tryr", ",", "tryR", ",", 
     
     RowBox[{
      RowBox[{"tryr", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "tryR"}], ")"}]}], "+", 
      RowBox[{"tryR", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "tryr"}], ")"}]}]}], ",", "tryk"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"run", "[", "0", "]"}], "=", 
   RowBox[{"generation", "[", 
    RowBox[{"param", ",", 
     RowBox[{"startgen", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"sieve", "[", 
         RowBox[{
         "tryFAA", ",", "tryFAa", ",", "tryFaa", ",", "tryMAA", ",", "tryMAa",
           ",", "tryMaa", ",", "trywAf", ",", "trywaf", ",", "trywAm", ",", 
          "trywam", ",", "try\[Alpha]f", ",", "try\[Alpha]m", ",", "tryr"}], 
         "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", "trypm"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"time", "=", "1"}], ",", 
   RowBox[{"time", "\[LessEqual]", "endtime"}], ",", 
   RowBox[{"time", "++"}], ",", 
   RowBox[{
    RowBox[{"run", "[", "time", "]"}], "=", 
    RowBox[{"generation", "[", 
     RowBox[{"param", ",", 
      RowBox[{"run", "[", 
       RowBox[{"time", "-", "1"}], "]"}]}], "]"}]}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MODtab1Red", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Round", "[", 
        RowBox[{"Exp", "[", "exptime", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"generation", "[", 
         RowBox[{"param", ",", 
          RowBox[{"run", "[", 
           RowBox[{"Round", "[", 
            RowBox[{"Exp", "[", "exptime", "]"}], "]"}], "]"}]}], "]"}], ".", 
        "modvec"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"exptime", ",", 
       RowBox[{"Log", "[", "startplot", "]"}], ",", 
       RowBox[{"Log", "[", "endtime", "]"}], ",", "0.1"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MOD1Red", "=", 
  RowBox[{"ListLogLinearPlot", "[", 
   RowBox[{"MODtab1Red", ",", 
    RowBox[{"Joined", "\[Rule]", "True"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"startplot", ",", "endtime"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0.5"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", "Red", "}"}]}], ",", "loglinearplotINVoptions"}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.711695517780641*^9, 3.711695522507338*^9}, {
   3.711695561965704*^9, 3.7116955719180717`*^9}, {3.711702876287524*^9, 
   3.71170287874617*^9}, {3.711702910308921*^9, 3.711702933253878*^9}, {
   3.711703067328353*^9, 3.711703067432561*^9}, {3.711703474641178*^9, 
   3.711703499003673*^9}, {3.711714536507679*^9, 3.711714565949432*^9}, {
   3.711780178324356*^9, 3.7117801904794083`*^9}, 
   3.711780231470047*^9},ExpressionUUID->"cf11eb78-16f9-4185-82f6-\
d5f73f76c402"],

Cell[BoxData[
 GraphicsBox[{{{}, {{{}, {}, {
       {RGBColor[1, 0, 0], PointSize[0.011000000000000001`], 
        AbsoluteThickness[1.6], 
        StyleBox[LineBox[CompressedData["
1:eJxl0mlM03cYB/BCy1GKchRKOVtkBpSBERWcHM9joyhTmCDKECqLEcwoWFAi
jEsFx1C3MeIgDFYY5VCgIExIuTrBIXJ0G5fFqfTH5TxBNxEEquy/uHe+ePLk
8+qb55vH/og4KFKbRqP5UvPf3vTNzML2jkVICBU23xkpAW3++iVWjQaWX7mc
0bIvfc8hh9zqTqxZgZlfV3GDT0nf88kaT/hZSsPW55tZLc/KgEWvTX5ySQt7
9dpDJFkVwDnQ1NYg0kblJt2H6b6XYa/HafmUKx2vHIawR65VkFY83M6ZoOOP
K2qLzwU1cLltlNNno4NF1SV5g3NXgbfb/yNOtQ5Ko645+u9tgOTTS52ial0c
qkcjd2yErFzRthSeHjotxulbTjdB7tTJFMGCHs4XCEZtM1ug56Z3YkKrPsI0
59MdBQp4dz8Tj24xde7ddQO+O0dvJkID7DIpkYTd64IiFWuxcgsLGTO89g90
emGw+fbcndcsnJ1ndlVH/gaKW9tmnaYMMYRROt4kGYQA2bc7I5tWYYnCMH4s
eATKe8tOsRJW492ngVtD61Vw1VomH9pjhDTdi31jBn/Cy7etoRl6xmiVZDs4
330XVsWYPs2ON8aEa+yMHvf74GLi9HfhoDEeNRGK1jqNgW2NRhXuYYIeLC/H
1ffHIFJSqZ3ykwk637W+0BOqhl/C13basUyxCstT0+rU//dtigYyS0H+pBpK
y3vMc1SmiJ3Bt+4ZEHicf2J7LbAxq7Lf5wtHAonmRbScSjZu3Dzv6+dNoDDg
7NKUgRnGZZYLNn5CoMNZMCM7YYbyJ3R1RwSBAZnifKbKDM85xPDyjxMQay1n
VXuaY5NSuXMylUD/0qMLWRXm2H1MY+R2kcB1XhFXwuSgU94avl0BgbOSgQjL
OA4+3OAXXVdOIHeXhWvyKAfZeW5mBfUEjj442Xje0wKLi5e4+9sIvJiPTB8v
tcCDUa4vRDcJnFu5H6TL5KLsTPJo5e8EhDkf/qAWc/FlX0DShIpARGxDScFt
Lv71ldTdSE0grSrPI8zbEiUhgtboaQJKxeFJRrklih2Ffn2PCVzTG+pe0rfC
YSXzuM8sgXWaVFgUW2H4Absk+j8Enu86O75fZYW7m4e1TV8RCM6+oUzwskYH
+XhA1gKVF4HC/DJrnOBFHkpbpPrg9qZLmTb42ZSCRl8m8KW+vqZWbIOxxxMN
N2oIsI788bFQZYMD/rH7rN4Q2FlbsF7qZYt7Bth+/ZRFc6+r5qS26Nnq8X3g
WwJn5rkbcph2uJxqcUxOmbWO1/NGbIe6U2x3xgoBeX3ys2CVHT7oFvn5UI7P
vxL12ouHC/l3EqMpXwqTuQeW8VAqm6B9TVkzIvfqZ/CxL9y1tIKyT4z/dfZW
PvpijLCF8o7CsaT1Ij7mLtKyeyj7K/obY4v5yDg4FDRC+d1/8nFfZ0bKGOUW
XweXfoY9Vukoy6Yp/wtKyw6T
          "]],
         FontFamily->"Helvetica",
         FontSize->12]}}}}, {}, {}, {{}, {}}, {{}, {}}}},
  AspectRatio->NCache[2^Rational[-1, 2], 0.7071067811865475],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{1.643976688829011, 0},
  BaseStyle->{FontFamily -> "Helvetica", FontSize -> 12},
  DisplayFunction->Identity,
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{
     FormBox[
      StyleBox["\"neo-W frequency\"", FontSize -> 8, StripOnInput -> False], 
      TraditionalForm], 
     FormBox["\"\"", TraditionalForm]}, {
     FormBox[
      StyleBox["\"Generation\"", FontSize -> 8, StripOnInput -> False], 
      TraditionalForm], 
     FormBox["\"\"", TraditionalForm]}},
  FrameStyle->Directive[
    GrayLevel[0], 
    Thickness[0.006]],
  FrameTicks->{{{{0., 
       FormBox["0.`", TraditionalForm], {0, 0.01}}, {0.25, 
       FormBox["0.25`", TraditionalForm], {0, 0.01}}, {0.5, 
       FormBox["0.5`", TraditionalForm], {0, 0.01}}}, {{0., 
       FormBox["0.`", TraditionalForm], {0, 0.01}}, {0.25, 
       FormBox["0.25`", TraditionalForm], {0, 0.01}}, {0.5, 
       FormBox["0.5`", TraditionalForm], {0, 0.01}}}}, {{{
       NCache[
        Log[5], 1.6094379124341003`], 
       FormBox["5", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[10], 2.302585092994046], 
       FormBox["10", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[50], 3.912023005428146], 
       FormBox["50", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[100], 4.605170185988092], 
       FormBox["100", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[1000], 6.907755278982137], 
       FormBox["1000", TraditionalForm], {0, 0.01}}}, {{
       NCache[
        Log[5], 1.6094379124341003`], 
       FormBox["5", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[10], 2.302585092994046], 
       FormBox["10", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[50], 3.912023005428146], 
       FormBox["50", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[100], 4.605170185988092], 
       FormBox["100", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[1000], 6.907755278982137], 
       FormBox["1000", TraditionalForm], {0, 0.01}}}}},
  FrameTicksStyle->{{
     Directive[
      GrayLevel[0], 
      Thickness[0.006], FontColor -> GrayLevel[0]], 
     Directive[
      GrayLevel[0], 
      Thickness[0.006]]}, {
     Directive[
      GrayLevel[0], 
      Thickness[0.006]], 
     Directive[
      GrayLevel[0], 
      Thickness[0.006]]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->NCache[{360, 180 2^Rational[1, 2]}, {360, 254.55844122715712`}],
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Exp[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Exp[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->NCache[{{
      Log[5], 
      Log[5000]}, {0, 0.5}}, {{1.6094379124341003`, 8.517193191416238}, {
     0, 0.5}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{
    Charting`ScaledTicks[{Log, Exp}], Automatic}]], "Output",
 CellChangeTimes->{
  3.711695610302847*^9, 3.711702963389113*^9, 3.711703067883417*^9, {
   3.71170347975955*^9, 3.7117034995459833`*^9}, 3.711703934618721*^9, 
   3.711709680337553*^9, 3.711709930805848*^9, 3.711710242741914*^9, 
   3.7117124193333483`*^9, 3.711712479172882*^9, {3.711714132726665*^9, 
   3.7117141598393593`*^9}, {3.711714529267712*^9, 3.711714566647304*^9}, 
   3.71177843235149*^9, 3.711780190762754*^9, 3.71178023190409*^9, {
   3.7117823556231327`*^9, 3.71178238161031*^9}, 3.711782836818779*^9, 
   3.711782874046118*^9, {3.711785687522204*^9, 3.7117857335816107`*^9}, 
   3.711790640251417*^9, 3.7130757987063828`*^9, 
   3.7130759856667957`*^9},ExpressionUUID->"ddfbf066-6066-4c06-a408-\
3f84b4c11a8c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"tryR", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"param", "=", 
   RowBox[{"{", 
    RowBox[{
    "tryFAA", ",", "tryFAa", ",", "tryFaa", ",", "tryMAA", ",", "tryMAa", ",",
      "tryMaa", ",", "trywAf", ",", "trywaf", ",", "trywAm", ",", "trywam", 
     ",", "try\[Alpha]f", ",", "try\[Alpha]m", ",", "tryr", ",", "tryR", ",", 
     
     RowBox[{
      RowBox[{"tryr", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "tryR"}], ")"}]}], "+", 
      RowBox[{"tryR", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "tryr"}], ")"}]}]}], ",", "tryk"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"run", "[", "0", "]"}], "=", 
   RowBox[{"generation", "[", 
    RowBox[{"param", ",", 
     RowBox[{"startgen", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"sieve", "[", 
         RowBox[{
         "tryFAA", ",", "tryFAa", ",", "tryFaa", ",", "tryMAA", ",", "tryMAa",
           ",", "tryMaa", ",", "trywAf", ",", "trywaf", ",", "trywAm", ",", 
          "trywam", ",", "try\[Alpha]f", ",", "try\[Alpha]m", ",", "tryr"}], 
         "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", "trypm"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"time", "=", "1"}], ",", 
   RowBox[{"time", "\[LessEqual]", "endtime"}], ",", 
   RowBox[{"time", "++"}], ",", 
   RowBox[{
    RowBox[{"run", "[", "time", "]"}], "=", 
    RowBox[{"generation", "[", 
     RowBox[{"param", ",", 
      RowBox[{"run", "[", 
       RowBox[{"time", "-", "1"}], "]"}]}], "]"}]}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MODtab1Blue", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Round", "[", 
        RowBox[{"Exp", "[", "exptime", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"generation", "[", 
         RowBox[{"param", ",", 
          RowBox[{"run", "[", 
           RowBox[{"Round", "[", 
            RowBox[{"Exp", "[", "exptime", "]"}], "]"}], "]"}]}], "]"}], ".", 
        "modvec"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"exptime", ",", 
       RowBox[{"Log", "[", "startplot", "]"}], ",", 
       RowBox[{"Log", "[", "endtime", "]"}], ",", "0.1"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MOD1Blue", "=", 
  RowBox[{"ListLogLinearPlot", "[", 
   RowBox[{"MODtab1Blue", ",", 
    RowBox[{"Joined", "\[Rule]", "True"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"startplot", ",", "endtime"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0.5"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", "Blue", "}"}]}], ",", "loglinearplotINVoptions"}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.711695517780641*^9, 3.711695522507338*^9}, {
   3.7116955538491297`*^9, 3.711695588097739*^9}, {3.7117028843813143`*^9, 
   3.71170288446397*^9}, {3.711702976071355*^9, 3.711702993624299*^9}, {
   3.71170306403876*^9, 3.711703064150305*^9}, 3.711709951730682*^9, {
   3.711780200355617*^9, 
   3.711780228572802*^9}},ExpressionUUID->"6f41c646-cd0b-4866-84b3-\
837722b116c6"],

Cell[BoxData[
 GraphicsBox[{{{}, {{{}, {}, {
       {RGBColor[0, 0, 1], PointSize[0.011000000000000001`], 
        AbsoluteThickness[1.6], 
        StyleBox[LineBox[CompressedData["
1:eJxlkns01Akcxcd7mNV6jvGciW03VoQTeX6/5BVxhD0bsazSY0emcCqvrB6a
OuVR1ikOqzEoTCKWvEIr7Nj1iKkw85td2Z6TtJPHeK097X/9cc89nz/uH/ee
uzGGFRwrTyKRvNf1n9tdlsy7dy6CRUPp7PeVJSDPsJBRqpdBtKf/+Tnv0k/4
23Db2wmma/BwgKmu6XvjE06sdoZ6DgmLxC1tkj0coCjwUl5dlcNw6gHHluQy
oH7T2FrHlMfiwN4YnWou7HLIaJqyUkCX8pXx65JySC951Eb9UwF3cR/Q/3av
hMrWx9TfjJRQ6lFYaW1aBXTfAEdqlRKa+mXxAmqrISVD1sWsUsYOeTk1HeVa
yMpjOqXSVdApmXoy5NAdyJtKTPWYV8EHbgH3yCH10NfjeiKphYzN2cPiE4cb
4GN/VbQcNZ+RCZsg96xCMxGphib9JW9sYlqgSEBZrNhGwRUmleF3vAOGm8ek
TxYo+NW+g7wYVhe09zq93Tz1Ge5olZwPyv8VAmuyvWIb1VEpk92dR/QCt7/s
OCVpA17Jzf49ZRsfag1rmkb8P0f7k5c8g70G4Z/VlrDTKhq49uWEjvjcMKjH
ab1mH9PAAhtmd97ZR7BFc/Ns4bAGOlp2PPe3HgPj6mVBhIMm5seH5Z5vE0Bs
cYV8aqkm/iKXmdGh/QQ6IjZ1mVC0sH6oUGpg+fT/vbUwyWXOM2nuKdzg9unm
CLSwNFF7n9nNcXhZkODOA22sMlcbuWg7ASd0i0g5FdqobGI/G106AYWBmbIp
NR2s4rfEv1+cgM6vPSQ1CTpoF+2XXLlzEoZq2i+cEeig/etn29MuTwJLbimr
ylkXudP5eqP8SeDLXlzMKtfF6QzDS0sqQrhPL6IVq1LR0j3o7lZXIWQWD0Xp
H6UiaatBfftRIeT56FmlPKai/VRbtCdHCPunExsuOOvhpoRwPdshIbybiz0l
vqGHCUFL3JgVIZxdmwxWVqWh2vXEN37mIojMsbwuYtFQZjXNyQkRQdSRup+v
jdHwRZqebC5VBOm3fnLY66qPr8SDdT1lIhho/+4vRa4++p8mH+7qF8FdlZGH
MrIBTswUf6iTiMB8OQ0WWQbotYPqMKhBwIxPpjhEYIBZYdbdqzYEhLK7B5Jc
DFHKaNew2U1AVBRGFpQZIvetGSk1ngAWrf8UR9UIQ2d/iF9gE3COTF7msYzw
iqPP+9ulBFBiBv0iBUbIU9hApDcS4MW7ZsFxMUa2bvKwci8BTOnCLSnHGPN9
jYv2jxHw4xzNOkfVBA0CtOL6xet5c3rfCssE+/yDjNNeEtB0J+VNqMAEO0k5
WjMzBBwruHlgwYWOEXaZXxRLCbi6t8Z+dxkd/6CpjknmCVgebXLhKzJwTJu3
6i4jwC0u4L72dgYepCjsfLZEgGeh8KQFk4EfbF9ZkFcICGjnNxwpYWDQ1CBT
sM4f/8nAdyxb9qFVAu55m23hK27EnvFat+F1/hfI3RA6
          "]],
         FontFamily->"Helvetica",
         FontSize->12]}}}}, {}, {}, {{}, {}}, {{}, {}}}},
  AspectRatio->NCache[2^Rational[-1, 2], 0.7071067811865475],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{1.643976688829011, 0},
  BaseStyle->{FontFamily -> "Helvetica", FontSize -> 12},
  DisplayFunction->Identity,
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{
     FormBox[
      StyleBox["\"neo-W frequency\"", FontSize -> 8, StripOnInput -> False], 
      TraditionalForm], 
     FormBox["\"\"", TraditionalForm]}, {
     FormBox[
      StyleBox["\"Generation\"", FontSize -> 8, StripOnInput -> False], 
      TraditionalForm], 
     FormBox["\"\"", TraditionalForm]}},
  FrameStyle->Directive[
    GrayLevel[0], 
    Thickness[0.006]],
  FrameTicks->{{{{0., 
       FormBox["0.`", TraditionalForm], {0, 0.01}}, {0.25, 
       FormBox["0.25`", TraditionalForm], {0, 0.01}}, {0.5, 
       FormBox["0.5`", TraditionalForm], {0, 0.01}}}, {{0., 
       FormBox["0.`", TraditionalForm], {0, 0.01}}, {0.25, 
       FormBox["0.25`", TraditionalForm], {0, 0.01}}, {0.5, 
       FormBox["0.5`", TraditionalForm], {0, 0.01}}}}, {{{
       NCache[
        Log[5], 1.6094379124341003`], 
       FormBox["5", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[10], 2.302585092994046], 
       FormBox["10", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[50], 3.912023005428146], 
       FormBox["50", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[100], 4.605170185988092], 
       FormBox["100", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[1000], 6.907755278982137], 
       FormBox["1000", TraditionalForm], {0, 0.01}}}, {{
       NCache[
        Log[5], 1.6094379124341003`], 
       FormBox["5", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[10], 2.302585092994046], 
       FormBox["10", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[50], 3.912023005428146], 
       FormBox["50", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[100], 4.605170185988092], 
       FormBox["100", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[1000], 6.907755278982137], 
       FormBox["1000", TraditionalForm], {0, 0.01}}}}},
  FrameTicksStyle->{{
     Directive[
      GrayLevel[0], 
      Thickness[0.006], FontColor -> GrayLevel[0]], 
     Directive[
      GrayLevel[0], 
      Thickness[0.006]]}, {
     Directive[
      GrayLevel[0], 
      Thickness[0.006]], 
     Directive[
      GrayLevel[0], 
      Thickness[0.006]]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->NCache[{360, 180 2^Rational[1, 2]}, {360, 254.55844122715712`}],
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Exp[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Exp[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->NCache[{{
      Log[5], 
      Log[5000]}, {0, 0.5}}, {{1.6094379124341003`, 8.517193191416238}, {
     0, 0.5}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{
    Charting`ScaledTicks[{Log, Exp}], Automatic}]], "Output",
 CellChangeTimes->{
  3.711695616955174*^9, 3.7117030020436897`*^9, 3.711703064585724*^9, 
   3.711703934869472*^9, 3.7117096839069843`*^9, {3.711709930966123*^9, 
   3.711709955576418*^9}, 3.711712419742366*^9, 3.711712479576453*^9, 
   3.711714132817013*^9, 3.711714162918345*^9, 3.7117145293823433`*^9, 
   3.711714568176523*^9, 3.711778435483437*^9, {3.7117802136251583`*^9, 
   3.711780232666605*^9}, {3.711782357321993*^9, 3.71178238366398*^9}, 
   3.711782837253862*^9, 3.711782874332056*^9, 3.7117856876093473`*^9, 
   3.7117857349012327`*^9, 3.7117906434954557`*^9, 3.7130758020658407`*^9, 
   3.713075988883829*^9},ExpressionUUID->"d55e6d17-e49f-42bc-9ef5-\
bd780ebbe0b2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"tryR", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"param", "=", 
   RowBox[{"{", 
    RowBox[{
    "tryFAA", ",", "tryFAa", ",", "tryFaa", ",", "tryMAA", ",", "tryMAa", ",",
      "tryMaa", ",", "trywAf", ",", "trywaf", ",", "trywAm", ",", "trywam", 
     ",", "try\[Alpha]f", ",", "try\[Alpha]m", ",", "tryr", ",", "tryR", ",", 
     
     RowBox[{
      RowBox[{"tryr", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "tryR"}], ")"}]}], "+", 
      RowBox[{"tryR", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "tryr"}], ")"}]}]}], ",", "tryk"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"run", "[", "0", "]"}], "=", 
   RowBox[{"generation", "[", 
    RowBox[{"param", ",", 
     RowBox[{"startgen", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"sieve", "[", 
         RowBox[{
         "tryFAA", ",", "tryFAa", ",", "tryFaa", ",", "tryMAA", ",", "tryMAa",
           ",", "tryMaa", ",", "trywAf", ",", "trywaf", ",", "trywAm", ",", 
          "trywam", ",", "try\[Alpha]f", ",", "try\[Alpha]m", ",", "tryr"}], 
         "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", "trypm"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"time", "=", "1"}], ",", 
   RowBox[{"time", "\[LessEqual]", "endtime"}], ",", 
   RowBox[{"time", "++"}], ",", 
   RowBox[{
    RowBox[{"run", "[", "time", "]"}], "=", 
    RowBox[{"generation", "[", 
     RowBox[{"param", ",", 
      RowBox[{"run", "[", 
       RowBox[{"time", "-", "1"}], "]"}]}], "]"}]}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MODtab1Green", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Round", "[", 
        RowBox[{"Exp", "[", "exptime", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"generation", "[", 
         RowBox[{"param", ",", 
          RowBox[{"run", "[", 
           RowBox[{"Round", "[", 
            RowBox[{"Exp", "[", "exptime", "]"}], "]"}], "]"}]}], "]"}], ".", 
        "modvec"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"exptime", ",", 
       RowBox[{"Log", "[", "startplot", "]"}], ",", 
       RowBox[{"Log", "[", "endtime", "]"}], ",", "0.1"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MOD1Green", "=", 
  RowBox[{"ListLogLinearPlot", "[", 
   RowBox[{"MODtab1Green", ",", 
    RowBox[{"Joined", "\[Rule]", "True"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"startplot", ",", "endtime"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0.5"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", "Green", "}"}]}], ",", "loglinearplotINVoptions"}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.711695591717916*^9, 3.711695602234329*^9}, {
  3.711703039655755*^9, 3.711703059891102*^9}, {3.711780241731517*^9, 
  3.711780256675057*^9}},ExpressionUUID->"75b7cd8c-08ba-4bc5-a440-\
9b2962a903be"],

Cell[BoxData[
 GraphicsBox[{{{}, {{{}, {}, {
       {RGBColor[0, 1, 0], PointSize[0.011000000000000001`], 
        AbsoluteThickness[1.6], 
        StyleBox[LineBox[CompressedData["
1:eJxl0mlMEwYYBmCuUkrngAKlnAXHCDJRmUHGte/TcA0tQ2QhDpColGwBUwQy
5ZYNCc4x1nVjjA6wUBBouZWicgfHUTY527ogImwIMpgcUqhVVsTID398efP8
fN98NmdYQUwNNTU1H9Vt5cGcBfnhjg2omPJtmfuJCxrWDgqyQAl6DfK2l7/8
9pZDPv+wJm73JrgON6w7lxa+5XiBOzSUqCEz0DNioakIyJrVSU846ng64cBS
zEgxUD+7eac+WgMb8x9OXUy5Bsdc0kXT+zTx6YpdxX1DHqQWjbRQH2miecPE
8+VaHly/I6X2WxBw1q6P27hWAnQ/hiu1ioDjE6GnrvJKISld0RldpY1NvECj
Iu0yyGJHuyXTibhsymYSOsuAPR2ffERORHvR31nr3teh967nhYTbOmjn2R+7
NFkB2/1J2B9pT5HGC+CHTM3mh+G66MX/7qCWXzVwJeSNcmcyzmgS6E6mdTDU
PLYqWyejrVm7NbGyHlp73Bbtp99B2T3WYujjRggQfu/NvLkLPWy6ZcknmoDf
V/oVOeFdlKyl6DQ8aYZac6Fo+KgeZsWF7J4Lb4GVl7dPfk3Ux/woaVGKegfs
iqHMZ5/Xx0XnqLZ0vy5wNLBfKhjSR2ZizGk5txssBUpJmIsB1lkedb/7aQ8w
C8s1kq8ZYE2J0OuvT/qhLez9TisyBQ30UqkHzv7xem8KkjjZDKLhIPD4vca5
EgpajRYTdTOHYC4v7nA1GKIAZ5oXxMNwwZirlltuiISOL2seT49AQUCGYlrX
CJ1kl50GxKPQ8cGRBWGcEYJ173DIj2MwKGy98o3ECGOTg45ZO0qApf48q8rd
GBWX/px3qJKAWDH7bVaZMfpUDlFG9KTQTufSCklUDM3Zz1I/KYWMwsEI01gq
dhmlLmuwpcD2NdmXJKViEUvd9cEtKUT+E3/jirsJ3o+0LeSOSeHpGjNtkmeC
PP0cfs+sFDI3x4O0STQMlAeH2T6TQnju3l8nWDTcWzt+laOUQsS5+uL8MRrO
EzYFrWoySK382SXU0xS7Z0Txcg0ZDLSemtLim6L/VN4hgpYMGonDvyt0zFCR
+oifqPIeZQpssMxwkpOWXaHyf74ZkyckZjgrCBQ1qxyc3TWQ4GGOzxI5Za0q
R0RgeF6pOaL+i5U2lVm0vrQSkgW65R33bFf5so6OspplgYyzcv8tk8/c8w+X
WKCwh8TYsnd1vkOJhyU6sv1eOXp1vXK1xBK1gwNe+dIabX8uyQqrRNsm76H3
vmBZYUDLtkV1Sf8GS6zwi9c+n1cRte5Bf2NOqPDQ8dIdK0dFHmIt6zf+OIbR
bvjRjr0KHlx0iN4xo1V841zRjrf/c8e3fN5zFGvZvPH/DagISw==
          "]],
         FontFamily->"Helvetica",
         FontSize->12]}}}}, {}, {}, {{}, {}}, {{}, {}}}},
  AspectRatio->NCache[2^Rational[-1, 2], 0.7071067811865475],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{1.643976688829011, 0},
  BaseStyle->{FontFamily -> "Helvetica", FontSize -> 12},
  DisplayFunction->Identity,
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{
     FormBox[
      StyleBox["\"neo-W frequency\"", FontSize -> 8, StripOnInput -> False], 
      TraditionalForm], 
     FormBox["\"\"", TraditionalForm]}, {
     FormBox[
      StyleBox["\"Generation\"", FontSize -> 8, StripOnInput -> False], 
      TraditionalForm], 
     FormBox["\"\"", TraditionalForm]}},
  FrameStyle->Directive[
    GrayLevel[0], 
    Thickness[0.006]],
  FrameTicks->{{{{0., 
       FormBox["0.`", TraditionalForm], {0, 0.01}}, {0.25, 
       FormBox["0.25`", TraditionalForm], {0, 0.01}}, {0.5, 
       FormBox["0.5`", TraditionalForm], {0, 0.01}}}, {{0., 
       FormBox["0.`", TraditionalForm], {0, 0.01}}, {0.25, 
       FormBox["0.25`", TraditionalForm], {0, 0.01}}, {0.5, 
       FormBox["0.5`", TraditionalForm], {0, 0.01}}}}, {{{
       NCache[
        Log[5], 1.6094379124341003`], 
       FormBox["5", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[10], 2.302585092994046], 
       FormBox["10", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[50], 3.912023005428146], 
       FormBox["50", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[100], 4.605170185988092], 
       FormBox["100", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[1000], 6.907755278982137], 
       FormBox["1000", TraditionalForm], {0, 0.01}}}, {{
       NCache[
        Log[5], 1.6094379124341003`], 
       FormBox["5", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[10], 2.302585092994046], 
       FormBox["10", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[50], 3.912023005428146], 
       FormBox["50", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[100], 4.605170185988092], 
       FormBox["100", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[1000], 6.907755278982137], 
       FormBox["1000", TraditionalForm], {0, 0.01}}}}},
  FrameTicksStyle->{{
     Directive[
      GrayLevel[0], 
      Thickness[0.006], FontColor -> GrayLevel[0]], 
     Directive[
      GrayLevel[0], 
      Thickness[0.006]]}, {
     Directive[
      GrayLevel[0], 
      Thickness[0.006]], 
     Directive[
      GrayLevel[0], 
      Thickness[0.006]]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->NCache[{360, 180 2^Rational[1, 2]}, {360, 254.55844122715712`}],
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Exp[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Exp[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->NCache[{{
      Log[5], 
      Log[5000]}, {0, 0.5}}, {{1.6094379124341003`, 8.517193191416238}, {
     0, 0.5}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{
    Charting`ScaledTicks[{Log, Exp}], Automatic}]], "Output",
 CellChangeTimes->{
  3.711695623991362*^9, {3.711703047777299*^9, 3.7117030609721527`*^9}, 
   3.7117039354124393`*^9, 3.711709692662835*^9, {3.711709931170182*^9, 
   3.711709955747266*^9}, 3.711712420335341*^9, 3.7117124800710077`*^9, 
   3.711714132910102*^9, 3.7117141660147448`*^9, 3.711714529472538*^9, 
   3.711714569319468*^9, 3.711778438585713*^9, {3.711780252045075*^9, 
   3.711780257156671*^9}, 3.711782385230115*^9, 3.711782837728078*^9, 
   3.7117828746040792`*^9, 3.711785687695221*^9, 3.711785735773938*^9, 
   3.711790646979216*^9, 3.713075805385165*^9, 
   3.713075990331208*^9},ExpressionUUID->"9403e1e4-1b79-404d-b3bd-\
fae617aff758"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"MOD1Black", ",", "MOD1Red", ",", "MOD1Blue", ",", "MOD1Green"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7117802694852753`*^9, 
  3.711780291119823*^9}},ExpressionUUID->"4462da1d-7929-4a56-8177-\
52cfd79ac48c"],

Cell[BoxData[
 GraphicsBox[{{{{}, {{{}, {}, {
        {GrayLevel[0], PointSize[0.011000000000000001`], AbsoluteThickness[
         1.6], 
         StyleBox[LineBox[CompressedData["
1:eJxl0mlQk2cQB/AYroQXSrhCgiEEeiGCtlZKFXRXyuGo0KoorXI4tDg4EcJV
cQBFlFKgFqSowyFWQ0SOACrQUCCCrWlBqApKYkvhMUWKVfCCcoQAfTv2mx92
dn4fdnb2P+sUKdkWxWQwGP50/dff+2Z8ekPHLBxfE3Al1/ocMEWuOqpGD2Ra
WpAbfv4Vh+xaVZfgvAgx6/eaOd2UvuLEGi+4ImXg7X5tb0GUDCiD2pRHhUsw
Odb86haXCuDuaGq9LGbi80C0HuFXwhbPdMXwCgP8CfepTNdXw6Gzd9q4WgOU
n0yRHi6Sw8VWDfeGwAhDxcMbqxYvgePGwDXcaiOkPjzpdijnCqSk666Jq41R
d51jVWP0PWQViNemOppgZJprn0qngILhxFSfaRP0Ndpj2RzSBp2qdclJLSwM
E5YfLbvYAS/vZ2NAcdW7A4+uw4lMg2YSZopuaZq6F5xOKFVTsxUeFIqWnFGE
8H+F3ub+yXszFLoEx1c6OfWC8pe1T1yGzTCxyLNnct9dCJLn+UU1mSNLM3XA
0FcDsq7yA1TSa5hMFZspjv8G9Uvlir7NFthgktibdG4AJhZaPj1qwsF2izcs
m5mDYL7f6nF2PAdz3zaK01FD4G7p8rykl4NdzsvndlYNgUONXh3qaYlvyUoG
2qwJRJVVMFPPWWIeU3WsayeBq6FvXhNSVijIOKtelU7+z9sKD3609YHPKQLn
ZZ22+Wor/DYtfNRdRuDv0wkbasEal7GNf99cSyDZtpSRX2GNEkbD6v0NBEqC
MnTDpja4sv4Jy7WZQMdyn3F5gg2mT1S6SNsI3JYrc46pbdBmfi58rIOAZMlc
VrWXLWojHrSKVQS6dQ9zsy7YIkxETwXdINDuWMorY3MxpzE6lbpFIKPsdgQ/
jot5dwZjx+8QKAiwW5Gi4aKHLMms5x6Bz0cSG3O87HCBYafcM0jg2VTU4fvn
7XCLqi99QEsgc/GPbcZsHm4MNR7j/0UgLN+teEjCw89GKwIMHhGIiLn8XVE/
Dz/2uB6UPU7gUNUpz93r+Ni5O02rfEagRxn+p6GMj+zRk5lfTRBoMOn7Wcey
xxMC57GRfwgs06fBrMQe+f0Oj19ME3gakHF/u9oeb632D74wSyA4+8eeJO+l
aKFZg6w5el8Ehp0uX4pN7Vypi57Og9d1WMoWYEPsJ42m8wS+ZLH0tRIB+uza
XtxKm4q8tSlMLUCedtM7fgsE/GqLXKXeDjjZ+VBYR1s8OVM1KXXAqtFsaoH2
kSneyny2EMM5wTfXLtLzyxw75yVCnO2KbommrbiUMhasFmLymbgjX9OOP125
d8bbESP7FvUXaBfulr+/tdwR93mDQwtt/V2Fd7ehCN28fI920V6/P7Dd+gMR
Jq9w39NP27dk8KCrWIQ7vrh3ZIh2oLK7MeasCNtmPEpHaL/8TxEmFlaKHtP+
wf91925DJ6wXWyQ8pf0vnVYYkA==
           "]],
          FontFamily->"Helvetica",
          FontSize->12]}}}}, {}, {}, {{}, {}}, {{}, {}}}}, {{{}, {{{}, {}, {
        {RGBColor[1, 0, 0], PointSize[0.011000000000000001`], 
         AbsoluteThickness[1.6], 
         StyleBox[LineBox[CompressedData["
1:eJxl0mlM03cYB/BCy1GKchRKOVtkBpSBERWcHM9joyhTmCDKECqLEcwoWFAi
jEsFx1C3MeIgDFYY5VCgIExIuTrBIXJ0G5fFqfTH5TxBNxEEquy/uHe+ePLk
8+qb55vH/og4KFKbRqP5UvPf3vTNzML2jkVICBU23xkpAW3++iVWjQaWX7mc
0bIvfc8hh9zqTqxZgZlfV3GDT0nf88kaT/hZSsPW55tZLc/KgEWvTX5ySQt7
9dpDJFkVwDnQ1NYg0kblJt2H6b6XYa/HafmUKx2vHIawR65VkFY83M6ZoOOP
K2qLzwU1cLltlNNno4NF1SV5g3NXgbfb/yNOtQ5Ko645+u9tgOTTS52ial0c
qkcjd2yErFzRthSeHjotxulbTjdB7tTJFMGCHs4XCEZtM1ug56Z3YkKrPsI0
59MdBQp4dz8Tj24xde7ddQO+O0dvJkID7DIpkYTd64IiFWuxcgsLGTO89g90
emGw+fbcndcsnJ1ndlVH/gaKW9tmnaYMMYRROt4kGYQA2bc7I5tWYYnCMH4s
eATKe8tOsRJW492ngVtD61Vw1VomH9pjhDTdi31jBn/Cy7etoRl6xmiVZDs4
330XVsWYPs2ON8aEa+yMHvf74GLi9HfhoDEeNRGK1jqNgW2NRhXuYYIeLC/H
1ffHIFJSqZ3ykwk637W+0BOqhl/C13basUyxCstT0+rU//dtigYyS0H+pBpK
y3vMc1SmiJ3Bt+4ZEHicf2J7LbAxq7Lf5wtHAonmRbScSjZu3Dzv6+dNoDDg
7NKUgRnGZZYLNn5CoMNZMCM7YYbyJ3R1RwSBAZnifKbKDM85xPDyjxMQay1n
VXuaY5NSuXMylUD/0qMLWRXm2H1MY+R2kcB1XhFXwuSgU94avl0BgbOSgQjL
OA4+3OAXXVdOIHeXhWvyKAfZeW5mBfUEjj442Xje0wKLi5e4+9sIvJiPTB8v
tcCDUa4vRDcJnFu5H6TL5KLsTPJo5e8EhDkf/qAWc/FlX0DShIpARGxDScFt
Lv71ldTdSE0grSrPI8zbEiUhgtboaQJKxeFJRrklih2Ffn2PCVzTG+pe0rfC
YSXzuM8sgXWaVFgUW2H4Absk+j8Enu86O75fZYW7m4e1TV8RCM6+oUzwskYH
+XhA1gKVF4HC/DJrnOBFHkpbpPrg9qZLmTb42ZSCRl8m8KW+vqZWbIOxxxMN
N2oIsI788bFQZYMD/rH7rN4Q2FlbsF7qZYt7Bth+/ZRFc6+r5qS26Nnq8X3g
WwJn5rkbcph2uJxqcUxOmbWO1/NGbIe6U2x3xgoBeX3ys2CVHT7oFvn5UI7P
vxL12ouHC/l3EqMpXwqTuQeW8VAqm6B9TVkzIvfqZ/CxL9y1tIKyT4z/dfZW
PvpijLCF8o7CsaT1Ij7mLtKyeyj7K/obY4v5yDg4FDRC+d1/8nFfZ0bKGOUW
XweXfoY9Vukoy6Yp/wtKyw6T
           "]],
          FontFamily->"Helvetica",
          FontSize->12]}}}}, {}, {}, {{}, {}}, {{}, {}}}}, {{{}, {{{}, {}, {
        {RGBColor[0, 0, 1], PointSize[0.011000000000000001`], 
         AbsoluteThickness[1.6], 
         StyleBox[LineBox[CompressedData["
1:eJxlkns01Akcxcd7mNV6jvGciW03VoQTeX6/5BVxhD0bsazSY0emcCqvrB6a
OuVR1ikOqzEoTCKWvEIr7Nj1iKkw85td2Z6TtJPHeK097X/9cc89nz/uH/ee
uzGGFRwrTyKRvNf1n9tdlsy7dy6CRUPp7PeVJSDPsJBRqpdBtKf/+Tnv0k/4
23Db2wmma/BwgKmu6XvjE06sdoZ6DgmLxC1tkj0coCjwUl5dlcNw6gHHluQy
oH7T2FrHlMfiwN4YnWou7HLIaJqyUkCX8pXx65JySC951Eb9UwF3cR/Q/3av
hMrWx9TfjJRQ6lFYaW1aBXTfAEdqlRKa+mXxAmqrISVD1sWsUsYOeTk1HeVa
yMpjOqXSVdApmXoy5NAdyJtKTPWYV8EHbgH3yCH10NfjeiKphYzN2cPiE4cb
4GN/VbQcNZ+RCZsg96xCMxGphib9JW9sYlqgSEBZrNhGwRUmleF3vAOGm8ek
TxYo+NW+g7wYVhe09zq93Tz1Ge5olZwPyv8VAmuyvWIb1VEpk92dR/QCt7/s
OCVpA17Jzf49ZRsfag1rmkb8P0f7k5c8g70G4Z/VlrDTKhq49uWEjvjcMKjH
ab1mH9PAAhtmd97ZR7BFc/Ns4bAGOlp2PPe3HgPj6mVBhIMm5seH5Z5vE0Bs
cYV8aqkm/iKXmdGh/QQ6IjZ1mVC0sH6oUGpg+fT/vbUwyWXOM2nuKdzg9unm
CLSwNFF7n9nNcXhZkODOA22sMlcbuWg7ASd0i0g5FdqobGI/G106AYWBmbIp
NR2s4rfEv1+cgM6vPSQ1CTpoF+2XXLlzEoZq2i+cEeig/etn29MuTwJLbimr
ylkXudP5eqP8SeDLXlzMKtfF6QzDS0sqQrhPL6IVq1LR0j3o7lZXIWQWD0Xp
H6UiaatBfftRIeT56FmlPKai/VRbtCdHCPunExsuOOvhpoRwPdshIbybiz0l
vqGHCUFL3JgVIZxdmwxWVqWh2vXEN37mIojMsbwuYtFQZjXNyQkRQdSRup+v
jdHwRZqebC5VBOm3fnLY66qPr8SDdT1lIhho/+4vRa4++p8mH+7qF8FdlZGH
MrIBTswUf6iTiMB8OQ0WWQbotYPqMKhBwIxPpjhEYIBZYdbdqzYEhLK7B5Jc
DFHKaNew2U1AVBRGFpQZIvetGSk1ngAWrf8UR9UIQ2d/iF9gE3COTF7msYzw
iqPP+9ulBFBiBv0iBUbIU9hApDcS4MW7ZsFxMUa2bvKwci8BTOnCLSnHGPN9
jYv2jxHw4xzNOkfVBA0CtOL6xet5c3rfCssE+/yDjNNeEtB0J+VNqMAEO0k5
WjMzBBwruHlgwYWOEXaZXxRLCbi6t8Z+dxkd/6CpjknmCVgebXLhKzJwTJu3
6i4jwC0u4L72dgYepCjsfLZEgGeh8KQFk4EfbF9ZkFcICGjnNxwpYWDQ1CBT
sM4f/8nAdyxb9qFVAu55m23hK27EnvFat+F1/hfI3RA6
           "]],
          FontFamily->"Helvetica",
          FontSize->12]}}}}, {}, {}, {{}, {}}, {{}, {}}}}, {{{}, {{{}, {}, {
        {RGBColor[0, 1, 0], PointSize[0.011000000000000001`], 
         AbsoluteThickness[1.6], 
         StyleBox[LineBox[CompressedData["
1:eJxl0mlMEwYYBmCuUkrngAKlnAXHCDJRmUHGte/TcA0tQ2QhDpColGwBUwQy
5ZYNCc4x1nVjjA6wUBBouZWicgfHUTY527ogImwIMpgcUqhVVsTID398efP8
fN98NmdYQUwNNTU1H9Vt5cGcBfnhjg2omPJtmfuJCxrWDgqyQAl6DfK2l7/8
9pZDPv+wJm73JrgON6w7lxa+5XiBOzSUqCEz0DNioakIyJrVSU846ng64cBS
zEgxUD+7eac+WgMb8x9OXUy5Bsdc0kXT+zTx6YpdxX1DHqQWjbRQH2miecPE
8+VaHly/I6X2WxBw1q6P27hWAnQ/hiu1ioDjE6GnrvJKISld0RldpY1NvECj
Iu0yyGJHuyXTibhsymYSOsuAPR2ffERORHvR31nr3teh967nhYTbOmjn2R+7
NFkB2/1J2B9pT5HGC+CHTM3mh+G66MX/7qCWXzVwJeSNcmcyzmgS6E6mdTDU
PLYqWyejrVm7NbGyHlp73Bbtp99B2T3WYujjRggQfu/NvLkLPWy6ZcknmoDf
V/oVOeFdlKyl6DQ8aYZac6Fo+KgeZsWF7J4Lb4GVl7dPfk3Ux/woaVGKegfs
iqHMZ5/Xx0XnqLZ0vy5wNLBfKhjSR2ZizGk5txssBUpJmIsB1lkedb/7aQ8w
C8s1kq8ZYE2J0OuvT/qhLez9TisyBQ30UqkHzv7xem8KkjjZDKLhIPD4vca5
EgpajRYTdTOHYC4v7nA1GKIAZ5oXxMNwwZirlltuiISOL2seT49AQUCGYlrX
CJ1kl50GxKPQ8cGRBWGcEYJ173DIj2MwKGy98o3ECGOTg45ZO0qApf48q8rd
GBWX/px3qJKAWDH7bVaZMfpUDlFG9KTQTufSCklUDM3Zz1I/KYWMwsEI01gq
dhmlLmuwpcD2NdmXJKViEUvd9cEtKUT+E3/jirsJ3o+0LeSOSeHpGjNtkmeC
PP0cfs+sFDI3x4O0STQMlAeH2T6TQnju3l8nWDTcWzt+laOUQsS5+uL8MRrO
EzYFrWoySK382SXU0xS7Z0Txcg0ZDLSemtLim6L/VN4hgpYMGonDvyt0zFCR
+oifqPIeZQpssMxwkpOWXaHyf74ZkyckZjgrCBQ1qxyc3TWQ4GGOzxI5Za0q
R0RgeF6pOaL+i5U2lVm0vrQSkgW65R33bFf5so6OspplgYyzcv8tk8/c8w+X
WKCwh8TYsnd1vkOJhyU6sv1eOXp1vXK1xBK1gwNe+dIabX8uyQqrRNsm76H3
vmBZYUDLtkV1Sf8GS6zwi9c+n1cRte5Bf2NOqPDQ8dIdK0dFHmIt6zf+OIbR
bvjRjr0KHlx0iN4xo1V841zRjrf/c8e3fN5zFGvZvPH/DagISw==
           "]],
          FontFamily->"Helvetica",
          FontSize->12]}}}}, {}, {}, {{}, {}}, {{}, {}}}}},
  AspectRatio->NCache[2^Rational[-1, 2], 0.7071067811865475],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{1.643976688829011, 0},
  BaseStyle->{FontFamily -> "Helvetica", FontSize -> 12},
  DisplayFunction->Identity,
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{
     FormBox[
      StyleBox["\"neo-W frequency\"", FontSize -> 8, StripOnInput -> False], 
      TraditionalForm], 
     FormBox["\"\"", TraditionalForm]}, {
     FormBox[
      StyleBox["\"Generation\"", FontSize -> 8, StripOnInput -> False], 
      TraditionalForm], 
     FormBox["\"\"", TraditionalForm]}},
  FrameStyle->Directive[
    GrayLevel[0], 
    Thickness[0.006]],
  FrameTicks->{{{{0., 
       FormBox["0.`", TraditionalForm], {0, 0.01}}, {0.25, 
       FormBox["0.25`", TraditionalForm], {0, 0.01}}, {0.5, 
       FormBox["0.5`", TraditionalForm], {0, 0.01}}}, {{0., 
       FormBox["0.`", TraditionalForm], {0, 0.01}}, {0.25, 
       FormBox["0.25`", TraditionalForm], {0, 0.01}}, {0.5, 
       FormBox["0.5`", TraditionalForm], {0, 0.01}}}}, {{{
       NCache[
        Log[5], 1.6094379124341003`], 
       FormBox["5", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[10], 2.302585092994046], 
       FormBox["10", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[50], 3.912023005428146], 
       FormBox["50", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[100], 4.605170185988092], 
       FormBox["100", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[1000], 6.907755278982137], 
       FormBox["1000", TraditionalForm], {0, 0.01}}}, {{
       NCache[
        Log[5], 1.6094379124341003`], 
       FormBox["5", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[10], 2.302585092994046], 
       FormBox["10", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[50], 3.912023005428146], 
       FormBox["50", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[100], 4.605170185988092], 
       FormBox["100", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[1000], 6.907755278982137], 
       FormBox["1000", TraditionalForm], {0, 0.01}}}}},
  FrameTicksStyle->{{
     Directive[
      GrayLevel[0], 
      Thickness[0.006], FontColor -> GrayLevel[0]], 
     Directive[
      GrayLevel[0], 
      Thickness[0.006]]}, {
     Directive[
      GrayLevel[0], 
      Thickness[0.006]], 
     Directive[
      GrayLevel[0], 
      Thickness[0.006]]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->NCache[{360, 180 2^Rational[1, 2]}, {360, 254.55844122715712`}],
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Exp[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Exp[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->NCache[{{
      Log[5], 
      Log[5000]}, {0, 0.5}}, {{1.6094379124341003`, 8.517193191416238}, {
     0, 0.5}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{
    Charting`ScaledTicks[{Log, Exp}], Automatic}]], "Output",
 CellChangeTimes->{
  3.711780291454389*^9, 3.711782386300087*^9, 3.7117828379559183`*^9, 
   3.7117828747192783`*^9, 3.711785687777063*^9, 3.711785736566949*^9, 
   3.711790647097178*^9, {3.713075805454217*^9, 3.7130758055078583`*^9}, 
   3.713075990478932*^9},ExpressionUUID->"313d972d-23b9-4ebb-ac5b-\
771d7fdd3a94"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Parameters (female drive)", "Subsubsection",
 CellChangeTimes->{{3.7117896910190773`*^9, 3.711789692171351*^9}, {
  3.713075844172964*^9, 3.7130758468181*^9}, {3.713076444607532*^9, 
  3.7130764446974163`*^9}},ExpressionUUID->"56bd5cc5-bde2-4b1c-a258-\
a35db8cbda97"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"tryFAA", "=", 
   RowBox[{"1", "-", 
    RowBox[{"1", "/", "4"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tryFAa", "=", 
   RowBox[{"1", "-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "/", "4"}], ")"}], 
     RowBox[{"(", 
      RowBox[{"1", "/", "4"}], ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tryFaa", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tryMAA", "=", 
   RowBox[{"1", "-", 
    RowBox[{"1", "/", "4"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tryMAa", "=", 
   RowBox[{"1", "-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "/", "4"}], ")"}], 
     RowBox[{"(", 
      RowBox[{"1", "/", "4"}], ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tryMaa", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"trywAf", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"trywaf", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"trywAm", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"trywam", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"try\[Alpha]f", "=", 
   RowBox[{
    RowBox[{"1", "/", "2"}], "+", 
    RowBox[{"1", "/", "8"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"try\[Alpha]m", "=", 
   RowBox[{"1", "/", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tryr", "=", 
   RowBox[{"1", "/", "200"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tryR", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"subpar1", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"FAA", "\[Rule]", "tryFAA"}], ",", 
     RowBox[{"FAa", "\[Rule]", "tryFAa"}], ",", 
     RowBox[{"Faa", "\[Rule]", "tryFaa"}], ",", 
     RowBox[{"MAA", "\[Rule]", "tryMAA"}], ",", 
     RowBox[{"MAa", "\[Rule]", "tryMAa"}], ",", 
     RowBox[{"Maa", "\[Rule]", "tryMaa"}], ",", 
     RowBox[{"wAf", "->", "trywAf"}], ",", 
     RowBox[{"waf", "->", "trywaf"}], ",", 
     RowBox[{"wAm", "->", "trywAm"}], ",", 
     RowBox[{"wam", "->", "trywam"}], ",", 
     RowBox[{"\[Alpha]f", "->", "try\[Alpha]f"}], ",", 
     RowBox[{"\[Alpha]m", "->", "try\[Alpha]m"}]}], "}"}]}], ";"}]}], "Input",\

 CellChangeTimes->{{3.697299472701777*^9, 3.697299615143155*^9}, {
   3.69729974606957*^9, 3.6972997764327097`*^9}, 3.69730060073298*^9, {
   3.69730066890292*^9, 3.69730067414042*^9}, {3.6973007268098497`*^9, 
   3.69730072981532*^9}, {3.6973012570019836`*^9, 3.697301268086133*^9}, {
   3.69730161492304*^9, 3.697301617644561*^9}, {3.697302327559979*^9, 
   3.697302327863235*^9}, {3.697302740882915*^9, 3.6973027413209543`*^9}, {
   3.697302786656652*^9, 3.697302787281019*^9}, {3.697302962121398*^9, 
   3.6973029905212173`*^9}, 3.697303079565696*^9, 3.697303120491474*^9, {
   3.697303431993217*^9, 3.6973034322206907`*^9}, {3.6973034629706907`*^9, 
   3.697303517375206*^9}, {3.697304249782853*^9, 3.697304293461493*^9}, {
   3.697304948734173*^9, 3.697304950456213*^9}, {3.710182518453659*^9, 
   3.710182522036127*^9}, {3.710184612997334*^9, 3.710184634901937*^9}, {
   3.710185190360118*^9, 3.710185190453978*^9}, {3.710185503341949*^9, 
   3.710185503652523*^9}, {3.710185768446323*^9, 3.7101857690503693`*^9}, 
   3.710244391216098*^9, 3.710350541541176*^9, 3.710350868579856*^9, 
   3.71035134518941*^9, 3.710351411026071*^9, 3.710351533996911*^9, {
   3.710352268506646*^9, 3.710352268573635*^9}, {3.711528118943572*^9, 
   3.7115281223839407`*^9}, {3.7115281574856462`*^9, 
   3.7115281600083103`*^9}, {3.711692518953178*^9, 3.711692553386442*^9}, {
   3.7116925839166927`*^9, 3.7116927566818457`*^9}, {3.7116930018904877`*^9, 
   3.711693025794161*^9}, {3.7116930829601803`*^9, 3.7116930834244843`*^9}, {
   3.7116974110978622`*^9, 3.711697424705469*^9}, {3.711702817336348*^9, 
   3.711702836548231*^9}, {3.711703342798403*^9, 3.711703378874107*^9}, {
   3.7117034458830233`*^9, 3.711703446190003*^9}, {3.711714126332465*^9, 
   3.711714126923059*^9}, {3.7117897874111023`*^9, 3.7117897877019033`*^9}, {
   3.713075577438867*^9, 3.713075636006651*^9}, {3.713076452533245*^9, 
   3.713076463698235*^9}, {3.7130838077011213`*^9, 
   3.713083808877696*^9}},ExpressionUUID->"a64b591e-ff0e-4bf7-8a2f-\
ba2108b59cfa"]
}, Closed]],

Cell[CellGroupData[{

Cell["Plot", "Subsubsection",
 CellChangeTimes->{{3.711789765961763*^9, 
  3.711789766425194*^9}},ExpressionUUID->"071c706b-ef9d-4fcb-aff1-\
fd9930914108"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"tab", "=", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"equil", "=", 
       RowBox[{
        RowBox[{"sieve", "[", 
         RowBox[{
         "tryFAA", ",", "tryFAa", ",", "tryFaa", ",", "tryMAA", ",", "tryMAa",
           ",", "tryMaa", ",", "trywAf", ",", "trywaf", ",", "trywAm", ",", 
          "trywam", ",", "try\[Alpha]f", ",", "try\[Alpha]m", ",", "tryr"}], 
         "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Lambda]", "/.", 
       RowBox[{"Solve", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 SuperscriptBox["\[Lambda]", "2"], "-", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"\[Lambda]mA", " ", "+", "\[Lambda]ma"}], ")"}], 
                  "\[Lambda]"}], " ", "+", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"\[Lambda]mA", " ", "\[Lambda]ma"}], "-", 
                   RowBox[{"\[Rho]mA", " ", "\[Rho]ma"}]}], ")"}]}], "/.", 
                "SUBS"}], "/.", "subequil"}], "/.", "subpar1"}], "/.", 
             RowBox[{"R", "\[Rule]", 
              RowBox[{"0.5", "^", "b"}]}]}], "/.", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"pXf", "\[Rule]", 
               RowBox[{"equil", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], ",", 
              RowBox[{"pXm", "\[Rule]", 
               RowBox[{"equil", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], ",", 
              RowBox[{"pYm", "\[Rule]", 
               RowBox[{"equil", "[", 
                RowBox[{"[", "3", "]"}], "]"}]}], ",", 
              RowBox[{"freqYm", "\[Rule]", 
               RowBox[{"equil", "[", 
                RowBox[{"[", "4", "]"}], "]"}]}]}], "}"}]}], ")"}], 
          "\[Equal]", "0"}], ",", "\[Lambda]"}], "]"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "10", ",", "1", ",", 
       RowBox[{
        RowBox[{"-", "1"}], "/", "2"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eigen1", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"0.5", "^", "b"}], ",", 
         RowBox[{"{", 
          RowBox[{"b", ",", "10", ",", "1", ",", 
           RowBox[{
            RowBox[{"-", "1"}], "/", "2"}]}], "}"}]}], "]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Transpose", "[", "tab", "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], "-", "1"}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eigen2", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"0.5", "^", "b"}], ",", 
         RowBox[{"{", 
          RowBox[{"b", ",", "10", ",", "1", ",", 
           RowBox[{
            RowBox[{"-", "1"}], "/", "2"}]}], "}"}]}], "]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Transpose", "[", "tab", "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}], "-", "1"}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"plot1", "=", 
  RowBox[{"Show", "[", "\[IndentingNewLine]", 
   RowBox[{"ListLogLinearPlot", "[", 
    RowBox[{"eigen2", ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Thick", ",", "Black"}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0.0008", ",", "0.5"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"yplotmin", ",", "yplotmax"}], "}"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", "loglinearplotR\[Lambda]options"}], "]"}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.711789818872653*^9, 3.711789829510097*^9}, {
   3.711789895199415*^9, 3.711789898765771*^9}, {3.711790424977929*^9, 
   3.711790432167965*^9}, 
   3.711790552521893*^9},ExpressionUUID->"3aa34cf5-0d96-4c4a-9ebb-\
f35cb10b007b"],

Cell[BoxData[
 GraphicsBox[{{{}, {{{}, {}, {
       {GrayLevel[0], PointSize[0.012833333333333334`], Thickness[Large], 
        StyleBox[
         LineBox[{{-5.199638232669768, 0.25}, {-5.19860385419959, 
          0.24999629137742319`}, {-4.852030263919617, 
          0.24826104164486162`}, {-4.505456673639644, 
          0.2458517489665768}, {-4.1588830833596715`, 
          0.2425355946569927}, {-3.8123094930796992`, 
          0.2380320680321193}, {-3.4657359027997265`, 
          0.23204394303806164`}, {-3.119162312519754, 
          0.22434740570037381`}, {-2.772588722239781, 
          0.21498021125317002`}, {-2.4260151319598084`, 
          0.204501595588644}, {-2.0794415416798357`, 
          0.19406853620952202`}, {-1.7328679513998633`, 
          0.1849589930067268}, {-1.3862943611198906`, 
          0.177851140635634}, {-1.0397207708399179`, 
          0.17268822899933745`}, {-0.6931471805599453, 0.16906414038014161`}}],
         FontFamily->"Helvetica",
         FontSize->14]}}}}, {}, {}, {{}, {}}, {{}, {}}}},
  AspectRatio->NCache[2^Rational[-1, 2], 0.7071067811865475],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-7.098710072047664, 0},
  BaseStyle->{FontFamily -> "Helvetica", FontSize -> 14},
  DisplayFunction->Identity,
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{
     FormBox["\"\"", TraditionalForm], 
     FormBox["\"\"", TraditionalForm]}, {
     FormBox[
      StyleBox["\"R\"", FontSize -> 14, StripOnInput -> False], 
      TraditionalForm], 
     FormBox["\"\"", TraditionalForm]}},
  FrameStyle->Directive[
    GrayLevel[0], 
    Thickness[0.006]],
  FrameTicks->{{{{-0.1, 
       FormBox[
        RowBox[{"-", "0.1`"}], TraditionalForm], {0, 0.01}}, {0., 
       FormBox["0.`", TraditionalForm], {0, 0.01}}, {0.1, 
       FormBox["0.1`", TraditionalForm], {0, 0.01}}, {0.20000000000000004`, 
       FormBox["0.20000000000000004`", TraditionalForm], {0, 0.01}}}, {{-0.1, 
       
       FormBox[
        RowBox[{"-", "0.1`"}], TraditionalForm], {0, 0.01}}, {0., 
       FormBox["0.`", TraditionalForm], {0, 0.01}}, {0.1, 
       FormBox["0.1`", TraditionalForm], {0, 0.01}}, {0.20000000000000004`, 
       FormBox["0.20000000000000004`", TraditionalForm], {
       0, 0.01}}}}, {{{-6.907755278982137, 
       FormBox["0.001`", TraditionalForm], {0, 0.01}}, {-5.298317366548036, 
       FormBox["\"r\"", TraditionalForm], {0, 0.01}}, {-4.605170185988091, 
       FormBox["0.01`", TraditionalForm], {0, 0.01}}, {-2.995732273553991, 
       FormBox["0.05`", TraditionalForm], {0, 0.01}}, {-0.6931471805599453, 
       FormBox["0.5`", TraditionalForm], {0, 0.01}}}, {{-6.907755278982137, 
       FormBox["0.001`", TraditionalForm], {0, 0.01}}, {-5.298317366548036, 
       FormBox["\"r\"", TraditionalForm], {0, 0.01}}, {-4.605170185988091, 
       FormBox["0.01`", TraditionalForm], {0, 0.01}}, {-2.995732273553991, 
       FormBox["0.05`", TraditionalForm], {0, 0.01}}, {-0.6931471805599453, 
       FormBox["0.5`", TraditionalForm], {0, 0.01}}}}},
  FrameTicksStyle->{{
     Directive[
      GrayLevel[0], 
      Thickness[0.006], FontColor -> GrayLevel[0]], 
     Directive[
      GrayLevel[0], 
      Thickness[0.006]]}, {
     Directive[
      GrayLevel[0], 
      Thickness[0.006]], 
     Directive[
      GrayLevel[0], 
      Thickness[0.006]]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->{{40, 20}, {50, 30}},
  ImageSize->NCache[{360, 180 2^Rational[1, 2]}, {360, 254.55844122715712`}],
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Exp[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Exp[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-7.1308988302963465`, -0.6931471805599453}, {-0.075, 0.25}},
  PlotRangeClipping->False,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->FrontEndValueCache[{
     Charting`ScaledTicks[{Log, Exp}], Automatic}, {{{-6.907755278982137, 
       FormBox["0.001`", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-5.298317366548036, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.005\"", 0.005, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 3.}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-4.605170185988091, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.010\"", 0.01, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 3.}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-2.995732273553991, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.050\"", 0.05, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 3.}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-2.3025850929940455`, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.100\"", 0.1, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 3.}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.6931471805599453, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.500\"", 0.5, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 3.}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-7.600902459542082, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-7.418580902748128, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-7.264430222920869, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-7.1308988302963465`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-7.013115794639964, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-6.214608098422191, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-5.809142990314028, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-5.521460917862246, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-5.115995809754082, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-4.961845129926823, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-4.8283137373023015`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-4.710530701645918, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-3.912023005428146, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-3.506557897319982, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-3.2188758248682006`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-2.8134107167600364`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-2.659260036932778, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-2.5257286443082556`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-2.4079456086518722`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-1.6094379124341003`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-1.2039728043259361`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-0.916290731874155, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-0.5108256237659907, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-0.35667494393873245`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-0.2231435513142097, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-0.10536051565782628`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {0., 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {0.4054651081081644, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {0.6931471805599453, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}}, Automatic}]]], "Output",
 CellChangeTimes->{{3.711789772577486*^9, 3.711789789543001*^9}, {
   3.71178982132514*^9, 3.711789830040066*^9}, {3.711789899320304*^9, 
   3.711789927244409*^9}, 3.711790008409782*^9, 3.711790054993622*^9, 
   3.711790111581698*^9, 3.711790432852747*^9, 3.711790553414027*^9, 
   3.71307564996157*^9, {3.713075712980227*^9, 3.713075731203094*^9}, 
   3.713076471139887*^9, 
   3.713083814259383*^9},ExpressionUUID->"68007adc-06b7-4b84-8481-\
125fd1a3698a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"temp", "=", 
  RowBox[{"Show", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ListLogLinearPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0.0008", ",", "yplotmax"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"tryr", ",", "yplotmax"}], "}"}]}], "}"}], ",", 
      RowBox[{"Joined", "\[Rule]", "True"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Black", ",", "Thin"}], "}"}]}], ",", 
      RowBox[{"Filling", "\[Rule]", "yplotmin"}], ",", 
      RowBox[{"FillingStyle", "\[Rule]", "LightGray"}], ",", 
      "loglinearplotR\[Lambda]options", ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0.0008", ",", "0.5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"yplotmin", ",", "yplotmax"}], "}"}]}], "}"}]}]}], "]"}], 
    ",", "\[IndentingNewLine]", "plot1", ",", "\[IndentingNewLine]", 
    RowBox[{"ListLogLinearPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"tryr", ",", "yplotmax"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"tryr", ",", "yplotmin"}], "}"}]}], "}"}], ",", 
      RowBox[{"Joined", "\[Rule]", "True"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Black", ",", "Thin"}], "}"}]}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"ListLogLinearPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0.001", ",", 
          RowBox[{"-", "0.01"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.001", ",", "0.01"}], "}"}]}], "}"}], ",", 
      RowBox[{"Joined", "\[Rule]", "True"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Black", ",", "Thick"}], "}"}]}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"ListLogLinearPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0.02", ",", 
          RowBox[{"-", "0.01"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.02", ",", "0.01"}], "}"}]}], "}"}], ",", 
      RowBox[{"Joined", "\[Rule]", "True"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", "Red", "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"ListLogLinearPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0.1", ",", 
          RowBox[{"-", "0.01"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.1", ",", "0.01"}], "}"}]}], "}"}], ",", 
      RowBox[{"Joined", "\[Rule]", "True"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", "Blue", "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"ListLogLinearPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0.5", ",", 
          RowBox[{"-", "0.01"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.5", ",", "0.01"}], "}"}]}], "}"}], ",", 
      RowBox[{"Joined", "\[Rule]", "True"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", "Green", "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"GridLines", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "0.005", "}"}], ",", 
       RowBox[{"{", "1", "}"}]}], "}"}]}]}], 
   RowBox[{"(*", 
    RowBox[{",", "\[IndentingNewLine]", 
     RowBox[{"GridLinesStyle", "\[Rule]", "Black"}]}], "*)"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.711790204644497*^9, 3.711790275108921*^9}, {
  3.711790340250709*^9, 3.711790393512679*^9}, {3.711790439616519*^9, 
  3.711790530685474*^9}, {3.711790596078458*^9, 
  3.711790596401642*^9}},ExpressionUUID->"1d583fe7-bf48-47f8-85a5-\
c7db7749273c"],

Cell[BoxData[
 GraphicsBox[{{{{}, 
     GraphicsComplexBox[{{-7.1308988302963465`, 0.25}, {-5.298317366548036, 
      0.25}, {-7.1308988302963465`, -0.075}, {-5.298317366548036, -0.075}}, \
{{{}, {
         {GrayLevel[0.85], EdgeForm[None], 
          GraphicsGroupBox[{PolygonBox[{{1, 3, 4, 2}}]}]}}, {}, {}}, {{}, {}, {
         {GrayLevel[0], PointSize[0.012833333333333334`], Thickness[Tiny], 
          StyleBox[LineBox[{1, 2}],
           FontFamily->"Helvetica",
           
           FontSize->
            14]}}}}], {}, {}, {{}, {}}, {{}, {}}}}, {{{}, {{{}, {}, {
        {GrayLevel[0], PointSize[0.012833333333333334`], Thickness[Large], 
         StyleBox[
          LineBox[{{-5.199638232669768, 0.25}, {-5.19860385419959, 
           0.24999629137742319`}, {-4.852030263919617, 
           0.24826104164486162`}, {-4.505456673639644, 
           0.2458517489665768}, {-4.1588830833596715`, 
           0.2425355946569927}, {-3.8123094930796992`, 
           0.2380320680321193}, {-3.4657359027997265`, 
           0.23204394303806164`}, {-3.119162312519754, 
           0.22434740570037381`}, {-2.772588722239781, 
           0.21498021125317002`}, {-2.4260151319598084`, 
           0.204501595588644}, {-2.0794415416798357`, 
           0.19406853620952202`}, {-1.7328679513998633`, 
           0.1849589930067268}, {-1.3862943611198906`, 
           0.177851140635634}, {-1.0397207708399179`, 
           0.17268822899933745`}, {-0.6931471805599453, 
           0.16906414038014161`}}],
          FontFamily->"Helvetica",
          FontSize->14]}}}}, {}, {}, {{}, {}}, {{}, {}}}}, {{{}, {{{}, {}, {
        {GrayLevel[0], PointSize[0.012833333333333334`], Thickness[Tiny], 
         LineBox[{{-5.298317366548036, 
          0.25}, {-5.298317366548036, -0.075}}]}}}}, {}, {}, {{}, {}}, {{}, \
{}}}}, {{{}, {{{}, {}, {
        {GrayLevel[0], PointSize[0.012833333333333334`], Thickness[Large], 
         LineBox[{{-6.907755278982137, -0.01}, {-6.907755278982137, 
          0.01}}]}}}}, {}, {}, {{}, {}}, {{}, {}}}}, {{{}, {{{}, {}, {
        {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], 
         AbsoluteThickness[1.6], 
         LineBox[{{-3.912023005428146, -0.01}, {-3.912023005428146, 
          0.01}}]}}}}, {}, {}, {{}, {}}, {{}, {}}}}, {{{}, {{{}, {}, {
        {RGBColor[0, 0, 1], PointSize[0.012833333333333334`], 
         AbsoluteThickness[1.6], 
         LineBox[{{-2.3025850929940455`, -0.01}, {-2.3025850929940455`, 
          0.01}}]}}}}, {}, {}, {{}, {}}, {{}, {}}}}, {{{}, {{{}, {}, {
        {RGBColor[0, 1, 0], PointSize[0.012833333333333334`], 
         AbsoluteThickness[1.6], 
         LineBox[{{-0.6931471805599453, -0.01}, {-0.6931471805599453, 
          0.01}}]}}}}, {}, {}, {{}, {}}, {{}, {}}}}},
  AspectRatio->NCache[2^Rational[-1, 2], 0.7071067811865475],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-7.098710072047664, 0},
  BaseStyle->{FontFamily -> "Helvetica", FontSize -> 14},
  DisplayFunction->Identity,
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{
     FormBox["\"\"", TraditionalForm], 
     FormBox["\"\"", TraditionalForm]}, {
     FormBox[
      StyleBox["\"R\"", FontSize -> 14, StripOnInput -> False], 
      TraditionalForm], 
     FormBox["\"\"", TraditionalForm]}},
  FrameStyle->Directive[
    GrayLevel[0], 
    Thickness[0.006]],
  FrameTicks->{{{{-0.1, 
       FormBox[
        RowBox[{"-", "0.1`"}], TraditionalForm], {0, 0.01}}, {0., 
       FormBox["0.`", TraditionalForm], {0, 0.01}}, {0.1, 
       FormBox["0.1`", TraditionalForm], {0, 0.01}}, {0.20000000000000004`, 
       FormBox["0.20000000000000004`", TraditionalForm], {0, 0.01}}}, {{-0.1, 
       
       FormBox[
        RowBox[{"-", "0.1`"}], TraditionalForm], {0, 0.01}}, {0., 
       FormBox["0.`", TraditionalForm], {0, 0.01}}, {0.1, 
       FormBox["0.1`", TraditionalForm], {0, 0.01}}, {0.20000000000000004`, 
       FormBox["0.20000000000000004`", TraditionalForm], {
       0, 0.01}}}}, {{{-6.907755278982137, 
       FormBox["0.001`", TraditionalForm], {0, 0.01}}, {-5.298317366548036, 
       FormBox["\"r\"", TraditionalForm], {0, 0.01}}, {-4.605170185988091, 
       FormBox["0.01`", TraditionalForm], {0, 0.01}}, {-2.995732273553991, 
       FormBox["0.05`", TraditionalForm], {0, 0.01}}, {-0.6931471805599453, 
       FormBox["0.5`", TraditionalForm], {0, 0.01}}}, {{-6.907755278982137, 
       FormBox["0.001`", TraditionalForm], {0, 0.01}}, {-5.298317366548036, 
       FormBox["\"r\"", TraditionalForm], {0, 0.01}}, {-4.605170185988091, 
       FormBox["0.01`", TraditionalForm], {0, 0.01}}, {-2.995732273553991, 
       FormBox["0.05`", TraditionalForm], {0, 0.01}}, {-0.6931471805599453, 
       FormBox["0.5`", TraditionalForm], {0, 0.01}}}}},
  FrameTicksStyle->{{
     Directive[
      GrayLevel[0], 
      Thickness[0.006], FontColor -> GrayLevel[0]], 
     Directive[
      GrayLevel[0], 
      Thickness[0.006]]}, {
     Directive[
      GrayLevel[0], 
      Thickness[0.006]], 
     Directive[
      GrayLevel[0], 
      Thickness[0.006]]}},
  GridLines->{{0.005}, {1}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->{{40, 20}, {50, 30}},
  ImageSize->NCache[{360, 180 2^Rational[1, 2]}, {360, 254.55844122715712`}],
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Exp[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Exp[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-7.1308988302963465`, -0.6931471805599453}, {-0.075, 0.25}},
  PlotRangeClipping->False,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->FrontEndValueCache[{
     Charting`ScaledTicks[{Log, Exp}], Automatic}, {{{-6.907755278982137, 
       FormBox["0.001`", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-5.298317366548036, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.005\"", 0.005, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 3.}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-4.605170185988091, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.010\"", 0.01, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 3.}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-2.995732273553991, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.050\"", 0.05, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 3.}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-2.3025850929940455`, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.100\"", 0.1, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 3.}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.6931471805599453, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.500\"", 0.5, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 3.}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-7.600902459542082, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-7.418580902748128, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-7.264430222920869, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-7.1308988302963465`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-7.013115794639964, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-6.214608098422191, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-5.809142990314028, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-5.521460917862246, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-5.115995809754082, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-4.961845129926823, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-4.8283137373023015`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-4.710530701645918, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-3.912023005428146, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-3.506557897319982, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-3.2188758248682006`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-2.8134107167600364`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-2.659260036932778, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-2.5257286443082556`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-2.4079456086518722`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-1.6094379124341003`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-1.2039728043259361`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-0.916290731874155, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-0.5108256237659907, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-0.35667494393873245`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-0.2231435513142097, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-0.10536051565782628`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {0., 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {0.4054651081081644, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {0.6931471805599453, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}}, Automatic}]]], "Output",
 CellChangeTimes->{
  3.711790172520329*^9, {3.7117902112315598`*^9, 3.7117902239111557`*^9}, {
   3.711790258820758*^9, 3.71179027560854*^9}, {3.7117903668033953`*^9, 
   3.711790393948126*^9}, 3.711790446615591*^9, {3.711790482576254*^9, 
   3.711790531108674*^9}, 3.7117905617039843`*^9, 3.7117905968801813`*^9, 
   3.713075744585737*^9, 3.713076475838749*^9, 
   3.7130838146304903`*^9},ExpressionUUID->"1d22fae0-4def-4130-84d2-\
c3b9fd1283fa"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Invasion Plot", "Subsubsection",
 CellChangeTimes->{{3.711790613559505*^9, 
  3.7117906152829657`*^9}},ExpressionUUID->"4d76da5b-d7ab-4d15-b5b3-\
8b5fd6242d0a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"tryR", "=", "0.001"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"param", "=", 
   RowBox[{"{", 
    RowBox[{
    "tryFAA", ",", "tryFAa", ",", "tryFaa", ",", "tryMAA", ",", "tryMAa", ",",
      "tryMaa", ",", "trywAf", ",", "trywaf", ",", "trywAm", ",", "trywam", 
     ",", "try\[Alpha]f", ",", "try\[Alpha]m", ",", "tryr", ",", "tryR", ",", 
     
     RowBox[{
      RowBox[{"tryr", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "tryR"}], ")"}]}], "+", 
      RowBox[{"tryR", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "tryr"}], ")"}]}]}], ",", "tryk"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"run", "[", "0", "]"}], "=", 
   RowBox[{"generation", "[", 
    RowBox[{"param", ",", 
     RowBox[{"startgen", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"sieve", "[", 
         RowBox[{
         "tryFAA", ",", "tryFAa", ",", "tryFaa", ",", "tryMAA", ",", "tryMAa",
           ",", "tryMaa", ",", "trywAf", ",", "trywaf", ",", "trywAm", ",", 
          "trywam", ",", "try\[Alpha]f", ",", "try\[Alpha]m", ",", "tryr"}], 
         "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", "trypm"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"time", "=", "1"}], ",", 
   RowBox[{"time", "\[LessEqual]", "endtime"}], ",", 
   RowBox[{"time", "++"}], ",", 
   RowBox[{
    RowBox[{"run", "[", "time", "]"}], "=", 
    RowBox[{"generation", "[", 
     RowBox[{"param", ",", 
      RowBox[{"run", "[", 
       RowBox[{"time", "-", "1"}], "]"}]}], "]"}]}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MODtab1Black", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Round", "[", 
        RowBox[{"Exp", "[", "exptime", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"generation", "[", 
         RowBox[{"param", ",", 
          RowBox[{"run", "[", 
           RowBox[{"Round", "[", 
            RowBox[{"Exp", "[", "exptime", "]"}], "]"}], "]"}]}], "]"}], ".", 
        "modvec"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"exptime", ",", 
       RowBox[{"Log", "[", "startplot", "]"}], ",", 
       RowBox[{"Log", "[", "endtime", "]"}], ",", "0.1"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MOD1Black", "=", 
  RowBox[{"ListLogLinearPlot", "[", 
   RowBox[{"MODtab1Black", ",", 
    RowBox[{"Joined", "\[Rule]", "True"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"startplot", ",", "endtime"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0.625"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", "Black", "}"}]}], ",", "loglinearplotINVoptions"}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{
  3.7103553138593187`*^9, 3.710355582526401*^9, {3.710436642447912*^9, 
   3.710436660679762*^9}, {3.7104368649019117`*^9, 3.710436866972167*^9}, {
   3.710436991453842*^9, 3.710437000980938*^9}, {3.710437094495735*^9, 
   3.7104371114594297`*^9}, {3.7104371545678377`*^9, 3.710437175456407*^9}, {
   3.7104372065281487`*^9, 3.710437257466428*^9}, {3.710437307130103*^9, 
   3.710437402451663*^9}, {3.710438092346622*^9, 3.710438102554027*^9}, {
   3.710438266562661*^9, 3.710438272730937*^9}, {3.7104383114607162`*^9, 
   3.7104383281933613`*^9}, 3.710438415693651*^9, 3.710438453437209*^9, {
   3.710438768293997*^9, 3.710438808524135*^9}, {3.710438892011983*^9, 
   3.710438900508027*^9}, {3.710438948234955*^9, 3.710438980456765*^9}, 
   3.710440484931306*^9, 3.710440614636401*^9, 3.710443798850658*^9, 
   3.710445082930764*^9, 3.710445135789113*^9, 3.710450364677979*^9, {
   3.711692793496278*^9, 3.711692793702231*^9}, {3.711692839131193*^9, 
   3.711692839476317*^9}, {3.711695163270232*^9, 3.711695163791216*^9}, {
   3.7116955340766087`*^9, 3.711695540479776*^9}, {3.7117028584725018`*^9, 
   3.711702872006024*^9}, 3.711702943154717*^9, 3.711709668616238*^9, {
   3.711714148192808*^9, 3.711714148377842*^9}, {3.7117798552832527`*^9, 
   3.711779859325342*^9}, {3.711779893203086*^9, 3.7117799641182737`*^9}, {
   3.7117823451456413`*^9, 3.711782346971265*^9}, {3.713083825920453*^9, 
   3.7130838535447407`*^9}},ExpressionUUID->"c320f085-de82-4564-85f6-\
a6692770dbf1"],

Cell[BoxData[
 GraphicsBox[{{{}, {{{}, {}, {
       {GrayLevel[0], PointSize[0.011000000000000001`], AbsoluteThickness[
        1.6], 
        StyleBox[LineBox[CompressedData["
1:eJxl0mdQ03cYB/AwlBGgQCBhBBIocJg6q1YQ9HngEDwXyugQgcpqrwFThIoH
BaEopz0oUg5kVIuIyBYoSwFBvDLCaFhBNDLyq9EWMWqDQCTSf6/tK18899zn
1fee7z02IQKfcHUajeZJzT97a8b8olvnMnQlplrUt9WCOpenpFeuQOqrHNlR
RsM7/uTohzUnbVfhVbJv+oCy+R3HVLpAfTENt3VvTV5ObAO6RnX8n9lq2MqP
E54a7gSmf2NrHV8dx2q/1A1ouAcHdpxpJhs1sM/cW94l7YbEK6NtzFkN3F/c
0tfnI4QbrRNMIXsNCuV7vZgSEXD2HnRmVqzBIxExrPiuEYg/o7zLr1iLNVFK
e9sYMaRl8XcmcLTQkxYmK+HdhywSk+C+qIWKCtk0y/kh9P66Ky72tjY+bjmx
WtbyCP69Xwd3O1ht34QzcPGsRst0oC7ev3E8zH1uBgrF9OXS7XScsfBNCrw+
C8Mt44r7S3Q0sg+dPWwvhfaenc8diR7mZ4Sp0i9J4VDVD3vCG/UxdF4SVS6V
QknftVP0WAM8HM9/4M0kcNOyqnlk/3vo1uQ7NepO4K+3tz/7TssQPWhFDXnH
CehHGs+djzZEkZP/ZGQCgQ1Gji8Lhg3xx9lCXnEGAavKFfGxHUY485XD056f
CIRfLlVPKDLC8e43KnkZgTvH7O9a040x/a1ky4l68l/fxpgsrGtn3CJwtaTX
NFNsjCEGnQutdwj8kXvSrRoYyFsgboouAnGmhbTMUgauOt1r4nYTKDiUoiS6
Jpjlz+Tk9BLo/MB9vuqkCe7qfN5eJyQgqmq/kCo2wQdzJOnMAAGB2pu0ChdT
TOMajLgMEehXPv0+7bopdmaXqOmJCHRwCs0u6zAx2vHcwuAwgZTLomDzr5lo
qWKllo0SyPJibYyfYOKWpI+9s8YJhD2OabjgwsIghd0XkRMEXrwOT5q5ysIJ
80nxvkkCZ1clPmt1zDA3cKze8iGBwMz1+VMCM2Q7P3MclhAIjqr7OW/cDPVO
OyQcnyKQWJ6zI2CXOcpUjaWj0wQG2oOkmiXmOOnHYpjPEvhFa6RbqW2Bi0WZ
ZzdLCaxb+RaWBRY4xjActCME5F4pM75iC1SXl42+oOx3vmsg1tUSRXoD9Pzf
qbxgDMy9Zok5Ue4q28dUH2Z9ScU6bFxKfml3kfI5be2VagEbh3oPfC6jTA/5
bV+gmI3YYWPFkxHYU53HK3a1Qtnm6QNBlPmKpXJFsRWyQsTfpFFOfm22KVPH
Gi+xuw9dp0xfx+lVCayxjbNe0ka5uTb+mZ/YGiOW5VNDlKNzyyKWXDm4cHO1
WUI5O6DqoyPXONjkkeP/hPLKWLNrvyYXszs+PSenvDvyYAfDiYv+PfqzC5Q9
Ch6d5vG5uGpcM6ikfLC9vyHqCheFoomyt7L//5OLpqGZVWpPCNzyfH9Dv6YN
2tVvo2tS/huCqS7l
          "]],
         FontFamily->"Helvetica",
         FontSize->12]}}}}, {}, {}, {{}, {}}, {{}, {}}}},
  AspectRatio->NCache[2^Rational[-1, 2], 0.7071067811865475],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{1.643976688829011, 0},
  BaseStyle->{FontFamily -> "Helvetica", FontSize -> 12},
  DisplayFunction->Identity,
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{
     FormBox[
      StyleBox["\"neo-W frequency\"", FontSize -> 8, StripOnInput -> False], 
      TraditionalForm], 
     FormBox["\"\"", TraditionalForm]}, {
     FormBox[
      StyleBox["\"Generation\"", FontSize -> 8, StripOnInput -> False], 
      TraditionalForm], 
     FormBox["\"\"", TraditionalForm]}},
  FrameStyle->Directive[
    GrayLevel[0], 
    Thickness[0.006]],
  FrameTicks->{{{{0., 
       FormBox["0.`", TraditionalForm], {0, 0.01}}, {0.25, 
       FormBox["0.25`", TraditionalForm], {0, 0.01}}, {0.5, 
       FormBox["0.5`", TraditionalForm], {0, 0.01}}}, {{0., 
       FormBox["0.`", TraditionalForm], {0, 0.01}}, {0.25, 
       FormBox["0.25`", TraditionalForm], {0, 0.01}}, {0.5, 
       FormBox["0.5`", TraditionalForm], {0, 0.01}}}}, {{{
       NCache[
        Log[5], 1.6094379124341003`], 
       FormBox["5", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[10], 2.302585092994046], 
       FormBox["10", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[50], 3.912023005428146], 
       FormBox["50", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[100], 4.605170185988092], 
       FormBox["100", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[1000], 6.907755278982137], 
       FormBox["1000", TraditionalForm], {0, 0.01}}}, {{
       NCache[
        Log[5], 1.6094379124341003`], 
       FormBox["5", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[10], 2.302585092994046], 
       FormBox["10", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[50], 3.912023005428146], 
       FormBox["50", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[100], 4.605170185988092], 
       FormBox["100", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[1000], 6.907755278982137], 
       FormBox["1000", TraditionalForm], {0, 0.01}}}}},
  FrameTicksStyle->{{
     Directive[
      GrayLevel[0], 
      Thickness[0.006], FontColor -> GrayLevel[0]], 
     Directive[
      GrayLevel[0], 
      Thickness[0.006]]}, {
     Directive[
      GrayLevel[0], 
      Thickness[0.006]], 
     Directive[
      GrayLevel[0], 
      Thickness[0.006]]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->NCache[{360, 180 2^Rational[1, 2]}, {360, 254.55844122715712`}],
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Exp[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Exp[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->NCache[{{
      Log[5], 
      Log[5000]}, {0, 0.625}}, {{1.6094379124341003`, 8.517193191416238}, {
     0, 0.625}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{
    Charting`ScaledTicks[{Log, Exp}], Automatic}]], "Output",
 CellChangeTimes->{
  3.711695863559532*^9, 3.711702870075303*^9, 3.7117029010647287`*^9, 
   3.711703077514059*^9, 3.71170393419132*^9, {3.711709667157542*^9, 
   3.711709669147328*^9}, 3.7117099306962013`*^9, 3.711712418950643*^9, 
   3.7117124787569523`*^9, {3.7117141326310263`*^9, 3.711714156762856*^9}, 
   3.7117145288764687`*^9, 3.711778429091012*^9, 3.711778514543406*^9, {
   3.711779890182041*^9, 3.7117801088196774`*^9}, 3.7117801573203707`*^9, {
   3.711782350800932*^9, 3.7117823796855392`*^9}, 3.71178283639592*^9, 
   3.7117828736159*^9, {3.71178568740448*^9, 3.711785732771495*^9}, 
   3.711790637107173*^9, 3.713075795356094*^9, 3.7130764830955057`*^9, {
   3.713083823457177*^9, 
   3.713083869632949*^9}},ExpressionUUID->"0154695e-203a-4184-8ccd-\
9de10cc8b521"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"tryR", "=", "0.02"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"param", "=", 
   RowBox[{"{", 
    RowBox[{
    "tryFAA", ",", "tryFAa", ",", "tryFaa", ",", "tryMAA", ",", "tryMAa", ",",
      "tryMaa", ",", "trywAf", ",", "trywaf", ",", "trywAm", ",", "trywam", 
     ",", "try\[Alpha]f", ",", "try\[Alpha]m", ",", "tryr", ",", "tryR", ",", 
     
     RowBox[{
      RowBox[{"tryr", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "tryR"}], ")"}]}], "+", 
      RowBox[{"tryR", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "tryr"}], ")"}]}]}], ",", "tryk"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"run", "[", "0", "]"}], "=", 
   RowBox[{"generation", "[", 
    RowBox[{"param", ",", 
     RowBox[{"startgen", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"sieve", "[", 
         RowBox[{
         "tryFAA", ",", "tryFAa", ",", "tryFaa", ",", "tryMAA", ",", "tryMAa",
           ",", "tryMaa", ",", "trywAf", ",", "trywaf", ",", "trywAm", ",", 
          "trywam", ",", "try\[Alpha]f", ",", "try\[Alpha]m", ",", "tryr"}], 
         "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", "trypm"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"time", "=", "1"}], ",", 
   RowBox[{"time", "\[LessEqual]", "endtime"}], ",", 
   RowBox[{"time", "++"}], ",", 
   RowBox[{
    RowBox[{"run", "[", "time", "]"}], "=", 
    RowBox[{"generation", "[", 
     RowBox[{"param", ",", 
      RowBox[{"run", "[", 
       RowBox[{"time", "-", "1"}], "]"}]}], "]"}]}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MODtab1Red", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Round", "[", 
        RowBox[{"Exp", "[", "exptime", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"generation", "[", 
         RowBox[{"param", ",", 
          RowBox[{"run", "[", 
           RowBox[{"Round", "[", 
            RowBox[{"Exp", "[", "exptime", "]"}], "]"}], "]"}]}], "]"}], ".", 
        "modvec"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"exptime", ",", 
       RowBox[{"Log", "[", "startplot", "]"}], ",", 
       RowBox[{"Log", "[", "endtime", "]"}], ",", "0.1"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MOD1Red", "=", 
  RowBox[{"ListLogLinearPlot", "[", 
   RowBox[{"MODtab1Red", ",", 
    RowBox[{"Joined", "\[Rule]", "True"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"startplot", ",", "endtime"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0.625"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", "Red", "}"}]}], ",", "loglinearplotINVoptions"}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.711695517780641*^9, 3.711695522507338*^9}, {
   3.711695561965704*^9, 3.7116955719180717`*^9}, {3.711702876287524*^9, 
   3.71170287874617*^9}, {3.711702910308921*^9, 3.711702933253878*^9}, {
   3.711703067328353*^9, 3.711703067432561*^9}, {3.711703474641178*^9, 
   3.711703499003673*^9}, {3.711714536507679*^9, 3.711714565949432*^9}, {
   3.711780178324356*^9, 3.7117801904794083`*^9}, 3.711780231470047*^9, 
   3.713083859457597*^9},ExpressionUUID->"e34030e6-59b5-4745-96e0-\
767b39db6daa"],

Cell[BoxData[
 GraphicsBox[{{{}, {{{}, {}, {
       {RGBColor[1, 0, 0], PointSize[0.011000000000000001`], 
        AbsoluteThickness[1.6], 
        StyleBox[LineBox[CompressedData["
1:eJxl0mlQ1HUYB/DlEpaNOFaWBRd2iWwAhWY0WeV6HgiVUqAUs1qOkaNUZFZc
DIZDQhRZRkIhkGNAWRbkWERymRWBQAoBd5HTBacC9odWXpCBXG7Qv6le+eKZ
73xePfN857GPEO6L1qXRaLuo+Se35jxf9Olchjj/KnbnR9dBl+e8wqjXwmDE
ZinG33jNBz/fcu3EW2uQk9rrn85WvGZRvQd8J6GhTofAm7GrFRh6DUlP8nWw
Ii3PvZjWCawDza1NMbqo/NaPDtIu2MtPU0y76qH1VPgmqbgbUstH2lgaPYzy
HddPrOmFq61jrLscA9x83kjfJGwAuP4BO1h1Bph9b42nODIESWkrt2Pq1uGy
2OGqSDUKmRdj3JO5hug+PyMIilLDxWlRsu+iIfpVZ5+M9XsAvd1eCfG3jDDh
paNotfYn+Pd+Ok48Wv5xInICLpzRuzkZaox8FwdmVMsklKoZy9XbGJiZmZ53
uGgKhm7enx9fYqB8cWLAxkYD7T3uM47Tb+DUl+ULh3I0ECj7Zmd0swkeDc47
OTOmAWlf5VeM+DdxVDMT0U8n0LhBphjeY4q+j2MO0bcSmFu99dlpQzM88raU
Ox9AwOSYxdOsODMcldce0I8k4GLu+KJkyAzfGbpz/tZxArb1WnUI3xzdnJzX
/JMJRJdV6yZfMUdj7eFPPDIIfB+y8bYdwwIf5h70CxST//q2wMjskJ4fcghU
SHstc9UW6Gr+aYBlHoHHhSd8GoCJ+ysLz5kWEkiwLKXlVjNx8f2us78VEygJ
TF+ZNl6PgtV6E3kZgc5Nvs9lJ9ajaoyeoqggMChrF2eo16NDd0FCVRUBoc6r
zDoPSwzeWOdRW0tAufJ7dmaVJfp4quXjDQQ6uKXsMjoLKw9Hm7Y1EUgvGwy3
Ps7CsFkv4aVmAhd3W7kmjbHQp1mcEdBCIOqRSC72sMKg5FeW19oI/LEQfWqq
wgr7nQ68p+kgcGbt533r6Gy0tp8LHeoiEJq7uXhCyEaZd97DuG4C4bFNl4vu
s/GJiD/a3kMgtbaAL/CyRvOnjMaePgKq9jCiL7XGC3vkrqeVBG4YDt9ZMbLB
0Rfi7j9VBJy0KbAstEH3yUSmyz0Cs7vTp/arbbD+A2mV6wCB4KwuVbznBgzr
8QijDVL7wjG0sHIDyi6F7K2nLGT3nZLQOZgnti7YMkTgrJGRtkHIwaAHuexy
yoyIgQ9D1RxkSpQpc5R3NhQ5SzxtMesZ399tmEDM/FLtvMQW+7ddkRyl/PUC
+91cuh028XMa8ykznLi9fwnt0PgBablBWXE96Vmw2g45NfZ3VZTjCmu+WPLk
Yk3kuvQpyvkCmdvHlVyU9Je/nKWsHVV4KvV5qElWOmgpex8L6GBu5yHLRKQy
GCHgV/JLonMMD9XbL8eaUA5oV8pjy3k4wunLYI78/588/HUtSMCm3LLLwUWp
b4+61xp3cCj/DWFZGE8=
          "]],
         FontFamily->"Helvetica",
         FontSize->12]}}}}, {}, {}, {{}, {}}, {{}, {}}}},
  AspectRatio->NCache[2^Rational[-1, 2], 0.7071067811865475],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{1.643976688829011, 0},
  BaseStyle->{FontFamily -> "Helvetica", FontSize -> 12},
  DisplayFunction->Identity,
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{
     FormBox[
      StyleBox["\"neo-W frequency\"", FontSize -> 8, StripOnInput -> False], 
      TraditionalForm], 
     FormBox["\"\"", TraditionalForm]}, {
     FormBox[
      StyleBox["\"Generation\"", FontSize -> 8, StripOnInput -> False], 
      TraditionalForm], 
     FormBox["\"\"", TraditionalForm]}},
  FrameStyle->Directive[
    GrayLevel[0], 
    Thickness[0.006]],
  FrameTicks->{{{{0., 
       FormBox["0.`", TraditionalForm], {0, 0.01}}, {0.25, 
       FormBox["0.25`", TraditionalForm], {0, 0.01}}, {0.5, 
       FormBox["0.5`", TraditionalForm], {0, 0.01}}}, {{0., 
       FormBox["0.`", TraditionalForm], {0, 0.01}}, {0.25, 
       FormBox["0.25`", TraditionalForm], {0, 0.01}}, {0.5, 
       FormBox["0.5`", TraditionalForm], {0, 0.01}}}}, {{{
       NCache[
        Log[5], 1.6094379124341003`], 
       FormBox["5", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[10], 2.302585092994046], 
       FormBox["10", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[50], 3.912023005428146], 
       FormBox["50", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[100], 4.605170185988092], 
       FormBox["100", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[1000], 6.907755278982137], 
       FormBox["1000", TraditionalForm], {0, 0.01}}}, {{
       NCache[
        Log[5], 1.6094379124341003`], 
       FormBox["5", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[10], 2.302585092994046], 
       FormBox["10", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[50], 3.912023005428146], 
       FormBox["50", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[100], 4.605170185988092], 
       FormBox["100", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[1000], 6.907755278982137], 
       FormBox["1000", TraditionalForm], {0, 0.01}}}}},
  FrameTicksStyle->{{
     Directive[
      GrayLevel[0], 
      Thickness[0.006], FontColor -> GrayLevel[0]], 
     Directive[
      GrayLevel[0], 
      Thickness[0.006]]}, {
     Directive[
      GrayLevel[0], 
      Thickness[0.006]], 
     Directive[
      GrayLevel[0], 
      Thickness[0.006]]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->NCache[{360, 180 2^Rational[1, 2]}, {360, 254.55844122715712`}],
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Exp[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Exp[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->NCache[{{
      Log[5], 
      Log[5000]}, {0, 0.625}}, {{1.6094379124341003`, 8.517193191416238}, {
     0, 0.625}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{
    Charting`ScaledTicks[{Log, Exp}], Automatic}]], "Output",
 CellChangeTimes->{
  3.711695610302847*^9, 3.711702963389113*^9, 3.711703067883417*^9, {
   3.71170347975955*^9, 3.7117034995459833`*^9}, 3.711703934618721*^9, 
   3.711709680337553*^9, 3.711709930805848*^9, 3.711710242741914*^9, 
   3.7117124193333483`*^9, 3.711712479172882*^9, {3.711714132726665*^9, 
   3.7117141598393593`*^9}, {3.711714529267712*^9, 3.711714566647304*^9}, 
   3.71177843235149*^9, 3.711780190762754*^9, 3.71178023190409*^9, {
   3.7117823556231327`*^9, 3.71178238161031*^9}, 3.711782836818779*^9, 
   3.711782874046118*^9, {3.711785687522204*^9, 3.7117857335816107`*^9}, 
   3.711790640251417*^9, 3.7130757987063828`*^9, 3.7130764862930307`*^9, 
   3.713083826788578*^9, {3.713083859887026*^9, 
   3.713083869748691*^9}},ExpressionUUID->"2d3797a0-edef-432d-a4d8-\
b030ac642788"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"tryR", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"param", "=", 
   RowBox[{"{", 
    RowBox[{
    "tryFAA", ",", "tryFAa", ",", "tryFaa", ",", "tryMAA", ",", "tryMAa", ",",
      "tryMaa", ",", "trywAf", ",", "trywaf", ",", "trywAm", ",", "trywam", 
     ",", "try\[Alpha]f", ",", "try\[Alpha]m", ",", "tryr", ",", "tryR", ",", 
     
     RowBox[{
      RowBox[{"tryr", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "tryR"}], ")"}]}], "+", 
      RowBox[{"tryR", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "tryr"}], ")"}]}]}], ",", "tryk"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"run", "[", "0", "]"}], "=", 
   RowBox[{"generation", "[", 
    RowBox[{"param", ",", 
     RowBox[{"startgen", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"sieve", "[", 
         RowBox[{
         "tryFAA", ",", "tryFAa", ",", "tryFaa", ",", "tryMAA", ",", "tryMAa",
           ",", "tryMaa", ",", "trywAf", ",", "trywaf", ",", "trywAm", ",", 
          "trywam", ",", "try\[Alpha]f", ",", "try\[Alpha]m", ",", "tryr"}], 
         "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", "trypm"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"time", "=", "1"}], ",", 
   RowBox[{"time", "\[LessEqual]", "endtime"}], ",", 
   RowBox[{"time", "++"}], ",", 
   RowBox[{
    RowBox[{"run", "[", "time", "]"}], "=", 
    RowBox[{"generation", "[", 
     RowBox[{"param", ",", 
      RowBox[{"run", "[", 
       RowBox[{"time", "-", "1"}], "]"}]}], "]"}]}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MODtab1Blue", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Round", "[", 
        RowBox[{"Exp", "[", "exptime", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"generation", "[", 
         RowBox[{"param", ",", 
          RowBox[{"run", "[", 
           RowBox[{"Round", "[", 
            RowBox[{"Exp", "[", "exptime", "]"}], "]"}], "]"}]}], "]"}], ".", 
        "modvec"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"exptime", ",", 
       RowBox[{"Log", "[", "startplot", "]"}], ",", 
       RowBox[{"Log", "[", "endtime", "]"}], ",", "0.1"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MOD1Blue", "=", 
  RowBox[{"ListLogLinearPlot", "[", 
   RowBox[{"MODtab1Blue", ",", 
    RowBox[{"Joined", "\[Rule]", "True"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"startplot", ",", "endtime"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0.625"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", "Blue", "}"}]}], ",", "loglinearplotINVoptions"}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.711695517780641*^9, 3.711695522507338*^9}, {
   3.7116955538491297`*^9, 3.711695588097739*^9}, {3.7117028843813143`*^9, 
   3.71170288446397*^9}, {3.711702976071355*^9, 3.711702993624299*^9}, {
   3.71170306403876*^9, 3.711703064150305*^9}, 3.711709951730682*^9, {
   3.711780200355617*^9, 3.711780228572802*^9}, 
   3.713083863645265*^9},ExpressionUUID->"193b8142-7db7-41d0-947e-\
8ad4f108afc0"],

Cell[BoxData[
 GraphicsBox[{{{}, {{{}, {}, {
       {RGBColor[0, 0, 1], PointSize[0.011000000000000001`], 
        AbsoluteThickness[1.6], 
        StyleBox[LineBox[CompressedData["
1:eJxl0mlQ1HUYB/DlEnAhOZddrl0V5Uh0xhSKo+eBCbAQwiuHhHakoGOFjUOp
BbniUBCJTBIWtkA0F9gEg0AOORRcjpRDF50W9rcQIwVrgCjLCtK/sXe+eOY7
n5ff7zwbI/j7I7VpNJo/df/lG/mqJZ+OZRCyVGulTRLQ5rho6NUrUJZidzzz
aN0rPvzhzl/iNq1B5XcRUVu9619xfLUnXKugoahULGTGNwJdRyL4+5wWljr5
t8/qtgDjUENLHU8bNzlbj3rO34C97qmNk9t1kOk3W5Zf3AknRSOtDKUOBggn
Rv4kN+HnllFGn60ejje7MxS3pcDeE/QWo0oPY86qn276oB8EqZpOXtU6DJbb
W7h6DkJ2Ic8jia2PpLTWCARDUDgZn+S7pI897dwtWUMjIO32TkxoNsDjBxYq
xBP34WV/Q6wK0VU8iXoA32bqNCnC12Pr7q7CmYaHIJTRly/vpiOrwSJ31u0P
GGq6v/hATUf+3IHR7kA5tN32eOw0aYTyWxsWOt4dg+Cas36RDcbID0x+/+HC
GFT2XjxBT3gNY1gqZfKn43DVpqZxOHADPg4TFccNjMOTF82hGfommLnb0fFz
cwUYHzObORVrgprzgTfz9inA1dRpvmTIBHPYRevn0hRgV70iC3M3xVLne8Jo
iQIiyy5rJ/1kij0DgtbFUQXcCNvSaU83w/qMbJ1eGvl/bzPM6ksuyDInUF4p
tSyQmaGE0bR6wonAX0VxPhIwx83XYn4P8yaQaCmkFVw2R7m+aGV5H4GS4HTN
5HoLTMu201NHEuh43VdVE2eBATse6bkICAzWtJ3+RmaBczEOtW1nCPC1nmdX
eVoirXzULVREoF8znZt9yRInUned2XqVQDtbyCwzZKDP8q3YkDYC6WWDXNaX
DOSGamXQ+ggUBlhtF4wy8FKY9uGlewQ+mYqvP+1phWqNelo1RmDuWWQKKbdC
aXefw/dTBDLX5PvXGTIxONfZSjVDILxgW/E4n4nD4rwQq3kC3Oi6Hy/cZ2JS
Mfzm/ZTASfF59yPeLAziPioTqwkMtH00oVvJwthE+OHj5wR+1R/u0RhYo5HN
noj8VQLOK8mwzLdGTp6x7aE1Av8EpJMDMmvkheT4dtGUcPBU10CClw3m8+7K
p7WUwOVieNFFG2zaP0weaiuBz+xNqTC0RUblnSahjhKyDAxWJHxbjH9Rp++h
qwR6xN33wmW2KE2X5rZS9pNccKnwskPfr6OjHPWUwFtUixcr7DBjakmUSjnt
GXNHgaE97ty7866UMt2ZLV3l26PDF9ui9NYpobFWMHtQZo9GLqp6d8qxRVei
1F5svBktqT1K+dyRGrd9F9nou9ZfkEl55V6jV78uBz/LY4nKKb99LKjd/E0O
5tQazV6n/E7J2FcuPA6m7Qpg36Ec1NZfHy3i4BUfoYGC8sv/5KDVVrGdivJ1
/82u/bobcaP7klxN+V+vuQ8T
          "]],
         FontFamily->"Helvetica",
         FontSize->12]}}}}, {}, {}, {{}, {}}, {{}, {}}}},
  AspectRatio->NCache[2^Rational[-1, 2], 0.7071067811865475],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{1.643976688829011, 0},
  BaseStyle->{FontFamily -> "Helvetica", FontSize -> 12},
  DisplayFunction->Identity,
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{
     FormBox[
      StyleBox["\"neo-W frequency\"", FontSize -> 8, StripOnInput -> False], 
      TraditionalForm], 
     FormBox["\"\"", TraditionalForm]}, {
     FormBox[
      StyleBox["\"Generation\"", FontSize -> 8, StripOnInput -> False], 
      TraditionalForm], 
     FormBox["\"\"", TraditionalForm]}},
  FrameStyle->Directive[
    GrayLevel[0], 
    Thickness[0.006]],
  FrameTicks->{{{{0., 
       FormBox["0.`", TraditionalForm], {0, 0.01}}, {0.25, 
       FormBox["0.25`", TraditionalForm], {0, 0.01}}, {0.5, 
       FormBox["0.5`", TraditionalForm], {0, 0.01}}}, {{0., 
       FormBox["0.`", TraditionalForm], {0, 0.01}}, {0.25, 
       FormBox["0.25`", TraditionalForm], {0, 0.01}}, {0.5, 
       FormBox["0.5`", TraditionalForm], {0, 0.01}}}}, {{{
       NCache[
        Log[5], 1.6094379124341003`], 
       FormBox["5", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[10], 2.302585092994046], 
       FormBox["10", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[50], 3.912023005428146], 
       FormBox["50", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[100], 4.605170185988092], 
       FormBox["100", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[1000], 6.907755278982137], 
       FormBox["1000", TraditionalForm], {0, 0.01}}}, {{
       NCache[
        Log[5], 1.6094379124341003`], 
       FormBox["5", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[10], 2.302585092994046], 
       FormBox["10", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[50], 3.912023005428146], 
       FormBox["50", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[100], 4.605170185988092], 
       FormBox["100", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[1000], 6.907755278982137], 
       FormBox["1000", TraditionalForm], {0, 0.01}}}}},
  FrameTicksStyle->{{
     Directive[
      GrayLevel[0], 
      Thickness[0.006], FontColor -> GrayLevel[0]], 
     Directive[
      GrayLevel[0], 
      Thickness[0.006]]}, {
     Directive[
      GrayLevel[0], 
      Thickness[0.006]], 
     Directive[
      GrayLevel[0], 
      Thickness[0.006]]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->NCache[{360, 180 2^Rational[1, 2]}, {360, 254.55844122715712`}],
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Exp[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Exp[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->NCache[{{
      Log[5], 
      Log[5000]}, {0, 0.625}}, {{1.6094379124341003`, 8.517193191416238}, {
     0, 0.625}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{
    Charting`ScaledTicks[{Log, Exp}], Automatic}]], "Output",
 CellChangeTimes->{
  3.711695616955174*^9, 3.7117030020436897`*^9, 3.711703064585724*^9, 
   3.711703934869472*^9, 3.7117096839069843`*^9, {3.711709930966123*^9, 
   3.711709955576418*^9}, 3.711712419742366*^9, 3.711712479576453*^9, 
   3.711714132817013*^9, 3.711714162918345*^9, 3.7117145293823433`*^9, 
   3.711714568176523*^9, 3.711778435483437*^9, {3.7117802136251583`*^9, 
   3.711780232666605*^9}, {3.711782357321993*^9, 3.71178238366398*^9}, 
   3.711782837253862*^9, 3.711782874332056*^9, 3.7117856876093473`*^9, 
   3.7117857349012327`*^9, 3.7117906434954557`*^9, 3.7130758020658407`*^9, 
   3.713076489581972*^9, 3.713083830077304*^9, 
   3.713083869822068*^9},ExpressionUUID->"5b058854-84cc-4b28-9b69-\
11f83a5fba82"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"tryR", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"param", "=", 
   RowBox[{"{", 
    RowBox[{
    "tryFAA", ",", "tryFAa", ",", "tryFaa", ",", "tryMAA", ",", "tryMAa", ",",
      "tryMaa", ",", "trywAf", ",", "trywaf", ",", "trywAm", ",", "trywam", 
     ",", "try\[Alpha]f", ",", "try\[Alpha]m", ",", "tryr", ",", "tryR", ",", 
     
     RowBox[{
      RowBox[{"tryr", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "tryR"}], ")"}]}], "+", 
      RowBox[{"tryR", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "tryr"}], ")"}]}]}], ",", "tryk"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"run", "[", "0", "]"}], "=", 
   RowBox[{"generation", "[", 
    RowBox[{"param", ",", 
     RowBox[{"startgen", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"sieve", "[", 
         RowBox[{
         "tryFAA", ",", "tryFAa", ",", "tryFaa", ",", "tryMAA", ",", "tryMAa",
           ",", "tryMaa", ",", "trywAf", ",", "trywaf", ",", "trywAm", ",", 
          "trywam", ",", "try\[Alpha]f", ",", "try\[Alpha]m", ",", "tryr"}], 
         "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", "trypm"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"time", "=", "1"}], ",", 
   RowBox[{"time", "\[LessEqual]", "endtime"}], ",", 
   RowBox[{"time", "++"}], ",", 
   RowBox[{
    RowBox[{"run", "[", "time", "]"}], "=", 
    RowBox[{"generation", "[", 
     RowBox[{"param", ",", 
      RowBox[{"run", "[", 
       RowBox[{"time", "-", "1"}], "]"}]}], "]"}]}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MODtab1Green", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Round", "[", 
        RowBox[{"Exp", "[", "exptime", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"generation", "[", 
         RowBox[{"param", ",", 
          RowBox[{"run", "[", 
           RowBox[{"Round", "[", 
            RowBox[{"Exp", "[", "exptime", "]"}], "]"}], "]"}]}], "]"}], ".", 
        "modvec"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"exptime", ",", 
       RowBox[{"Log", "[", "startplot", "]"}], ",", 
       RowBox[{"Log", "[", "endtime", "]"}], ",", "0.1"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MOD1Green", "=", 
  RowBox[{"ListLogLinearPlot", "[", 
   RowBox[{"MODtab1Green", ",", 
    RowBox[{"Joined", "\[Rule]", "True"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"startplot", ",", "endtime"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0.625"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", "Green", "}"}]}], ",", "loglinearplotINVoptions"}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.711695591717916*^9, 3.711695602234329*^9}, {
   3.711703039655755*^9, 3.711703059891102*^9}, {3.711780241731517*^9, 
   3.711780256675057*^9}, 
   3.7130838666767607`*^9},ExpressionUUID->"1bb06464-d695-4708-8f36-\
34cd3730ed13"],

Cell[BoxData[
 GraphicsBox[{{{}, {{{}, {}, {
       {RGBColor[0, 1, 0], PointSize[0.011000000000000001`], 
        AbsoluteThickness[1.6], 
        StyleBox[LineBox[CompressedData["
1:eJxl0llQE2YQB3COcJlKAyQhCpJIW0diFUcLFIHuwlRoUdBGwcGAtFZaKsRU
ouKgYkHKYKECKgyHBxJEhUTAQkElCq2RI6iIEBBJPoSqlCNIjRxJ1KZT33zY
2fk9/Gdnd3bxdiEvxszExCTQWP/11b9OzPg3zcEp9pvp4McXwIzD1VErDRBW
UR4g51W+4y1bV11OcH0Do9SasFj3qncsqvSBK6Um6L4z0dTyRg1QzaVJoydM
Ma2dPkFzqQVmWN31mjgzjFzpIcxo+B3Wex2uH15hjrHyyal7WVfh0JkHjczH
5ljNf8BvLGiEC9d7me3OFpgoWsqii5uB/UWIN7PCAiVjeu2Xgj8h6bCuOa7C
EtfbTY6Eu7VAem7cmgNsKxxvqbzRQmuD3GHRgYAZK+QNKbXpvR3QKvdL3HPN
Gm9tYXUIvDvh//1t0HPFVYVfeRfkpJk3kKh5GCoSbHCf1w3FSupcuQcVN4as
559t7YH7DT3avlkqspIvujpye0HWskazdPg9LLHellKd3QehkmNrY+rm4xmn
JcE5+Q+hrE28j7rHFven+qwr5vdDlZOkvmvd+3jnbl76kP0jePH6WkSqFQ37
pne2jBU9gvnx9mMZu2nYsLGd68kYgOV2S6eK7tNQc4xwtbsHYFGlQRnpZYfo
6nVFLh+AmNPlZgdK7JDiS1lSQVPBjciPml2o9jj9emiZZpPq7b3tUfGst1ic
qYJzZa2MbKU96p+etc2Qq+Dv/AR/KTighy3nLs2ggkRGsUl2uQP2yYKzJtzV
UBSaohueR8fn7SMrg75RQ9OygAlJAh1znsaG3zmuhk6J7OgRJR1jM102C5rU
IDTVp1f4MNAzcHaTZkwNCt3IL+nnGZi3lfeyhUHgJruYddqGiRwpTEV4E0g5
3Rm94EcmJtF3tYkiCOQGOa5I6mViZio37eu9BHY8EdUe9XFE9bPRF+FZBJ5P
xyQPnnPE+F1HDNQSAmlvBniWNixMPc6aPFxNICr740K1kIWDFlElehmBaEHN
2YIeFlaLsgZHWgkcupTnxfdbgNdWfZtk3kWgQ7ZtiFK2AC9Q3U5GPiTwm1XX
bZ31Qsw/Ka0LIgTcDAdhTrgQx9e8LvP9i8BkUMrgJuVCtCydCQ0eIbA544+O
Pb5OeDn1iYV4zDgvGqPyxU7oJz0fk6AhIGS1JZfaOOOpcx62t58T+Nna2iAV
OmO3v35H4z8EqNvvBUcpnXFjYOeRH7QE1koLuKW+izBtw5RS+ZJAnHb2krZ0
EVIC7ifbzRD4aZrlnm3jgvs0xTLXWWPejd36SuiCKkkh0uYI1FcnjW9WumBp
v76fGL07/+J3s75sXL1cU5mvI3CCL/H8SszGtL1mXl56Aobuel8FhYPK8e8f
3TL6s/iQmw6fcvAuM/xggIHA50Wq/dw4DtYX2vNqjA6RKWoFZzj44ZPIEYdX
5O1/crB2r90ncUZfDfxguYKyGHWTgqoGo/8FyQMflQ==
          "]],
         FontFamily->"Helvetica",
         FontSize->12]}}}}, {}, {}, {{}, {}}, {{}, {}}}},
  AspectRatio->NCache[2^Rational[-1, 2], 0.7071067811865475],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{1.643976688829011, 0},
  BaseStyle->{FontFamily -> "Helvetica", FontSize -> 12},
  DisplayFunction->Identity,
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{
     FormBox[
      StyleBox["\"neo-W frequency\"", FontSize -> 8, StripOnInput -> False], 
      TraditionalForm], 
     FormBox["\"\"", TraditionalForm]}, {
     FormBox[
      StyleBox["\"Generation\"", FontSize -> 8, StripOnInput -> False], 
      TraditionalForm], 
     FormBox["\"\"", TraditionalForm]}},
  FrameStyle->Directive[
    GrayLevel[0], 
    Thickness[0.006]],
  FrameTicks->{{{{0., 
       FormBox["0.`", TraditionalForm], {0, 0.01}}, {0.25, 
       FormBox["0.25`", TraditionalForm], {0, 0.01}}, {0.5, 
       FormBox["0.5`", TraditionalForm], {0, 0.01}}}, {{0., 
       FormBox["0.`", TraditionalForm], {0, 0.01}}, {0.25, 
       FormBox["0.25`", TraditionalForm], {0, 0.01}}, {0.5, 
       FormBox["0.5`", TraditionalForm], {0, 0.01}}}}, {{{
       NCache[
        Log[5], 1.6094379124341003`], 
       FormBox["5", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[10], 2.302585092994046], 
       FormBox["10", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[50], 3.912023005428146], 
       FormBox["50", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[100], 4.605170185988092], 
       FormBox["100", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[1000], 6.907755278982137], 
       FormBox["1000", TraditionalForm], {0, 0.01}}}, {{
       NCache[
        Log[5], 1.6094379124341003`], 
       FormBox["5", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[10], 2.302585092994046], 
       FormBox["10", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[50], 3.912023005428146], 
       FormBox["50", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[100], 4.605170185988092], 
       FormBox["100", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[1000], 6.907755278982137], 
       FormBox["1000", TraditionalForm], {0, 0.01}}}}},
  FrameTicksStyle->{{
     Directive[
      GrayLevel[0], 
      Thickness[0.006], FontColor -> GrayLevel[0]], 
     Directive[
      GrayLevel[0], 
      Thickness[0.006]]}, {
     Directive[
      GrayLevel[0], 
      Thickness[0.006]], 
     Directive[
      GrayLevel[0], 
      Thickness[0.006]]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->NCache[{360, 180 2^Rational[1, 2]}, {360, 254.55844122715712`}],
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Exp[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Exp[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->NCache[{{
      Log[5], 
      Log[5000]}, {0, 0.625}}, {{1.6094379124341003`, 8.517193191416238}, {
     0, 0.625}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{
    Charting`ScaledTicks[{Log, Exp}], Automatic}]], "Output",
 CellChangeTimes->{
  3.711695623991362*^9, {3.711703047777299*^9, 3.7117030609721527`*^9}, 
   3.7117039354124393`*^9, 3.711709692662835*^9, {3.711709931170182*^9, 
   3.711709955747266*^9}, 3.711712420335341*^9, 3.7117124800710077`*^9, 
   3.711714132910102*^9, 3.7117141660147448`*^9, 3.711714529472538*^9, 
   3.711714569319468*^9, 3.711778438585713*^9, {3.711780252045075*^9, 
   3.711780257156671*^9}, 3.711782385230115*^9, 3.711782837728078*^9, 
   3.7117828746040792`*^9, 3.711785687695221*^9, 3.711785735773938*^9, 
   3.711790646979216*^9, 3.713075805385165*^9, 3.713076492910729*^9, 
   3.7130838334676123`*^9, 
   3.713083869933126*^9},ExpressionUUID->"5516e740-9406-4e64-ac85-\
555fcb163418"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"MOD1Black", ",", "MOD1Red", ",", "MOD1Blue", ",", "MOD1Green", ",", 
   RowBox[{"Plot", "[", 
    RowBox[{"0.5", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "10"}], "}"}], ",", " ", 
     RowBox[{"PlotStyle", "\[Rule]", "Dashed"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7117802694852753`*^9, 3.711780291119823*^9}, {
  3.7130838963750277`*^9, 
  3.71308393759867*^9}},ExpressionUUID->"42b570ee-743a-4c50-8bcd-\
fc1b1b2a2bbc"],

Cell[BoxData[
 GraphicsBox[{{{{}, {{{}, {}, {
        {GrayLevel[0], PointSize[0.011000000000000001`], AbsoluteThickness[
         1.6], 
         StyleBox[LineBox[CompressedData["
1:eJxl0mdQ03cYB/AwlBGgQCBhBBIocJg6q1YQ9HngEDwXyugQgcpqrwFThIoH
BaEopz0oUg5kVIuIyBYoSwFBvDLCaFhBNDLyq9EWMWqDQCTSf6/tK18899zn
1fee7z02IQKfcHUajeZJzT97a8b8olvnMnQlplrUt9WCOpenpFeuQOqrHNlR
RsM7/uTohzUnbVfhVbJv+oCy+R3HVLpAfTENt3VvTV5ObAO6RnX8n9lq2MqP
E54a7gSmf2NrHV8dx2q/1A1ouAcHdpxpJhs1sM/cW94l7YbEK6NtzFkN3F/c
0tfnI4QbrRNMIXsNCuV7vZgSEXD2HnRmVqzBIxExrPiuEYg/o7zLr1iLNVFK
e9sYMaRl8XcmcLTQkxYmK+HdhywSk+C+qIWKCtk0y/kh9P66Ky72tjY+bjmx
WtbyCP69Xwd3O1ht34QzcPGsRst0oC7ev3E8zH1uBgrF9OXS7XScsfBNCrw+
C8Mt44r7S3Q0sg+dPWwvhfaenc8diR7mZ4Sp0i9J4VDVD3vCG/UxdF4SVS6V
QknftVP0WAM8HM9/4M0kcNOyqnlk/3vo1uQ7NepO4K+3tz/7TssQPWhFDXnH
CehHGs+djzZEkZP/ZGQCgQ1Gji8Lhg3xx9lCXnEGAavKFfGxHUY485XD056f
CIRfLlVPKDLC8e43KnkZgTvH7O9a040x/a1ky4l68l/fxpgsrGtn3CJwtaTX
NFNsjCEGnQutdwj8kXvSrRoYyFsgboouAnGmhbTMUgauOt1r4nYTKDiUoiS6
Jpjlz+Tk9BLo/MB9vuqkCe7qfN5eJyQgqmq/kCo2wQdzJOnMAAGB2pu0ChdT
TOMajLgMEehXPv0+7bopdmaXqOmJCHRwCs0u6zAx2vHcwuAwgZTLomDzr5lo
qWKllo0SyPJibYyfYOKWpI+9s8YJhD2OabjgwsIghd0XkRMEXrwOT5q5ysIJ
80nxvkkCZ1clPmt1zDA3cKze8iGBwMz1+VMCM2Q7P3MclhAIjqr7OW/cDPVO
OyQcnyKQWJ6zI2CXOcpUjaWj0wQG2oOkmiXmOOnHYpjPEvhFa6RbqW2Bi0WZ
ZzdLCaxb+RaWBRY4xjActCME5F4pM75iC1SXl42+oOx3vmsg1tUSRXoD9Pzf
qbxgDMy9Zok5Ue4q28dUH2Z9ScU6bFxKfml3kfI5be2VagEbh3oPfC6jTA/5
bV+gmI3YYWPFkxHYU53HK3a1Qtnm6QNBlPmKpXJFsRWyQsTfpFFOfm22KVPH
Gi+xuw9dp0xfx+lVCayxjbNe0ka5uTb+mZ/YGiOW5VNDlKNzyyKWXDm4cHO1
WUI5O6DqoyPXONjkkeP/hPLKWLNrvyYXszs+PSenvDvyYAfDiYv+PfqzC5Q9
Ch6d5vG5uGpcM6ikfLC9vyHqCheFoomyt7L//5OLpqGZVWpPCNzyfH9Dv6YN
2tVvo2tS/huCqS7l
           "]],
          FontFamily->"Helvetica",
          FontSize->12]}}}}, {}, {}, {{}, {}}, {{}, {}}}}, {{{}, {{{}, {}, {
        {RGBColor[1, 0, 0], PointSize[0.011000000000000001`], 
         AbsoluteThickness[1.6], 
         StyleBox[LineBox[CompressedData["
1:eJxl0mlQ1HUYB/DlEpaNOFaWBRd2iWwAhWY0WeV6HgiVUqAUs1qOkaNUZFZc
DIZDQhRZRkIhkGNAWRbkWERymRWBQAoBd5HTBacC9odWXpCBXG7Qv6le+eKZ
73xePfN857GPEO6L1qXRaLuo+Se35jxf9Olchjj/KnbnR9dBl+e8wqjXwmDE
ZinG33jNBz/fcu3EW2uQk9rrn85WvGZRvQd8J6GhTofAm7GrFRh6DUlP8nWw
Ii3PvZjWCawDza1NMbqo/NaPDtIu2MtPU0y76qH1VPgmqbgbUstH2lgaPYzy
HddPrOmFq61jrLscA9x83kjfJGwAuP4BO1h1Bph9b42nODIESWkrt2Pq1uGy
2OGqSDUKmRdj3JO5hug+PyMIilLDxWlRsu+iIfpVZ5+M9XsAvd1eCfG3jDDh
paNotfYn+Pd+Ok48Wv5xInICLpzRuzkZaox8FwdmVMsklKoZy9XbGJiZmZ53
uGgKhm7enx9fYqB8cWLAxkYD7T3uM47Tb+DUl+ULh3I0ECj7Zmd0swkeDc47
OTOmAWlf5VeM+DdxVDMT0U8n0LhBphjeY4q+j2MO0bcSmFu99dlpQzM88raU
Ox9AwOSYxdOsODMcldce0I8k4GLu+KJkyAzfGbpz/tZxArb1WnUI3xzdnJzX
/JMJRJdV6yZfMUdj7eFPPDIIfB+y8bYdwwIf5h70CxST//q2wMjskJ4fcghU
SHstc9UW6Gr+aYBlHoHHhSd8GoCJ+ysLz5kWEkiwLKXlVjNx8f2us78VEygJ
TF+ZNl6PgtV6E3kZgc5Nvs9lJ9ajaoyeoqggMChrF2eo16NDd0FCVRUBoc6r
zDoPSwzeWOdRW0tAufJ7dmaVJfp4quXjDQQ6uKXsMjoLKw9Hm7Y1EUgvGwy3
Ps7CsFkv4aVmAhd3W7kmjbHQp1mcEdBCIOqRSC72sMKg5FeW19oI/LEQfWqq
wgr7nQ68p+kgcGbt533r6Gy0tp8LHeoiEJq7uXhCyEaZd97DuG4C4bFNl4vu
s/GJiD/a3kMgtbaAL/CyRvOnjMaePgKq9jCiL7XGC3vkrqeVBG4YDt9ZMbLB
0Rfi7j9VBJy0KbAstEH3yUSmyz0Cs7vTp/arbbD+A2mV6wCB4KwuVbznBgzr
8QijDVL7wjG0sHIDyi6F7K2nLGT3nZLQOZgnti7YMkTgrJGRtkHIwaAHuexy
yoyIgQ9D1RxkSpQpc5R3NhQ5SzxtMesZ399tmEDM/FLtvMQW+7ddkRyl/PUC
+91cuh028XMa8ykznLi9fwnt0PgBablBWXE96Vmw2g45NfZ3VZTjCmu+WPLk
Yk3kuvQpyvkCmdvHlVyU9Je/nKWsHVV4KvV5qElWOmgpex8L6GBu5yHLRKQy
GCHgV/JLonMMD9XbL8eaUA5oV8pjy3k4wunLYI78/588/HUtSMCm3LLLwUWp
b4+61xp3cCj/DWFZGE8=
           "]],
          FontFamily->"Helvetica",
          FontSize->12]}}}}, {}, {}, {{}, {}}, {{}, {}}}}, {{{}, {{{}, {}, {
        {RGBColor[0, 0, 1], PointSize[0.011000000000000001`], 
         AbsoluteThickness[1.6], 
         StyleBox[LineBox[CompressedData["
1:eJxl0mlQ1HUYB/DlEnAhOZddrl0V5Uh0xhSKo+eBCbAQwiuHhHakoGOFjUOp
BbniUBCJTBIWtkA0F9gEg0AOORRcjpRDF50W9rcQIwVrgCjLCtK/sXe+eOY7
n5ff7zwbI/j7I7VpNJo/df/lG/mqJZ+OZRCyVGulTRLQ5rho6NUrUJZidzzz
aN0rPvzhzl/iNq1B5XcRUVu9619xfLUnXKugoahULGTGNwJdRyL4+5wWljr5
t8/qtgDjUENLHU8bNzlbj3rO34C97qmNk9t1kOk3W5Zf3AknRSOtDKUOBggn
Rv4kN+HnllFGn60ejje7MxS3pcDeE/QWo0oPY86qn276oB8EqZpOXtU6DJbb
W7h6DkJ2Ic8jia2PpLTWCARDUDgZn+S7pI897dwtWUMjIO32TkxoNsDjBxYq
xBP34WV/Q6wK0VU8iXoA32bqNCnC12Pr7q7CmYaHIJTRly/vpiOrwSJ31u0P
GGq6v/hATUf+3IHR7kA5tN32eOw0aYTyWxsWOt4dg+Cas36RDcbID0x+/+HC
GFT2XjxBT3gNY1gqZfKn43DVpqZxOHADPg4TFccNjMOTF82hGfommLnb0fFz
cwUYHzObORVrgprzgTfz9inA1dRpvmTIBHPYRevn0hRgV70iC3M3xVLne8Jo
iQIiyy5rJ/1kij0DgtbFUQXcCNvSaU83w/qMbJ1eGvl/bzPM6ksuyDInUF4p
tSyQmaGE0bR6wonAX0VxPhIwx83XYn4P8yaQaCmkFVw2R7m+aGV5H4GS4HTN
5HoLTMu201NHEuh43VdVE2eBATse6bkICAzWtJ3+RmaBczEOtW1nCPC1nmdX
eVoirXzULVREoF8znZt9yRInUned2XqVQDtbyCwzZKDP8q3YkDYC6WWDXNaX
DOSGamXQ+ggUBlhtF4wy8FKY9uGlewQ+mYqvP+1phWqNelo1RmDuWWQKKbdC
aXefw/dTBDLX5PvXGTIxONfZSjVDILxgW/E4n4nD4rwQq3kC3Oi6Hy/cZ2JS
Mfzm/ZTASfF59yPeLAziPioTqwkMtH00oVvJwthE+OHj5wR+1R/u0RhYo5HN
noj8VQLOK8mwzLdGTp6x7aE1Av8EpJMDMmvkheT4dtGUcPBU10CClw3m8+7K
p7WUwOVieNFFG2zaP0weaiuBz+xNqTC0RUblnSahjhKyDAxWJHxbjH9Rp++h
qwR6xN33wmW2KE2X5rZS9pNccKnwskPfr6OjHPWUwFtUixcr7DBjakmUSjnt
GXNHgaE97ty7866UMt2ZLV3l26PDF9ui9NYpobFWMHtQZo9GLqp6d8qxRVei
1F5svBktqT1K+dyRGrd9F9nou9ZfkEl55V6jV78uBz/LY4nKKb99LKjd/E0O
5tQazV6n/E7J2FcuPA6m7Qpg36Ec1NZfHy3i4BUfoYGC8sv/5KDVVrGdivJ1
/82u/bobcaP7klxN+V+vuQ8T
           "]],
          FontFamily->"Helvetica",
          FontSize->12]}}}}, {}, {}, {{}, {}}, {{}, {}}}}, {{{}, {{{}, {}, {
        {RGBColor[0, 1, 0], PointSize[0.011000000000000001`], 
         AbsoluteThickness[1.6], 
         StyleBox[LineBox[CompressedData["
1:eJxl0llQE2YQB3COcJlKAyQhCpJIW0diFUcLFIHuwlRoUdBGwcGAtFZaKsRU
ouKgYkHKYKECKgyHBxJEhUTAQkElCq2RI6iIEBBJPoSqlCNIjRxJ1KZT33zY
2fk9/Gdnd3bxdiEvxszExCTQWP/11b9OzPg3zcEp9pvp4McXwIzD1VErDRBW
UR4g51W+4y1bV11OcH0Do9SasFj3qncsqvSBK6Um6L4z0dTyRg1QzaVJoydM
Ma2dPkFzqQVmWN31mjgzjFzpIcxo+B3Wex2uH15hjrHyyal7WVfh0JkHjczH
5ljNf8BvLGiEC9d7me3OFpgoWsqii5uB/UWIN7PCAiVjeu2Xgj8h6bCuOa7C
EtfbTY6Eu7VAem7cmgNsKxxvqbzRQmuD3GHRgYAZK+QNKbXpvR3QKvdL3HPN
Gm9tYXUIvDvh//1t0HPFVYVfeRfkpJk3kKh5GCoSbHCf1w3FSupcuQcVN4as
559t7YH7DT3avlkqspIvujpye0HWskazdPg9LLHellKd3QehkmNrY+rm4xmn
JcE5+Q+hrE28j7rHFven+qwr5vdDlZOkvmvd+3jnbl76kP0jePH6WkSqFQ37
pne2jBU9gvnx9mMZu2nYsLGd68kYgOV2S6eK7tNQc4xwtbsHYFGlQRnpZYfo
6nVFLh+AmNPlZgdK7JDiS1lSQVPBjciPml2o9jj9emiZZpPq7b3tUfGst1ic
qYJzZa2MbKU96p+etc2Qq+Dv/AR/KTighy3nLs2ggkRGsUl2uQP2yYKzJtzV
UBSaohueR8fn7SMrg75RQ9OygAlJAh1znsaG3zmuhk6J7OgRJR1jM102C5rU
IDTVp1f4MNAzcHaTZkwNCt3IL+nnGZi3lfeyhUHgJruYddqGiRwpTEV4E0g5
3Rm94EcmJtF3tYkiCOQGOa5I6mViZio37eu9BHY8EdUe9XFE9bPRF+FZBJ5P
xyQPnnPE+F1HDNQSAmlvBniWNixMPc6aPFxNICr740K1kIWDFlElehmBaEHN
2YIeFlaLsgZHWgkcupTnxfdbgNdWfZtk3kWgQ7ZtiFK2AC9Q3U5GPiTwm1XX
bZ31Qsw/Ka0LIgTcDAdhTrgQx9e8LvP9i8BkUMrgJuVCtCydCQ0eIbA544+O
Pb5OeDn1iYV4zDgvGqPyxU7oJz0fk6AhIGS1JZfaOOOpcx62t58T+Nna2iAV
OmO3v35H4z8EqNvvBUcpnXFjYOeRH7QE1koLuKW+izBtw5RS+ZJAnHb2krZ0
EVIC7ifbzRD4aZrlnm3jgvs0xTLXWWPejd36SuiCKkkh0uYI1FcnjW9WumBp
v76fGL07/+J3s75sXL1cU5mvI3CCL/H8SszGtL1mXl56Aobuel8FhYPK8e8f
3TL6s/iQmw6fcvAuM/xggIHA50Wq/dw4DtYX2vNqjA6RKWoFZzj44ZPIEYdX
5O1/crB2r90ncUZfDfxguYKyGHWTgqoGo/8FyQMflQ==
           "]],
          FontFamily->"Helvetica",
          FontSize->12]}}}}, {}, {}, {{}, {}}, {{}, {}}}}, {{{{}, {}, 
      TagBox[{
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
         Opacity[1.], Dashing[{Small, Small}], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQPbcuic0wpduOAQwe2LPffqT+Vn6nPYy/8NT8wtfy
J+H8des7b+fo3YLz0+0vznxT9BjOz3uq+XjLupdwPpdii/p9iw9wfp/Aaa2F
CZ/h/KTbIfuZz3yD8wuPtiTlq/+C8zcW8ARLeP5FuKc6+5VBOIMDjN80/0/g
lzeMcD7D5QcOe6qY4Xy1krSKEC1WOP/J1+lh3HvZ4Hyvp1m1kwo54Hy/JxO0
5eS44PxXh5MaTqzlhvP1BK/JOsfzwvlc9l8T73zmg/Pd30Z9VwoVgPNvHEph
jNIRhPO3dhyJU/iK4Kexlj44d04Izk8uqt7KM0sYztdP1z7nkygC558X0uEu
tRSF83eva5qtwywG51czagWcuYvgc92p8sjbIg7nP12mOGV+jQScP0VDkmVn
qCScP2FW2vFEBSk4P2pK7Dme5wj+D5elP+fvk4bzHz91qjjULgPnL7I1lD6b
KAvnr20tFUzXlYPz20OTvZm/IvimdxaubD8rD+fP0Jy99qy3Apxff6B3hvdO
BN9XOnTpKRVFON8x73i0YCeCP18mSeXMVwRf5fDyaX7RSgj/6R7SurQPwU/7
zHLxpJYynJ+08ZNCZz+CP+EST++R4wj+vs9qP///R/ABmgvwGg==
          "]]}},
       Annotation[#, "Charting`Private`Tag$98167#1"]& ]}}, {}, {}}},
  AspectRatio->NCache[2^Rational[-1, 2], 0.7071067811865475],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{1.643976688829011, 0},
  BaseStyle->{FontFamily -> "Helvetica", FontSize -> 12},
  DisplayFunction->Identity,
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{
     FormBox[
      StyleBox["\"neo-W frequency\"", FontSize -> 8, StripOnInput -> False], 
      TraditionalForm], 
     FormBox["\"\"", TraditionalForm]}, {
     FormBox[
      StyleBox["\"Generation\"", FontSize -> 8, StripOnInput -> False], 
      TraditionalForm], 
     FormBox["\"\"", TraditionalForm]}},
  FrameStyle->Directive[
    GrayLevel[0], 
    Thickness[0.006]],
  FrameTicks->{{{{0., 
       FormBox["0.`", TraditionalForm], {0, 0.01}}, {0.25, 
       FormBox["0.25`", TraditionalForm], {0, 0.01}}, {0.5, 
       FormBox["0.5`", TraditionalForm], {0, 0.01}}}, {{0., 
       FormBox["0.`", TraditionalForm], {0, 0.01}}, {0.25, 
       FormBox["0.25`", TraditionalForm], {0, 0.01}}, {0.5, 
       FormBox["0.5`", TraditionalForm], {0, 0.01}}}}, {{{
       NCache[
        Log[5], 1.6094379124341003`], 
       FormBox["5", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[10], 2.302585092994046], 
       FormBox["10", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[50], 3.912023005428146], 
       FormBox["50", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[100], 4.605170185988092], 
       FormBox["100", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[1000], 6.907755278982137], 
       FormBox["1000", TraditionalForm], {0, 0.01}}}, {{
       NCache[
        Log[5], 1.6094379124341003`], 
       FormBox["5", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[10], 2.302585092994046], 
       FormBox["10", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[50], 3.912023005428146], 
       FormBox["50", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[100], 4.605170185988092], 
       FormBox["100", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[1000], 6.907755278982137], 
       FormBox["1000", TraditionalForm], {0, 0.01}}}}},
  FrameTicksStyle->{{
     Directive[
      GrayLevel[0], 
      Thickness[0.006], FontColor -> GrayLevel[0]], 
     Directive[
      GrayLevel[0], 
      Thickness[0.006]]}, {
     Directive[
      GrayLevel[0], 
      Thickness[0.006]], 
     Directive[
      GrayLevel[0], 
      Thickness[0.006]]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->NCache[{360, 180 2^Rational[1, 2]}, {360, 254.55844122715712`}],
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Exp[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Exp[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->NCache[{{
      Log[5], 
      Log[5000]}, {0, 0.625}}, {{1.6094379124341003`, 8.517193191416238}, {
     0, 0.625}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{
    Charting`ScaledTicks[{Log, Exp}], Automatic}]], "Output",
 CellChangeTimes->{
  3.711780291454389*^9, 3.711782386300087*^9, 3.7117828379559183`*^9, 
   3.7117828747192783`*^9, 3.711785687777063*^9, 3.711785736566949*^9, 
   3.711790647097178*^9, {3.713075805454217*^9, 3.7130758055078583`*^9}, 
   3.713076492970825*^9, 3.713083833558806*^9, 3.713083869995677*^9, {
   3.713083905430071*^9, 
   3.713083938376347*^9}},ExpressionUUID->"be92f441-35f9-447e-a66a-\
40304309fee3"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Parameters (female gametic competition)", "Subsubsection",
 CellChangeTimes->{{3.7117896910190773`*^9, 3.711789692171351*^9}, {
  3.713075844172964*^9, 3.7130758468181*^9}, {3.713076444607532*^9, 
  3.7130764446974163`*^9}, {3.7130765262457323`*^9, 
  3.7130765287681217`*^9}},ExpressionUUID->"a1fba1c9-cab8-4237-bc18-\
290f00920ae3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"tryFAA", "=", 
   RowBox[{"1", "-", 
    RowBox[{"1", "/", "4"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tryFAa", "=", 
   RowBox[{"1", "-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "/", "4"}], ")"}], 
     RowBox[{"(", 
      RowBox[{"1", "/", "4"}], ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tryFaa", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tryMAA", "=", 
   RowBox[{"1", "-", 
    RowBox[{"1", "/", "4"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tryMAa", "=", 
   RowBox[{"1", "-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "/", "4"}], ")"}], 
     RowBox[{"(", 
      RowBox[{"1", "/", "4"}], ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tryMaa", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"trywAf", "=", 
   RowBox[{"1", "+", 
    RowBox[{"1", "/", "4"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"trywaf", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"trywAm", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"trywam", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"try\[Alpha]f", "=", 
   RowBox[{"1", "/", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"try\[Alpha]m", "=", 
   RowBox[{"1", "/", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tryr", "=", 
   RowBox[{"1", "/", "200"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tryR", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"subpar1", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"FAA", "\[Rule]", "tryFAA"}], ",", 
     RowBox[{"FAa", "\[Rule]", "tryFAa"}], ",", 
     RowBox[{"Faa", "\[Rule]", "tryFaa"}], ",", 
     RowBox[{"MAA", "\[Rule]", "tryMAA"}], ",", 
     RowBox[{"MAa", "\[Rule]", "tryMAa"}], ",", 
     RowBox[{"Maa", "\[Rule]", "tryMaa"}], ",", 
     RowBox[{"wAf", "->", "trywAf"}], ",", 
     RowBox[{"waf", "->", "trywaf"}], ",", 
     RowBox[{"wAm", "->", "trywAm"}], ",", 
     RowBox[{"wam", "->", "trywam"}], ",", 
     RowBox[{"\[Alpha]f", "->", "try\[Alpha]f"}], ",", 
     RowBox[{"\[Alpha]m", "->", "try\[Alpha]m"}]}], "}"}]}], ";"}]}], "Input",\

 CellChangeTimes->{{3.697299472701777*^9, 3.697299615143155*^9}, {
   3.69729974606957*^9, 3.6972997764327097`*^9}, 3.69730060073298*^9, {
   3.69730066890292*^9, 3.69730067414042*^9}, {3.6973007268098497`*^9, 
   3.69730072981532*^9}, {3.6973012570019836`*^9, 3.697301268086133*^9}, {
   3.69730161492304*^9, 3.697301617644561*^9}, {3.697302327559979*^9, 
   3.697302327863235*^9}, {3.697302740882915*^9, 3.6973027413209543`*^9}, {
   3.697302786656652*^9, 3.697302787281019*^9}, {3.697302962121398*^9, 
   3.6973029905212173`*^9}, 3.697303079565696*^9, 3.697303120491474*^9, {
   3.697303431993217*^9, 3.6973034322206907`*^9}, {3.6973034629706907`*^9, 
   3.697303517375206*^9}, {3.697304249782853*^9, 3.697304293461493*^9}, {
   3.697304948734173*^9, 3.697304950456213*^9}, {3.710182518453659*^9, 
   3.710182522036127*^9}, {3.710184612997334*^9, 3.710184634901937*^9}, {
   3.710185190360118*^9, 3.710185190453978*^9}, {3.710185503341949*^9, 
   3.710185503652523*^9}, {3.710185768446323*^9, 3.7101857690503693`*^9}, 
   3.710244391216098*^9, 3.710350541541176*^9, 3.710350868579856*^9, 
   3.71035134518941*^9, 3.710351411026071*^9, 3.710351533996911*^9, {
   3.710352268506646*^9, 3.710352268573635*^9}, {3.711528118943572*^9, 
   3.7115281223839407`*^9}, {3.7115281574856462`*^9, 
   3.7115281600083103`*^9}, {3.711692518953178*^9, 3.711692553386442*^9}, {
   3.7116925839166927`*^9, 3.7116927566818457`*^9}, {3.7116930018904877`*^9, 
   3.711693025794161*^9}, {3.7116930829601803`*^9, 3.7116930834244843`*^9}, {
   3.7116974110978622`*^9, 3.711697424705469*^9}, {3.711702817336348*^9, 
   3.711702836548231*^9}, {3.711703342798403*^9, 3.711703378874107*^9}, {
   3.7117034458830233`*^9, 3.711703446190003*^9}, {3.711714126332465*^9, 
   3.711714126923059*^9}, {3.7117897874111023`*^9, 3.7117897877019033`*^9}, {
   3.713075577438867*^9, 3.713075636006651*^9}, {3.713076452533245*^9, 
   3.713076463698235*^9}, {3.7130765331710453`*^9, 3.7130765404424677`*^9}, {
   3.713083767343265*^9, 
   3.713083769431569*^9}},ExpressionUUID->"b15b7057-1dfc-4340-9dd9-\
4c8ff0e8a109"]
}, Closed]],

Cell[CellGroupData[{

Cell["Plot", "Subsubsection",
 CellChangeTimes->{{3.711789765961763*^9, 
  3.711789766425194*^9}},ExpressionUUID->"07b06c6d-9157-4ecb-b23f-\
df47eb7b0342"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"tab", "=", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"equil", "=", 
       RowBox[{
        RowBox[{"sieve", "[", 
         RowBox[{
         "tryFAA", ",", "tryFAa", ",", "tryFaa", ",", "tryMAA", ",", "tryMAa",
           ",", "tryMaa", ",", "trywAf", ",", "trywaf", ",", "trywAm", ",", 
          "trywam", ",", "try\[Alpha]f", ",", "try\[Alpha]m", ",", "tryr"}], 
         "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Lambda]", "/.", 
       RowBox[{"Solve", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 SuperscriptBox["\[Lambda]", "2"], "-", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"\[Lambda]mA", " ", "+", "\[Lambda]ma"}], ")"}], 
                  "\[Lambda]"}], " ", "+", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"\[Lambda]mA", " ", "\[Lambda]ma"}], "-", 
                   RowBox[{"\[Rho]mA", " ", "\[Rho]ma"}]}], ")"}]}], "/.", 
                "SUBS"}], "/.", "subequil"}], "/.", "subpar1"}], "/.", 
             RowBox[{"R", "\[Rule]", 
              RowBox[{"0.5", "^", "b"}]}]}], "/.", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"pXf", "\[Rule]", 
               RowBox[{"equil", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], ",", 
              RowBox[{"pXm", "\[Rule]", 
               RowBox[{"equil", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], ",", 
              RowBox[{"pYm", "\[Rule]", 
               RowBox[{"equil", "[", 
                RowBox[{"[", "3", "]"}], "]"}]}], ",", 
              RowBox[{"freqYm", "\[Rule]", 
               RowBox[{"equil", "[", 
                RowBox[{"[", "4", "]"}], "]"}]}]}], "}"}]}], ")"}], 
          "\[Equal]", "0"}], ",", "\[Lambda]"}], "]"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "10", ",", "1", ",", 
       RowBox[{
        RowBox[{"-", "1"}], "/", "2"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eigen1", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"0.5", "^", "b"}], ",", 
         RowBox[{"{", 
          RowBox[{"b", ",", "10", ",", "1", ",", 
           RowBox[{
            RowBox[{"-", "1"}], "/", "2"}]}], "}"}]}], "]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Transpose", "[", "tab", "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], "-", "1"}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eigen2", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"0.5", "^", "b"}], ",", 
         RowBox[{"{", 
          RowBox[{"b", ",", "10", ",", "1", ",", 
           RowBox[{
            RowBox[{"-", "1"}], "/", "2"}]}], "}"}]}], "]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Transpose", "[", "tab", "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}], "-", "1"}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"plot1", "=", 
  RowBox[{"Show", "[", "\[IndentingNewLine]", 
   RowBox[{"ListLogLinearPlot", "[", 
    RowBox[{"eigen2", ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Thick", ",", "Black"}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0.0008", ",", "0.5"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"yplotmin", ",", "yplotmax"}], "}"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", "loglinearplotR\[Lambda]options"}], "]"}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.711789818872653*^9, 3.711789829510097*^9}, {
   3.711789895199415*^9, 3.711789898765771*^9}, {3.711790424977929*^9, 
   3.711790432167965*^9}, 
   3.711790552521893*^9},ExpressionUUID->"91159cff-d8fd-4205-850a-\
65dc229bdd99"],

Cell[BoxData[
 GraphicsBox[{{{}, {{{}, {}, {
       {GrayLevel[0], PointSize[0.012833333333333334`], Thickness[Large], 
        StyleBox[LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBmIQnX1ix77LO6UPfOAurzdn3Wl/RuVk3/swqQMKz/Se
vvy4w1638WYc9xeJAxvmreHaem2Hfd/dl3rqE8UPMDyRPZm1YYf9e8tf/5z0
xA5MeMWntqRqh33ANK7zcadFDlyI28YZqb/DfuMnqflVGcIHEjq396cf224v
5K+dP41V6EDAkktRiqbb7YtXW9tvWiRwwGDB2htyedvsV/LPkJtTz3dA4Yj3
/s+JW+0h7uM+YNB5kEGAaQvUPRwHNiyyXfnHfRPUfrYDCftfu+Q6bYDax3yg
gXN19CenNVDzGQ4cKOW+KhCxAmre7/0KIS5Vn/WWQvV/26/QGBXicmcRVP2H
/QpCQp/arRdC5Z/tT5j2yyVGZoE9AECYmKE=
          "]],
         FontFamily->"Helvetica",
         FontSize->14]}}}}, {}, {}, {{}, {}}, {{}, {}}}},
  AspectRatio->NCache[2^Rational[-1, 2], 0.7071067811865475],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-7.098710072047664, 0},
  BaseStyle->{FontFamily -> "Helvetica", FontSize -> 14},
  DisplayFunction->Identity,
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{
     FormBox["\"\"", TraditionalForm], 
     FormBox["\"\"", TraditionalForm]}, {
     FormBox[
      StyleBox["\"R\"", FontSize -> 14, StripOnInput -> False], 
      TraditionalForm], 
     FormBox["\"\"", TraditionalForm]}},
  FrameStyle->Directive[
    GrayLevel[0], 
    Thickness[0.006]],
  FrameTicks->{{{{-0.1, 
       FormBox[
        RowBox[{"-", "0.1`"}], TraditionalForm], {0, 0.01}}, {0., 
       FormBox["0.`", TraditionalForm], {0, 0.01}}, {0.1, 
       FormBox["0.1`", TraditionalForm], {0, 0.01}}, {0.20000000000000004`, 
       FormBox["0.20000000000000004`", TraditionalForm], {0, 0.01}}}, {{-0.1, 
       
       FormBox[
        RowBox[{"-", "0.1`"}], TraditionalForm], {0, 0.01}}, {0., 
       FormBox["0.`", TraditionalForm], {0, 0.01}}, {0.1, 
       FormBox["0.1`", TraditionalForm], {0, 0.01}}, {0.20000000000000004`, 
       FormBox["0.20000000000000004`", TraditionalForm], {
       0, 0.01}}}}, {{{-6.907755278982137, 
       FormBox["0.001`", TraditionalForm], {0, 0.01}}, {-5.298317366548036, 
       FormBox["\"r\"", TraditionalForm], {0, 0.01}}, {-4.605170185988091, 
       FormBox["0.01`", TraditionalForm], {0, 0.01}}, {-2.995732273553991, 
       FormBox["0.05`", TraditionalForm], {0, 0.01}}, {-0.6931471805599453, 
       FormBox["0.5`", TraditionalForm], {0, 0.01}}}, {{-6.907755278982137, 
       FormBox["0.001`", TraditionalForm], {0, 0.01}}, {-5.298317366548036, 
       FormBox["\"r\"", TraditionalForm], {0, 0.01}}, {-4.605170185988091, 
       FormBox["0.01`", TraditionalForm], {0, 0.01}}, {-2.995732273553991, 
       FormBox["0.05`", TraditionalForm], {0, 0.01}}, {-0.6931471805599453, 
       FormBox["0.5`", TraditionalForm], {0, 0.01}}}}},
  FrameTicksStyle->{{
     Directive[
      GrayLevel[0], 
      Thickness[0.006], FontColor -> GrayLevel[0]], 
     Directive[
      GrayLevel[0], 
      Thickness[0.006]]}, {
     Directive[
      GrayLevel[0], 
      Thickness[0.006]], 
     Directive[
      GrayLevel[0], 
      Thickness[0.006]]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->{{40, 20}, {50, 30}},
  ImageSize->NCache[{360, 180 2^Rational[1, 2]}, {360, 254.55844122715712`}],
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Exp[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Exp[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-7.1308988302963465`, -0.6931471805599453}, {-0.075, 0.25}},
  PlotRangeClipping->False,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->FrontEndValueCache[{
     Charting`ScaledTicks[{Log, Exp}], Automatic}, {{{-6.907755278982137, 
       FormBox["0.001`", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-5.298317366548036, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.005\"", 0.005, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 3.}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-4.605170185988091, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.010\"", 0.01, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 3.}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-2.995732273553991, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.050\"", 0.05, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 3.}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-2.3025850929940455`, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.100\"", 0.1, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 3.}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.6931471805599453, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.500\"", 0.5, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 3.}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-7.600902459542082, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-7.418580902748128, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-7.264430222920869, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-7.1308988302963465`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-7.013115794639964, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-6.214608098422191, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-5.809142990314028, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-5.521460917862246, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-5.115995809754082, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-4.961845129926823, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-4.8283137373023015`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-4.710530701645918, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-3.912023005428146, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-3.506557897319982, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-3.2188758248682006`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-2.8134107167600364`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-2.659260036932778, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-2.5257286443082556`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-2.4079456086518722`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-1.6094379124341003`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-1.2039728043259361`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-0.916290731874155, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-0.5108256237659907, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-0.35667494393873245`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-0.2231435513142097, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-0.10536051565782628`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {0., 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {0.4054651081081644, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {0.6931471805599453, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}}, Automatic}]]], "Output",
 CellChangeTimes->{{3.711789772577486*^9, 3.711789789543001*^9}, {
   3.71178982132514*^9, 3.711789830040066*^9}, {3.711789899320304*^9, 
   3.711789927244409*^9}, 3.711790008409782*^9, 3.711790054993622*^9, 
   3.711790111581698*^9, 3.711790432852747*^9, 3.711790553414027*^9, 
   3.71307564996157*^9, {3.713075712980227*^9, 3.713075731203094*^9}, 
   3.713076471139887*^9, 3.7130765467294703`*^9, 
   3.713083775582736*^9},ExpressionUUID->"1ee9cf86-3083-40cf-b654-\
2d496b8d197d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"temp", "=", 
  RowBox[{"Show", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ListLogLinearPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0.0008", ",", "yplotmax"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"tryr", ",", "yplotmax"}], "}"}]}], "}"}], ",", 
      RowBox[{"Joined", "\[Rule]", "True"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Black", ",", "Thin"}], "}"}]}], ",", 
      RowBox[{"Filling", "\[Rule]", "yplotmin"}], ",", 
      RowBox[{"FillingStyle", "\[Rule]", "LightGray"}], ",", 
      "loglinearplotR\[Lambda]options", ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0.0008", ",", "0.5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"yplotmin", ",", "yplotmax"}], "}"}]}], "}"}]}]}], "]"}], 
    ",", "\[IndentingNewLine]", "plot1", ",", "\[IndentingNewLine]", 
    RowBox[{"ListLogLinearPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"tryr", ",", "yplotmax"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"tryr", ",", "yplotmin"}], "}"}]}], "}"}], ",", 
      RowBox[{"Joined", "\[Rule]", "True"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Black", ",", "Thin"}], "}"}]}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"ListLogLinearPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0.001", ",", 
          RowBox[{"-", "0.01"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.001", ",", "0.01"}], "}"}]}], "}"}], ",", 
      RowBox[{"Joined", "\[Rule]", "True"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Black", ",", "Thick"}], "}"}]}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"ListLogLinearPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0.02", ",", 
          RowBox[{"-", "0.01"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.02", ",", "0.01"}], "}"}]}], "}"}], ",", 
      RowBox[{"Joined", "\[Rule]", "True"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", "Red", "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"ListLogLinearPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0.1", ",", 
          RowBox[{"-", "0.01"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.1", ",", "0.01"}], "}"}]}], "}"}], ",", 
      RowBox[{"Joined", "\[Rule]", "True"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", "Blue", "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"ListLogLinearPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0.5", ",", 
          RowBox[{"-", "0.01"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.5", ",", "0.01"}], "}"}]}], "}"}], ",", 
      RowBox[{"Joined", "\[Rule]", "True"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", "Green", "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"GridLines", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "0.005", "}"}], ",", 
       RowBox[{"{", "1", "}"}]}], "}"}]}]}], 
   RowBox[{"(*", 
    RowBox[{",", "\[IndentingNewLine]", 
     RowBox[{"GridLinesStyle", "\[Rule]", "Black"}]}], "*)"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.711790204644497*^9, 3.711790275108921*^9}, {
  3.711790340250709*^9, 3.711790393512679*^9}, {3.711790439616519*^9, 
  3.711790530685474*^9}, {3.711790596078458*^9, 
  3.711790596401642*^9}},ExpressionUUID->"6c8eb6e3-4cb9-4cb7-90d3-\
24d09f02d067"],

Cell[BoxData[
 GraphicsBox[{{{{}, 
     GraphicsComplexBox[{{-7.1308988302963465`, 0.25}, {-5.298317366548036, 
      0.25}, {-7.1308988302963465`, -0.075}, {-5.298317366548036, -0.075}}, \
{{{}, {
         {GrayLevel[0.85], EdgeForm[None], 
          GraphicsGroupBox[{PolygonBox[{{1, 3, 4, 2}}]}]}}, {}, {}}, {{}, {}, {
         {GrayLevel[0], PointSize[0.012833333333333334`], Thickness[Tiny], 
          StyleBox[LineBox[{1, 2}],
           FontFamily->"Helvetica",
           
           FontSize->
            14]}}}}], {}, {}, {{}, {}}, {{}, {}}}}, {{{}, {{{}, {}, {
        {GrayLevel[0], PointSize[0.012833333333333334`], Thickness[Large], 
         StyleBox[LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBmIQnX1ix77LO6UPfOAurzdn3Wl/RuVk3/swqQMKz/Se
vvy4w1638WYc9xeJAxvmreHaem2Hfd/dl3rqE8UPMDyRPZm1YYf9e8tf/5z0
xA5MeMWntqRqh33ANK7zcadFDlyI28YZqb/DfuMnqflVGcIHEjq396cf224v
5K+dP41V6EDAkktRiqbb7YtXW9tvWiRwwGDB2htyedvsV/LPkJtTz3dA4Yj3
/s+JW+0h7uM+YNB5kEGAaQvUPRwHNiyyXfnHfRPUfrYDCftfu+Q6bYDax3yg
gXN19CenNVDzGQ4cKOW+KhCxAmre7/0KIS5Vn/WWQvV/26/QGBXicmcRVP2H
/QpCQp/arRdC5Z/tT5j2yyVGZoE9AECYmKE=
           "]],
          FontFamily->"Helvetica",
          FontSize->14]}}}}, {}, {}, {{}, {}}, {{}, {}}}}, {{{}, {{{}, {}, {
        {GrayLevel[0], PointSize[0.012833333333333334`], Thickness[Tiny], 
         LineBox[{{-5.298317366548036, 
          0.25}, {-5.298317366548036, -0.075}}]}}}}, {}, {}, {{}, {}}, {{}, \
{}}}}, {{{}, {{{}, {}, {
        {GrayLevel[0], PointSize[0.012833333333333334`], Thickness[Large], 
         LineBox[{{-6.907755278982137, -0.01}, {-6.907755278982137, 
          0.01}}]}}}}, {}, {}, {{}, {}}, {{}, {}}}}, {{{}, {{{}, {}, {
        {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], 
         AbsoluteThickness[1.6], 
         LineBox[{{-3.912023005428146, -0.01}, {-3.912023005428146, 
          0.01}}]}}}}, {}, {}, {{}, {}}, {{}, {}}}}, {{{}, {{{}, {}, {
        {RGBColor[0, 0, 1], PointSize[0.012833333333333334`], 
         AbsoluteThickness[1.6], 
         LineBox[{{-2.3025850929940455`, -0.01}, {-2.3025850929940455`, 
          0.01}}]}}}}, {}, {}, {{}, {}}, {{}, {}}}}, {{{}, {{{}, {}, {
        {RGBColor[0, 1, 0], PointSize[0.012833333333333334`], 
         AbsoluteThickness[1.6], 
         LineBox[{{-0.6931471805599453, -0.01}, {-0.6931471805599453, 
          0.01}}]}}}}, {}, {}, {{}, {}}, {{}, {}}}}},
  AspectRatio->NCache[2^Rational[-1, 2], 0.7071067811865475],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-7.098710072047664, 0},
  BaseStyle->{FontFamily -> "Helvetica", FontSize -> 14},
  DisplayFunction->Identity,
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{
     FormBox["\"\"", TraditionalForm], 
     FormBox["\"\"", TraditionalForm]}, {
     FormBox[
      StyleBox["\"R\"", FontSize -> 14, StripOnInput -> False], 
      TraditionalForm], 
     FormBox["\"\"", TraditionalForm]}},
  FrameStyle->Directive[
    GrayLevel[0], 
    Thickness[0.006]],
  FrameTicks->{{{{-0.1, 
       FormBox[
        RowBox[{"-", "0.1`"}], TraditionalForm], {0, 0.01}}, {0., 
       FormBox["0.`", TraditionalForm], {0, 0.01}}, {0.1, 
       FormBox["0.1`", TraditionalForm], {0, 0.01}}, {0.20000000000000004`, 
       FormBox["0.20000000000000004`", TraditionalForm], {0, 0.01}}}, {{-0.1, 
       
       FormBox[
        RowBox[{"-", "0.1`"}], TraditionalForm], {0, 0.01}}, {0., 
       FormBox["0.`", TraditionalForm], {0, 0.01}}, {0.1, 
       FormBox["0.1`", TraditionalForm], {0, 0.01}}, {0.20000000000000004`, 
       FormBox["0.20000000000000004`", TraditionalForm], {
       0, 0.01}}}}, {{{-6.907755278982137, 
       FormBox["0.001`", TraditionalForm], {0, 0.01}}, {-5.298317366548036, 
       FormBox["\"r\"", TraditionalForm], {0, 0.01}}, {-4.605170185988091, 
       FormBox["0.01`", TraditionalForm], {0, 0.01}}, {-2.995732273553991, 
       FormBox["0.05`", TraditionalForm], {0, 0.01}}, {-0.6931471805599453, 
       FormBox["0.5`", TraditionalForm], {0, 0.01}}}, {{-6.907755278982137, 
       FormBox["0.001`", TraditionalForm], {0, 0.01}}, {-5.298317366548036, 
       FormBox["\"r\"", TraditionalForm], {0, 0.01}}, {-4.605170185988091, 
       FormBox["0.01`", TraditionalForm], {0, 0.01}}, {-2.995732273553991, 
       FormBox["0.05`", TraditionalForm], {0, 0.01}}, {-0.6931471805599453, 
       FormBox["0.5`", TraditionalForm], {0, 0.01}}}}},
  FrameTicksStyle->{{
     Directive[
      GrayLevel[0], 
      Thickness[0.006], FontColor -> GrayLevel[0]], 
     Directive[
      GrayLevel[0], 
      Thickness[0.006]]}, {
     Directive[
      GrayLevel[0], 
      Thickness[0.006]], 
     Directive[
      GrayLevel[0], 
      Thickness[0.006]]}},
  GridLines->{{0.005}, {1}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->{{40, 20}, {50, 30}},
  ImageSize->NCache[{360, 180 2^Rational[1, 2]}, {360, 254.55844122715712`}],
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Exp[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Exp[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-7.1308988302963465`, -0.6931471805599453}, {-0.075, 0.25}},
  PlotRangeClipping->False,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->FrontEndValueCache[{
     Charting`ScaledTicks[{Log, Exp}], Automatic}, {{{-6.907755278982137, 
       FormBox["0.001`", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-5.298317366548036, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.005\"", 0.005, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 3.}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-4.605170185988091, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.010\"", 0.01, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 3.}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-2.995732273553991, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.050\"", 0.05, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 3.}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-2.3025850929940455`, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.100\"", 0.1, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 3.}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.6931471805599453, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.500\"", 0.5, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 3.}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-7.600902459542082, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-7.418580902748128, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-7.264430222920869, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-7.1308988302963465`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-7.013115794639964, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-6.214608098422191, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-5.809142990314028, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-5.521460917862246, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-5.115995809754082, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-4.961845129926823, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-4.8283137373023015`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-4.710530701645918, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-3.912023005428146, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-3.506557897319982, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-3.2188758248682006`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-2.8134107167600364`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-2.659260036932778, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-2.5257286443082556`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-2.4079456086518722`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-1.6094379124341003`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-1.2039728043259361`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-0.916290731874155, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-0.5108256237659907, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-0.35667494393873245`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-0.2231435513142097, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-0.10536051565782628`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {0., 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {0.4054651081081644, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {0.6931471805599453, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}}, Automatic}]]], "Output",
 CellChangeTimes->{
  3.711790172520329*^9, {3.7117902112315598`*^9, 3.7117902239111557`*^9}, {
   3.711790258820758*^9, 3.71179027560854*^9}, {3.7117903668033953`*^9, 
   3.711790393948126*^9}, 3.711790446615591*^9, {3.711790482576254*^9, 
   3.711790531108674*^9}, 3.7117905617039843`*^9, 3.7117905968801813`*^9, 
   3.713075744585737*^9, 3.713076475838749*^9, 3.713076546909334*^9, 
   3.713083775759029*^9},ExpressionUUID->"b377bf14-a8f1-4afe-97da-\
dd022fc667df"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Invasion Plot", "Subsubsection",
 CellChangeTimes->{{3.711790613559505*^9, 
  3.7117906152829657`*^9}},ExpressionUUID->"0442dfc1-4b97-4da4-9a03-\
41645e3f05cf"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"tryR", "=", "0.001"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"param", "=", 
   RowBox[{"{", 
    RowBox[{
    "tryFAA", ",", "tryFAa", ",", "tryFaa", ",", "tryMAA", ",", "tryMAa", ",",
      "tryMaa", ",", "trywAf", ",", "trywaf", ",", "trywAm", ",", "trywam", 
     ",", "try\[Alpha]f", ",", "try\[Alpha]m", ",", "tryr", ",", "tryR", ",", 
     
     RowBox[{
      RowBox[{"tryr", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "tryR"}], ")"}]}], "+", 
      RowBox[{"tryR", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "tryr"}], ")"}]}]}], ",", "tryk"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"run", "[", "0", "]"}], "=", 
   RowBox[{"generation", "[", 
    RowBox[{"param", ",", 
     RowBox[{"startgen", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"sieve", "[", 
         RowBox[{
         "tryFAA", ",", "tryFAa", ",", "tryFaa", ",", "tryMAA", ",", "tryMAa",
           ",", "tryMaa", ",", "trywAf", ",", "trywaf", ",", "trywAm", ",", 
          "trywam", ",", "try\[Alpha]f", ",", "try\[Alpha]m", ",", "tryr"}], 
         "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", "trypm"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"time", "=", "1"}], ",", 
   RowBox[{"time", "\[LessEqual]", "endtime"}], ",", 
   RowBox[{"time", "++"}], ",", 
   RowBox[{
    RowBox[{"run", "[", "time", "]"}], "=", 
    RowBox[{"generation", "[", 
     RowBox[{"param", ",", 
      RowBox[{"run", "[", 
       RowBox[{"time", "-", "1"}], "]"}]}], "]"}]}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MODtab1Black", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Round", "[", 
        RowBox[{"Exp", "[", "exptime", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"generation", "[", 
         RowBox[{"param", ",", 
          RowBox[{"run", "[", 
           RowBox[{"Round", "[", 
            RowBox[{"Exp", "[", "exptime", "]"}], "]"}], "]"}]}], "]"}], ".", 
        "modvec"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"exptime", ",", 
       RowBox[{"Log", "[", "startplot", "]"}], ",", 
       RowBox[{"Log", "[", "endtime", "]"}], ",", "0.1"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MOD1Black", "=", 
  RowBox[{"ListLogLinearPlot", "[", 
   RowBox[{"MODtab1Black", ",", 
    RowBox[{"Joined", "\[Rule]", "True"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"startplot", ",", "endtime"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0.5"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", "Black", "}"}]}], ",", "loglinearplotINVoptions"}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{
  3.7103553138593187`*^9, 3.710355582526401*^9, {3.710436642447912*^9, 
   3.710436660679762*^9}, {3.7104368649019117`*^9, 3.710436866972167*^9}, {
   3.710436991453842*^9, 3.710437000980938*^9}, {3.710437094495735*^9, 
   3.7104371114594297`*^9}, {3.7104371545678377`*^9, 3.710437175456407*^9}, {
   3.7104372065281487`*^9, 3.710437257466428*^9}, {3.710437307130103*^9, 
   3.710437402451663*^9}, {3.710438092346622*^9, 3.710438102554027*^9}, {
   3.710438266562661*^9, 3.710438272730937*^9}, {3.7104383114607162`*^9, 
   3.7104383281933613`*^9}, 3.710438415693651*^9, 3.710438453437209*^9, {
   3.710438768293997*^9, 3.710438808524135*^9}, {3.710438892011983*^9, 
   3.710438900508027*^9}, {3.710438948234955*^9, 3.710438980456765*^9}, 
   3.710440484931306*^9, 3.710440614636401*^9, 3.710443798850658*^9, 
   3.710445082930764*^9, 3.710445135789113*^9, 3.710450364677979*^9, {
   3.711692793496278*^9, 3.711692793702231*^9}, {3.711692839131193*^9, 
   3.711692839476317*^9}, {3.711695163270232*^9, 3.711695163791216*^9}, {
   3.7116955340766087`*^9, 3.711695540479776*^9}, {3.7117028584725018`*^9, 
   3.711702872006024*^9}, 3.711702943154717*^9, 3.711709668616238*^9, {
   3.711714148192808*^9, 3.711714148377842*^9}, {3.7117798552832527`*^9, 
   3.711779859325342*^9}, {3.711779893203086*^9, 3.7117799641182737`*^9}, {
   3.7117823451456413`*^9, 
   3.711782346971265*^9}},ExpressionUUID->"56f4a7ef-31ca-4dc2-92f5-\
de29233683ec"],

Cell[BoxData[
 GraphicsBox[{{{}, {{{}, {}, {
       {GrayLevel[0], PointSize[0.011000000000000001`], AbsoluteThickness[
        1.6], 
        StyleBox[LineBox[CompressedData["
1:eJxl0mtU03UYB3CucpnKfY7rJkpHCUgzwwR6HggYpmAKZHGR8Ih4GrYEFIVA
MSLJo0AYG6ATNpwxmFyVWzQnGeOyI6BMjMsPpTAQLYK4jAn9O/rOF895zufF
c57zfM+z9gB3b4yOlpaWP1X/9y3nn81531oAfifv1HLGJdBhOatp5RqYVrAi
3wDBa94X9vb1eMdluJi6n11gVvyaE8o9oEaohb+YSz73tCkBmq40eSJPG48v
BdughxDooTeaqzk6uLJHfyDtuAh2uZ+qH3XTxQKxY9e4shRSBfd+oj/SRVFA
XnLmB2K41vyA3mGnj3V5AbzbuWXADAh8jy7Rx5PpNQmNX5RD8im1nCNZgbyp
2aroK5WQmcvZnsI0wJI9DTuaFqsgdzQhxWfOAC25gpx2fi0o7nglJTYZYsFE
tMiMfxNe3m+EMompa85AM+Rk6DaQSGMM50sWW36XQZGKtiDeSsP15VyZOLwV
ehr6ZvrnaaiOX7BtdW2DlrbtzzeMrkRXi3ynbxu6IKjigl/MjVXICtpZGeve
A6XtouO0xNUongqOLJq+B5W2FfW9O02wJf+EoOsfFUwvNX16xsAU277vCW8N
eQir4syfnj1qipLJkRjuoQFwNdswVdhjipuGcMuAYhDsyzWqCHcz9K5bnVZ2
dwhiLot1UorNUO6TfUd4Zhh+jnCSO9DMcaIwZ9vjf4df5W2Ot8dDuw9vI1BS
qrDKVpkjT/mUz4klMJ4f7y0FC2QaByqKMwgkWRVpZYst8LQ4/hibR6AwKF09
amyJ/pv6ettFBG696fOsIt4SfcfWywOlBLorWrK+Vlni5jiZ9tU6AlztxUyJ
hxXOeSs/3tBMoFP953eZV63w3OBSWLqcgIxZxLhsRMd3xvwEu9oIpF/ujrL+
ko4uM/E1DCWBXPYat+QHdBScTZB29BI4+EdCXZbHGsz2qhqw7Sfw92xM2kjJ
GtzMHkzdMUQgY3lw7wojBtqbtPq6PSYQme1SMMxlIM/zM6fKMQJRR6qv8PsY
GDKxO6l5gkBq2Q/u4V7WGOfzSMl5TqCrZf9jvVJrdCzKUV6ZIlBr0Pur2tAG
Nx/uzfpkhsBGzVewwLXBIxctH9bOEviLnT4SrLLBc+6p7GvzBELO3u5K9LTF
LPFHl0BN7YvCyHyRLUbpnL95bpHKg9GeJjSywxO7edE5GgLfGBpqpFw7VNus
E0e8IEA7cPfDSJUdFuzr71qk7CflOws97fG6nk/ssSUCnJn5shmhPRaHp2zt
pXx6lvFWtpED+qZ2P2EsU/MbmYoXXAf09pUfDaJcX5U8GaJyQOGeMNMkykfz
fzw078nEgyf9TPIp54VXvLtHxMSkC31iKWXN/XrPTj0WPpooa5RRfj8uUGax
jYVb77tIlZR9C4dOOHNYqOmp5vRTDmzprDsioMxO6xih/PI/WRjqpQh8QrnR
f51rp95alCt/OzRJ+T8JHCV+
          "]],
         FontFamily->"Helvetica",
         FontSize->12]}}}}, {}, {}, {{}, {}}, {{}, {}}}},
  AspectRatio->NCache[2^Rational[-1, 2], 0.7071067811865475],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{1.643976688829011, 0},
  BaseStyle->{FontFamily -> "Helvetica", FontSize -> 12},
  DisplayFunction->Identity,
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{
     FormBox[
      StyleBox["\"neo-W frequency\"", FontSize -> 8, StripOnInput -> False], 
      TraditionalForm], 
     FormBox["\"\"", TraditionalForm]}, {
     FormBox[
      StyleBox["\"Generation\"", FontSize -> 8, StripOnInput -> False], 
      TraditionalForm], 
     FormBox["\"\"", TraditionalForm]}},
  FrameStyle->Directive[
    GrayLevel[0], 
    Thickness[0.006]],
  FrameTicks->{{{{0., 
       FormBox["0.`", TraditionalForm], {0, 0.01}}, {0.25, 
       FormBox["0.25`", TraditionalForm], {0, 0.01}}, {0.5, 
       FormBox["0.5`", TraditionalForm], {0, 0.01}}}, {{0., 
       FormBox["0.`", TraditionalForm], {0, 0.01}}, {0.25, 
       FormBox["0.25`", TraditionalForm], {0, 0.01}}, {0.5, 
       FormBox["0.5`", TraditionalForm], {0, 0.01}}}}, {{{
       NCache[
        Log[5], 1.6094379124341003`], 
       FormBox["5", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[10], 2.302585092994046], 
       FormBox["10", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[50], 3.912023005428146], 
       FormBox["50", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[100], 4.605170185988092], 
       FormBox["100", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[1000], 6.907755278982137], 
       FormBox["1000", TraditionalForm], {0, 0.01}}}, {{
       NCache[
        Log[5], 1.6094379124341003`], 
       FormBox["5", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[10], 2.302585092994046], 
       FormBox["10", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[50], 3.912023005428146], 
       FormBox["50", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[100], 4.605170185988092], 
       FormBox["100", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[1000], 6.907755278982137], 
       FormBox["1000", TraditionalForm], {0, 0.01}}}}},
  FrameTicksStyle->{{
     Directive[
      GrayLevel[0], 
      Thickness[0.006], FontColor -> GrayLevel[0]], 
     Directive[
      GrayLevel[0], 
      Thickness[0.006]]}, {
     Directive[
      GrayLevel[0], 
      Thickness[0.006]], 
     Directive[
      GrayLevel[0], 
      Thickness[0.006]]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->NCache[{360, 180 2^Rational[1, 2]}, {360, 254.55844122715712`}],
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Exp[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Exp[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->NCache[{{
      Log[5], 
      Log[5000]}, {0, 0.5}}, {{1.6094379124341003`, 8.517193191416238}, {
     0, 0.5}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{
    Charting`ScaledTicks[{Log, Exp}], Automatic}]], "Output",
 CellChangeTimes->{
  3.711695863559532*^9, 3.711702870075303*^9, 3.7117029010647287`*^9, 
   3.711703077514059*^9, 3.71170393419132*^9, {3.711709667157542*^9, 
   3.711709669147328*^9}, 3.7117099306962013`*^9, 3.711712418950643*^9, 
   3.7117124787569523`*^9, {3.7117141326310263`*^9, 3.711714156762856*^9}, 
   3.7117145288764687`*^9, 3.711778429091012*^9, 3.711778514543406*^9, {
   3.711779890182041*^9, 3.7117801088196774`*^9}, 3.7117801573203707`*^9, {
   3.711782350800932*^9, 3.7117823796855392`*^9}, 3.71178283639592*^9, 
   3.7117828736159*^9, {3.71178568740448*^9, 3.711785732771495*^9}, 
   3.711790637107173*^9, 3.713075795356094*^9, 3.7130764830955057`*^9, 
   3.713076553746615*^9, 
   3.713083784175603*^9},ExpressionUUID->"a17a4b69-13b6-46d2-8cc7-\
7ea61def67c1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"tryR", "=", "0.02"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"param", "=", 
   RowBox[{"{", 
    RowBox[{
    "tryFAA", ",", "tryFAa", ",", "tryFaa", ",", "tryMAA", ",", "tryMAa", ",",
      "tryMaa", ",", "trywAf", ",", "trywaf", ",", "trywAm", ",", "trywam", 
     ",", "try\[Alpha]f", ",", "try\[Alpha]m", ",", "tryr", ",", "tryR", ",", 
     
     RowBox[{
      RowBox[{"tryr", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "tryR"}], ")"}]}], "+", 
      RowBox[{"tryR", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "tryr"}], ")"}]}]}], ",", "tryk"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"run", "[", "0", "]"}], "=", 
   RowBox[{"generation", "[", 
    RowBox[{"param", ",", 
     RowBox[{"startgen", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"sieve", "[", 
         RowBox[{
         "tryFAA", ",", "tryFAa", ",", "tryFaa", ",", "tryMAA", ",", "tryMAa",
           ",", "tryMaa", ",", "trywAf", ",", "trywaf", ",", "trywAm", ",", 
          "trywam", ",", "try\[Alpha]f", ",", "try\[Alpha]m", ",", "tryr"}], 
         "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", "trypm"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"time", "=", "1"}], ",", 
   RowBox[{"time", "\[LessEqual]", "endtime"}], ",", 
   RowBox[{"time", "++"}], ",", 
   RowBox[{
    RowBox[{"run", "[", "time", "]"}], "=", 
    RowBox[{"generation", "[", 
     RowBox[{"param", ",", 
      RowBox[{"run", "[", 
       RowBox[{"time", "-", "1"}], "]"}]}], "]"}]}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MODtab1Red", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Round", "[", 
        RowBox[{"Exp", "[", "exptime", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"generation", "[", 
         RowBox[{"param", ",", 
          RowBox[{"run", "[", 
           RowBox[{"Round", "[", 
            RowBox[{"Exp", "[", "exptime", "]"}], "]"}], "]"}]}], "]"}], ".", 
        "modvec"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"exptime", ",", 
       RowBox[{"Log", "[", "startplot", "]"}], ",", 
       RowBox[{"Log", "[", "endtime", "]"}], ",", "0.1"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MOD1Red", "=", 
  RowBox[{"ListLogLinearPlot", "[", 
   RowBox[{"MODtab1Red", ",", 
    RowBox[{"Joined", "\[Rule]", "True"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"startplot", ",", "endtime"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0.5"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", "Red", "}"}]}], ",", "loglinearplotINVoptions"}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.711695517780641*^9, 3.711695522507338*^9}, {
   3.711695561965704*^9, 3.7116955719180717`*^9}, {3.711702876287524*^9, 
   3.71170287874617*^9}, {3.711702910308921*^9, 3.711702933253878*^9}, {
   3.711703067328353*^9, 3.711703067432561*^9}, {3.711703474641178*^9, 
   3.711703499003673*^9}, {3.711714536507679*^9, 3.711714565949432*^9}, {
   3.711780178324356*^9, 3.7117801904794083`*^9}, 
   3.711780231470047*^9},ExpressionUUID->"c85019bf-5b1e-4759-89cd-\
0cd1cc47d2ee"],

Cell[BoxData[
 GraphicsBox[{{{}, {{{}, {}, {
       {RGBColor[1, 0, 0], PointSize[0.011000000000000001`], 
        AbsoluteThickness[1.6], 
        StyleBox[LineBox[CompressedData["
1:eJxl0mkw3HcYB3BnWFuaEMvGsZJMZ8TZSak2jueRi5GsHHJIEJpUyWzYsFtJ
lziaECIqqk2wEbI2JCyJYKitoMaRRbOIxQS/hLZSR8JQx8bRfyd9lxfPPPN5
8cwzz3eezae5h4PVVFRU9lL1X/8sbWrBvWEJSlL6PXXYt0HNwkpJL1mGZJ7a
I85k7gc+fnJ7WeSWNVAmxnTzyvI+MK/EGR6LVPBJ9pb4x7J8oKuXCsYzVTHK
0mq0s+suMI5WScs5ajgztN2reUoE+53iqkft1DE0Zix7kCWGS3d6fmW8Usef
bGilQWfvQZG0jyEz1cT9qawBTc/7wPJkf8ko1sRFhxcuQ+QBCOKUjZzidfhG
1Z/5VUgpJGVwdkSztJC5a93VmhMPIWOUF71zQQuFlTM9/8jLoa3Z9QK/VhvF
BcmnHJwr4f39NIxIHj+6EFwDN66o15AAHeS72Dvrp0lBqKAvFTrSMWtFWRXJ
aYCumt65/kU6HsxPfTYd1AR1rTveWI5+hOG7ZVLr2lbwlvywJ7hKF/WC/khk
B3SA+GlBFJ2vhy0Gvde7kuTw0ERS3b3vY5QJUlwFB3pgdrX2xPda67Flq4NO
dVMv6J7Tn0iOWI8OLKcTXpb9YLvBcianaz1KhW7z5vMDYFayrPB32oAcboeV
7bcvIDi3UC06fwNOXdYTu2UNwhP/TxrN6foY6ed/jB069H/e+sg+cCzixuQQ
3BW3GaYr9NE/ilkV4jMMf9+MdC8FA3zt2MPg5wzDBUOhSnqhAfaFywQOncOQ
452gHNXZiCl+hhzn2WFosN45JYnciH8VTntoGRCQS+pSLis24uPQW7s0bAlw
Vd8lFTsb4sS1+n2+uwm0K19fS7pniDFnzt6KO0mgniU0zqUxUM6B5+1hBBJy
5YHM8wz0y/zRxzyeQIaHkZ2gj4GH3OVbHTMIfP0nrzLF2Qgr+L1BYfkEpueD
Y1/eNUIh7dpRURmBK2uDh9fRjDFO0nwxVUogIN0me5hrjGGxaaGqrQQCw8rz
snqNsTh1oXlRTuDSg5+d/FyZ2KGbqt86QKCj7tSIhpiJrM41X8dXBCq0uluU
2pvw0/Azmf5jBLYtx8ASdxPe9nYKyZgk8NYj4aWPYhNmmUhDZdMEjiT/1sF3
McHzZELFfo7aF4gBNwtM0DGp/vjYPJWH8dNYEc0Ur/K+k6gvEUjU1l4u5Zqi
Qo3HLVISoJ9+5hWgMMU834ecyXcE9pRmWYlczNCyKE48ukyAM7f4YE5khnPu
oqa8FQLx88b26TRztKlQldmtUvPbWG0rXHMc72PO5VCufiSYPKIwx4N84dQk
5Yib979ZdGHhUEQgx3qNQKaf5PNDBSwcGRh5e5Ly8vNql3YNCyTXo9hxlN3O
sesNvrDAkDVtXyHl3TlDF604FjhSHjH+iDK7rr0y7I4FriYtVjRSfv+fFsjr
tWn4nfIve7fatmtsxhqr8dl+yv8CJlsfhA==
          "]],
         FontFamily->"Helvetica",
         FontSize->12]}}}}, {}, {}, {{}, {}}, {{}, {}}}},
  AspectRatio->NCache[2^Rational[-1, 2], 0.7071067811865475],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{1.643976688829011, 0},
  BaseStyle->{FontFamily -> "Helvetica", FontSize -> 12},
  DisplayFunction->Identity,
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{
     FormBox[
      StyleBox["\"neo-W frequency\"", FontSize -> 8, StripOnInput -> False], 
      TraditionalForm], 
     FormBox["\"\"", TraditionalForm]}, {
     FormBox[
      StyleBox["\"Generation\"", FontSize -> 8, StripOnInput -> False], 
      TraditionalForm], 
     FormBox["\"\"", TraditionalForm]}},
  FrameStyle->Directive[
    GrayLevel[0], 
    Thickness[0.006]],
  FrameTicks->{{{{0., 
       FormBox["0.`", TraditionalForm], {0, 0.01}}, {0.25, 
       FormBox["0.25`", TraditionalForm], {0, 0.01}}, {0.5, 
       FormBox["0.5`", TraditionalForm], {0, 0.01}}}, {{0., 
       FormBox["0.`", TraditionalForm], {0, 0.01}}, {0.25, 
       FormBox["0.25`", TraditionalForm], {0, 0.01}}, {0.5, 
       FormBox["0.5`", TraditionalForm], {0, 0.01}}}}, {{{
       NCache[
        Log[5], 1.6094379124341003`], 
       FormBox["5", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[10], 2.302585092994046], 
       FormBox["10", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[50], 3.912023005428146], 
       FormBox["50", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[100], 4.605170185988092], 
       FormBox["100", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[1000], 6.907755278982137], 
       FormBox["1000", TraditionalForm], {0, 0.01}}}, {{
       NCache[
        Log[5], 1.6094379124341003`], 
       FormBox["5", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[10], 2.302585092994046], 
       FormBox["10", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[50], 3.912023005428146], 
       FormBox["50", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[100], 4.605170185988092], 
       FormBox["100", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[1000], 6.907755278982137], 
       FormBox["1000", TraditionalForm], {0, 0.01}}}}},
  FrameTicksStyle->{{
     Directive[
      GrayLevel[0], 
      Thickness[0.006], FontColor -> GrayLevel[0]], 
     Directive[
      GrayLevel[0], 
      Thickness[0.006]]}, {
     Directive[
      GrayLevel[0], 
      Thickness[0.006]], 
     Directive[
      GrayLevel[0], 
      Thickness[0.006]]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->NCache[{360, 180 2^Rational[1, 2]}, {360, 254.55844122715712`}],
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Exp[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Exp[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->NCache[{{
      Log[5], 
      Log[5000]}, {0, 0.5}}, {{1.6094379124341003`, 8.517193191416238}, {
     0, 0.5}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{
    Charting`ScaledTicks[{Log, Exp}], Automatic}]], "Output",
 CellChangeTimes->{
  3.711695610302847*^9, 3.711702963389113*^9, 3.711703067883417*^9, {
   3.71170347975955*^9, 3.7117034995459833`*^9}, 3.711703934618721*^9, 
   3.711709680337553*^9, 3.711709930805848*^9, 3.711710242741914*^9, 
   3.7117124193333483`*^9, 3.711712479172882*^9, {3.711714132726665*^9, 
   3.7117141598393593`*^9}, {3.711714529267712*^9, 3.711714566647304*^9}, 
   3.71177843235149*^9, 3.711780190762754*^9, 3.71178023190409*^9, {
   3.7117823556231327`*^9, 3.71178238161031*^9}, 3.711782836818779*^9, 
   3.711782874046118*^9, {3.711785687522204*^9, 3.7117857335816107`*^9}, 
   3.711790640251417*^9, 3.7130757987063828`*^9, 3.7130764862930307`*^9, 
   3.713076556959663*^9, 
   3.713083787430644*^9},ExpressionUUID->"10e1bd61-52ed-4361-85c0-\
4c1cfd848f3b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"tryR", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"param", "=", 
   RowBox[{"{", 
    RowBox[{
    "tryFAA", ",", "tryFAa", ",", "tryFaa", ",", "tryMAA", ",", "tryMAa", ",",
      "tryMaa", ",", "trywAf", ",", "trywaf", ",", "trywAm", ",", "trywam", 
     ",", "try\[Alpha]f", ",", "try\[Alpha]m", ",", "tryr", ",", "tryR", ",", 
     
     RowBox[{
      RowBox[{"tryr", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "tryR"}], ")"}]}], "+", 
      RowBox[{"tryR", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "tryr"}], ")"}]}]}], ",", "tryk"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"run", "[", "0", "]"}], "=", 
   RowBox[{"generation", "[", 
    RowBox[{"param", ",", 
     RowBox[{"startgen", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"sieve", "[", 
         RowBox[{
         "tryFAA", ",", "tryFAa", ",", "tryFaa", ",", "tryMAA", ",", "tryMAa",
           ",", "tryMaa", ",", "trywAf", ",", "trywaf", ",", "trywAm", ",", 
          "trywam", ",", "try\[Alpha]f", ",", "try\[Alpha]m", ",", "tryr"}], 
         "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", "trypm"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"time", "=", "1"}], ",", 
   RowBox[{"time", "\[LessEqual]", "endtime"}], ",", 
   RowBox[{"time", "++"}], ",", 
   RowBox[{
    RowBox[{"run", "[", "time", "]"}], "=", 
    RowBox[{"generation", "[", 
     RowBox[{"param", ",", 
      RowBox[{"run", "[", 
       RowBox[{"time", "-", "1"}], "]"}]}], "]"}]}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MODtab1Blue", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Round", "[", 
        RowBox[{"Exp", "[", "exptime", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"generation", "[", 
         RowBox[{"param", ",", 
          RowBox[{"run", "[", 
           RowBox[{"Round", "[", 
            RowBox[{"Exp", "[", "exptime", "]"}], "]"}], "]"}]}], "]"}], ".", 
        "modvec"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"exptime", ",", 
       RowBox[{"Log", "[", "startplot", "]"}], ",", 
       RowBox[{"Log", "[", "endtime", "]"}], ",", "0.1"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MOD1Blue", "=", 
  RowBox[{"ListLogLinearPlot", "[", 
   RowBox[{"MODtab1Blue", ",", 
    RowBox[{"Joined", "\[Rule]", "True"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"startplot", ",", "endtime"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0.5"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", "Blue", "}"}]}], ",", "loglinearplotINVoptions"}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.711695517780641*^9, 3.711695522507338*^9}, {
   3.7116955538491297`*^9, 3.711695588097739*^9}, {3.7117028843813143`*^9, 
   3.71170288446397*^9}, {3.711702976071355*^9, 3.711702993624299*^9}, {
   3.71170306403876*^9, 3.711703064150305*^9}, 3.711709951730682*^9, {
   3.711780200355617*^9, 
   3.711780228572802*^9}},ExpressionUUID->"15978893-2ced-4ae9-983d-\
5af64cdd33b3"],

Cell[BoxData[
 GraphicsBox[{{{}, {{{}, {}, {
       {RGBColor[0, 0, 1], PointSize[0.011000000000000001`], 
        AbsoluteThickness[1.6], 
        StyleBox[LineBox[CompressedData["
1:eJxlkn0w1Akcxtd63Tbyuq3XXecaL1e5CJeXvl/SKm/l7XoRLuXGzGLzUgyp
TZJMnTMm4/1lsXlZTuGUkpe7oxKxsYTdX26vSY6QEkvc3Vz/9cczz3z+/Dzz
GIdyfMPIJBKJ9W/+a+sbsx+dO1Zg5YZrMJdbAGSmhYxauwYKOi6BPT2FX/CR
41b1MV9tgPu+4JJTRsVfcGytA9zhkXCkOGR3X2oJUOXrEqez5XCMPfquPbkU
aAHN92+zyeg3v8/kvHMZeNpdbJHulEfm3DRrTJUHycXPH9Am5XG3sbBRV8qD
W/dHaE8MFPGVJarZV1cA44DXHlqNIr4Nos/l5ldC4kVZJ7tGCUsl79TMC25B
WhbbPomhjM1HranCmirIksYmuXxURr2SqVXydA08+sMpPq5VBXMO8/rUA+rg
f38KSvvM3nErG+DnVPm7RNAmNM/Y2NmhfQcKRNQVvg0Vo7quk4PDm2Dw7vD7
0WUqVrOV3vQv/AptPfZvzaSbkSMzyjxX2Qregp/2hzWr4uqtLRUeDQ+h4nH5
OWqcGqZTo29GX+6EX/QFLUKPLXjIJvnY0dDfYXG99ViKsjp6s2yixgJ7QDVC
8+/0aHV0yF35FL/wBHZomC3kD6pjyvM91R7h/WBYuyY6YaeB67ZVjT6agxBW
xCcnlWpgXv2ZaM95ITw8sa3TiKqJvO7XLizB0Oe9NVFoQbJSUBVBWcUjnUyR
JraW1TMPHBmBNzkxznWghTO7pIGJJ0chXqeAlMnXQhced9Hd5gXke1+SSTdp
Y4etn1hf8gI6vnGZFcRoo5NK8CmNqDEYELRduyzSRvdvJ5PWJ8eAI7eaVuOg
g3y9xes+rHHolU1lpFXqoH8k97Bn2Ti0MwroRRQaztMPxe2dHYdLRQMhumdo
SNP1DrC0noAst607E0doqCj5EBcfOwGnX8U2XXPYiv1aAZRFwQTML4VdeFm2
FTeHr/dJpROQujHhq0Sh4yrZ7nstuhiCMrfnSTh0ZNDntnEPiiEk8nZJ7jAd
l7LCw10TxJBcfdMu0EkXWXIcNVO+GJ62Bf+pUKGLZH2SCUUohkZlYbdMRQ9l
punzi6tiMF87DyscPdzFm+ngb5PAnNull34iPRz7uuCZlbcE/NO7nsY56uN0
Wx576qwEQkIwKKdcHxfjBQNHiyTAoT++wKMYYMlD36tdv0ngiorKWh3HAGU/
nJxLeyMBaugz9yCRAb7MiCh9oEbA/rpcC56jIdrWhlLuWRHAfr9c/Z5niCls
NRXbAAK4S3TLTIoRnh71i6k6SwDVnPHoE8cI50z4jpbZBLQ0JM74i4xQXDMs
pNUREJ1T9eOyIwO3n+jW/auLgOxAga1POQNJEfMJTkMErA21OPYqMLGBfDA5
bJKAvRFe7VrfMfF1RhLpwzQBrvniBAs2EwuPD0QXLhDg1dbbFFnMxNpgVaH5
EvH5n0zkC0yV96wQcI9lsqNXwRhztD2uuq0S8A9zVgdc
          "]],
         FontFamily->"Helvetica",
         FontSize->12]}}}}, {}, {}, {{}, {}}, {{}, {}}}},
  AspectRatio->NCache[2^Rational[-1, 2], 0.7071067811865475],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{1.643976688829011, 0},
  BaseStyle->{FontFamily -> "Helvetica", FontSize -> 12},
  DisplayFunction->Identity,
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{
     FormBox[
      StyleBox["\"neo-W frequency\"", FontSize -> 8, StripOnInput -> False], 
      TraditionalForm], 
     FormBox["\"\"", TraditionalForm]}, {
     FormBox[
      StyleBox["\"Generation\"", FontSize -> 8, StripOnInput -> False], 
      TraditionalForm], 
     FormBox["\"\"", TraditionalForm]}},
  FrameStyle->Directive[
    GrayLevel[0], 
    Thickness[0.006]],
  FrameTicks->{{{{0., 
       FormBox["0.`", TraditionalForm], {0, 0.01}}, {0.25, 
       FormBox["0.25`", TraditionalForm], {0, 0.01}}, {0.5, 
       FormBox["0.5`", TraditionalForm], {0, 0.01}}}, {{0., 
       FormBox["0.`", TraditionalForm], {0, 0.01}}, {0.25, 
       FormBox["0.25`", TraditionalForm], {0, 0.01}}, {0.5, 
       FormBox["0.5`", TraditionalForm], {0, 0.01}}}}, {{{
       NCache[
        Log[5], 1.6094379124341003`], 
       FormBox["5", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[10], 2.302585092994046], 
       FormBox["10", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[50], 3.912023005428146], 
       FormBox["50", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[100], 4.605170185988092], 
       FormBox["100", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[1000], 6.907755278982137], 
       FormBox["1000", TraditionalForm], {0, 0.01}}}, {{
       NCache[
        Log[5], 1.6094379124341003`], 
       FormBox["5", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[10], 2.302585092994046], 
       FormBox["10", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[50], 3.912023005428146], 
       FormBox["50", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[100], 4.605170185988092], 
       FormBox["100", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[1000], 6.907755278982137], 
       FormBox["1000", TraditionalForm], {0, 0.01}}}}},
  FrameTicksStyle->{{
     Directive[
      GrayLevel[0], 
      Thickness[0.006], FontColor -> GrayLevel[0]], 
     Directive[
      GrayLevel[0], 
      Thickness[0.006]]}, {
     Directive[
      GrayLevel[0], 
      Thickness[0.006]], 
     Directive[
      GrayLevel[0], 
      Thickness[0.006]]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->NCache[{360, 180 2^Rational[1, 2]}, {360, 254.55844122715712`}],
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Exp[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Exp[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->NCache[{{
      Log[5], 
      Log[5000]}, {0, 0.5}}, {{1.6094379124341003`, 8.517193191416238}, {
     0, 0.5}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{
    Charting`ScaledTicks[{Log, Exp}], Automatic}]], "Output",
 CellChangeTimes->{
  3.711695616955174*^9, 3.7117030020436897`*^9, 3.711703064585724*^9, 
   3.711703934869472*^9, 3.7117096839069843`*^9, {3.711709930966123*^9, 
   3.711709955576418*^9}, 3.711712419742366*^9, 3.711712479576453*^9, 
   3.711714132817013*^9, 3.711714162918345*^9, 3.7117145293823433`*^9, 
   3.711714568176523*^9, 3.711778435483437*^9, {3.7117802136251583`*^9, 
   3.711780232666605*^9}, {3.711782357321993*^9, 3.71178238366398*^9}, 
   3.711782837253862*^9, 3.711782874332056*^9, 3.7117856876093473`*^9, 
   3.7117857349012327`*^9, 3.7117906434954557`*^9, 3.7130758020658407`*^9, 
   3.713076489581972*^9, 3.713076560124055*^9, 
   3.713083790658695*^9},ExpressionUUID->"63a5b403-c91e-40ac-ab10-\
e3965c6cc982"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"tryR", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"param", "=", 
   RowBox[{"{", 
    RowBox[{
    "tryFAA", ",", "tryFAa", ",", "tryFaa", ",", "tryMAA", ",", "tryMAa", ",",
      "tryMaa", ",", "trywAf", ",", "trywaf", ",", "trywAm", ",", "trywam", 
     ",", "try\[Alpha]f", ",", "try\[Alpha]m", ",", "tryr", ",", "tryR", ",", 
     
     RowBox[{
      RowBox[{"tryr", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "tryR"}], ")"}]}], "+", 
      RowBox[{"tryR", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "tryr"}], ")"}]}]}], ",", "tryk"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"run", "[", "0", "]"}], "=", 
   RowBox[{"generation", "[", 
    RowBox[{"param", ",", 
     RowBox[{"startgen", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"sieve", "[", 
         RowBox[{
         "tryFAA", ",", "tryFAa", ",", "tryFaa", ",", "tryMAA", ",", "tryMAa",
           ",", "tryMaa", ",", "trywAf", ",", "trywaf", ",", "trywAm", ",", 
          "trywam", ",", "try\[Alpha]f", ",", "try\[Alpha]m", ",", "tryr"}], 
         "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", "trypm"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"time", "=", "1"}], ",", 
   RowBox[{"time", "\[LessEqual]", "endtime"}], ",", 
   RowBox[{"time", "++"}], ",", 
   RowBox[{
    RowBox[{"run", "[", "time", "]"}], "=", 
    RowBox[{"generation", "[", 
     RowBox[{"param", ",", 
      RowBox[{"run", "[", 
       RowBox[{"time", "-", "1"}], "]"}]}], "]"}]}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MODtab1Green", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Round", "[", 
        RowBox[{"Exp", "[", "exptime", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"generation", "[", 
         RowBox[{"param", ",", 
          RowBox[{"run", "[", 
           RowBox[{"Round", "[", 
            RowBox[{"Exp", "[", "exptime", "]"}], "]"}], "]"}]}], "]"}], ".", 
        "modvec"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"exptime", ",", 
       RowBox[{"Log", "[", "startplot", "]"}], ",", 
       RowBox[{"Log", "[", "endtime", "]"}], ",", "0.1"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MOD1Green", "=", 
  RowBox[{"ListLogLinearPlot", "[", 
   RowBox[{"MODtab1Green", ",", 
    RowBox[{"Joined", "\[Rule]", "True"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"startplot", ",", "endtime"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0.5"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", "Green", "}"}]}], ",", "loglinearplotINVoptions"}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.711695591717916*^9, 3.711695602234329*^9}, {
  3.711703039655755*^9, 3.711703059891102*^9}, {3.711780241731517*^9, 
  3.711780256675057*^9}},ExpressionUUID->"cc5da8a1-db67-4136-8dd3-\
d1b8229ab3c6"],

Cell[BoxData[
 GraphicsBox[{{{}, {{{}, {}, {
       {RGBColor[0, 1, 0], PointSize[0.011000000000000001`], 
        AbsoluteThickness[1.6], 
        StyleBox[LineBox[CompressedData["
1:eJxl0n8wGwYUB/D4URKh8yOS+Bk/umsptnVbbUTfK4tufp0awlB3SvcHliJX
jlax1qFrzcyPUhY/qoRYtUhbzSjVInYjIVl3trZTupY2dbUQDRbVmz/6x7t3
n7++77179nGckARtAoHgq6mN/uHZZ0v7+1SQX0fqCUg9D9p2zivkVjVM+A5k
BLpUvWX2V3vaUx3W4QLtfaXx3NtOa/WEK/UEdI746Ex3ezWQdQSZT0u1sGNH
40JE+gWghnX1dCRqo6siQ2HMqoEA95PCaTcdjJ/LyVHSauFErfQm9aEOHjVt
CrR/UQuXeuTUEett+ONuDjMkggeMzwM/pfK3IYXd01U2yoPMkyu3Evl6GCE+
XFQtqoP8kkSPLIY+NiAln+tRDyXTaVneS/pIGChXkLwaYGjQK517g4iOh9iV
ff6NsLk/CZ/77yX6qC7C96d0rt2PMUBMYg0377wE1TKyquljMuYIvlZq6bXA
+LXJxd+Xyaji09xF2q0guuvxfNe0Id7hZeSF3RNAUNs5VkKXERaIBaSFtMvQ
ONxwjMzdjlPF99TetCvws1WbUOL/DoaesUn28euEl2s3IvP0jfE7wuOS/qZu
MEoynStIMUZh5Ace7e3XwdVk10LVuDEqTzsWVc3eBJtWtSza3QQDzA1cuhL7
IKGmSTuLZ4LGFWwtWl8//BL97i1bsilW5j3O8Doy+ObepjiSY1fYvX4X6hqH
zItlphg8GLdzWUsMT8pT9wvADO0Ko1Ujr36FdPNqQnGTGbKVQ6uS+DGoCspd
mTagoOGM0+xA8zj07fZ+1pZKweb4pW/KpBIYaxMVfiujoEK6ptIdlQJH61U+
39McXdIowgjeBIhX/inKv2iOwaw1w/rwSehlVNNrSFTcftuHyHo4Cbk1Y7EW
R6lYUHpfcfWgDEoO0Nwy5VTNvFGt4S0yiJ9J6yz0pKEkkpdU8EQGL5QJ2Q/q
aDgydTxrwUIOp9anQvRIdGzeF5Z6jimHmGKX839x6PjHrN8jYqgcYpM7fqqc
pKOcwuU6HJbDiZYy9ygvC6zmWz2tSJLDqOjQ37qNFpjHl4Ytp8jhqr7kzgrR
Eh2ClywlXDk4qY+DimOJnUYVyDomB8WB3AdfyiyR6pc7NK9xaEH/KJdphUGP
5Fp70jV5sRhT3mCFDB27NX+NOfTh7HqSNc4Lz2aHanyaSFQLONbY371jNVxj
ctxvfjEya3T7d5DH1pglqHSuZ9pgQK/P7Q0nLi63LNbb4OkYyciGc5T094pJ
tiiZl4o3THZiDK1ybFE68/K1hZcz50NlthhutvTaKeXNR5aZDPwhZNOlUW17
DzYw8IvwTasnhEyxrh1Gv/G+pMBes0+2/FnVnxnOiVsOFIk7k2u3vPmfW77u
6+gq1rX/3/8BcT0ONw==
          "]],
         FontFamily->"Helvetica",
         FontSize->12]}}}}, {}, {}, {{}, {}}, {{}, {}}}},
  AspectRatio->NCache[2^Rational[-1, 2], 0.7071067811865475],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{1.643976688829011, 0},
  BaseStyle->{FontFamily -> "Helvetica", FontSize -> 12},
  DisplayFunction->Identity,
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{
     FormBox[
      StyleBox["\"neo-W frequency\"", FontSize -> 8, StripOnInput -> False], 
      TraditionalForm], 
     FormBox["\"\"", TraditionalForm]}, {
     FormBox[
      StyleBox["\"Generation\"", FontSize -> 8, StripOnInput -> False], 
      TraditionalForm], 
     FormBox["\"\"", TraditionalForm]}},
  FrameStyle->Directive[
    GrayLevel[0], 
    Thickness[0.006]],
  FrameTicks->{{{{0., 
       FormBox["0.`", TraditionalForm], {0, 0.01}}, {0.25, 
       FormBox["0.25`", TraditionalForm], {0, 0.01}}, {0.5, 
       FormBox["0.5`", TraditionalForm], {0, 0.01}}}, {{0., 
       FormBox["0.`", TraditionalForm], {0, 0.01}}, {0.25, 
       FormBox["0.25`", TraditionalForm], {0, 0.01}}, {0.5, 
       FormBox["0.5`", TraditionalForm], {0, 0.01}}}}, {{{
       NCache[
        Log[5], 1.6094379124341003`], 
       FormBox["5", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[10], 2.302585092994046], 
       FormBox["10", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[50], 3.912023005428146], 
       FormBox["50", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[100], 4.605170185988092], 
       FormBox["100", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[1000], 6.907755278982137], 
       FormBox["1000", TraditionalForm], {0, 0.01}}}, {{
       NCache[
        Log[5], 1.6094379124341003`], 
       FormBox["5", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[10], 2.302585092994046], 
       FormBox["10", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[50], 3.912023005428146], 
       FormBox["50", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[100], 4.605170185988092], 
       FormBox["100", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[1000], 6.907755278982137], 
       FormBox["1000", TraditionalForm], {0, 0.01}}}}},
  FrameTicksStyle->{{
     Directive[
      GrayLevel[0], 
      Thickness[0.006], FontColor -> GrayLevel[0]], 
     Directive[
      GrayLevel[0], 
      Thickness[0.006]]}, {
     Directive[
      GrayLevel[0], 
      Thickness[0.006]], 
     Directive[
      GrayLevel[0], 
      Thickness[0.006]]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->NCache[{360, 180 2^Rational[1, 2]}, {360, 254.55844122715712`}],
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Exp[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Exp[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->NCache[{{
      Log[5], 
      Log[5000]}, {0, 0.5}}, {{1.6094379124341003`, 8.517193191416238}, {
     0, 0.5}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{
    Charting`ScaledTicks[{Log, Exp}], Automatic}]], "Output",
 CellChangeTimes->{
  3.711695623991362*^9, {3.711703047777299*^9, 3.7117030609721527`*^9}, 
   3.7117039354124393`*^9, 3.711709692662835*^9, {3.711709931170182*^9, 
   3.711709955747266*^9}, 3.711712420335341*^9, 3.7117124800710077`*^9, 
   3.711714132910102*^9, 3.7117141660147448`*^9, 3.711714529472538*^9, 
   3.711714569319468*^9, 3.711778438585713*^9, {3.711780252045075*^9, 
   3.711780257156671*^9}, 3.711782385230115*^9, 3.711782837728078*^9, 
   3.7117828746040792`*^9, 3.711785687695221*^9, 3.711785735773938*^9, 
   3.711790646979216*^9, 3.713075805385165*^9, 3.713076492910729*^9, 
   3.713076563436578*^9, 
   3.713083792572462*^9},ExpressionUUID->"dceef8b0-d575-491c-bace-\
52d923ee4299"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"MOD1Black", ",", "MOD1Red", ",", "MOD1Blue", ",", "MOD1Green"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7117802694852753`*^9, 
  3.711780291119823*^9}},ExpressionUUID->"c7a33b92-986c-42f8-af91-\
5dc97064d640"],

Cell[BoxData[
 GraphicsBox[{{{{}, {{{}, {}, {
        {GrayLevel[0], PointSize[0.011000000000000001`], AbsoluteThickness[
         1.6], 
         StyleBox[LineBox[CompressedData["
1:eJxl0mtU03UYB3CucpnKfY7rJkpHCUgzwwR6HggYpmAKZHGR8Ih4GrYEFIVA
MSLJo0AYG6ATNpwxmFyVWzQnGeOyI6BMjMsPpTAQLYK4jAn9O/rOF895zufF
c57zfM+z9gB3b4yOlpaWP1X/9y3nn81531oAfifv1HLGJdBhOatp5RqYVrAi
3wDBa94X9vb1eMdluJi6n11gVvyaE8o9oEaohb+YSz73tCkBmq40eSJPG48v
BdughxDooTeaqzk6uLJHfyDtuAh2uZ+qH3XTxQKxY9e4shRSBfd+oj/SRVFA
XnLmB2K41vyA3mGnj3V5AbzbuWXADAh8jy7Rx5PpNQmNX5RD8im1nCNZgbyp
2aroK5WQmcvZnsI0wJI9DTuaFqsgdzQhxWfOAC25gpx2fi0o7nglJTYZYsFE
tMiMfxNe3m+EMompa85AM+Rk6DaQSGMM50sWW36XQZGKtiDeSsP15VyZOLwV
ehr6ZvrnaaiOX7BtdW2DlrbtzzeMrkRXi3ynbxu6IKjigl/MjVXICtpZGeve
A6XtouO0xNUongqOLJq+B5W2FfW9O02wJf+EoOsfFUwvNX16xsAU277vCW8N
eQir4syfnj1qipLJkRjuoQFwNdswVdhjipuGcMuAYhDsyzWqCHcz9K5bnVZ2
dwhiLot1UorNUO6TfUd4Zhh+jnCSO9DMcaIwZ9vjf4df5W2Ot8dDuw9vI1BS
qrDKVpkjT/mUz4klMJ4f7y0FC2QaByqKMwgkWRVpZYst8LQ4/hibR6AwKF09
amyJ/pv6ettFBG696fOsIt4SfcfWywOlBLorWrK+Vlni5jiZ9tU6AlztxUyJ
hxXOeSs/3tBMoFP953eZV63w3OBSWLqcgIxZxLhsRMd3xvwEu9oIpF/ujrL+
ko4uM/E1DCWBXPYat+QHdBScTZB29BI4+EdCXZbHGsz2qhqw7Sfw92xM2kjJ
GtzMHkzdMUQgY3lw7wojBtqbtPq6PSYQme1SMMxlIM/zM6fKMQJRR6qv8PsY
GDKxO6l5gkBq2Q/u4V7WGOfzSMl5TqCrZf9jvVJrdCzKUV6ZIlBr0Pur2tAG
Nx/uzfpkhsBGzVewwLXBIxctH9bOEviLnT4SrLLBc+6p7GvzBELO3u5K9LTF
LPFHl0BN7YvCyHyRLUbpnL95bpHKg9GeJjSywxO7edE5GgLfGBpqpFw7VNus
E0e8IEA7cPfDSJUdFuzr71qk7CflOws97fG6nk/ssSUCnJn5shmhPRaHp2zt
pXx6lvFWtpED+qZ2P2EsU/MbmYoXXAf09pUfDaJcX5U8GaJyQOGeMNMkykfz
fzw078nEgyf9TPIp54VXvLtHxMSkC31iKWXN/XrPTj0WPpooa5RRfj8uUGax
jYVb77tIlZR9C4dOOHNYqOmp5vRTDmzprDsioMxO6xih/PI/WRjqpQh8QrnR
f51rp95alCt/OzRJ+T8JHCV+
           "]],
          FontFamily->"Helvetica",
          FontSize->12]}}}}, {}, {}, {{}, {}}, {{}, {}}}}, {{{}, {{{}, {}, {
        {RGBColor[1, 0, 0], PointSize[0.011000000000000001`], 
         AbsoluteThickness[1.6], 
         StyleBox[LineBox[CompressedData["
1:eJxl0mkw3HcYB3BnWFuaEMvGsZJMZ8TZSak2jueRi5GsHHJIEJpUyWzYsFtJ
lziaECIqqk2wEbI2JCyJYKitoMaRRbOIxQS/hLZSR8JQx8bRfyd9lxfPPPN5
8cwzz3eezae5h4PVVFRU9lL1X/8sbWrBvWEJSlL6PXXYt0HNwkpJL1mGZJ7a
I85k7gc+fnJ7WeSWNVAmxnTzyvI+MK/EGR6LVPBJ9pb4x7J8oKuXCsYzVTHK
0mq0s+suMI5WScs5ajgztN2reUoE+53iqkft1DE0Zix7kCWGS3d6fmW8Usef
bGilQWfvQZG0jyEz1cT9qawBTc/7wPJkf8ko1sRFhxcuQ+QBCOKUjZzidfhG
1Z/5VUgpJGVwdkSztJC5a93VmhMPIWOUF71zQQuFlTM9/8jLoa3Z9QK/VhvF
BcmnHJwr4f39NIxIHj+6EFwDN66o15AAHeS72Dvrp0lBqKAvFTrSMWtFWRXJ
aYCumt65/kU6HsxPfTYd1AR1rTveWI5+hOG7ZVLr2lbwlvywJ7hKF/WC/khk
B3SA+GlBFJ2vhy0Gvde7kuTw0ERS3b3vY5QJUlwFB3pgdrX2xPda67Flq4NO
dVMv6J7Tn0iOWI8OLKcTXpb9YLvBcianaz1KhW7z5vMDYFayrPB32oAcboeV
7bcvIDi3UC06fwNOXdYTu2UNwhP/TxrN6foY6ed/jB069H/e+sg+cCzixuQQ
3BW3GaYr9NE/ilkV4jMMf9+MdC8FA3zt2MPg5wzDBUOhSnqhAfaFywQOncOQ
452gHNXZiCl+hhzn2WFosN45JYnciH8VTntoGRCQS+pSLis24uPQW7s0bAlw
Vd8lFTsb4sS1+n2+uwm0K19fS7pniDFnzt6KO0mgniU0zqUxUM6B5+1hBBJy
5YHM8wz0y/zRxzyeQIaHkZ2gj4GH3OVbHTMIfP0nrzLF2Qgr+L1BYfkEpueD
Y1/eNUIh7dpRURmBK2uDh9fRjDFO0nwxVUogIN0me5hrjGGxaaGqrQQCw8rz
snqNsTh1oXlRTuDSg5+d/FyZ2KGbqt86QKCj7tSIhpiJrM41X8dXBCq0uluU
2pvw0/Azmf5jBLYtx8ASdxPe9nYKyZgk8NYj4aWPYhNmmUhDZdMEjiT/1sF3
McHzZELFfo7aF4gBNwtM0DGp/vjYPJWH8dNYEc0Ur/K+k6gvEUjU1l4u5Zqi
Qo3HLVISoJ9+5hWgMMU834ecyXcE9pRmWYlczNCyKE48ukyAM7f4YE5khnPu
oqa8FQLx88b26TRztKlQldmtUvPbWG0rXHMc72PO5VCufiSYPKIwx4N84dQk
5Yib979ZdGHhUEQgx3qNQKaf5PNDBSwcGRh5e5Ly8vNql3YNCyTXo9hxlN3O
sesNvrDAkDVtXyHl3TlDF604FjhSHjH+iDK7rr0y7I4FriYtVjRSfv+fFsjr
tWn4nfIve7fatmtsxhqr8dl+yv8CJlsfhA==
           "]],
          FontFamily->"Helvetica",
          FontSize->12]}}}}, {}, {}, {{}, {}}, {{}, {}}}}, {{{}, {{{}, {}, {
        {RGBColor[0, 0, 1], PointSize[0.011000000000000001`], 
         AbsoluteThickness[1.6], 
         StyleBox[LineBox[CompressedData["
1:eJxlkn0w1Akcxtd63Tbyuq3XXecaL1e5CJeXvl/SKm/l7XoRLuXGzGLzUgyp
TZJMnTMm4/1lsXlZTuGUkpe7oxKxsYTdX26vSY6QEkvc3Vz/9cczz3z+/Dzz
GIdyfMPIJBKJ9W/+a+sbsx+dO1Zg5YZrMJdbAGSmhYxauwYKOi6BPT2FX/CR
41b1MV9tgPu+4JJTRsVfcGytA9zhkXCkOGR3X2oJUOXrEqez5XCMPfquPbkU
aAHN92+zyeg3v8/kvHMZeNpdbJHulEfm3DRrTJUHycXPH9Am5XG3sbBRV8qD
W/dHaE8MFPGVJarZV1cA44DXHlqNIr4Nos/l5ldC4kVZJ7tGCUsl79TMC25B
WhbbPomhjM1HranCmirIksYmuXxURr2SqVXydA08+sMpPq5VBXMO8/rUA+rg
f38KSvvM3nErG+DnVPm7RNAmNM/Y2NmhfQcKRNQVvg0Vo7quk4PDm2Dw7vD7
0WUqVrOV3vQv/AptPfZvzaSbkSMzyjxX2Qregp/2hzWr4uqtLRUeDQ+h4nH5
OWqcGqZTo29GX+6EX/QFLUKPLXjIJvnY0dDfYXG99ViKsjp6s2yixgJ7QDVC
8+/0aHV0yF35FL/wBHZomC3kD6pjyvM91R7h/WBYuyY6YaeB67ZVjT6agxBW
xCcnlWpgXv2ZaM95ITw8sa3TiKqJvO7XLizB0Oe9NVFoQbJSUBVBWcUjnUyR
JraW1TMPHBmBNzkxznWghTO7pIGJJ0chXqeAlMnXQhced9Hd5gXke1+SSTdp
Y4etn1hf8gI6vnGZFcRoo5NK8CmNqDEYELRduyzSRvdvJ5PWJ8eAI7eaVuOg
g3y9xes+rHHolU1lpFXqoH8k97Bn2Ti0MwroRRQaztMPxe2dHYdLRQMhumdo
SNP1DrC0noAst607E0doqCj5EBcfOwGnX8U2XXPYiv1aAZRFwQTML4VdeFm2
FTeHr/dJpROQujHhq0Sh4yrZ7nstuhiCMrfnSTh0ZNDntnEPiiEk8nZJ7jAd
l7LCw10TxJBcfdMu0EkXWXIcNVO+GJ62Bf+pUKGLZH2SCUUohkZlYbdMRQ9l
punzi6tiMF87DyscPdzFm+ngb5PAnNull34iPRz7uuCZlbcE/NO7nsY56uN0
Wx576qwEQkIwKKdcHxfjBQNHiyTAoT++wKMYYMlD36tdv0ngiorKWh3HAGU/
nJxLeyMBaugz9yCRAb7MiCh9oEbA/rpcC56jIdrWhlLuWRHAfr9c/Z5niCls
NRXbAAK4S3TLTIoRnh71i6k6SwDVnPHoE8cI50z4jpbZBLQ0JM74i4xQXDMs
pNUREJ1T9eOyIwO3n+jW/auLgOxAga1POQNJEfMJTkMErA21OPYqMLGBfDA5
bJKAvRFe7VrfMfF1RhLpwzQBrvniBAs2EwuPD0QXLhDg1dbbFFnMxNpgVaH5
EvH5n0zkC0yV96wQcI9lsqNXwRhztD2uuq0S8A9zVgdc
           "]],
          FontFamily->"Helvetica",
          FontSize->12]}}}}, {}, {}, {{}, {}}, {{}, {}}}}, {{{}, {{{}, {}, {
        {RGBColor[0, 1, 0], PointSize[0.011000000000000001`], 
         AbsoluteThickness[1.6], 
         StyleBox[LineBox[CompressedData["
1:eJxl0n8wGwYUB/D4URKh8yOS+Bk/umsptnVbbUTfK4tufp0awlB3SvcHliJX
jlax1qFrzcyPUhY/qoRYtUhbzSjVInYjIVl3trZTupY2dbUQDRbVmz/6x7t3
n7++77179nGckARtAoHgq6mN/uHZZ0v7+1SQX0fqCUg9D9p2zivkVjVM+A5k
BLpUvWX2V3vaUx3W4QLtfaXx3NtOa/WEK/UEdI746Ex3ezWQdQSZT0u1sGNH
40JE+gWghnX1dCRqo6siQ2HMqoEA95PCaTcdjJ/LyVHSauFErfQm9aEOHjVt
CrR/UQuXeuTUEett+ONuDjMkggeMzwM/pfK3IYXd01U2yoPMkyu3Evl6GCE+
XFQtqoP8kkSPLIY+NiAln+tRDyXTaVneS/pIGChXkLwaYGjQK517g4iOh9iV
ff6NsLk/CZ/77yX6qC7C96d0rt2PMUBMYg0377wE1TKyquljMuYIvlZq6bXA
+LXJxd+Xyaji09xF2q0guuvxfNe0Id7hZeSF3RNAUNs5VkKXERaIBaSFtMvQ
ONxwjMzdjlPF99TetCvws1WbUOL/DoaesUn28euEl2s3IvP0jfE7wuOS/qZu
MEoynStIMUZh5Ace7e3XwdVk10LVuDEqTzsWVc3eBJtWtSza3QQDzA1cuhL7
IKGmSTuLZ4LGFWwtWl8//BL97i1bsilW5j3O8Doy+ObepjiSY1fYvX4X6hqH
zItlphg8GLdzWUsMT8pT9wvADO0Ko1Ujr36FdPNqQnGTGbKVQ6uS+DGoCspd
mTagoOGM0+xA8zj07fZ+1pZKweb4pW/KpBIYaxMVfiujoEK6ptIdlQJH61U+
39McXdIowgjeBIhX/inKv2iOwaw1w/rwSehlVNNrSFTcftuHyHo4Cbk1Y7EW
R6lYUHpfcfWgDEoO0Nwy5VTNvFGt4S0yiJ9J6yz0pKEkkpdU8EQGL5QJ2Q/q
aDgydTxrwUIOp9anQvRIdGzeF5Z6jimHmGKX839x6PjHrN8jYqgcYpM7fqqc
pKOcwuU6HJbDiZYy9ygvC6zmWz2tSJLDqOjQ37qNFpjHl4Ytp8jhqr7kzgrR
Eh2ClywlXDk4qY+DimOJnUYVyDomB8WB3AdfyiyR6pc7NK9xaEH/KJdphUGP
5Fp70jV5sRhT3mCFDB27NX+NOfTh7HqSNc4Lz2aHanyaSFQLONbY371jNVxj
ctxvfjEya3T7d5DH1pglqHSuZ9pgQK/P7Q0nLi63LNbb4OkYyciGc5T094pJ
tiiZl4o3THZiDK1ybFE68/K1hZcz50NlthhutvTaKeXNR5aZDPwhZNOlUW17
DzYw8IvwTasnhEyxrh1Gv/G+pMBes0+2/FnVnxnOiVsOFIk7k2u3vPmfW77u
6+gq1rX/3/8BcT0ONw==
           "]],
          FontFamily->"Helvetica",
          FontSize->12]}}}}, {}, {}, {{}, {}}, {{}, {}}}}},
  AspectRatio->NCache[2^Rational[-1, 2], 0.7071067811865475],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{1.643976688829011, 0},
  BaseStyle->{FontFamily -> "Helvetica", FontSize -> 12},
  DisplayFunction->Identity,
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{
     FormBox[
      StyleBox["\"neo-W frequency\"", FontSize -> 8, StripOnInput -> False], 
      TraditionalForm], 
     FormBox["\"\"", TraditionalForm]}, {
     FormBox[
      StyleBox["\"Generation\"", FontSize -> 8, StripOnInput -> False], 
      TraditionalForm], 
     FormBox["\"\"", TraditionalForm]}},
  FrameStyle->Directive[
    GrayLevel[0], 
    Thickness[0.006]],
  FrameTicks->{{{{0., 
       FormBox["0.`", TraditionalForm], {0, 0.01}}, {0.25, 
       FormBox["0.25`", TraditionalForm], {0, 0.01}}, {0.5, 
       FormBox["0.5`", TraditionalForm], {0, 0.01}}}, {{0., 
       FormBox["0.`", TraditionalForm], {0, 0.01}}, {0.25, 
       FormBox["0.25`", TraditionalForm], {0, 0.01}}, {0.5, 
       FormBox["0.5`", TraditionalForm], {0, 0.01}}}}, {{{
       NCache[
        Log[5], 1.6094379124341003`], 
       FormBox["5", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[10], 2.302585092994046], 
       FormBox["10", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[50], 3.912023005428146], 
       FormBox["50", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[100], 4.605170185988092], 
       FormBox["100", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[1000], 6.907755278982137], 
       FormBox["1000", TraditionalForm], {0, 0.01}}}, {{
       NCache[
        Log[5], 1.6094379124341003`], 
       FormBox["5", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[10], 2.302585092994046], 
       FormBox["10", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[50], 3.912023005428146], 
       FormBox["50", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[100], 4.605170185988092], 
       FormBox["100", TraditionalForm], {0, 0.01}}, {
       NCache[
        Log[1000], 6.907755278982137], 
       FormBox["1000", TraditionalForm], {0, 0.01}}}}},
  FrameTicksStyle->{{
     Directive[
      GrayLevel[0], 
      Thickness[0.006], FontColor -> GrayLevel[0]], 
     Directive[
      GrayLevel[0], 
      Thickness[0.006]]}, {
     Directive[
      GrayLevel[0], 
      Thickness[0.006]], 
     Directive[
      GrayLevel[0], 
      Thickness[0.006]]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->NCache[{360, 180 2^Rational[1, 2]}, {360, 254.55844122715712`}],
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Exp[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Exp[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->NCache[{{
      Log[5], 
      Log[5000]}, {0, 0.5}}, {{1.6094379124341003`, 8.517193191416238}, {
     0, 0.5}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{
    Charting`ScaledTicks[{Log, Exp}], Automatic}]], "Output",
 CellChangeTimes->{
  3.711780291454389*^9, 3.711782386300087*^9, 3.7117828379559183`*^9, 
   3.7117828747192783`*^9, 3.711785687777063*^9, 3.711785736566949*^9, 
   3.711790647097178*^9, {3.713075805454217*^9, 3.7130758055078583`*^9}, 
   3.713076492970825*^9, 3.7130765635027514`*^9, 
   3.713083792634555*^9},ExpressionUUID->"29868d0b-b63d-445c-ab35-\
09791b51afd4"]
}, Open  ]]
}, Closed]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1280, 976},
WindowMargins->{{1280, Automatic}, {Automatic, 37}},
FrontEndVersion->"9.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (January 25, \
2013)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 228, 4, 92, "Title"],
Cell[CellGroupData[{
Cell[833, 30, 272, 4, 80, "Section"],
Cell[1108, 36, 760, 18, 96, "Input"],
Cell[1871, 56, 2422, 64, 222, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[4330, 125, 337, 5, 50, "Section"],
Cell[CellGroupData[{
Cell[4692, 134, 264, 4, 44, "Subsection"],
Cell[4959, 140, 177, 3, 30, "Text"],
Cell[5139, 145, 709, 21, 36, "Input"],
Cell[5851, 168, 238, 4, 30, "Text"],
Cell[6092, 174, 1296, 33, 57, "Input"],
Cell[7391, 209, 382, 7, 30, "Text"],
Cell[7776, 218, 796, 18, 55, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8609, 241, 212, 4, 44, "Subsection"],
Cell[8824, 247, 236, 4, 30, "Text"],
Cell[9063, 253, 734, 17, 34, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9834, 275, 215, 4, 44, "Subsection"],
Cell[10052, 281, 184, 3, 30, "Text"],
Cell[10239, 286, 766, 19, 34, "Input"],
Cell[11008, 307, 184, 3, 30, "Text"],
Cell[11195, 312, 471, 12, 34, "Input"],
Cell[11669, 326, 452, 9, 30, "Text"],
Cell[12124, 337, 3169, 66, 140, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15330, 408, 216, 4, 44, "Subsection"],
Cell[15549, 414, 183, 3, 30, "Text"],
Cell[15735, 419, 1116, 35, 36, "Input"],
Cell[16854, 456, 225, 4, 30, "Text"],
Cell[17082, 462, 1548, 45, 80, "Input"],
Cell[18633, 509, 640, 10, 49, "Text"],
Cell[19276, 521, 899, 25, 55, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20212, 551, 206, 4, 44, "Subsection"],
Cell[20421, 557, 229, 4, 30, "Text"],
Cell[20653, 563, 1556, 45, 77, "Input"],
Cell[CellGroupData[{
Cell[22234, 612, 239, 4, 35, "Subsubsection"],
Cell[22476, 618, 28319, 698, 1609, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[50832, 1321, 319, 6, 29, "Subsubsection"],
Cell[51154, 1329, 469, 8, 50, "Text"],
Cell[51626, 1339, 174, 3, 30, "Text"],
Cell[51803, 1344, 890, 21, 178, "Input"],
Cell[52696, 1367, 273, 6, 31, "Text"],
Cell[52972, 1375, 878, 29, 63, "Input"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[53911, 1411, 816, 13, 50, "Section"],
Cell[54730, 1426, 191, 3, 30, "Text"],
Cell[54924, 1431, 2169, 52, 250, "Input"],
Cell[57096, 1485, 670, 12, 49, "Text"],
Cell[57769, 1499, 2283, 53, 154, "Input"],
Cell[60055, 1554, 537, 9, 30, "Text"],
Cell[60595, 1565, 1316, 22, 96, "Input"],
Cell[61914, 1589, 475, 8, 30, "Text"],
Cell[CellGroupData[{
Cell[62414, 1601, 836, 17, 32, "Input"],
Cell[63253, 1620, 17364, 454, 70, "Output"]
}, Open  ]],
Cell[80632, 2077, 247, 8, 30, "Text"],
Cell[80882, 2087, 189, 3, 30, "Text"],
Cell[CellGroupData[{
Cell[81096, 2094, 543, 13, 32, "Input"],
Cell[81642, 2109, 4271, 109, 70, "Output"]
}, Open  ]],
Cell[85928, 2221, 214, 5, 30, "Text"],
Cell[CellGroupData[{
Cell[86167, 2230, 968, 27, 54, "Input"],
Cell[87138, 2259, 1115, 18, 70, "Output"],
Cell[88256, 2279, 1115, 18, 70, "Output"]
}, Open  ]],
Cell[89386, 2300, 312, 5, 30, "Text"],
Cell[89701, 2307, 172, 3, 30, "Text"],
Cell[CellGroupData[{
Cell[89898, 2314, 1031, 30, 96, "Input"],
Cell[90932, 2346, 4347, 105, 70, "Output"],
Cell[95282, 2453, 5854, 142, 70, "Output"]
}, Open  ]],
Cell[101151, 2598, 188, 3, 30, "Text"],
Cell[CellGroupData[{
Cell[101364, 2605, 660, 17, 75, "Input"],
Cell[102027, 2624, 1169, 20, 70, "Output"]
}, Open  ]],
Cell[103211, 2647, 202, 3, 30, "Text"],
Cell[CellGroupData[{
Cell[103438, 2654, 658, 17, 75, "Input"],
Cell[104099, 2673, 1181, 22, 70, "Output"]
}, Open  ]],
Cell[105295, 2698, 210, 5, 30, "Text"],
Cell[CellGroupData[{
Cell[105530, 2707, 610, 16, 75, "Input"],
Cell[106143, 2725, 14994, 383, 70, "Output"]
}, Open  ]],
Cell[121152, 3111, 196, 3, 30, "Text"],
Cell[CellGroupData[{
Cell[121373, 3118, 1080, 31, 96, "Input"],
Cell[122456, 3151, 4843, 120, 70, "Output"],
Cell[127302, 3273, 6480, 161, 70, "Output"]
}, Open  ]],
Cell[133797, 3437, 211, 3, 30, "Text"],
Cell[CellGroupData[{
Cell[134033, 3444, 708, 18, 75, "Input"],
Cell[134744, 3464, 1183, 21, 70, "Output"]
}, Open  ]],
Cell[135942, 3488, 251, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[136218, 3496, 707, 18, 75, "Input"],
Cell[136928, 3516, 1177, 21, 70, "Output"]
}, Open  ]],
Cell[138120, 3540, 233, 5, 30, "Text"],
Cell[CellGroupData[{
Cell[138378, 3549, 661, 17, 75, "Input"],
Cell[139042, 3568, 17541, 454, 70, "Output"]
}, Open  ]],
Cell[156598, 4025, 328, 7, 49, "Text"],
Cell[CellGroupData[{
Cell[156951, 4036, 344, 5, 138, "Input"],
Cell[157298, 4043, 1061, 20, 70, "Output"],
Cell[158362, 4065, 17441, 453, 70, "Output"],
Cell[175806, 4520, 1074, 20, 70, "Output"],
Cell[176883, 4542, 1100, 21, 70, "Output"],
Cell[177986, 4565, 14915, 382, 70, "Output"],
Cell[192904, 4949, 1061, 20, 70, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[194014, 4975, 295, 6, 50, "Section"],
Cell[CellGroupData[{
Cell[194334, 4985, 157, 3, 44, "Subsection"],
Cell[194494, 4990, 274, 6, 49, "Text"],
Cell[194771, 4998, 264, 6, 30, "Text"],
Cell[195038, 5006, 2777, 75, 292, "Input"],
Cell[197818, 5083, 267, 4, 30, "Text"],
Cell[198088, 5089, 531, 12, 32, "Input"],
Cell[198622, 5103, 163, 3, 30, "Text"],
Cell[198788, 5108, 1611, 47, 104, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[200436, 5160, 413, 6, 36, "Subsection"],
Cell[CellGroupData[{
Cell[200874, 5170, 775, 20, 28, "Input"],
Cell[201652, 5192, 6997, 185, 70, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[208698, 5383, 409, 6, 36, "Subsection"],
Cell[CellGroupData[{
Cell[209132, 5393, 778, 20, 28, "Input"],
Cell[209913, 5415, 5268, 130, 70, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[215230, 5551, 363, 6, 36, "Subsection"],
Cell[CellGroupData[{
Cell[215618, 5561, 778, 20, 28, "Input"],
Cell[216399, 5583, 7414, 186, 70, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[223862, 5775, 367, 6, 36, "Subsection"],
Cell[CellGroupData[{
Cell[224254, 5785, 752, 20, 75, "Input"],
Cell[225009, 5807, 7461, 187, 70, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[232519, 6000, 367, 6, 36, "Subsection"],
Cell[232889, 6008, 572, 15, 32, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[233498, 6028, 395, 6, 36, "Subsection"],
Cell[233896, 6036, 650, 16, 32, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[234583, 6057, 444, 8, 36, "Subsection"],
Cell[CellGroupData[{
Cell[235052, 6069, 161, 3, 35, "Subsubsection"],
Cell[235216, 6074, 7375, 210, 1014, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[242628, 6289, 157, 3, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[242810, 6296, 3567, 79, 348, "Input"],
Cell[246380, 6377, 1746134, 28667, 70, "Output"]
}, Open  ]]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[1992587, 35052, 273, 4, 50, "Section"],
Cell[CellGroupData[{
Cell[1992885, 35060, 155, 3, 44, "Subsection"],
Cell[1993043, 35065, 167, 3, 30, "Text"],
Cell[1993213, 35070, 2018, 58, 146, "Input"],
Cell[1995234, 35130, 166, 3, 30, "Text"],
Cell[1995403, 35135, 351, 9, 32, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[1995791, 35149, 242, 4, 36, "Subsection"],
Cell[CellGroupData[{
Cell[1996058, 35157, 827, 22, 32, "Input"],
Cell[1996888, 35181, 2610, 67, 70, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1999547, 35254, 237, 4, 36, "Subsection"],
Cell[CellGroupData[{
Cell[1999809, 35262, 877, 22, 96, "Input"],
Cell[2000689, 35286, 2535, 63, 70, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[2003273, 35355, 244, 4, 36, "Subsection"],
Cell[CellGroupData[{
Cell[2003542, 35363, 879, 22, 28, "Input"],
Cell[2004424, 35387, 26706, 637, 70, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[2031179, 36030, 290, 5, 36, "Subsection"],
Cell[CellGroupData[{
Cell[2031494, 36039, 979, 24, 96, "Input"],
Cell[2032476, 36065, 26096, 625, 70, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[2058621, 36696, 365, 6, 36, "Subsection"],
Cell[2058989, 36704, 684, 17, 28, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[2059710, 36726, 337, 5, 36, "Subsection"],
Cell[2060050, 36733, 540, 15, 54, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[2060639, 36754, 201, 3, 50, "Section"],
Cell[CellGroupData[{
Cell[2060865, 36761, 190, 3, 35, "Subsubsection"],
Cell[2061058, 36766, 1060, 21, 182, "Text"],
Cell[CellGroupData[{
Cell[2062143, 36791, 3958, 109, 290, "Input"],
Cell[2066104, 36902, 6589, 179, 70, "Output"]
}, Open  ]],
Cell[2072708, 37084, 307, 6, 49, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[2073052, 37095, 646, 9, 29, "Subsubsection"],
Cell[CellGroupData[{
Cell[2073723, 37108, 5098, 109, 369, "Input"],
Cell[2078824, 37219, 161, 3, 28, "Output"],
Cell[2078988, 37224, 434, 10, 40, "Message"],
Cell[2079425, 37236, 161, 3, 28, "Output"],
Cell[2079589, 37241, 434, 10, 40, "Message"]
}, Open  ]],
Cell[2080038, 37254, 8651, 200, 675, "Input"],
Cell[2088692, 37456, 1759, 43, 148, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[2090488, 37504, 157, 3, 29, "Subsubsection"],
Cell[CellGroupData[{
Cell[2090670, 37511, 8097, 193, 505, "Input"],
Cell[2098770, 37706, 35639, 605, 375, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[2134458, 38317, 710, 10, 29, "Subsubsection"],
Cell[2135171, 38329, 5185, 110, 435, "Input"],
Cell[2140359, 38441, 474, 12, 96, "Input"],
Cell[2140836, 38455, 8428, 192, 873, "Input"],
Cell[2149267, 38649, 1719, 42, 180, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[2151023, 38696, 157, 3, 29, "Subsubsection"],
Cell[CellGroupData[{
Cell[2151205, 38703, 8377, 196, 705, "Input"],
Cell[2159585, 38901, 20253, 362, 375, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[2179887, 39269, 700, 10, 29, "Subsubsection"],
Cell[2180590, 39281, 5194, 110, 391, "Input"],
Cell[2185787, 39393, 8697, 200, 675, "Input"],
Cell[2194487, 39595, 2403, 59, 165, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[2196927, 39659, 157, 3, 29, "Subsubsection"],
Cell[CellGroupData[{
Cell[2197109, 39666, 6057, 163, 471, "Input"],
Cell[2203169, 39831, 32152, 561, 375, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2235358, 40397, 8297, 196, 505, "Input"],
Cell[2243658, 40595, 36233, 624, 375, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[2279940, 41225, 761, 11, 29, "Subsubsection"],
Cell[CellGroupData[{
Cell[2280726, 41240, 5279, 110, 373, "Input"],
Cell[2286008, 41352, 77, 1, 28, "Output"],
Cell[2286088, 41355, 77, 1, 28, "Output"],
Cell[2286168, 41358, 77, 1, 28, "Output"],
Cell[2286248, 41361, 514, 11, 24, "Message"]
}, Open  ]],
Cell[2286777, 41375, 8430, 192, 675, "Input"],
Cell[2295210, 41569, 1717, 41, 148, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2296964, 41615, 157, 3, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[2297146, 41622, 8515, 199, 505, "Input"],
Cell[2305664, 41823, 27628, 475, 375, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2333353, 42305, 804, 13, 80, "Section"],
Cell[CellGroupData[{
Cell[2334182, 42322, 165, 3, 44, "Subsection"],
Cell[2334350, 42327, 1261, 20, 87, "Text"],
Cell[2335614, 42349, 5131, 143, 707, "Input"],
Cell[2340748, 42494, 642, 11, 40, "Text"],
Cell[CellGroupData[{
Cell[2341415, 42509, 1195, 24, 66, "Input"],
Cell[2342613, 42535, 2133, 30, 70, "Output"],
Cell[2344749, 42567, 2133, 30, 70, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[2346931, 42603, 210, 4, 36, "Subsection"],
Cell[2347144, 42609, 360, 7, 40, "Text"],
Cell[2347507, 42618, 23955, 725, 2488, "Input"],
Cell[2371465, 43345, 267, 4, 40, "Text"],
Cell[CellGroupData[{
Cell[2371757, 43353, 2325, 36, 493, "Input"],
Cell[2374085, 43391, 1164, 18, 70, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[2375298, 43415, 165, 3, 36, "Subsection"],
Cell[2375466, 43420, 706, 12, 87, "Text"],
Cell[2376175, 43434, 9576, 252, 1396, "Input"],
Cell[2385754, 43688, 201, 3, 40, "Text"],
Cell[CellGroupData[{
Cell[2385980, 43695, 1312, 22, 256, "Input"],
Cell[2387295, 43719, 1018, 15, 70, "Output"]
}, Open  ]],
Cell[2388328, 43737, 8501, 232, 1372, "Input"],
Cell[2396832, 43971, 252, 4, 40, "Text"],
Cell[CellGroupData[{
Cell[2397109, 43979, 1382, 23, 256, "Input"],
Cell[2398494, 44004, 1065, 16, 70, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[2399608, 44026, 206, 4, 36, "Subsection"],
Cell[2399817, 44032, 551, 17, 275, "Text"],
Cell[2400371, 44051, 3576, 94, 1087, "Input"],
Cell[2403950, 44147, 3924, 98, 1087, "Input"],
Cell[2407877, 44247, 176, 3, 40, "Text"],
Cell[2408056, 44252, 17731, 496, 1752, "Input"],
Cell[CellGroupData[{
Cell[2425812, 44752, 482, 10, 41, "Input"],
Cell[2426297, 44764, 1280, 20, 70, "Output"]
}, Open  ]],
Cell[2427592, 44787, 180, 3, 40, "Text"],
Cell[2427775, 44792, 17771, 497, 1752, "Input"],
Cell[CellGroupData[{
Cell[2445571, 45293, 383, 9, 41, "Input"],
Cell[2445957, 45304, 552, 10, 70, "Output"]
}, Open  ]],
Cell[2446524, 45317, 234, 6, 40, "Text"],
Cell[2446761, 45325, 946, 18, 303, "Input"],
Cell[2447710, 45345, 190, 3, 40, "Text"],
Cell[2447903, 45350, 1624, 28, 517, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[2449576, 45384, 175, 3, 50, "Section"],
Cell[CellGroupData[{
Cell[2449776, 45391, 170, 3, 35, "Subsubsection"],
Cell[2449949, 45396, 214, 5, 30, "Text"],
Cell[2450166, 45403, 1935, 41, 386, "Input"],
Cell[2452104, 45446, 5251, 135, 144, "Input"],
Cell[2457358, 45583, 6265, 165, 164, "Input"],
Cell[2463626, 45750, 687, 15, 32, "Input"],
Cell[2464316, 45767, 686, 15, 32, "Input"],
Cell[2465005, 45784, 14033, 363, 457, "Input"],
Cell[2479041, 46149, 462, 9, 30, "Text"],
Cell[2479506, 46160, 588, 10, 30, "Text"],
Cell[2480097, 46172, 669, 11, 49, "Text"],
Cell[CellGroupData[{
Cell[2480791, 46187, 295, 9, 32, "Input"],
Cell[2481089, 46198, 2002, 42, 70, "Output"]
}, Open  ]],
Cell[2483106, 46243, 535, 11, 49, "Text"],
Cell[2483644, 46256, 351, 7, 30, "Text"],
Cell[2483998, 46265, 274, 6, 30, "Text"],
Cell[2484275, 46273, 28290, 685, 805, "Input"],
Cell[2512568, 46960, 72493, 1752, 1660, "Input"],
Cell[2585064, 48714, 4212, 113, 135, "Input"],
Cell[2589279, 48829, 3723, 97, 135, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[2593039, 48931, 225, 4, 29, "Subsubsection"],
Cell[2593267, 48937, 14022, 345, 636, "Input"],
Cell[2607292, 49284, 185, 3, 40, "Text"],
Cell[2607480, 49289, 31056, 658, 1767, "Input"],
Cell[2638539, 49949, 201, 3, 40, "Text"],
Cell[2638743, 49954, 269, 8, 41, "Input"],
Cell[2639015, 49964, 332, 7, 40, "Text"],
Cell[2639350, 49973, 6180, 132, 280, "Input"],
Cell[2645533, 50107, 3158, 95, 451, "Input"],
Cell[2648694, 50204, 178, 3, 40, "Text"],
Cell[CellGroupData[{
Cell[2648897, 50211, 1490, 27, 256, "Input"],
Cell[2650390, 50240, 406, 9, 70, "Message"],
Cell[2650799, 50251, 1750, 29, 70, "Output"]
}, Open  ]],
Cell[2652564, 50283, 334, 5, 40, "Text"],
Cell[CellGroupData[{
Cell[2652923, 50292, 2538, 62, 403, "Input"],
Cell[2655464, 50356, 408, 9, 70, "Message"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[2655921, 50371, 816, 12, 29, "Subsubsection"],
Cell[2656740, 50385, 513, 10, 49, "Text"],
Cell[2657256, 50397, 3735, 103, 159, "Input"],
Cell[2660994, 50502, 309, 7, 30, "Text"],
Cell[CellGroupData[{
Cell[2661328, 50513, 515, 14, 32, "Input"],
Cell[2661846, 50529, 802, 17, 70, "Output"]
}, Open  ]],
Cell[2662663, 50549, 565, 10, 49, "Text"],
Cell[CellGroupData[{
Cell[2663253, 50563, 381, 9, 32, "Input"],
Cell[2663637, 50574, 536, 11, 70, "Output"]
}, Open  ]],
Cell[2664188, 50588, 7280, 168, 306, "Input"],
Cell[2671471, 50758, 106695, 2806, 12528, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[2778215, 53570, 271, 4, 50, "Section"],
Cell[CellGroupData[{
Cell[2778511, 53578, 806, 19, 96, "Input"],
Cell[2779320, 53599, 566, 12, 70, "Message"],
Cell[2779889, 53613, 391, 8, 70, "Message"]
}, Open  ]],
Cell[2780295, 53624, 2377, 64, 222, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[2782709, 53693, 252, 4, 50, "Section"],
Cell[2782964, 53699, 455, 11, 32, "Input"],
Cell[CellGroupData[{
Cell[2783444, 53714, 167, 3, 44, "Subsection"],
Cell[2783614, 53719, 2684, 54, 138, "Input"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[2786347, 53779, 252, 4, 50, "Section"],
Cell[2786602, 53785, 455, 11, 28, "Input"],
Cell[CellGroupData[{
Cell[2787082, 53800, 167, 3, 44, "Subsection"],
Cell[2787252, 53805, 2719, 54, 138, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[2790008, 53864, 164, 3, 36, "Subsection"],
Cell[2790175, 53869, 497, 13, 117, "Input"],
Cell[2790675, 53884, 4529, 118, 327, "Input"],
Cell[2795207, 54004, 4902, 121, 432, "Input"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2800158, 54131, 220, 4, 80, "Section"],
Cell[CellGroupData[{
Cell[2800403, 54139, 221, 3, 35, "Subsubsection"],
Cell[2800627, 54144, 4170, 94, 369, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[2804834, 54243, 155, 3, 29, "Subsubsection"],
Cell[CellGroupData[{
Cell[2805014, 54250, 4366, 117, 337, "Input"],
Cell[2809383, 54369, 15334, 385, 270, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2824754, 54759, 3829, 103, 306, "Input"],
Cell[2828586, 54864, 16966, 411, 270, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[2845601, 55281, 166, 3, 29, "Subsubsection"],
Cell[CellGroupData[{
Cell[2845792, 55288, 4318, 102, 327, "Input"],
Cell[2850113, 55392, 5645, 135, 270, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2855795, 55532, 3347, 88, 327, "Input"],
Cell[2859145, 55622, 5647, 135, 270, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2864829, 55762, 3253, 87, 327, "Input"],
Cell[2868085, 55851, 5614, 134, 270, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2873736, 55990, 3081, 84, 327, "Input"],
Cell[2876820, 56076, 5591, 134, 270, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2882448, 56215, 260, 6, 32, "Input"],
Cell[2882711, 56223, 10535, 222, 304, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[2893295, 56451, 239, 4, 29, "Subsubsection"],
Cell[2893537, 56457, 4317, 96, 369, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[2897891, 56558, 155, 3, 29, "Subsubsection"],
Cell[CellGroupData[{
Cell[2898071, 56565, 4414, 117, 337, "Input"],
Cell[2902488, 56684, 15455, 387, 270, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2917980, 57076, 3878, 104, 306, "Input"],
Cell[2921861, 57182, 17087, 413, 270, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2938985, 57600, 216, 5, 32, "Input"],
Cell[2939204, 57607, 15725, 392, 270, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[2954978, 58005, 166, 3, 29, "Subsubsection"],
Cell[CellGroupData[{
Cell[2955169, 58012, 4318, 102, 327, "Input"],
Cell[2959490, 58116, 5677, 135, 270, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2965204, 58256, 3347, 88, 327, "Input"],
Cell[2968554, 58346, 5675, 135, 270, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2974266, 58486, 3253, 87, 327, "Input"],
Cell[2977522, 58575, 5648, 134, 270, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2983207, 58714, 3081, 84, 327, "Input"],
Cell[2986291, 58800, 5507, 132, 270, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2991835, 58937, 260, 6, 32, "Input"],
Cell[2992098, 58945, 10475, 220, 270, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[3002622, 59171, 273, 4, 29, "Subsubsection"],
Cell[3002898, 59177, 4268, 95, 369, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[3007203, 59277, 155, 3, 29, "Subsubsection"],
Cell[CellGroupData[{
Cell[3007383, 59284, 4366, 117, 337, "Input"],
Cell[3011752, 59403, 15688, 387, 270, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3027477, 59795, 3829, 103, 306, "Input"],
Cell[3031309, 59900, 17446, 423, 270, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[3048804, 60329, 166, 3, 29, "Subsubsection"],
Cell[CellGroupData[{
Cell[3048995, 60336, 4368, 102, 327, "Input"],
Cell[3053366, 60440, 5719, 136, 270, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3059122, 60581, 3371, 88, 327, "Input"],
Cell[3062496, 60671, 5747, 136, 270, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3068280, 60812, 3277, 87, 327, "Input"],
Cell[3071560, 60901, 5680, 135, 270, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3077277, 61041, 3113, 85, 327, "Input"],
Cell[3080393, 61128, 5675, 135, 270, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3086105, 61268, 500, 11, 32, "Input"],
Cell[3086608, 61281, 11578, 240, 270, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[3098235, 61527, 340, 5, 29, "Subsubsection"],
Cell[3098578, 61534, 4319, 96, 369, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[3102934, 61635, 155, 3, 29, "Subsubsection"],
Cell[CellGroupData[{
Cell[3103114, 61642, 4366, 117, 337, "Input"],
Cell[3107483, 61761, 15402, 386, 270, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3122922, 62152, 3829, 103, 306, "Input"],
Cell[3126754, 62257, 17032, 412, 270, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[3143835, 62675, 166, 3, 29, "Subsubsection"],
Cell[CellGroupData[{
Cell[3144026, 62682, 4318, 102, 327, "Input"],
Cell[3148347, 62786, 5721, 136, 270, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3154105, 62927, 3347, 88, 327, "Input"],
Cell[3157455, 63017, 5735, 136, 270, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3163227, 63158, 3253, 87, 327, "Input"],
Cell[3166483, 63247, 5696, 135, 270, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3172216, 63387, 3081, 84, 327, "Input"],
Cell[3175300, 63473, 5584, 134, 270, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3180921, 63612, 260, 6, 32, "Input"],
Cell[3181184, 63620, 10562, 222, 270, "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]]
}, Open  ]]
}
]
*)

